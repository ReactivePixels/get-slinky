{"version":3,"sources":["webpack:///theme.53d80d38.bundle.js","webpack:///webpack/bootstrap 53d80d3846a95af953c1","webpack:///./~/pixi.js/lib/core/index.js","webpack:///./~/pixi.js/lib/core/const.js","webpack:///./~/pixi.js/lib/core/utils/index.js","webpack:///./~/pixi.js/lib/core/math/index.js","webpack:///./~/pixi.js/lib/core/settings.js","webpack:///./~/pixi-gl-core/src/index.js","webpack:///./~/path-browserify/index.js","webpack:///./~/eventemitter3/index.js","webpack:///./~/pixi.js/lib/core/Shader.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/managers/WebGLManager.js","webpack:///./~/pixi.js/lib/core/textures/BaseTexture.js","webpack:///./~/pixi.js/lib/core/textures/Texture.js","webpack:///./~/pixi.js/lib/mesh/Mesh.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/pixi.js/lib/core/display/Container.js","webpack:///./~/pixi.js/lib/core/graphics/webgl/utils/buildLine.js","webpack:///./~/pixi.js/lib/core/renderers/canvas/CanvasRenderer.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/utils/ObjectRenderer.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/utils/RenderTarget.js","webpack:///./~/ismobilejs/isMobile.js","webpack:///./~/resource-loader/src/index.js","webpack:///./~/bit-twiddle/twiddle.js","webpack:///./~/pixi.js/lib/core/display/TransformBase.js","webpack:///./~/pixi.js/lib/core/math/Matrix.js","webpack:///./~/pixi.js/lib/core/math/Point.js","webpack:///./~/pixi.js/lib/core/math/shapes/Rectangle.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/WebGLRenderer.js","webpack:///./~/pixi.js/lib/core/sprites/Sprite.js","webpack:///./~/pixi.js/lib/core/sprites/canvas/CanvasTinter.js","webpack:///./~/pixi.js/lib/core/textures/RenderTexture.js","webpack:///./~/pixi.js/lib/core/utils/createIndicesForQuads.js","webpack:///./~/pixi.js/lib/extras/index.js","webpack:///./~/pixi.js/lib/prepare/BasePrepare.js","webpack:///./~/pixi-gl-core/src/shader/mapType.js","webpack:///./~/resource-loader/src/Resource.js","webpack:///./~/earcut/src/earcut.js","webpack:///./~/pixi.js/lib/accessibility/accessibleTarget.js","webpack:///./~/pixi.js/lib/core/display/Bounds.js","webpack:///./~/pixi.js/lib/core/display/DisplayObject.js","webpack:///./~/pixi.js/lib/core/display/Transform.js","webpack:///./~/pixi.js/lib/core/display/TransformStatic.js","webpack:///./~/pixi.js/lib/core/graphics/GraphicsData.js","webpack:///./~/pixi.js/lib/core/math/GroupD8.js","webpack:///./~/pixi.js/lib/core/math/ObservablePoint.js","webpack:///./~/pixi.js/lib/core/renderers/SystemRenderer.js","webpack:///./~/pixi.js/lib/core/renderers/canvas/utils/CanvasRenderTarget.js","webpack:///./~/pixi.js/lib/core/renderers/canvas/utils/canUseNewCanvasBlendModes.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/filters/Filter.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/filters/spriteMask/SpriteMaskFilter.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/utils/Quad.js","webpack:///./~/pixi.js/lib/core/text/TextStyle.js","webpack:///./~/pixi.js/lib/core/textures/BaseRenderTexture.js","webpack:///./~/pixi.js/lib/core/textures/TextureUvs.js","webpack:///./~/pixi.js/lib/core/textures/VideoBaseTexture.js","webpack:///./~/pixi.js/lib/core/ticker/index.js","webpack:///./~/pixi.js/lib/extras/TextureTransform.js","webpack:///./~/pixi.js/lib/filters/blur/BlurXFilter.js","webpack:///./~/pixi.js/lib/filters/blur/BlurYFilter.js","webpack:///./~/pixi.js/lib/filters/blur/generateBlurFragSource.js","webpack:///./~/pixi.js/lib/filters/blur/generateBlurVertSource.js","webpack:///./~/pixi.js/lib/filters/blur/getMaxBlurKernelSize.js","webpack:///./~/pixi.js/lib/filters/index.js","webpack:///./~/pixi.js/lib/interaction/InteractionData.js","webpack:///./~/pixi.js/lib/interaction/interactiveTarget.js","webpack:///./~/pixi.js/lib/loaders/bitmapFontParser.js","webpack:///./~/pixi.js/lib/loaders/spritesheetParser.js","webpack:///./~/pixi.js/lib/loaders/textureParser.js","webpack:///./~/pixi.js/lib/mesh/Plane.js","webpack:///./~/pixi.js/lib/mesh/index.js","webpack:///./~/pixi.js/lib/particles/index.js","webpack:///./~/pixi.js/lib/prepare/index.js","webpack:///./~/pixi.js/lib/prepare/limiters/CountLimiter.js","webpack:///./~/parse-uri/index.js","webpack:///./~/pixi-gl-core/src/GLTexture.js","webpack:///./~/pixi-gl-core/src/setVertexAttribArrays.js","webpack:///./~/pixi-gl-core/src/shader/compileProgram.js","webpack:///./~/pixi-gl-core/src/shader/defaultValue.js","webpack:///./~/pixi-gl-core/src/shader/extractAttributes.js","webpack:///./~/pixi-gl-core/src/shader/extractUniforms.js","webpack:///./~/pixi-gl-core/src/shader/generateUniformAccessObject.js","webpack:///./~/pixi-gl-core/src/shader/mapSize.js","webpack:///./~/resource-loader/src/async.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/themes/swanky-docs-theme/index.js","webpack:///./src/themes/swanky-docs-theme/js/pixels.js","webpack:///./src/themes/swanky-docs-theme/css/index.styl","webpack:///./~/pixi.js/lib/accessibility/AccessibilityManager.js","webpack:///./~/pixi.js/lib/accessibility/index.js","webpack:///./~/pixi.js/lib/core/graphics/Graphics.js","webpack:///./~/pixi.js/lib/core/graphics/canvas/CanvasGraphicsRenderer.js","webpack:///./~/pixi.js/lib/core/graphics/utils/bezierCurveTo.js","webpack:///./~/pixi.js/lib/core/graphics/webgl/GraphicsRenderer.js","webpack:///./~/pixi.js/lib/core/graphics/webgl/WebGLGraphicsData.js","webpack:///./~/pixi.js/lib/core/graphics/webgl/shaders/PrimitiveShader.js","webpack:///./~/pixi.js/lib/core/graphics/webgl/utils/buildCircle.js","webpack:///./~/pixi.js/lib/core/graphics/webgl/utils/buildPoly.js","webpack:///./~/pixi.js/lib/core/graphics/webgl/utils/buildRectangle.js","webpack:///./~/pixi.js/lib/core/graphics/webgl/utils/buildRoundedRectangle.js","webpack:///./~/pixi.js/lib/core/math/shapes/Circle.js","webpack:///./~/pixi.js/lib/core/math/shapes/Ellipse.js","webpack:///./~/pixi.js/lib/core/math/shapes/Polygon.js","webpack:///./~/pixi.js/lib/core/math/shapes/RoundedRectangle.js","webpack:///./~/pixi.js/lib/core/renderers/canvas/utils/CanvasMaskManager.js","webpack:///./~/pixi.js/lib/core/renderers/canvas/utils/mapCanvasBlendModesToPixi.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/TextureGarbageCollector.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/TextureManager.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/WebGLState.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/filters/extractUniformsFromSrc.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/filters/filterTransforms.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/managers/FilterManager.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/managers/MaskManager.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/managers/StencilManager.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/utils/checkMaxIfStatmentsInShader.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/utils/mapWebGLBlendModesToPixi.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/utils/mapWebGLDrawModesToPixi.js","webpack:///./~/pixi.js/lib/core/renderers/webgl/utils/validateContext.js","webpack:///./~/pixi.js/lib/core/sprites/canvas/CanvasSpriteRenderer.js","webpack:///./~/pixi.js/lib/core/sprites/webgl/BatchBuffer.js","webpack:///./~/pixi.js/lib/core/sprites/webgl/SpriteRenderer.js","webpack:///./~/pixi.js/lib/core/sprites/webgl/generateMultiTextureShader.js","webpack:///./~/pixi.js/lib/core/text/Text.js","webpack:///./~/pixi.js/lib/core/ticker/Ticker.js","webpack:///./~/pixi.js/lib/core/utils/canUploadSameBuffer.js","webpack:///./~/pixi.js/lib/core/utils/determineCrossOrigin.js","webpack:///./~/pixi.js/lib/core/utils/maxRecommendedTextures.js","webpack:///./~/pixi.js/lib/core/utils/pluginTarget.js","webpack:///./~/pixi.js/lib/deprecation.js","webpack:///./~/pixi.js/lib/extract/canvas/CanvasExtract.js","webpack:///./~/pixi.js/lib/extract/index.js","webpack:///./~/pixi.js/lib/extract/webgl/WebGLExtract.js","webpack:///./~/pixi.js/lib/extras/AnimatedSprite.js","webpack:///./~/pixi.js/lib/extras/BitmapText.js","webpack:///./~/pixi.js/lib/extras/TilingSprite.js","webpack:///./~/pixi.js/lib/extras/cacheAsBitmap.js","webpack:///./~/pixi.js/lib/extras/getChildByName.js","webpack:///./~/pixi.js/lib/extras/getGlobalPosition.js","webpack:///./~/pixi.js/lib/extras/webgl/TilingSpriteRenderer.js","webpack:///./~/pixi.js/lib/filters/blur/BlurFilter.js","webpack:///./~/pixi.js/lib/filters/colormatrix/ColorMatrixFilter.js","webpack:///./~/pixi.js/lib/filters/displacement/DisplacementFilter.js","webpack:///./~/pixi.js/lib/filters/fxaa/FXAAFilter.js","webpack:///./~/pixi.js/lib/filters/noise/NoiseFilter.js","webpack:///./~/pixi.js/lib/filters/void/VoidFilter.js","webpack:///./~/pixi.js/lib/index.js","webpack:///./~/pixi.js/lib/interaction/InteractionEvent.js","webpack:///./~/pixi.js/lib/interaction/InteractionManager.js","webpack:///./~/pixi.js/lib/interaction/index.js","webpack:///./~/pixi.js/lib/loaders/index.js","webpack:///./~/pixi.js/lib/loaders/loader.js","webpack:///./~/pixi.js/lib/mesh/NineSlicePlane.js","webpack:///./~/pixi.js/lib/mesh/Rope.js","webpack:///./~/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js","webpack:///./~/pixi.js/lib/mesh/webgl/MeshRenderer.js","webpack:///./~/pixi.js/lib/particles/ParticleContainer.js","webpack:///./~/pixi.js/lib/particles/webgl/ParticleBuffer.js","webpack:///./~/pixi.js/lib/particles/webgl/ParticleRenderer.js","webpack:///./~/pixi.js/lib/particles/webgl/ParticleShader.js","webpack:///./~/pixi.js/lib/polyfill/Math.sign.js","webpack:///./~/pixi.js/lib/polyfill/Object.assign.js","webpack:///./~/pixi.js/lib/polyfill/index.js","webpack:///./~/pixi.js/lib/polyfill/requestAnimationFrame.js","webpack:///./~/pixi.js/lib/prepare/canvas/CanvasPrepare.js","webpack:///./~/pixi.js/lib/prepare/limiters/TimeLimiter.js","webpack:///./~/pixi.js/lib/prepare/webgl/WebGLPrepare.js","webpack:///./~/lodash/lodash.js","webpack:///./~/object-assign/index.js","webpack:///./~/pixi-gl-core/src/GLBuffer.js","webpack:///./~/pixi-gl-core/src/GLFramebuffer.js","webpack:///./~/pixi-gl-core/src/GLShader.js","webpack:///./~/pixi-gl-core/src/VertexArrayObject.js","webpack:///./~/pixi-gl-core/src/createContext.js","webpack:///./~/pixi-gl-core/src/shader/index.js","webpack:///./~/prismjs/plugins/line-numbers/prism-line-numbers.js","webpack:///./~/prismjs/prism.js","webpack:///./~/process/browser.js","webpack:///./~/punycode/punycode.js","webpack:///./~/querystring-es3/decode.js","webpack:///./~/querystring-es3/encode.js","webpack:///./~/querystring-es3/index.js","webpack:///./~/resource-loader/src/Loader.js","webpack:///./~/resource-loader/src/b64.js","webpack:///./~/resource-loader/src/middlewares/caching/memory.js","webpack:///./~/resource-loader/src/middlewares/parsing/blob.js","webpack:///./~/url/url.js","webpack:///./~/url/util.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__esModule","o","object","property","prototype","hasOwnProperty","p","s","_interopRequireWildcard","obj","newObj","key","default","_interopRequireDefault","autoDetectRenderer","width","arguments","length","undefined","height","options","noWebGL","utils","isWebGLSupported","_WebGLRenderer2","_CanvasRenderer2","Filter","SpriteMaskFilter","Quad","RenderTarget","ObjectRenderer","WebGLManager","Shader","CanvasRenderTarget","TextureUvs","VideoBaseTexture","BaseRenderTexture","RenderTexture","BaseTexture","Texture","CanvasGraphicsRenderer","GraphicsRenderer","GraphicsData","Graphics","TextStyle","Text","SpriteRenderer","CanvasTinter","CanvasSpriteRenderer","Sprite","TransformBase","TransformStatic","Transform","Container","DisplayObject","glCore","WebGLRenderer","CanvasRenderer","ticker","settings","_const","keys","forEach","_math","_pixiGlCore","_DisplayObject","_Container","_Transform","_TransformStatic","_TransformBase","_Sprite","_CanvasSpriteRenderer","_CanvasTinter","_SpriteRenderer","_Text","_TextStyle","_Graphics","_GraphicsData","_GraphicsRenderer","_CanvasGraphicsRenderer","_Texture","_BaseTexture","_RenderTexture","_BaseRenderTexture","_VideoBaseTexture","_TextureUvs","_CanvasRenderTarget","_Shader","_WebGLManager","_ObjectRenderer","_RenderTarget","_Quad","_SpriteMaskFilter","_Filter","_utils","_ticker","_settings","_settings2","_CanvasRenderer","_WebGLRenderer","VERSION","PI_2","Math","PI","RAD_TO_DEG","DEG_TO_RAD","RENDERER_TYPE","UNKNOWN","WEBGL","CANVAS","BLEND_MODES","NORMAL","ADD","MULTIPLY","SCREEN","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATION","COLOR","LUMINOSITY","DRAW_MODES","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","SCALE_MODES","LINEAR","NEAREST","WRAP_MODES","CLAMP","REPEAT","MIRRORED_REPEAT","GC_MODES","AUTO","MANUAL","URL_FILE_EXTENSION","DATA_URI","SVG_SIZE","SHAPES","POLY","RECT","CIRC","ELIP","RREC","PRECISION","LOW","MEDIUM","HIGH","TRANSFORM_MODE","STATIC","DYNAMIC","TEXT_GRADIENT","LINEAR_VERTICAL","LINEAR_HORIZONTAL","uid","nextUid","hex2rgb","hex","out","hex2string","toString","substr","rgb2hex","rgb","getResolutionOfUrl","url","resolution","RETINA_PREFIX","exec","parseFloat","decomposeDataUri","dataUri","dataUriMatch","mediaType","toLowerCase","subType","encoding","data","getUrlFileExtension","extension","getSvgSize","svgString","sizeMatch","size","round","skipHello","saidHello","sayHello","type","navigator","userAgent","indexOf","args","window","console","log","apply","contextOptions","stencil","failIfMajorPerformanceCaveat","WebGLRenderingContext","canvas","document","createElement","gl","getContext","success","getContextAttributes","loseContext","getExtension","e","sign","removeItems","arr","startIdx","removeCount","len","BaseTextureCache","TextureCache","pluginTarget","EventEmitter","isMobile","_eventemitter","_eventemitter2","_pluginTarget","_pluginTarget2","_ismobilejs","_Point","_ObservablePoint","_Matrix","_GroupD","_Circle","_Ellipse","_Polygon","_Rectangle","_RoundedRectangle","_maxRecommendedTextures","_maxRecommendedTextures2","_canUploadSameBuffer","_canUploadSameBuffer2","TARGET_FPMS","MIPMAP_TEXTURES","RESOLUTION","FILTER_RESOLUTION","SPRITE_MAX_TEXTURES","SPRITE_BATCH_SIZE","RENDER_OPTIONS","view","antialias","forceFXAA","autoResize","transparent","backgroundColor","clearBeforeRender","preserveDrawingBuffer","roundPixels","GC_MODE","GC_MAX_IDLE","GC_MAX_CHECK_COUNT","WRAP_MODE","SCALE_MODE","CAN_UPLOAD_SAME_BUFFER","createContext","setVertexAttribArrays","GLBuffer","GLFramebuffer","GLShader","GLTexture","VertexArrayObject","shader","PIXI","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","f","res","push","splitPathRe","splitPath","filename","slice","resolve","resolvedPath","resolvedAbsolute","path","cwd","TypeError","charAt","split","join","normalize","isAbsolute","trailingSlash","paths","Array","index","relative","from","to","trim","start","end","fromParts","toParts","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","root","dir","basename","ext","extname","str","Events","EE","fn","context","once","this","_events","_eventsCount","has","prefix","create","__proto__","eventNames","events","names","getOwnPropertySymbols","listeners","event","exists","evt","available","ee","emit","a1","a2","a3","a4","a5","removeListener","j","on","listener","removeAllListeners","off","addListener","setMaxListeners","prefixed","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","constructor","writable","setPrototypeOf","checkPrecision","src","substring","copy","_GLShader","vertexSrc","fragmentSrc","renderer","onContextChange","destroy","_typeof","Symbol","iterator","_determineCrossOrigin","_determineCrossOrigin2","_bitTwiddle","_bitTwiddle2","_EventEmitter","source","scaleMode","_this","touched","realWidth","realHeight","hasLoaded","isLoading","origSource","imageType","sourceScale","premultipliedAlpha","imageUrl","isPowerOfTwo","mipmap","wrapMode","_glTextures","_enabled","_virtalBoundId","loadSource","update","naturalWidth","videoWidth","naturalHeight","videoHeight","isPow2","_this2","wasLoading","onload","onerror","firstSourceLoaded","complete","_updateImageType","_loadSvgSource","_sourceLoaded","_ret","scope","v","firstSubType","Error","_loadSvgSourceUsingDataUri","_loadSvgSourceUsingXhr","atob","_loadSvgSourceUsingString","_this3","svgXhr","XMLHttpRequest","readyState","DONE","status","response","open","send","svgSize","svgWidth","svgHeight","_pixiId","drawImage","isCocoonJS","dispose","updateSourceImage","newSrc","fromImage","crossorigin","baseTexture","image","Image","crossOrigin","fromCanvas","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_BaseTexture2","_VideoBaseTexture2","_TextureUvs2","frame","orig","rotate","noFrame","Rectangle","_frame","valid","requiresUpdate","_uvs","_rotate","Number","onBaseTextureUpdated","onBaseTextureLoaded","_updateID","transform","destroyBase","clone","_updateUvs","set","texture","fromFrame","frameId","fromVideo","video","fromVideoUrl","videoUrl","fromUrl","isVideo","match","HTMLImageElement","HTMLCanvasElement","HTMLVideoElement","addTextureToCache","id","removeTextureFromCache","x","y","EMPTY","_core","core","tempPoint","Point","tempPolygon","Polygon","Mesh","_core$Container","vertices","uvs","indices","drawMode","_texture","Float32Array","Uint16Array","dirty","indexDirty","blendMode","canvasPadding","TRIANGLE_MESH","tintRgb","_glDatas","_renderWebGL","setObjectRenderer","plugins","mesh","render","_renderCanvas","_onTextureUpdate","_calculateBounds","_bounds","addVertices","containsPoint","point","getBounds","contains","worldTransform","applyInverse","points","step","ind0","ind1","ind2","g","Function","eval","_DisplayObject2","_DisplayObject3","children","onChildrenChange","addChild","child","argumentsLength","parent","removeChild","_parentID","_boundsID","addChildAt","swapChildren","child2","index1","getChildIndex","index2","setChildIndex","currentIndex","getChildAt","removeChildAt","removeChildren","beginIndex","endIndex","begin","range","removed","_i","RangeError","updateTransform","worldAlpha","alpha","visible","calculateBounds","clear","renderable","_mask","addBoundsMask","filterArea","addBoundsArea","addBounds","_lastBoundsID","renderWebGL","_filters","renderAdvancedWebGL","flush","filters","mask","_enabledFilters","enabled","filterManager","pushFilter","maskManager","pushMask","_i2","popMask","popFilter","renderCanvas","destroyChildren","oldChildren","scale","getLocalBounds","_width","_height","containerUpdateTransform","buildLine","graphicsData","webGLData","firstPoint","lastPoint","pop","midPointX","midPointY","verts","indexCount","indexStart","lineWidth","color","lineColor","lineAlpha","r","b","p1x","p1y","p2x","p2y","p3x","p3y","perpx","perpy","perp2x","perp2y","perp3x","perp3y","dist","sqrt","b1","c1","b2","c2","denom","abs","px","py","pdist","_SystemRenderer2","_SystemRenderer3","_CanvasMaskManager","_CanvasMaskManager2","_CanvasRenderTarget2","_mapCanvasBlendModesToPixi","_mapCanvasBlendModesToPixi2","_SystemRenderer","rootContext","refresh","smoothProperty","imageSmoothingEnabled","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","oImageSmoothingEnabled","msImageSmoothingEnabled","initPlugins","blendModes","_activeBlendMode","renderingToScreen","resize","displayObject","renderTexture","skipUpdateTransform","_canvasRenderTarget","_lastObjectRendered","cacheParent","tempWt","_tempDisplayObjectParent","identity","setTransform","globalAlpha","globalCompositeOperation","screencanvas","fillStyle","clearRect","_backgroundColorString","fillRect","tempContext","setBlendMode","removeView","destroyPlugins","mixin","_WebGLManager2","_WebGLManager3","stop","frameBuffer","clearColor","projectionMatrix","Matrix","defaultFrame","destinationFrame","sourceFrame","stencilBuffer","stencilMaskStack","filterData","framebuffer","createRGBA","enableNearestScaling","enableLinearScaling","setFrame","cc","attachStencilBuffer","enableStencil","activate","bind","calculateProjection","append","enable","SCISSOR_TEST","scissor","disable","viewport","pm","a","tx","ty","projectionFrame","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","apple_phone","apple_ipod","apple_tablet","android_phone","android_tablet","amazon_phone","amazon_tablet","windows_phone","windows_tablet","other_blackberry","other_blackberry_10","other_opera","other_chrome","other_firefox","seven_inch","RegExp","regex","test","IsMobileClass","ua","tmp","apple","phone","ipod","tablet","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any","instantiate","IM","Class","Resource","middleware","caching","memory","parsing","blob","async","countTrailingZeros","INT_BITS","INT_MAX","INT_MIN","max","log2","shift","log10","popCount","nextPow2","prevPow2","parity","REVERSE_TABLE","tab","reverse","interleave2","deinterleave2","interleave3","z","deinterleave3","nextCombination","t","localTransform","_worldID","updateLocalTransform","parentTransform","pt","wt","lt","updateWorldTransform","IDENTITY","_Point2","array","fromArray","toArray","transpose","pos","newPos","translate","angle","cos","sin","tx1","matrix","d1","pivotX","pivotY","scaleX","scaleY","rotation","skewX","skewY","sr","cr","cy","sy","nsx","cx","prepend","decompose","atan2","delta","skew","position","invert","equals","rectangle","pad","paddingX","paddingY","fit","enlarge","rect","x1","x2","y1","y2","_MaskManager","_MaskManager2","_StencilManager","_StencilManager2","_FilterManager","_FilterManager2","_RenderTarget2","_ObjectRenderer2","_TextureManager","_TextureManager2","_TextureGarbageCollector","_TextureGarbageCollector2","_WebGLState","_WebGLState2","_mapWebGLDrawModesToPixi","_mapWebGLDrawModesToPixi2","_validateContext","_validateContext2","_pixiGlCore2","CONTEXT_UID","handleContextLost","handleContextRestored","addEventListener","_contextOptions","_backgroundColorRgba","stencilManager","emptyRenderer","currentRenderer","state","boundTextures","_initContext","drawModes","_activeShader","_activeVao","_activeRenderTarget","_nextTextureLocation","isContextLost","restoreContext","maxTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","emptyTextures","textureManager","textureGC","resetToDefault","rootRenderTarget","bindRenderTarget","emptyGLTexture","fromData","tempObj","empty","bindTexture","bindRenderTexture","objectRenderer","uniforms","renderTarget","_glRenderTargets","updateTexture","unbindTexture","setMaskStack","bindShader","location","forceLocation","count","glTexture","activeTexture","TEXTURE0","TEXTURE_2D","createVao","attribState","bindVao","vao","unbind","reset","preventDefault","removeAll","removeEventListener","useProgram","_Texture2","_Container2","_Container3","_anchor","ObservablePoint","_onAnchorUpdate","_tint","_tintRGB","tint","cachedTint","vertexData","vertexTrimmedData","_transformID","_textureID","calculateVertices","anchor","w0","w1","h0","h1","_x","_y","calculateTrimmedVertices","sprite","addQuad","minX","minY","maxX","maxY","_localBoundsRect","getRectangle","destroyTexture","destroyBaseTexture","imageId","_canUseNewCanvasBlendModes","_canUseNewCanvasBlendModes2","getTintedTexture","roundColor","stringColor","tintCache","tintMethod","convertTintToImage","tintImage","toDataURL","tintWithMultiply","crop","tintWithOverlay","tintWithPerPixel","rgbValues","pixelData","getImageData","pixels","putImageData","cacheStepsPerColorChannel","canUseMultiply","_BaseRenderTexture2","_Texture3","baseRenderTexture","_legacyRenderer","warn","legacyRenderer","doNotResizeBaseTexture","createIndicesForQuads","totalIndices","BitmapText","TilingSpriteRenderer","TilingSprite","AnimatedSprite","TextureTransform","_TextureTransform","_AnimatedSprite","_TilingSprite","_TilingSpriteRenderer","_BitmapText","drawText","helper","item","updateText","calculateTextStyle","font","getFontStyle","fontPropertiesCache","calculateFontProperties","findText","queue","style","findTextStyle","_CountLimiter","_CountLimiter2","SharedTicker","shared","UPLOADS_PER_FRAME","BasePrepare","limiter","uploadHookHelper","addHooks","uploadHooks","completes","ticking","delayedTick","prepareItems","register","upload","done","add","addOnce","tick","setTimeout","beginFrame","allowedToUpload","uploaded","_len","addHook","uploadHook","remove","mapSize","GL_TABLE","typeNames","GL_TO_GLSL_TYPES","tn","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","isDataUrl","loadType","_determineLoadType","xhrType","metadata","error","xhr","isJson","isXml","isImage","isAudio","isComplete","_dequeue","_boundComplete","_boundOnError","_onError","_boundOnProgress","_onProgress","_boundXhrOnError","_xhrOnError","_boundXhrOnAbort","_xhrOnAbort","_boundXhrOnLoad","_xhrOnLoad","_boundXdrOnTimeout","_xdrOnTimeout","reqType","replace","setExtMap","map","val","parseUri","useXdr","XDomainRequest","tempAnchor","STATUS_NONE","STATUS_OK","STATUS_EMPTY","ontimeout","onprogress","abort","message","xdr","firstChild","load","cb","LOAD_TYPE","IMAGE","_loadElement","AUDIO","_loadSourceElement","VIDEO","XHR","_loadXdr","_loadXhr","loadElement","skipSource","typeName","toUpperCase","Audio","isArray","appendChild","_createSource","_determineXhrType","XHR_RESPONSE_TYPE","JSON","DOCUMENT","responseType","TEXT","timeout","mime","lastIndexOf","nodeName","lengthComputable","loaded","total","statusText","responseText","responseURL","parse","DOMParser","domparser","parseFromString","div","innerHTML","loc","href","strictMode","samePort","port","protocol","host","hostname","_xhrTypeMap","_getExtension","_loadTypeMap","slashIndex","queryStart","_getMimeFromXhrType","BUFFER","BLOB","DEFAULT","gif","png","bmp","jpg","jpeg","tif","tiff","webp","tga","svg+xml","xhtml","html","htm","xml","tmx","tsx","svg","json","text","txt","setExtensionLoadType","setExtensionXhrType","earcut","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","next","removeNode","filterPoints","again","steiner","area","prev","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","nextZ","prevZ","intersects","locallyInside","isValidDiagonal","splitPolygon","list","getLeftmost","sort","compareX","eliminateHole","hole","findHoleBridge","hx","hy","qx","Infinity","tan","mx","my","tanMin","sortLinked","q","tail","numMerges","pSize","qSize","inSize","leftmost","ax","ay","bx","by","intersectsPolygon","middleInside","p1","p2","q1","q2","inside","Node","an","bp","sum","deviation","polygonArea","trianglesArea","flatten","holes","dimensions","holeIndex","accessible","accessibleTitle","accessibleHint","tabIndex","_accessibleActive","_accessibleDiv","Bounds","isEmpty","updateID","addPoint","addFrame","x0","y0","beginOffset","endOffset","rawX","rawY","bounds","_minX","_minY","_maxX","_maxY","_TransformStatic2","_Transform2","_Bounds","_Bounds2","TransformClass","tempDisplayObjectParent","_boundsRect","_recursivePostUpdateTransform","skipUpdate","transformRef","parentRef","toGlobal","displayObjectUpdateTransform","toLocal","setParent","container","pivot","_currentBounds","interactive","interactiveChildren","_TransformBase2","_TransformBase3","updateSkew","_rotation","_sr","_cr","_cy","_sy","_nsx","_cx","setFromMatrix","onChange","_localID","_currentLocalID","fillColor","fillAlpha","fill","shape","_lineTint","_fillTint","addHole","signum","init","row","mul","_ux","ux","vx","uy","_uy","vy","_vx","_vy","k","mat","_Matrix2","tempMatrices","GroupD8","E","SE","S","SW","W","NW","N","NE","MIRROR_VERTICAL","MIRROR_HORIZONTAL","uX","ind","uY","vX","vY","inv","rotationSecond","rotationFirst","sub","rotate180","isSwapWidthHeight","byDirection","dx","dy","matrixAppendRotationInv","_RenderTexture2","tempMatrix","SystemRenderer","system","_backgroundColor","generateTexture","parentNode","createColoredCanvas","canUseNewCanvasBlendModes","magenta","yellow","imageData","_extractUniformsFromSrc","_extractUniformsFromSrc2","SOURCE_KEY_MAP","defaultVertexSrc","defaultFragmentSrc","uniformData","glShaders","glShaderKey","padding","input","output","applyFilter","_Filter2","_Filter3","maskMatrix","maskSprite","otherMatrix","calculateSpriteMatrix","_createIndicesForQuads","_createIndicesForQuads2","interleaved","vertexBuffer","createVertexBuffer","STATIC_DRAW","indexBuffer","createIndexBuffer","initVao","addIndex","addAttribute","attributes","aVertexPosition","aTextureCoord","targetTextureFrame","deleteBuffer","getColor","defaultStyle","align","breakWords","dropShadow","dropShadowAngle","dropShadowBlur","dropShadowColor","dropShadowDistance","fillGradientType","fontFamily","fontSize","fontStyle","fontVariant","fontWeight","letterSpacing","lineHeight","lineJoin","miterLimit","stroke","strokeThickness","textBaseline","wordWrap","wordWrapWidth","styleID","assign","clonedProperties","_defaults","_align","_breakWords","_dropShadow","_dropShadowAngle","_dropShadowBlur","_dropShadowColor","outputColor","_dropShadowDistance","_fill","_fillGradientType","_fontFamily","_fontSize","_fontStyle","_fontVariant","_fontWeight","_letterSpacing","_lineHeight","_lineJoin","_miterLimit","_padding","_stroke","_strokeThickness","_textBaseline","_wordWrap","_wordWrapWidth","_BaseTexture3","_GroupD2","x3","y3","uvsUint32","Uint32Array","baseFrame","tw","th","w2","h2","cX","cY","createSource","HAVE_ENOUGH_DATA","HAVE_FUTURE_DATA","_autoUpdate","_isAutoUpdating","autoPlay","_onCanPlay","_onPlayStart","_onPlayStop","__loaded","_isSourceReady","_isSourcePlaying","currentTime","paused","ended","autoUpdate","play","videoSrc","setAttribute","fromUrls","Ticker","_Ticker","_Ticker2","autoStart","tempMat","clampMargin","mapCoord","uClampFrame","uClampOffset","_lastTextureID","clampOffset","forceUpdate","tex","texBase","margin","offset","_generateBlurVertSource","_generateBlurVertSource2","_generateBlurFragSource","_generateBlurFragSource2","_getMaxBlurKernelSize","_getMaxBlurKernelSize2","BlurXFilter","_core$Filter","strength","quality","vertSrc","fragSrc","_quality","firstRun","kernelSize","passes","getRenderTarget","flip","flop","temp","returnRenderTarget","BlurYFilter","generateFragBlurSource","kernel","GAUSSIAN_VALUES","halfLength","fragSource","fragTemplate","blurLoop","template","blur","5","7","9","11","13","15","generateVertBlurSource","ceil","vertSource","vertTemplate","getMaxKernelSize","maxVaryings","MAX_VARYING_VECTORS","_FXAAFilter","_NoiseFilter","_DisplacementFilter","_BlurFilter","_BlurXFilter","_BlurYFilter","_ColorMatrixFilter","_VoidFilter","InteractionData","originalEvent","getLocalPosition","globalPos","hitArea","buttonMode","defaultCursor","_over","_isLeftDown","_isRightDown","_pointerOver","_pointerDown","_touchDown","resource","info","getElementsByTagName","common","getAttribute","parseInt","chars","letters","charCode","textureRect","xOffset","yOffset","xAdvance","kerning","kernings","first","second","amount","bitmapFont","_extras","fonts","xmlUrl","baseUrl","textureUrl","loadOptions","_resourceLoader","imageMetadata","_path","resourcePath","imageResourceName","frames","resources","meta","_path2","processFrames","initialFrameIndex","maxFrames","frameIndex","frameKeys","sourceSize","w","h","rotated","trimmed","spriteSourceSize","textures","shouldProcessNextBatch","batchIndex","BATCH_SIZE","processNextBatch","iteration","_Mesh2","_Mesh3","Plane","_Mesh","verticesX","verticesY","_ready","colors","segmentsX","segmentsY","sizeX","sizeY","totalSub","xpos","ypos","value2","value3","value4","_MeshRenderer","_CanvasMeshRenderer","_Plane","_NineSlicePlane","_Rope","_ParticleContainer","_ParticleRenderer","_WebGLPrepare","_CanvasPrepare","_BasePrepare","_TimeLimiter","CountLimiter","maxItemsPerFrame","itemsLeft","opts","parser","strict","loose","uri","$0","$1","$2","format","createTexture","premultiplyAlpha","RGBA","UNSIGNED_BYTE","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","newWidth","newHeight","texImage2D","texSubImage2D","FLOATING_POINT_AVAILABLE","uploadData","minFilter","linear","texParameteri","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","magFilter","TEXTURE_MAG_FILTER","enableMipmap","generateMipmap","enableWrapClamp","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","enableWrapRepeat","enableWrapMirrorRepeat","deleteTexture","fromSource","attribs","tempAttribState","attribute","enableVertexAttribArray","disableVertexAttribArray","attrib","compileProgram","glVertShader","compileShader","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","defaultValue","Int32Array","booleanArray","mapType","extractAttributes","totalAttributes","ACTIVE_ATTRIBUTES","attribData","getActiveAttrib","getAttribLocation","pointer","normalized","stride","vertexAttribPointer","extractUniforms","totalUniforms","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","generateUniformAccessObject","uniformKeys","fullName","nameTokens","uniformGroup","getUniformGroup","uniform","generateGetter","generateSetter","getterTemplate","setTemplate","setterTemplate","GLSL_TO_SINGLE_SETTERS","GLSL_TO_ARRAY_SETTERS","cur","float","vec2","vec3","vec4","int","ivec2","ivec3","ivec4","bool","bvec2","bvec3","bvec4","mat2","mat3","mat4","sampler2D","GLSL_TO_SIZE","_noop","asyncEachSeries","callback","err","onlyOnce","callFn","asyncQueue","worker","concurrency","_insert","insertAtFront","started","idle","drain","_tasks","_next","task","workers","buffer","unsaturated","saturated","kill","running","pause","resume","eachSeries","webpackPolyfill","deprecate","_pixels","_pixels2","createGrid","cols","offsetWidth","cellSize","cellSpacing","rows","offsetHeight","cells","randomiser","random","borderColour","highlightColours","floor","cellColour","addCell","stage","cell","lineStyle","drawRect","endFill","_lodash","_lodash2","baseColour","getElementById","setup","debounce","brand","logo","browser-chrome","screenshot","window-bar","circles","circle","circle-red","circle-yellow","circle-green","btn-primary","btn-default","btn-center","btn-download","os-title","os-icon","download-size","github","callout-titlebar","callout","content","callout-primary","code-well","hexagon-sm","hexagon-md","hexagon-lg","hexagon-inline","hexagon-left","hexagon-right","windows-icon","apple-icon","linux-icon","masthead","intro-wrapper","intro","system-tray-menu-chrome","osx-bar","system-tray-icon","h3","h4","h5","h6","lead","text-center","flex-wrapper","feature-container","feature-icon-container","content-block","feature-icon","feature-icon-blocks","feature-icon-themeable","feature-icon-snippets","feature-icon-future","steps-container","step-last","hexagon-wrapper","section-preview","animation","system-tray-menu-chrome-wrapper","system-tray-menu-wrapper","system-tray-menu-shadow","_ismobilejs2","_accessibleTarget","_accessibleTarget2","KEY_CODE_TAB","DIV_TOUCH_SIZE","DIV_TOUCH_POS_X","DIV_TOUCH_POS_Y","DIV_TOUCH_ZINDEX","DIV_HOOK_SIZE","DIV_HOOK_POS_X","DIV_HOOK_POS_Y","DIV_HOOK_ZINDEX","AccessibilityManager","createTouchHook","top","left","zIndex","pool","renderId","debug","_onKeyDown","_onMouseMove","isActive","isMobileAccessabillity","hookDiv","title","body","deactivate","updateAccessibleObjects","getBoundingClientRect","sx","capHitArea","borderStyle","_onClick","_onFocus","_onFocusOut","interactionManager","interaction","dispatchEvent","eventData","keyCode","registerPlugin","_AccessibilityManager","_GraphicsData2","_Sprite2","_bezierCurveTo2","_bezierCurveTo3","canvasRenderer","tempColor1","tempColor2","_prevTint","currentPath","_webGL","isMask","boundsPadding","_localBounds","fastRectDirty","clearDirty","boundsDirty","cachedSpriteDirty","_spriteRect","_fastRect","updateLocalBounds","closed","drawShape","moveTo","lineTo","quadraticCurveTo","cpX","cpY","toX","toY","xa","ya","fromX","fromY","bezierCurveTo","cpX2","cpY2","arcTo","radius","mm","dd","tt","k1","k2","j1","j2","qy","startAngle","endAngle","arc","anticlockwise","sweep","segs","startX","startY","theta","theta2","cTheta","sTheta","segMinus","remainder","real","beginFill","filling","drawRoundedRect","RoundedRectangle","drawCircle","Circle","drawEllipse","Ellipse","drawPolygon","isFastRect","_renderSpriteRect","graphics","_SPRITE_TEXTURE","t1","t2","lb","rw","rh","generateCanvasTexture","canvasBuffer","closePath","close","_webgl","updateGraphicsTint","beginPath","renderPolygon","strokeStyle","strokeRect","kappa","ox","oy","xe","ye","xm","ym","rx","ry","maxRadius","tintR","tintG","tintB","dt","dt2","dt3","t3","_ObjectRenderer3","_WebGLGraphicsData","_WebGLGraphicsData2","_PrimitiveShader","_PrimitiveShader2","_buildPoly","_buildPoly2","_buildRectangle","_buildRectangle2","_buildRoundedRectangle","_buildRoundedRectangle2","_buildCircle","_buildCircle2","graphicsDataPool","primitiveShader","webGL","updateGraphics","shaderTemp","translationMatrix","draw","lastIndex","getWebGLData","attribsState","WebGLGraphicsData","glPoints","glIndices","aColor","_Shader2","_Shader3","PrimitiveShader","buildCircle","circleData","totalSegs","seg","vecPos","tempPoints","_buildLine2","_buildLine","buildPoly","holeArray","_earcut2","vertPos","_earcut","buildRectangle","rectData","buildRoundedRectangle","rrectData","recPoints","quadraticBezierCurve","_j","getPt","n1","n2","perc","diff","xb","yb","_Rectangle2","r2","normx","normy","_key","il","xi","yi","xj","yj","intersect","radius2","CanvasMaskManager","maskData","save","cacheAlpha","renderGraphicsShape","clip","restore","mapCanvasBlendModesToPixi","TextureGarbageCollector","checkCount","maxIdle","checkCountMax","mode","run","tm","managedTextures","_managedTextures","wasRemoved","unload","TextureManager","getTexture","isRenderTexture","skipRemove","_mapWebGLBlendModesToPixi","_mapWebGLBlendModesToPixi2","BLEND","DEPTH_TEST","FRONT_FACE","CULL_FACE","BLEND_FUNC","WebGLState","activeState","Uint8Array","defaultState","stackIndex","stack","maxAttribs","MAX_VERTEX_ATTRIBS","nativeVaoExtension","setState","setBlend","setDepthTest","setFrontFace","setCullFace","blendFunc","frontFace","resetAttributes","bindVertexArrayOES","UNPACK_FLIP_Y_WEBGL","extractUniformsFromSrc","vertUniforms","extractUniformsFromString","fragUniforms","string","maskRegex","nameSplit","lines","line","splitLine","calculateScreenSpaceMatrix","outputMatrix","textureSize","mappedMatrix","calculateNormalizedScreenSpaceMatrix","translateScaleX","translateScaleY","TEMP_MATRIX","ratio","_Quad2","_filterTransforms","filterTransforms","FilterState","FilterManager","quad","shaderCache","filterStack","filterState","currentState","targetBounds","getPotRenderTarget","lastState","freePotRenderTarget","scissorRenderTarget","pushScissorMask","scissorData","syncUniforms","textureCount","filterClamp","emptyPool","minWidth","minHeight","_SpriteMaskFilter2","MaskManager","enableScissor","alphaMaskPool","alphaMaskIndex","pushSpriteMask","rot","pushStencilMask","popSpriteMask","popScissorMask","popStencilMask","alphaMaskFilter","pushStencil","popStencil","StencilManager","STENCIL_TEST","sms","STENCIL_BUFFER_BIT","stencilFunc","ALWAYS","colorMask","stencilOp","KEEP","INCR","NOTEQUAL","DECR","stencilStack","checkMaxIfStatmentsInShader","maxIfs","createTempContext","tinyCanvas","generateIfTestSrc","mapWebGLBlendModesToPixi","ONE","ONE_MINUS_SRC_ALPHA","DST_ALPHA","DST_COLOR","ONE_MINUS_SRC_COLOR","mapWebGLDrawModesToPixi","validateContext","_CanvasTinter2","canvasRenderWorldTransform","smoothingEnabled","tintedTexture","Buffer","ArrayBuffer","float32View","uint32View","positions","_generateMultiTextureShader","_generateMultiTextureShader2","_checkMaxIfStatmentsInShader","_checkMaxIfStatmentsInShader2","_BatchBuffer","_BatchBuffer2","TICK","TEXTURE_TICK","vertSize","vertByteSize","buffers","groups","ids","blend","sprites","vertexBuffers","vaos","vaoMax","vertexCount","onPrerender","MAX_TEXTURES","STREAM_DRAW","UNSIGNED_SHORT","aTextureId","currentBlendMode","np2","rendererBoundTextures","touch","nextTexture","currentTexture","groupCount","currentGroup","tIndex","group","groupTextureCount","drawElements","generateMultiTextureShader","generateSampleSrc","sampleValues","uSamplers","_Sprite3","_TextStyle2","defaultDestroyOptions","_text","_style","_styleListener","_font","localStyleID","respectDirty","outputText","lineWidths","maxLineWidth","fontProperties","measureText","linePositionX","linePositionY","shadowColor","shadowBlur","xShadowOffset","yShadowOffset","ascent","drawLetterSpacing","_generateFillStyle","isStroke","strokeText","fillText","characters","String","currentPosition","current","spaceLeft","words","wordWidth","characterWidth","wordWidthWithSpace","_onStyleChange","gradient","totalIterations","currentIteration","createLinearGradient","addColorStop","_i3","fontSizeString","properties","fontPropertiesCanvas","fontPropertiesContext","baseline","imagedata","idx","descent","_emitter","_requestId","_maxElapsedMS","deltaTime","elapsedMS","lastTime","speed","_tick","time","requestAnimationFrame","_requestIfNeeded","performance","now","_cancelIfNeeded","cancelAnimationFrame","_startIfPossible","fps","minFPMS","canUploadSameBuffer","ios","platform","determineCrossOrigin","_url3","_url2","maxRecommendedTextures","__plugins","pluginName","ctor","msg","groupCollapsed","groupEnd","_mesh","_particles","particles","extras","_prepare","prepare","SpriteBatch","AssetLoader","Stage","DisplayObjectContainer","Strip","Rope","ParticleContainer","MovieClip","scaleModes","math","AbstractFilter","TransformManual","DEFAULT_RENDER_OPTIONS","defaults","_loop","deprecation","getImage","extract","getBase64","base64","getCanvas","getPixels","setTexture","setText","setStyle","determineFontProperties","splits","fontSizeIndex","uuid","NaN","webgl","TEMP_RECT","CanvasExtract","canvasData","_WebGLExtract","_CanvasExtract","BYTES_PER_PIXEL","WebGLExtract","textureBuffer","flipY","webglPixels","readPixels","_core$Sprite","_textures","_durations","animationSpeed","loop","onComplete","onFrameChange","_currentTime","playing","gotoAndStop","frameNumber","previousFrame","currentFrame","gotoAndPlay","elapsed","lag","fromFrames","fromImages","images","_ObservablePoint2","textWidth","textHeight","_glyphs","maxWidth","maxLineHeight","prevCharCode","lastLineWidth","lastSpace","lastSpaceWidth","charCodeAt","charData","lineAlignOffsets","alignOffset","lenChars","_i4","validate","_TextureTransform2","tileTransform","_canvasPattern","uvTransform","tilingSprite","baseTextureResolution","modX","tilePosition","tileScale","modY","tempCanvas","createPattern","_tempMatrix","_cacheAsBitmap","_cacheData","CacheData","originalRenderWebGL","originalRenderCanvas","originalCalculateBounds","originalGetLocalBounds","originalUpdateTransform","originalHitTest","originalDestroy","originalMask","originalFilterArea","cacheAsBitmap","originalContainsPoint","_renderCachedWebGL","_renderCachedCanvas","_cacheAsBitmapDestroy","_destroyCachedDisplayObject","_initCachedDisplayObject","cachedRenderTarget","cachedSprite","_calculateCachedBounds","_getCachedLocalBounds","_initCachedDisplayObjectCanvas","getChildByName","getGlobalPosition","tempArray","_core$ObjectRenderer","simpleShader","ts","baseTex","uv","isSimple","H","uMapCoord","uTransform","uColor","uSampler","_BlurXFilter2","_BlurYFilter2","BlurFilter","blurXFilter","blurYFilter","ColorMatrixFilter","_loadMatrix","multiply","newMatrix","_multiply","_colorMatrix","brightness","greyscale","blackAndWhite","hue","cosR","sinR","sqrW","a00","a01","a02","a10","a11","a12","a20","a21","a22","contrast","saturate","desaturate","negative","sepia","technicolor","polaroid","toBGR","kodachrome","browni","vintage","colorTone","desaturation","toned","lightColor","darkColor","lR","lG","lB","dR","dG","dB","night","intensity","predator","lsd","grayscale","DisplacementFilter","mapSampler","filterMatrix","FXAAFilter","NoiseFilter","noise","VoidFilter","loader","loaders","accessibility","_deprecation","_accessibility","_extract","_interaction","_loaders","Loader","InteractionEvent","stopped","currentTarget","stopPropagation","_reset","_InteractionData","_InteractionData2","_InteractionEvent","_InteractionEvent2","_interactiveTarget","_interactiveTarget2","InteractionManager","autoPreventDefault","interactionFrequency","mouse","interactiveDataPool","interactionDOMElement","moveWhenInside","eventsAdded","mouseOverRenderer","supportsTouchEvents","supportsPointerEvents","PointerEvent","normalizeTouchEvents","normalizeMouseEvents","onMouseUp","processMouseUp","onMouseDown","processMouseDown","onMouseMove","processMouseMove","onMouseOut","processMouseOverOut","onMouseOver","onPointerUp","processPointerUp","onPointerDown","processPointerDown","onPointerMove","processPointerMove","onPointerOut","processPointerOverOut","onPointerOver","onTouchStart","processTouchStart","onTouchEnd","processTouchEnd","onTouchMove","processTouchMove","defaultCursorStyle","currentCursorStyle","_tempPoint","setTargetElement","element","removeEvents","addEvents","msPointerEnabled","_deltaTime","didMove","cursor","processInteractive","eventString","mapPositionToPoint","parentElement","func","hitTest","hit","interactiveParent","clientX","clientY","isRightButton","button","which","isDown","_mouseOver","normalizeToPointerData","changedTouches","cLength","touchData","getTouchData","returnTouchData","touchEvent","identifier","globalX","globalY","touches","buttons","isPrimary","radiusX","radiusY","tiltX","tiltY","pointerType","pointerId","pressure","force","rotationAngle","pageX","pageY","screenX","screenY","layerX","offsetX","layerY","offsetY","_InteractionManager","_loader","_bitmapFontParser","_spritesheetParser","_textureParser","_resourceLoader2","_textureParser2","_spritesheetParser2","_bitmapFontParser2","_ResourceLoader","_pixiMiddleware","use","addPixiMiddleware","_Plane2","_Plane3","DEFAULT_BORDER_SIZE","NineSlicePlane","leftWidth","topHeight","rightWidth","bottomHeight","_origWidth","_origHeight","_uvw","_uvh","updateHorizontalVertices","_topHeight","_bottomHeight","updateVerticalVertices","_leftWidth","_rightWidth","base","textureSource","drawSegment","sw","sh","dw","dh","textureUvs","factor","nextPoint","perpX","perpY","perpLength","num","MeshSpriteRenderer","_renderTriangleMesh","_renderTriangles","_renderDrawTriangle","index0","textureWidth","textureHeight","u0","u1","u2","v0","v1","v2","centerX","centerY","normX","normY","deltaA","deltaB","deltaC","deltaD","deltaE","deltaF","renderMeshFlat","MeshRenderer","glData","uvBuffer","maxSize","batchSize","maxBatchSize","_properties","_maxSize","_batchSize","_glBuffers","_bufferToUpdate","setProperties","particle","smallestChildIndex","bufferIndex","isRotated","positionX","positionY","finalWidth","finalHeight","compositeOperation","childTransform","_buffers","ParticleBuffer","dynamicPropertyFlags","dynamicProperties","staticProperties","uploadFunction","staticStride","staticBuffer","staticData","dynamicStride","dynamicBuffer","dynamicData","initBuffers","dynamicOffset","staticOffset","_property","_property2","_property3","uploadDynamic","startIndex","uploadStatic","_ParticleShader","_ParticleShader2","_ParticleBuffer","_ParticleBuffer2","ParticleRenderer","uploadVertices","aPositionCoord","uploadPosition","aRotation","uploadRotation","uploadUvs","uploadAlpha","totalChildren","generateBuffers","uAlpha","spritePosition","spriteRotation","spriteAlpha","ParticleShader","isNaN","_objectAssign","_objectAssign2","ONE_FRAME_TIME","Date","getTime","startTime","vendors","delay","clearTimeout","uploadBaseTextures","imageWidth","imageHeight","ctx","findBaseTextures","_BasePrepare2","_BasePrepare3","CANVAS_START_SIZE","CanvasPrepare","TimeLimiter","maxMilliseconds","frameStart","uploadGraphics","findGraphics","WebGLPrepare","addMapEntry","pair","addSetEntry","thisArg","arrayAggregator","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","asciiWords","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","baseTimes","baseToPairs","baseUnary","baseValues","cacheHas","cache","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","mapToArray","overArg","arg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","unicodeWords","reUnicodeWord","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","freeParseInt","freeGlobal","freeSelf","freeExports","nodeType","freeModule","moduleExports","freeProcess","nodeUtil","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","lazyValue","isArr","isRight","arrLength","getView","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","computed","Hash","entries","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","baseAssignValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","baseAt","skip","number","lower","upper","baseClone","bitmask","customizer","isDeep","isFlat","isFull","isObject","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","seen","baseInverter","baseInvoke","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","baseIsNative","isMasked","pattern","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","allocUnsafe","cloneArrayBuffer","arrayBuffer","byteLength","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","Ctor","isBind","createCtor","createCaseFirst","methodName","trailing","createCompounder","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","createOver","arrayFunc","createPadding","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","precision","createToPairs","createWrap","mergeData","baseSetData","isPartial","arrValue","othValue","compared","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","proto","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","mergeDefaults","otherArgs","oldArray","reference","updateWrapDetails","shortOut","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","shuffle","some","after","before","curry","curryRight","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","debounced","isInvoking","resolver","memoized","Cache","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNumber","isNative","isMaskable","isNull","isNil","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","valueOf","isBinary","toSafeInteger","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","prop","setWith","isArrLike","unset","updateWith","valuesIn","clamp","inRange","floating","capitalize","upperFirst","endsWith","escape","escapeRegExp","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","trimEnd","trimStart","truncate","omission","search","newEnd","unescape","cond","conforms","constant","defaultTo","matches","matchesProperty","methodNames","noConflict","_","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","idCounter","maxBy","mean","meanBy","minBy","sumBy","pick","arrayProto","funcProto","coreJsData","IE_PROTO","getPrototypeOf","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeGetSymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ctorString","quote","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bindKey","defer","overArgs","funcsLength","partialRight","rearg","gt","gte","lte","assignIn","assignWith","at","defaultsDeep","mergeWith","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","rangeRight","augend","addend","divide","dividend","divisor","multiplier","multiplicand","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","filtered","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","toObject","shouldUseNative","test1","getOwnPropertyNames","test2","fromCharCode","order2","test3","letter","propIsEnumerable","symbols","EMPTY_ARRAY_BUFFER","drawType","createBuffer","ARRAY_BUFFER","dontBind","bufferSubData","bufferData","bindBuffer","ELEMENT_ARRAY_BUFFER","Framebuffer","createFramebuffer","enableTexture","framebufferTexture2D","FRAMEBUFFER","COLOR_ATTACHMENT0","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","renderbufferStorage","DEPTH_STENCIL","COLOR_BUFFER_BIT","bindFramebuffer","deleteFramebuffer","fbo","createFloat32","FORCE_NATIVE","nativeState","nativeVao","createVertexArrayOES","lastBuffer","deleteVertexArrayOES","Prism","hooks","env","code","pre","clsReg","className","querySelector","lineNumbersWrapper","linesNum","hasAttribute","counterReset","_self","WorkerGlobalScope","lang","util","encode","tokens","Token","alias","objId","languages","redef","insertBefore","insert","grammar","newToken","ret","token","DFS","visited","highlightAll","selector","elements","querySelectorAll","highlightElement","language","textContent","Worker","onmessage","highlightedCode","postMessage","stringify","immediateClose","highlight","tokenize","strarr","tokenloop","patterns","lookbehind","greedy","lookbehindLength","delNum","nextToken","matchedStr","combStr","all","callbacks","classes","aliases","script","currentScript","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","mathml","css","atrule","rule","important","function","style-attr","clike","class-name","keyword","boolean","javascript","template-string","interpolation","interpolation-punctuation","js","fileHighlight","Extensions","rb","ps1","psm1","bat","onreadystatechange","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","nextTick","browser","argv","version","versions","chdir","umask","errors","mapDomain","regexSeparators","labels","encoded","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","numPoints","firstTime","damp","baseMinusTMin","tMax","decode","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","maxInt","tMin","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","toASCII","regexNonASCII","punycode","overflow","not-basic","invalid-input","ucs2","qs","maxKeys","kstr","vstr","decodeURIComponent","stringifyPrimitive","objectKeys","ks","encodeURIComponent","DEFAULT_CONCURRENCY","progress","loading","_progressChunk","_beforeMiddleware","_afterMiddleware","_boundLoadResource","_loadResource","_buffer","_numToLoad","_queue","MAX_PROGRESS","enqueue","_prepareUrl","_onLoad","parsedUrl","dequeue","_onComplete","_keyStr","encodeBinary","bytebuffer","encodedCharIndexes","inx","jnx","paddingBytes","b64","Url","URL","webkitURL","Blob","createObjectURL","revokeObjectURL","getResponseHeader","slashes","auth","query","pathname","urlParse","parseQueryString","slashesDenoteHost","u","urlFormat","urlResolve","urlResolveObject","resolveObject","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","queryIndex","splitter","uSplit","slashRegex","simplePath","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","ae","esc","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","hasTrailingSlash"],"mappings":"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EAAA,GAAAkG,EAAA,GAAAlG,EAAA,IAAAkG,EAAA,GAAAlG,EAAA,IACA9d,EAAA,GAAAgkB,EAAA,GAAAlG,EAAA,GAAAkG,EAAA,GAAAlG,EAAA,GAAAkG,EAAA,GAAAlG,EAAA,IAAAkG,EAAA,GAAAlG,EAAA,IACA9d,EAAA,GAAAgkB,EAAA,GAAAlG,EAAA,GAAAkG,EAAA,GAAAlG,EAAA,GAAAkG,EAAA,GAAAlG,EAAA,IAAAkG,EAAA,GAAAlG,EAAA,IACA9d,EAAA,GAAAgkB,EAAA,GAAAlG,EAAA,GAAAkG,EAAA,GAAAlG,EAAA,GAAAkG,EAAA,GAAAlG,EAAA,IAAAkG,EAAA,GAAAlG,EAAA,IAGA9d,EAAA,IAAAgkB,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,IAAAkG,EAAA,IAAAlG,EAAA,IACA9d,EAAA,IAAAgkB,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,IAAAkG,EAAA,IAAAlG,EAAA,IACA9d,EAAA,IAAAgkB,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,IAAAkG,EAAA,IAAAlG,EAAA,IACA9d,EAAA,IAAAgkB,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,IAAAkG,EAAA,IAAAlG,EAAA,IACA9d,EAAA,IAAAgkB,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,IAAAkG,EAAA,IAAAlG,EAAA,IAGA9d,EAAA,IAAAgkB,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,IAAAkG,EAAA,IAAAlG,EAAA,IACA9d,EAAA,IAAAgkB,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,IAAAkG,EAAA,IAAAlG,EAAA,IACA9d,EAAA,IAAAgkB,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,IAAAkG,EAAA,IAAAlG,EAAA,IACA9d,EAAA,IAAAgkB,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,IAAAkG,EAAA,IAAAlG,EAAA,IACA9d,EAAA,IAAAgkB,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,GAAAkG,EAAA,IAAAlG,EAAA,IAAAkG,EAAA,IAAAlG,EAAA,IAEA9d,GAYAk1E,EAAAv/E,UAAA4/E,aAAA,SAAAtrD,GAEA,GAAAt1B,GAAA,GAAAiiB,cAAAqT,EAOA,OALAt1B,GAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SAEAA,GAYAugF,EAAAv/E,UAAA6/E,WAAA,SAAA13D,EAAAs3D,GACA,GAAAnrD,IAAAnM,EAAA,UAAAA,EAAA,UAAAA,EAAA,cAEAlT,MAAAuqE,YAAAlrD,EAAAmrD,IAYAF,EAAAv/E,UAAA8/E,UAAA,SAAAh5D,EAAA24D,GACA,GAAAnrD,IAAAxN,MAAA,IAAAA,MAAA,IAAAA,MAAA,cAEA7R,MAAAuqE,YAAAlrD,EAAAmrD,IAWAF,EAAAv/E,UAAA+/E,cAAA,SAAAN,GACA,GAAAnrD,IAAA,iDAEArf,MAAAuqE,YAAAlrD,EAAAmrD,IAYAF,EAAAv/E,UAAAggF,IAAA,SAAAprD,EAAA6qD,GACA7qD,MAAA,OAAA1uB,KAAAC,EAEA,IAAA85E,GAAA/5E,KAAAiuB,IAAAS,GACAsrD,EAAAh6E,KAAAkuB,IAAAQ,GACA3L,EAAA/iB,KAAA+iB,KAaAq+B,EAAA,IACA64B,EAAAl3D,EAAAq+B,GAEA84B,EAAAH,GAAA,EAAAA,GAAA34B,EACA+4B,EAAA/4B,GAAA,EAAA24B,GAAAE,EAAAD,EACAI,EAAAh5B,GAAA,EAAA24B,GAAAE,EAAAD,EAEAK,EAAAj5B,GAAA,EAAA24B,GAAAE,EAAAD,EACAM,EAAAP,EAAA34B,GAAA,EAAA24B,GACAQ,EAAAn5B,GAAA,EAAA24B,GAAAE,EAAAD,EAEAQ,EAAAp5B,GAAA,EAAA24B,GAAAE,EAAAD,EACAS,EAAAr5B,GAAA,EAAA24B,GAAAE,EAAAD,EACAU,EAAAX,EAAA34B,GAAA,EAAA24B,GAEA3rD,GAAA8rD,EAAAC,EAAAC,EAAA,IAAAC,EAAAC,EAAAC,EAAA,IAAAC,EAAAC,EAAAC,EAAA,cAEA3rE,MAAAuqE,YAAAlrD,EAAAmrD,IAcAF,EAAAv/E,UAAA6gF,SAAA,SAAA96B,EAAA05B,GACA,GAAArkE,IAAA2qC,GAAA,KACAlmD,GAAA,KAAAub,EAAA,GAEAkZ,GAAAlZ,EAAA,MAAAvb,EAAA,EAAAub,EAAA,IAAAvb,EAAA,IAAAub,EAAA,EAAAvb,EAAA,UAEAoV,MAAAuqE,YAAAlrD,EAAAmrD,IAaAF,EAAAv/E,UAAA8gF,SAAA,WACA,GAAA/6B,GAAAnlD,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,KACA6+E,EAAA7+E,UAAA,GAEAqf,EAAA,EAAA8lC,EAAA,IACA7lC,GAAAD,EAAA,OAEAqU,GAAArU,EAAAC,IAAA,IAAAA,EAAAD,EAAAC,EAAA,IAAAA,IAAAD,EAAA,cAEAhL,MAAAuqE,YAAAlrD,EAAAmrD,IAWAF,EAAAv/E,UAAA+gF,WAAA,WAEA9rE,KAAA6rE,UAAA,IAWAvB,EAAAv/E,UAAAghF,SAAA,SAAAvB,GACA,GAAAnrD,IAAA,wCAEArf,MAAAuqE,YAAAlrD,EAAAmrD,IAWAF,EAAAv/E,UAAAihF,MAAA,SAAAxB,GACA,GAAAnrD,IAAA,8FAEArf,MAAAuqE,YAAAlrD,EAAAmrD,IAWAF,EAAAv/E,UAAAkhF,YAAA,SAAAzB,GACA,GAAAnrD,IAAA,oPAEArf,MAAAuqE,YAAAlrD,EAAAmrD,IAWAF,EAAAv/E,UAAAmhF,SAAA,SAAA1B,GACA,GAAAnrD,IAAA,4EAEArf,MAAAuqE,YAAAlrD,EAAAmrD,IAWAF,EAAAv/E,UAAAohF,MAAA,SAAA3B,GACA,GAAAnrD,IAAA,wCAEArf,MAAAuqE,YAAAlrD,EAAAmrD,IAWAF,EAAAv/E,UAAAqhF,WAAA,SAAA5B,GACA,GAAAnrD,IAAA,sPAEArf,MAAAuqE,YAAAlrD,EAAAmrD,IAWAF,EAAAv/E,UAAAshF,OAAA,SAAA7B,GACA,GAAAnrD,IAAA,oPAEArf,MAAAuqE,YAAAlrD,EAAAmrD,IAWAF,EAAAv/E,UAAAuhF,QAAA,SAAA9B,GACA,GAAAnrD,IAAA,6OAEArf,MAAAuqE,YAAAlrD,EAAAmrD,IAeAF,EAAAv/E,UAAAwhF,UAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAnC,GACAgC,KAAA,GACAC,KAAA,IACAC,KAAA,SACAC,KAAA,OAEA,IAAAC,IAAAF,GAAA,YACAG,GAAAH,GAAA,WACAI,GAAA,IAAAJ,GAAA,IAEAK,GAAAJ,GAAA,YACAK,GAAAL,GAAA,WACAM,GAAA,IAAAN,GAAA,IAEAttD,GAAA,eAAAutD,EAAAC,EAAAC,EAAAN,EAAA,EAAAO,EAAAC,EAAAC,EAAAR,EAAA,EAAAG,EAAAG,EAAAF,EAAAG,EAAAF,EAAAG,EAAA,IAEAjtE,MAAAuqE,YAAAlrD,EAAAmrD,IAYAF,EAAAv/E,UAAAmiF,MAAA,SAAAC,EAAA3C,GACA2C,KAAA,EACA,IAAA9tD,IAAA8tD,GAAA,GAAAA,EAAA,OAAAA,EAAA,EAAAA,EAAA,MAAAA,EAAA,EAAAA,EAAA,cAEAntE,MAAAuqE,YAAAlrD,EAAAmrD,IAcAF,EAAAv/E,UAAAqiF,SAAA,SAAAt8B,EAAA05B,GACA,GAAAnrD,IAEA,mBAAAyxB,GAAA,kBAAAA,GAAA,mBAAAA,EAAA,EAAAA,EAAA,mBAAAA,GAEA,mBAAAA,EAAA,kBAAAA,GAAA,kBAAAA,EAAA,EAAAA,GAAA,kBAAAA,GAEA,mBAAAA,GAAA,mBAAAA,EAAA,kBAAAA,EAAA,EAAAA,EAAA,kBAAAA,EAEA,UAEA9wC,MAAAuqE,YAAAlrD,EAAAmrD,IAaAF,EAAAv/E,UAAAsiF,IAAA,SAAA7C,GACA,GAAAnrD,IAAA,mDAEArf,MAAAuqE,YAAAlrD,EAAAmrD,IASAF,EAAAv/E,UAAAi7B,MAAA,WACA,GAAA3G,IAAA,wCAEArf,MAAAuqE,YAAAlrD,GAAA,IAYAlX,EAAAmiE,IACAh/E,IAAA,SACAb,IAAA,WACA,MAAAuV,MAAA6kB,SAAA96B,GASAggB,IAAA,SAAA9f,GACA+V,KAAA6kB,SAAA96B,EAAAE,MAIAqgF,GACCl/D,EAAA/e,QAKD3C,GAAA6B,QAAA++E,EACAA,EAAAv/E,UAAAuiF,UAAAhD,EAAAv/E,UAAA8/E,W5Iw/3BM,SAASlhF,EAAQD,EAASH,GAEhC,Y6Ilg5BA,SAAA4B,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAA2W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAhBrX9Y,EAAAiB,YAAA,CAEA,IAAAwd,GAAA,WAAgC,QAAAC,GAAAC,EAAAC,GAA2C,OAAA1e,GAAA,EAAgBA,EAAA0e,EAAA1c,OAAkBhC,IAAA,CAAO,GAAA2e,GAAAD,EAAA1e,EAA2B2e,GAAA/d,WAAA+d,EAAA/d,aAAA,EAAwD+d,EAAAhe,cAAA,EAAgC,SAAAge,OAAA7F,UAAA,GAAuDrY,OAAAC,eAAA+d,EAAAE,EAAAjd,IAAAid,IAA+D,gBAAArG,EAAAsG,EAAAC,GAA2L,MAAlID,IAAAJ,EAAAlG,EAAAnX,UAAAyd,GAAqEC,GAAAL,EAAAlG,EAAAuG,GAA6DvG,MAExhBiJ,EAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GAuBAoiE,GArBAhkF,EAAA,GAqBA,SAAA4iD,GAOA,QAAAohC,GAAA3lD,EAAA/V,GACA7P,EAAAhC,KAAAutE,EAEA,IAAArpC,GAAA,GAAA94B,GAAAuM,MAEAiQ,GAAAxX,YAAA,CAEA,IAAApM,GAAA7B,EAAAnC,KAAAmsC,EAAAriD,KAAAkW,KAEA,iZAEA,6aAcA,OAZAgE,GAAAmgC,WAAAvc,EACA5jB,EAAAkgC,aAEAlgC,EAAA6gB,SAAA2oD,WAAA5lD,EAAA5d,QACAhG,EAAA6gB,SAAA4oD,aAAAvpC,EAAAtlB,SAAA,GACA5a,EAAA6gB,SAAAhT,OAAgC7G,EAAA,EAAAC,EAAA,GAEhC,OAAA4G,GAAAhmB,SAAAgmB,IACAA,EAAA,IAGA7N,EAAA6N,MAAA,GAAAzG,GAAAE,MAAAuG,KACA7N,EAgDA,MA/EA1B,GAAAirE,EAAAphC,GA2CAohC,EAAAxiF,UAAA2M,MAAA,SAAAyZ,EAAA0yB,EAAAC,GACA,GAAA0xB,GAAA,EAAA1xB,EAAAjsB,iBAAAnsB,OAAAo4C,EAAAjtC,KAAAnL,MAAAm4C,EAAAhtC,KAAAnL,MAEAsU,MAAA6kB,SAAA4oD,aAAAt8D,EAAAkzB,sBAAArkC,KAAAkkC,WAAAlkC,KAAAmkC,YACAnkC,KAAA6kB,SAAAhT,MAAA7G,EAAAhL,KAAA6R,MAAA7G,EAAAwqD,EACAx1D,KAAA6kB,SAAAhT,MAAA5G,EAAAjL,KAAA6R,MAAA5G,EAAAuqD,EAGArkD,EAAA4yB,YAAA/jC,KAAA6jC,EAAAC,IAWA37B,EAAAolE,IACAjiF,IAAA,MACAb,IAAA,WACA,MAAAuV,MAAA6kB,SAAA2oD,YASAzjE,IAAA,SAAA9f,GACA+V,KAAA6kB,SAAA2oD,WAAAvjF,MAIAsjF,GACCniE,EAAA/e,QAED3C,GAAA6B,QAAAgiF,G7Ioh5BM,SAAS5jF,EAAQD,EAASH,GAEhC,Y8I9n5BA,SAAA4B,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAA2W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAdrX9Y,EAAAiB,YAAA,CAEA,IAAAwgB,GAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GAyBAuiE,GAvBAnkF,EAAA,GAuBA,SAAA4iD,GAMA,QAAAuhC,KAIA,MAHA1rE,GAAAhC,KAAA0tE,GAGAvrE,EAAAnC,KAAAmsC,EAAAriD,KAAAkW,KAEA,+xCAEA,q9IAGA,MAhBAsC,GAAAorE,EAAAvhC,GAgBAuhC,GACCtiE,EAAA/e,QAED3C,GAAA6B,QAAAmiF,G9I8o5BM,SAAS/jF,EAAQD,EAASH,GAEhC,Y+Ivr5BA,SAAA4B,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAA2W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAhBrX9Y,EAAAiB,YAAA,CAEA,IAAAwd,GAAA,WAAgC,QAAAC,GAAAC,EAAAC,GAA2C,OAAA1e,GAAA,EAAgBA,EAAA0e,EAAA1c,OAAkBhC,IAAA,CAAO,GAAA2e,GAAAD,EAAA1e,EAA2B2e,GAAA/d,WAAA+d,EAAA/d,aAAA,EAAwD+d,EAAAhe,cAAA,EAAgC,SAAAge,OAAA7F,UAAA,GAAuDrY,OAAAC,eAAA+d,EAAAE,EAAAjd,IAAAid,IAA+D,gBAAArG,EAAAsG,EAAAC,GAA2L,MAAlID,IAAAJ,EAAAlG,EAAAnX,UAAAyd,GAAqEC,GAAAL,EAAAlG,EAAAuG,GAA6DvG,MAExhBiJ,EAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GAwBAwiE,GAtBApkF,EAAA,GAsBA,SAAA4iD,GAMA,QAAAwhC,KACA3rE,EAAAhC,KAAA2tE,EAEA,IAAA3pE,GAAA7B,EAAAnC,KAAAmsC,EAAAriD,KAAAkW,KAEA,sRAEA,kdAGA,OADAgE,GAAA4pE,MAAA,GACA5pE,EA6BA,MA5CA1B,GAAAqrE,EAAAxhC,GA2BAhkC,EAAAwlE,IACAriF,IAAA,QACAb,IAAA,WACA,MAAAuV,MAAA6kB,SAAA+oD,OASA7jE,IAAA,SAAA9f,GACA+V,KAAA6kB,SAAA+oD,MAAA3jF,MAIA0jF,GACCviE,EAAA/e,QAED3C,GAAA6B,QAAAoiF,G/Iys5BM,SAAShkF,EAAQD,EAASH,GAEhC,YgJjx5BA,SAAA4B,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAA2W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAdrX9Y,EAAAiB,YAAA,CAEA,IAAAwgB,GAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GAmBA0iE,GAjBAtkF,EAAA,GAiBA,SAAA4iD,GAMA,QAAA0hC,KACA7rE,EAAAhC,KAAA6tE,EAEA,IAAA7pE,GAAA7B,EAAAnC,KAAAmsC,EAAAriD,KAAAkW,KAEA,sRAEA,gJAGA,OADAgE,GAAA2/B,YAAA,OACA3/B,EAGA,MAlBA1B,GAAAurE,EAAA1hC,GAkBA0hC,GACCziE,EAAA/e,QAED3C,GAAA6B,QAAAsiF,GhJiy5BM,SAASlkF,EAAQD,EAASH,GAEhC,ciJl15BA,SAAAowB,GAmEA,QAAAxuB,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAjE1P3B,EAAAiB,YAAA,EACAjB,EAAAokF,OAAApkF,EAAAq4E,QAAAr4E,EAAAk4E,UAAAl4E,EAAAkjB,KAAAljB,EAAAqkF,QAAArkF,EAAAs8D,YAAAt8D,EAAAqnB,QAAArnB,EAAAm4E,OAAAn4E,EAAAu5E,QAAAv5E,EAAAskF,cAAAniF,MAEA,IAAAoiF,GAAA1kF,EAAA,IAEAc,QAAAmE,KAAAy/E,GAAAx/E,QAAA,SAAAnD,GACA,YAAAA,GAAA,eAAAA,GACAjB,OAAAC,eAAAZ,EAAA4B,GACAd,YAAA,EACAC,IAAA,WACA,MAAAwjF,GAAA3iF,OAKA,IAAA6f,GAAA5hB,EAAA,EAEAc,QAAAmE,KAAA2c,GAAA1c,QAAA,SAAAnD,GACA,YAAAA,GAAA,eAAAA,GACAjB,OAAAC,eAAAZ,EAAA4B,GACAd,YAAA,EACAC,IAAA,WACA,MAAA0gB,GAAA7f,QAKA/B,EAAA,IAEA,IAAA2kF,GAAA3kF,EAAA,IAEAykF,EAAA7iF,EAAA+iF,GAEAC,EAAA5kF,EAAA,KAEA05E,EAAA93E,EAAAgjF,GAEAn9B,EAAAznD,EAAA,IAEAs4E,EAAA12E,EAAA6lD,GAEApgC,EAAArnB,EAAA,IAEAwnB,EAAA5lB,EAAAylB,GAEAw9D,EAAA7kF,EAAA,KAEAy8D,EAAA76D,EAAAijF,GAEAC,EAAA9kF,EAAA,KAEAwkF,EAAA5iF,EAAAkjF,GAEA3M,EAAAn4E,EAAA,IAEAqjB,EAAAzhB,EAAAu2E,GAEAC,EAAAp4E,EAAA,IAEAq4E,EAAAz2E,EAAAw2E,GAEAG,EAAAv4E,EAAA,IAEAw4E,EAAA52E,EAAA22E,EAKAp4E,GAAAskF,gBACAtkF,EAAAu5E,UACAv5E,EAAAm4E,SACAn4E,EAAAqnB,UACArnB,EAAAs8D,cACAt8D,EAAAqkF,UACArkF,EAAAkjB,OACAljB,EAAAk4E,YACAl4E,EAAAq4E,SAgBA,IAAA+L,GAAAC,KAAAO,OAAA,GAAAP,GAAAO,OAAA,IAEA5kF,GAAAokF,SAIAn0D,EAAAvd,KAAA1S,IjJq15B6BI,KAAKJ,EAASH,EAAoB,MAIzD,SAASI,EAAQD,GAEvB,YkJ375BA,SAAAsY,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA;CAF3FjU,EAAAiB,YAAA,CAUA,IAAA4jF,GAAA,WAIA,QAAAA,KACAvsE,EAAAhC,KAAAuuE,GAOAvuE,KAAAwuE,SAAA,EAOAxuE,KAAAqI,OAAA,KAOArI,KAAAyuE,cAAA,KAOAzuE,KAAA9I,KAAA,KAOA8I,KAAAzJ,KAAA,KA0BA,MAjBAg4E,GAAAxjF,UAAA2jF,gBAAA,WACA1uE,KAAAwuE,SAAA,GAUAD,EAAAxjF,UAAA4jF,OAAA,WACA3uE,KAAAwuE,SAAA,EACAxuE,KAAAyuE,cAAA,KACAzuE,KAAAqI,OAAA,MAGAkmE,IAGA7kF,GAAA6B,QAAAgjF,GlJq85BM,SAAS5kF,EAAQD,EAASH,GAEhC,YmJ5/5BA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAE7E,QAAAD,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAA2W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAlCrX9Y,EAAAiB,YAAA,CAEA,IAAAwgB,GAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GAEAyjE,EAAArlF,EAAA,IAEAslF,EAAArjF,EAAAojF,GAEAE,EAAAvlF,EAAA,KAEAwlF,EAAAvjF,EAAAsjF,GAEA11E,EAAA7P,EAAA,GAEA8P,EAAA7N,EAAA4N,GAEA41E,EAAAzlF,EAAA,IAEA0lF,EAAAzjF,EAAAwjF,GAEAx1E,EAAAjQ,EAAA,IAEAo6D,EAAAn4D,EAAAgO,EAaAnP,QAAA08C,OAAA37B,EAAAnd,cAAAlD,UAAAkkF,EAAA1jF,QAYA,IAAA2jF,GAAA,SAAArrE,GASA,QAAAqrE,GAAA/rE,EAAApX,GACAiW,EAAAhC,KAAAkvE,EAEA,IAAAlrE,GAAA7B,EAAAnC,KAAA6D,EAAA/Z,KAAAkW,MAsbA,OApbAjU,SAOAiY,EAAAb,WAWAa,EAAAmrE,mBAAAtjF,SAAAE,EAAAojF,oBAAApjF,EAAAojF,mBAQAnrE,EAAAorE,qBAAArjF,EAAAqjF,sBAAA,GAOAprE,EAAAqrE,MAAA,GAAAR,GAAAtjF,QAIAyY,EAAAqrE,MAAA11D,OAAA5P,KAAA,QAOA/F,EAAA61C,QAAA,GAAAg1B,GAAAtjF,QAIAyY,EAAA61C,QAAAlgC,OAAA5P,KAAA,QAOA/F,EAAAkiD,UAAA,GAAA6oB,GAAAxjF,QAOAyY,EAAAsrE,uBAQAtrE,EAAAurE,sBAAA,KAaAvrE,EAAAwrE,gBAAA,EAQAxrE,EAAAyrE,aAAA,EAQAzrE,EAAA0rE,mBAAA,EASA1rE,EAAA2rE,oBAAA,gBAAAp4E,QASAyM,EAAA4rE,wBAAAr4E,OAAAs4E,aAUA7rE,EAAA8rE,sBAAA9rE,EAAA4rE,uBAAA5rE,EAAA2rE,oBAUA3rE,EAAA+rE,sBAAA/rE,EAAA4rE,wBAAAjsB,EAAAp4D,QAAAwwB,IAQA/X,EAAAgsE,UAAAhsE,EAAAgsE,UAAAr3D,KAAA3U,GACAA,EAAAisE,eAAAjsE,EAAAisE,eAAAt3D,KAAA3U,GAMAA,EAAAksE,YAAAlsE,EAAAksE,YAAAv3D,KAAA3U,GACAA,EAAAmsE,iBAAAnsE,EAAAmsE,iBAAAx3D,KAAA3U,GAMAA,EAAAosE,YAAApsE,EAAAosE,YAAAz3D,KAAA3U,GACAA,EAAAqsE,iBAAArsE,EAAAqsE,iBAAA13D,KAAA3U,GAMAA,EAAAssE,WAAAtsE,EAAAssE,WAAA33D,KAAA3U,GACAA,EAAAusE,oBAAAvsE,EAAAusE,oBAAA53D,KAAA3U,GAMAA,EAAAwsE,YAAAxsE,EAAAwsE,YAAA73D,KAAA3U,GAMAA,EAAAysE,YAAAzsE,EAAAysE,YAAA93D,KAAA3U,GACAA,EAAA0sE,iBAAA1sE,EAAA0sE,iBAAA/3D,KAAA3U,GAMAA,EAAA2sE,cAAA3sE,EAAA2sE,cAAAh4D,KAAA3U,GACAA,EAAA4sE,mBAAA5sE,EAAA4sE,mBAAAj4D,KAAA3U,GAMAA,EAAA6sE,cAAA7sE,EAAA6sE,cAAAl4D,KAAA3U,GACAA,EAAA8sE,mBAAA9sE,EAAA8sE,mBAAAn4D,KAAA3U,GAMAA,EAAA+sE,aAAA/sE,EAAA+sE,aAAAp4D,KAAA3U,GACAA,EAAAgtE,sBAAAhtE,EAAAgtE,sBAAAr4D,KAAA3U,GAMAA,EAAAitE,cAAAjtE,EAAAitE,cAAAt4D,KAAA3U,GAMAA,EAAAktE,aAAAltE,EAAAktE,aAAAv4D,KAAA3U,GACAA,EAAAmtE,kBAAAntE,EAAAmtE,kBAAAx4D,KAAA3U,GAMAA,EAAAotE,WAAAptE,EAAAotE,WAAAz4D,KAAA3U,GACAA,EAAAqtE,gBAAArtE,EAAAqtE,gBAAA14D,KAAA3U,GAMAA,EAAAstE,YAAAttE,EAAAstE,YAAA34D,KAAA3U,GACAA,EAAAutE,iBAAAvtE,EAAAutE,iBAAA54D,KAAA3U,GASAA,EAAAwtE,mBAAA,UAOAxtE,EAAAytE,mBAAA,UAQAztE,EAAA0tE,WAAA,GAAAtmE,GAAAE,MAQAtH,EAAApO,WAAA,EAEAoO,EAAA2tE,iBAAA3tE,EAAAb,SAAAtI,KAAAmJ,EAAAb,SAAAvN,YA8KAoO,EAyjCA,MA1/CA1B,GAAA4sE,EAAArrE,GA+cAqrE,EAAAnkF,UAAA4mF,iBAAA,SAAAC,GACA,GAAAh8E,GAAAjK,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,IAEAqU,MAAA6xE,eAEA7xE,KAAAuvE,sBAAAqC,EAEA5xE,KAAApK,aAEAoK,KAAA8xE,aAUA5C,EAAAnkF,UAAA+mF,UAAA,WACA9xE,KAAAuvE,wBAIAnkE,EAAA/c,OAAA09B,OAAAc,IAAA7sB,KAAAkF,OAAAlF,MAEAzI,OAAAJ,UAAA46E,kBACA/xE,KAAAuvE,sBAAA7jD,MAAA,8BACA1rB,KAAAuvE,sBAAA7jD,MAAA,4BACS1rB,KAAA4vE,wBACT5vE,KAAAuvE,sBAAA7jD,MAAA,wBAOA1rB,KAAA4vE,uBACAr4E,OAAAS,SAAA6qB,iBAAA,cAAA7iB,KAAA6wE,eAAA,GACA7wE,KAAAuvE,sBAAA1sD,iBAAA,cAAA7iB,KAAA2wE,eAAA,GACA3wE,KAAAuvE,sBAAA1sD,iBAAA,aAAA7iB,KAAA+wE,cAAA,GACA/wE,KAAAuvE,sBAAA1sD,iBAAA,cAAA7iB,KAAAixE,eAAA,GACA15E,OAAAsrB,iBAAA,YAAA7iB,KAAAywE,aAAA,KAOAzwE,KAAA8vE,uBACA9vE,KAAAuvE,sBAAA1sD,iBAAA,aAAA7iB,KAAA2wE,eAAA,GACA3wE,KAAAuvE,sBAAA1sD,iBAAA,WAAA7iB,KAAAywE,aAAA,GACAzwE,KAAAuvE,sBAAA1sD,iBAAA,YAAA7iB,KAAA6wE,eAAA,IAGA7wE,KAAA+vE,uBACAx4E,OAAAS,SAAA6qB,iBAAA,YAAA7iB,KAAA6wE,eAAA,GACA7wE,KAAAuvE,sBAAA1sD,iBAAA,YAAA7iB,KAAA2wE,eAAA,GACA3wE,KAAAuvE,sBAAA1sD,iBAAA,WAAA7iB,KAAA+wE,cAAA,GACA/wE,KAAAuvE,sBAAA1sD,iBAAA,YAAA7iB,KAAAixE,eAAA,GACA15E,OAAAsrB,iBAAA,UAAA7iB,KAAAywE,aAAA,KAIAl5E,OAAAS,SAAA6qB,iBAAA,YAAA7iB,KAAAowE,aAAA,GACApwE,KAAAuvE,sBAAA1sD,iBAAA,YAAA7iB,KAAAkwE,aAAA,GACAlwE,KAAAuvE,sBAAA1sD,iBAAA,WAAA7iB,KAAAswE,YAAA,GACAtwE,KAAAuvE,sBAAA1sD,iBAAA,YAAA7iB,KAAAwwE,aAAA,GACAj5E,OAAAsrB,iBAAA,UAAA7iB,KAAAgwE,WAAA,GAEAhwE,KAAA2vE,sBACA3vE,KAAAuvE,sBAAA1sD,iBAAA,aAAA7iB,KAAAkxE,cAAA,GACAlxE,KAAAuvE,sBAAA1sD,iBAAA,WAAA7iB,KAAAoxE,YAAA,GACApxE,KAAAuvE,sBAAA1sD,iBAAA,YAAA7iB,KAAAsxE,aAAA,IAGAtxE,KAAAyvE,aAAA,IAUAP,EAAAnkF,UAAA8mF,aAAA,WACA7xE,KAAAuvE,wBAIAnkE,EAAA/c,OAAA09B,OAAAwB,OAAAvtB,KAAAkF,OAAAlF,MAEAzI,OAAAJ,UAAA46E,kBACA/xE,KAAAuvE,sBAAA7jD,MAAA,0BACA1rB,KAAAuvE,sBAAA7jD,MAAA,wBACS1rB,KAAA4vE,wBACT5vE,KAAAuvE,sBAAA7jD,MAAA,oBAGA1rB,KAAA4vE,uBACAr4E,OAAAS,SAAAmuB,oBAAA,cAAAnmB,KAAA6wE,eAAA,GACA7wE,KAAAuvE,sBAAAppD,oBAAA,cAAAnmB,KAAA2wE,eAAA,GACA3wE,KAAAuvE,sBAAAppD,oBAAA,aAAAnmB,KAAA+wE,cAAA,GACA/wE,KAAAuvE,sBAAAppD,oBAAA,cAAAnmB,KAAAixE,eAAA,GACA15E,OAAA4uB,oBAAA,YAAAnmB,KAAAywE,aAAA,KAOAzwE,KAAA8vE,uBACA9vE,KAAAuvE,sBAAAppD,oBAAA,aAAAnmB,KAAA2wE,eAAA,GACA3wE,KAAAuvE,sBAAAppD,oBAAA,WAAAnmB,KAAAywE,aAAA,GACAzwE,KAAAuvE,sBAAAppD,oBAAA,YAAAnmB,KAAA6wE,eAAA,IAGA7wE,KAAA+vE,uBACAx4E,OAAAS,SAAAmuB,oBAAA,YAAAnmB,KAAA6wE,eAAA,GACA7wE,KAAAuvE,sBAAAppD,oBAAA,YAAAnmB,KAAA2wE,eAAA,GACA3wE,KAAAuvE,sBAAAppD,oBAAA,WAAAnmB,KAAA+wE,cAAA,GACA/wE,KAAAuvE,sBAAAppD,oBAAA,YAAAnmB,KAAAixE,eAAA,GACA15E,OAAA4uB,oBAAA,UAAAnmB,KAAAywE,aAAA,KAIAl5E,OAAAS,SAAAmuB,oBAAA,YAAAnmB,KAAAowE,aAAA,GACApwE,KAAAuvE,sBAAAppD,oBAAA,YAAAnmB,KAAAkwE,aAAA,GACAlwE,KAAAuvE,sBAAAppD,oBAAA,WAAAnmB,KAAAswE,YAAA,GACAtwE,KAAAuvE,sBAAAppD,oBAAA,YAAAnmB,KAAAwwE,aAAA,GACAj5E,OAAA4uB,oBAAA,UAAAnmB,KAAAgwE,WAAA,GAEAhwE,KAAA2vE,sBACA3vE,KAAAuvE,sBAAAppD,oBAAA,aAAAnmB,KAAAkxE,cAAA,GACAlxE,KAAAuvE,sBAAAppD,oBAAA,WAAAnmB,KAAAoxE,YAAA,GACApxE,KAAAuvE,sBAAAppD,oBAAA,YAAAnmB,KAAAsxE,aAAA,IAGAtxE,KAAAuvE,sBAAA,KAEAvvE,KAAAyvE,aAAA,IAWAP,EAAAnkF,UAAAma,OAAA,SAAA46D,GAGA,GAFA9/D,KAAAgyE,YAAAlS,IAEA9/D,KAAAgyE,WAAAhyE,KAAAovE,wBAIApvE,KAAAgyE,WAAA,EAEAhyE,KAAAuvE,uBAAA,CAKA,GAAAvvE,KAAAiyE,QAGA,YAFAjyE,KAAAiyE,SAAA,EAKAjyE,MAAAkyE,OAAAlyE,KAAAwxE,mBAKAxxE,KAAAkmD,UAAAyoB,SAEA3uE,KAAAmyE,mBAAAnyE,KAAAqvE,MAAA11D,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAAuwE,qBAAA,GAEAvwE,KAAAyxE,qBAAAzxE,KAAAkyE,SACAlyE,KAAAyxE,mBAAAzxE,KAAAkyE,OACAlyE,KAAAuvE,sBAAA7jD,MAAAwmD,OAAAlyE,KAAAkyE,UAgBAhD,EAAAnkF,UAAAk7D,cAAA,SAAAlwC,EAAAq8D,EAAAlsB,GACAA,EAAAsoB,UACAtoB,EAAAuoB,cAAA14D,EACAmwC,EAAAhvD,KAAAk7E,EAEAr8D,EAAA9U,KAAAmxE,EAAAlsB,GAEAnwC,EAAAq8D,IACAr8D,EAAAq8D,GAAAlsB,KAgBAgpB,EAAAnkF,UAAAsnF,mBAAA,SAAAjlE,EAAApC,EAAAC,GACA,GAAAiW,GAAA,MAMAA,GAHAlhB,KAAAuvE,sBAAA+C,cAGAtyE,KAAAuvE,sBAAA/pB,yBAFoBx6C,EAAA,EAAAC,EAAA,EAAAvf,MAAA,EAAAI,OAAA,GAKpBshB,EAAApC,KAAAkW,EAAAwjC,OAAA1kD,KAAAuvE,sBAAA7jF,MAAAw1B,EAAAx1B,OAAAsU,KAAApK,WACAwX,EAAAnC,KAAAiW,EAAAujC,MAAAzkD,KAAAuvE,sBAAAzjF,OAAAo1B,EAAAp1B,QAAAkU,KAAApK,YAmBAs5E,EAAAnkF,UAAAonF,mBAAA,SAAA/kE,EAAA2I,EAAAw8D,EAAAC,EAAAj0C,GACA,IAAAxoB,MAAA9F,QACA,QAgBAsuB,GAAAxoB,EAAAwoB,cAEA,IAAAk0C,IAAA,EACAC,EAAAn0C,CAwBA,IArBAxoB,EAAAq5B,UACAsjC,GAAA,GAIAF,GAAAz8D,EAAA1F,QACA0F,EAAA1F,MAAAlD,cAAAC,KACAolE,GAAA,IAKAA,GAAAz8D,EAAAxF,aACAwF,EAAAxF,WAAAjD,SAAAF,EAAApC,EAAAoC,EAAAnC,KACAunE,GAAA,IAOAz8D,EAAAyoB,qBAAAzoB,EAAA5H,SAGA,OAFAA,GAAA4H,EAAA5H,SAEAvkB,EAAAukB,EAAAviB,OAAA,EAA6ChC,GAAA,EAAQA,IAAA,CACrD,GAAA0kB,GAAAH,EAAAvkB,EAGA,IAAAoW,KAAAmyE,mBAAA/kE,EAAAkB,EAAAikE,EAAAC,EAAAE,GAAA,CAGA,IAAApkE,EAAAE,OACA,QAGAikE,IAAA,EAIAC,GAAA,EAQAF,GAAA,GAiCA,MAxBAj0C,KAIAi0C,IAAAC,IACA18D,EAAAq5B,SACAr5B,EAAAxI,eAAAC,aAAAJ,EAAApN,KAAA0xE,YACAe,EAAA18D,EAAAq5B,QAAA9hC,SAAAtN,KAAA0xE,WAAA1mE,EAAAhL,KAAA0xE,WAAAzmE,IACiB8K,EAAA5I,gBACjBslE,EAAA18D,EAAA5I,cAAAC,KAIA2I,EAAAwoB,cACAk0C,IAAAzyE,KAAAkmD,UAAA79C,SACArI,KAAAkmD,UAAA79C,OAAA0N,EACA/V,KAAAqvE,MAAAhnE,OAAA0N,EACA/V,KAAA65C,QAAAxxC,OAAA0N,GAGAw8D,EAAAx8D,EAAA08D,KAIAA,GAWAvD,EAAAnkF,UAAAmlF,YAAA,SAAAtvE,GACAZ,KAAAqvE,MAAApgC,cAAAruC,EACAZ,KAAAkmD,UAAA3vD,KAAAyJ,KAAAqvE,MACArvE,KAAAkmD,UAAAyoB,SAGA3uE,KAAAqyE,mBAAAryE,KAAAqvE,MAAA11D,OAAA/Y,EAAA+xE,QAAA/xE,EAAAgyE,SAEA5yE,KAAAmvE,oBACAnvE,KAAAqvE,MAAApgC,cAAAhpB,iBAGAjmB,KAAAmyE,mBAAAnyE,KAAAqvE,MAAA11D,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAAmwE,kBAAA,EAEA,IAAA0C,GAAA,IAAAjyE,EAAAkyE,QAAA,IAAAlyE,EAAAmyE,KAEA/yE,MAAAiB,KAAA4xE,EAAA,wBAAA7yE,KAAAkmD,YAYAgpB,EAAAnkF,UAAAolF,iBAAA,SAAAp6D,EAAA08D,GACA,GAAAj6E,GAAAwH,KAAAqvE,MAAApgC,cAEA4jC,EAAA,IAAAr6E,EAAAs6E,QAAA,IAAAt6E,EAAAu6E,KAEAN,KACA18D,EAAA88D,EAAA,iCACA7yE,KAAAimD,cAAAlwC,EAAA88D,EAAA,wBAAA7yE,KAAAkmD,aAYAgpB,EAAAnkF,UAAAilF,UAAA,SAAApvE,GACAZ,KAAAqvE,MAAApgC,cAAAruC,EACAZ,KAAAkmD,UAAA3vD,KAAAyJ,KAAAqvE,MACArvE,KAAAkmD,UAAAyoB,SAGA3uE,KAAAqyE,mBAAAryE,KAAAqvE,MAAA11D,OAAA/Y,EAAA+xE,QAAA/xE,EAAAgyE,SAEA5yE,KAAAmyE,mBAAAnyE,KAAAqvE,MAAA11D,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAAiwE,gBAAA,EAEA,IAAA4C,GAAA,IAAAjyE,EAAAkyE,QAAA,IAAAlyE,EAAAmyE,KAEA/yE,MAAAiB,KAAA4xE,EAAA,oBAAA7yE,KAAAkmD,YAYAgpB,EAAAnkF,UAAAklF,eAAA,SAAAl6D,EAAA08D,GACA,GAAAj6E,GAAAwH,KAAAqvE,MAAApgC,cAEA4jC,EAAA,IAAAr6E,EAAAs6E,QAAA,IAAAt6E,EAAAu6E,MACAC,EAAAH,EAAA,4BAEAJ,IACAzyE,KAAAimD,cAAAlwC,EAAA88D,EAAA,oBAAA7yE,KAAAkmD,WAEAnwC,EAAAi9D,KACAj9D,EAAAi9D,IAAA,EACAhzE,KAAAimD,cAAAlwC,EAAA88D,EAAA,qBAAA7yE,KAAAkmD,aAESnwC,EAAAi9D,KACTj9D,EAAAi9D,IAAA,EACAhzE,KAAAimD,cAAAlwC,EAAA88D,EAAA,kCAAA7yE,KAAAkmD,aAYAgpB,EAAAnkF,UAAAqlF,YAAA,SAAAxvE,GACAZ,KAAAqvE,MAAApgC,cAAAruC,EACAZ,KAAAkmD,UAAA3vD,KAAAyJ,KAAAqvE,MACArvE,KAAAkmD,UAAAyoB,SAEA3uE,KAAAqyE,mBAAAryE,KAAAqvE,MAAA11D,OAAA/Y,EAAA+xE,QAAA/xE,EAAAgyE,SAEA5yE,KAAAiyE,SAAA,EAEAjyE,KAAAkyE,OAAAlyE,KAAAwxE,mBAEAxxE,KAAAmyE,mBAAAnyE,KAAAqvE,MAAA11D,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAAqwE,kBAAA,GAEArwE,KAAAiB,KAAA,YAAAjB,KAAAkmD,WAEAlmD,KAAAyxE,qBAAAzxE,KAAAkyE,SACAlyE,KAAAyxE,mBAAAzxE,KAAAkyE,OACAlyE,KAAAuvE,sBAAA7jD,MAAAwmD,OAAAlyE,KAAAkyE,SAeAhD,EAAAnkF,UAAAslF,iBAAA,SAAAt6D,EAAA08D,GACAzyE,KAAAuwE,oBAAAx6D,EAAA08D,GAGAzyE,KAAAwvE,iBAAAiD,GACAzyE,KAAAimD,cAAAlwC,EAAA,YAAA/V,KAAAkmD,YAYAgpB,EAAAnkF,UAAAulF,WAAA,SAAA1vE,GACAZ,KAAA0vE,mBAAA,EAEA1vE,KAAAqvE,MAAApgC,cAAAruC,EACAZ,KAAAkmD,UAAA3vD,KAAAyJ,KAAAqvE,MACArvE,KAAAkmD,UAAAyoB,SAGA3uE,KAAAqyE,mBAAAryE,KAAAqvE,MAAA11D,OAAA/Y,EAAA+xE,QAAA/xE,EAAAgyE,SAEA5yE,KAAAuvE,sBAAA7jD,MAAAwmD,OAAAlyE,KAAAwxE,mBAGAxxE,KAAAqyE,mBAAAryE,KAAAqvE,MAAA11D,OAAA/Y,EAAA+xE,QAAA/xE,EAAAgyE,SAEA5yE,KAAAmyE,mBAAAnyE,KAAAqvE,MAAA11D,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAAuwE,qBAAA,GAEAvwE,KAAAiB,KAAA,WAAAjB,KAAAkmD,YAYAgpB,EAAAnkF,UAAAwlF,oBAAA,SAAAx6D,EAAA08D,GACAA,GAAAzyE,KAAA0vE,mBACA35D,EAAAk9D,aACAl9D,EAAAk9D,YAAA,EACAjzE,KAAAimD,cAAAlwC,EAAA,YAAA/V,KAAAkmD,YAGAnwC,EAAAs5B,aACArvC,KAAAkyE,OAAAn8D,EAAAu5B,gBAESv5B,EAAAk9D,aACTl9D,EAAAk9D,YAAA,EACAjzE,KAAAimD,cAAAlwC,EAAA,WAAA/V,KAAAkmD,aAYAgpB,EAAAnkF,UAAAylF,YAAA,SAAA5vE,GACAZ,KAAA0vE,mBAAA,EAEA1vE,KAAAqvE,MAAApgC,cAAAruC,EACAZ,KAAAkmD,UAAA3vD,KAAAyJ,KAAAqvE,MACArvE,KAAAkmD,UAAAyoB,SAEA3uE,KAAAiB,KAAA,YAAAjB,KAAAkmD,YAWAgpB,EAAAnkF,UAAA4lF,cAAA,SAAA/vE,GACAZ,KAAAkzE,uBAAAtyE,GACAZ,KAAA65C,QAAA5K,cAAAruC,EACAZ,KAAAkmD,UAAA3vD,KAAAyJ,KAAA65C,QACA75C,KAAAkmD,UAAAyoB,SAGA3uE,KAAAqyE,mBAAAryE,KAAA65C,QAAAlgC,OAAA/Y,EAAA+xE,QAAA/xE,EAAAgyE,SAOA5yE,KAAAmvE,qBAAAnvE,KAAA+vE,sBAAA/vE,KAAA8vE,uBACA9vE,KAAA65C,QAAA5K,cAAAhpB,iBAGAjmB,KAAAmyE,mBAAAnyE,KAAA65C,QAAAlgC,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAA4wE,oBAAA,GAEA5wE,KAAAiB,KAAA,cAAAjB,KAAAkmD,YAYAgpB,EAAAnkF,UAAA6lF,mBAAA,SAAA76D,EAAA08D,GACAA,IACA18D,EAAA45B,cAAA,EACA3vC,KAAAimD,cAAAlwC,EAAA,cAAA/V,KAAAkmD,aAYAgpB,EAAAnkF,UAAA0lF,YAAA,SAAA7vE,GACAZ,KAAAkzE,uBAAAtyE,GACAZ,KAAA65C,QAAA5K,cAAAruC,EACAZ,KAAAkmD,UAAA3vD,KAAAyJ,KAAA65C,QACA75C,KAAAkmD,UAAAyoB,SAGA3uE,KAAAqyE,mBAAAryE,KAAA65C,QAAAlgC,OAAA/Y,EAAA+xE,QAAA/xE,EAAAgyE,SAEA5yE,KAAAmyE,mBAAAnyE,KAAA65C,QAAAlgC,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAA0wE,kBAAA,GAEA1wE,KAAAiB,KAAA,YAAAjB,KAAAkmD,YAYAgpB,EAAAnkF,UAAA2lF,iBAAA,SAAA36D,EAAA08D,GACAA,GACAzyE,KAAAimD,cAAAlwC,EAAA,YAAA/V,KAAAkmD,WAEAnwC,EAAA45B,eACA55B,EAAA45B,cAAA,EACA3vC,KAAAimD,cAAAlwC,EAAA,aAAA/V,KAAAkmD,aAESnwC,EAAA45B,eACT55B,EAAA45B,cAAA,EACA3vC,KAAAimD,cAAAlwC,EAAA,mBAAA/V,KAAAkmD,aAYAgpB,EAAAnkF,UAAA8lF,cAAA,SAAAjwE,GACAZ,KAAAkzE,uBAAAtyE,GACAZ,KAAA65C,QAAA5K,cAAAruC,EACAZ,KAAAkmD,UAAA3vD,KAAAyJ,KAAA65C,QACA75C,KAAAkmD,UAAAyoB,SAEA3uE,KAAAqyE,mBAAAryE,KAAA65C,QAAAlgC,OAAA/Y,EAAA+xE,QAAA/xE,EAAAgyE,SAEA5yE,KAAAmyE,mBAAAnyE,KAAA65C,QAAAlgC,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAA8wE,oBAAA,GAEA9wE,KAAAiB,KAAA,cAAAjB,KAAAkmD,YAYAgpB,EAAAnkF,UAAA+lF,mBAAA,SAAA/6D,EAAA08D,GACAzyE,KAAA65C,QAAA5K,cAAAkkC,gBACAnzE,KAAAgxE,sBAAAj7D,EAAA08D,GAGAzyE,KAAAwvE,iBAAAiD,GACAzyE,KAAAimD,cAAAlwC,EAAA,cAAA/V,KAAAkmD,YAYAgpB,EAAAnkF,UAAAgmF,aAAA,SAAAnwE,GACAZ,KAAAkzE,uBAAAtyE,GACAZ,KAAA65C,QAAA5K,cAAAruC,EACAZ,KAAAkmD,UAAA3vD,KAAAyJ,KAAA65C,QACA75C,KAAAkmD,UAAAyoB,SAGA3uE,KAAAqyE,mBAAAryE,KAAA65C,QAAAlgC,OAAA/Y,EAAA+xE,QAAA/xE,EAAAgyE,SAEA5yE,KAAAmyE,mBAAAnyE,KAAA65C,QAAAlgC,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAAgxE,uBAAA,GAEAhxE,KAAAiB,KAAA,aAAAjB,KAAAkmD,YAYAgpB,EAAAnkF,UAAAimF,sBAAA,SAAAj7D,EAAA08D,GACAA,GAAAzyE,KAAA0vE,kBACA35D,EAAA25B,eACA35B,EAAA25B,cAAA,EACA1vC,KAAAimD,cAAAlwC,EAAA,cAAA/V,KAAAkmD,YAESnwC,EAAA25B,eACT35B,EAAA25B,cAAA,EACA1vC,KAAAimD,cAAAlwC,EAAA,aAAA/V,KAAAkmD,aAYAgpB,EAAAnkF,UAAAkmF,cAAA,SAAArwE,GACAZ,KAAA65C,QAAA5K,cAAAruC,EACAZ,KAAAkmD,UAAA3vD,KAAAyJ,KAAA65C,QACA75C,KAAAkmD,UAAAyoB,SAEA3uE,KAAAiB,KAAA,cAAAjB,KAAAkmD,YAWAgpB,EAAAnkF,UAAAmmF,aAAA,SAAAtwE,GACAZ,KAAAmvE,oBACAvuE,EAAAqlB,gBAMA,QAHAktD,GAAAvyE,EAAAuyE,eACAC,EAAAD,EAAAvnF,OAEAhC,EAAA,EAAuBA,EAAAwpF,EAAaxpF,IAAA,CACpC,GAAAgyE,GAAAuX,EAAAvpF,GACAypF,EAAArzE,KAAAszE,aAAA1X,EAEAyX,GAAApkC,cAAAruC,EAEAZ,KAAAkmD,UAAA3vD,KAAA88E,EACArzE,KAAAkmD,UAAAyoB,SAEA3uE,KAAAmyE,mBAAAkB,EAAA15D,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAAmxE,mBAAA,GAEAnxE,KAAAiB,KAAA,aAAAjB,KAAAkmD,WAEAlmD,KAAAuzE,gBAAAF,KAaAnE,EAAAnkF,UAAAomF,kBAAA,SAAAp7D,EAAA08D,GACAA,IACA18D,EAAA65B,YAAA,EACA5vC,KAAAimD,cAAAlwC,EAAA,aAAA/V,KAAAkmD,aAYAgpB,EAAAnkF,UAAAqmF,WAAA,SAAAxwE,GACAZ,KAAAmvE,oBACAvuE,EAAAqlB,gBAMA,QAHAktD,GAAAvyE,EAAAuyE,eACAC,EAAAD,EAAAvnF,OAEAhC,EAAA,EAAuBA,EAAAwpF,EAAaxpF,IAAA,CACpC,GAAA4pF,GAAAL,EAAAvpF,GAEAypF,EAAArzE,KAAAszE,aAAAE,EAEAH,GAAApkC,cAAAruC,EAGAZ,KAAAkmD,UAAA3vD,KAAA88E,EACArzE,KAAAkmD,UAAAyoB,SAEA3uE,KAAAmyE,mBAAAkB,EAAA15D,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAAqxE,iBAAA,GAEArxE,KAAAiB,KAAA,WAAAjB,KAAAkmD,WAEAlmD,KAAAuzE,gBAAAF,KAaAnE,EAAAnkF,UAAAsmF,gBAAA,SAAAt7D,EAAA08D,GACAA,GACAzyE,KAAAimD,cAAAlwC,EAAA,WAAA/V,KAAAkmD,WAEAnwC,EAAA65B,aACA75B,EAAA65B,YAAA,EACA5vC,KAAAimD,cAAAlwC,EAAA,MAAA/V,KAAAkmD,aAESnwC,EAAA65B,aACT75B,EAAA65B,YAAA,EACA5vC,KAAAimD,cAAAlwC,EAAA,kBAAA/V,KAAAkmD,aAYAgpB,EAAAnkF,UAAAumF,YAAA,SAAA1wE,GACAZ,KAAAmvE,oBACAvuE,EAAAqlB,gBAMA,QAHAktD,GAAAvyE,EAAAuyE,eACAC,EAAAD,EAAAvnF,OAEAhC,EAAA,EAAuBA,EAAAwpF,EAAaxpF,IAAA,CACpC,GAAA4pF,GAAAL,EAAAvpF,GAEAypF,EAAArzE,KAAAszE,aAAAE,EAEAH,GAAApkC,cAAAruC,EAEAZ,KAAAkmD,UAAA3vD,KAAA88E,EACArzE,KAAAkmD,UAAAyoB,SAEA3uE,KAAAmyE,mBAAAkB,EAAA15D,OAAA3Z,KAAAmD,SAAAgT,oBAAAnW,KAAAuxE,iBAAAvxE,KAAAwvE,gBAEAxvE,KAAAiB,KAAA,YAAAjB,KAAAkmD,WAEAlmD,KAAAuzE,gBAAAF,KAaAnE,EAAAnkF,UAAAwmF,iBAAA,SAAAx7D,EAAA08D,GACAzyE,KAAAwvE,iBAAAiD,GACAzyE,KAAAimD,cAAAlwC,EAAA,YAAA/V,KAAAkmD,YAaAgpB,EAAAnkF,UAAAuoF,aAAA,SAAA1X,GACA,GAAAyX,GAAArzE,KAAAsvE,oBAAA/8D,OAAA,GAAAs8D,GAAAtjF,OAaA,OAXA8nF,GAAAI,WAAA7X,EAAA6X,WACAzzE,KAAAqyE,mBAAAgB,EAAA15D,OAAAiiD,EAAA+W,QAAA/W,EAAAgX,SAEAz7E,UAAAqQ,aACA6rE,EAAA15D,OAAA3O,EAAAqoE,EAAA15D,OAAA3O,EAAAhL,KAAApK,WACAy9E,EAAA15D,OAAA1O,EAAAooE,EAAA15D,OAAA1O,EAAAjL,KAAApK,YAGAgmE,EAAA8X,QAAAL,EAAA15D,OAAA3O,EACA4wD,EAAA+X,QAAAN,EAAA15D,OAAA1O,EAEAooE,GAWAnE,EAAAnkF,UAAAwoF,gBAAA,SAAAF,GACArzE,KAAAsvE,oBAAAryE,KAAAo2E,IAWAnE,EAAAnkF,UAAAmoF,uBAAA,SAAAtyE,GACAZ,KAAA8vE,sBAAAlvE,EAAAuyE,gBACA,mBAAAvyE,GAAAkyE,SAAAlyE,EAAAkyE,OAAAlyE,EAAAgzE,QAAAhoF,OAAA,KACA,mBAAAgV,GAAAizE,UAAAjzE,EAAAizE,QAAAjzE,EAAAgzE,QAAAhoF,OAAA,KACA,mBAAAgV,GAAAkzE,YAAAlzE,EAAAkzE,UAAA,IAAAlzE,EAAAgzE,QAAAhoF,QACA,mBAAAgV,GAAAlV,QAAAkV,EAAAlV,MAAAkV,EAAAuyE,eAAA,GAAAY,SAAA,GACA,mBAAAnzE,GAAA9U,SAAA8U,EAAA9U,OAAA8U,EAAAuyE,eAAA,GAAAa,SAAA,GACA,mBAAApzE,GAAAqzE,QAAArzE,EAAAqzE,MAAA,GACA,mBAAArzE,GAAAszE,QAAAtzE,EAAAszE,MAAA,GACA,mBAAAtzE,GAAAuzE,cAAAvzE,EAAAuzE,YAAA,SACA,mBAAAvzE,GAAAwzE,YAAAxzE,EAAAwzE,UAAAxzE,EAAAuyE,eAAA,GAAAM,YAAA,GACA,mBAAA7yE,GAAAyzE,WAAAzzE,EAAAyzE,SAAAzzE,EAAAuyE,eAAA,GAAAmB,OAAA,IACA,mBAAA1zE,GAAA+e,WAAA/e,EAAA+e,SAAA/e,EAAAuyE,eAAA,GAAAoB,eAAA,GAEA,mBAAA3zE,GAAA+xE,UAAA/xE,EAAA+xE,QAAA/xE,EAAAuyE,eAAA,GAAAR,SACA,mBAAA/xE,GAAAgyE,UAAAhyE,EAAAgyE,QAAAhyE,EAAAuyE,eAAA,GAAAP,SACA,mBAAAhyE,GAAA4zE,QAAA5zE,EAAA4zE,MAAA5zE,EAAAuyE,eAAA,GAAAqB,OACA,mBAAA5zE,GAAA6zE,QAAA7zE,EAAA6zE,MAAA7zE,EAAAuyE,eAAA,GAAAsB,OACA,mBAAA7zE,GAAA8zE,UAAA9zE,EAAA8zE,QAAA9zE,EAAAuyE,eAAA,GAAAuB,SACA,mBAAA9zE,GAAA+zE,UAAA/zE,EAAA+zE,QAAA/zE,EAAAuyE,eAAA,GAAAwB,SACA,mBAAA/zE,GAAAg0E,SAAAh0E,EAAAg0E,OAAAh0E,EAAAi0E,QAAAj0E,EAAA+xE,SACA,mBAAA/xE,GAAAk0E,SAAAl0E,EAAAk0E,OAAAl0E,EAAAm0E,QAAAn0E,EAAAgyE,UACS5yE,KAAA+vE,uBACT,mBAAAnvE,GAAAkzE,YAAAlzE,EAAAkzE,WAAA,GACA,mBAAAlzE,GAAAlV,QAAAkV,EAAAlV,MAAA,GACA,mBAAAkV,GAAA9U,SAAA8U,EAAA9U,OAAA,GACA,mBAAA8U,GAAAqzE,QAAArzE,EAAAqzE,MAAA,GACA,mBAAArzE,GAAAszE,QAAAtzE,EAAAszE,MAAA,GACA,mBAAAtzE,GAAAuzE,cAAAvzE,EAAAuzE,YAAA,SACA,mBAAAvzE,GAAAwzE,YAAAxzE,EAAAwzE,UAAA,GACA,mBAAAxzE,GAAAyzE,WAAAzzE,EAAAyzE,SAAA,IACA,mBAAAzzE,GAAA+e,WAAA/e,EAAA+e,SAAA,KAUAuvD,EAAAnkF,UAAAsY,QAAA,WACArD,KAAA6xE,eAEA7xE,KAAA2B,qBAEA3B,KAAAmD,SAAA,KAEAnD,KAAAqvE,MAAA,KAEArvE,KAAAkmD,UAAA,KAEAlmD,KAAAsvE,oBAAA,KAEAtvE,KAAAuvE,sBAAA,KAEAvvE,KAAAkwE,YAAA,KACAlwE,KAAAmwE,iBAAA,KAEAnwE,KAAAgwE,UAAA,KACAhwE,KAAAiwE,eAAA,KAEAjwE,KAAAowE,YAAA,KACApwE,KAAAqwE,iBAAA,KAEArwE,KAAAswE,WAAA,KACAtwE,KAAAuwE,oBAAA,KAEAvwE,KAAAwwE,YAAA,KAEAxwE,KAAA2wE,cAAA,KACA3wE,KAAA4wE,mBAAA,KAEA5wE,KAAAywE,YAAA,KACAzwE,KAAA0wE,iBAAA,KAEA1wE,KAAA6wE,cAAA,KACA7wE,KAAA8wE,mBAAA,KAEA9wE,KAAA+wE,aAAA,KACA/wE,KAAAgxE,sBAAA,KAEAhxE,KAAAixE,cAAA,KAEAjxE,KAAAkxE,aAAA,KACAlxE,KAAAmxE,kBAAA,KAEAnxE,KAAAoxE,WAAA,KACApxE,KAAAqxE,gBAAA,KAEArxE,KAAAsxE,YAAA,KACAtxE,KAAAuxE,iBAAA,KAEAvxE,KAAA0xE,WAAA,MAGAxC,GACC71E,EAAA9N,QAED7B,GAAA6B,QAAA2jF,EAGA9jE,EAAAjd,cAAAi4D,eAAA,cAAA8oB,GACA9jE,EAAAhd,eAAAg4D,eAAA,cAAA8oB,InJ8h6BM,SAASvlF,EAAQD,EAASH,GAEhC,YoJtj9BA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GA7B7E1B,EAAAiB,YAAA,CAEA,IAAAikF,GAAArlF,EAAA,GAEAc,QAAAC,eAAAZ,EAAA,mBACAc,YAAA,EACAC,IAAA,WACA,MAAAe,GAAAojF,GAAArjF,UAIA,IAAAypF,GAAAzrF,EAAA,IAEAc,QAAAC,eAAAZ,EAAA,sBACAc,YAAA,EACAC,IAAA,WACA,MAAAe,GAAAwpF,GAAAzpF,UAIA,IAAAyjF,GAAAzlF,EAAA,GAEAc,QAAAC,eAAAZ,EAAA,qBACAc,YAAA,EACAC,IAAA,WACA,MAAAe,GAAAwjF,GAAAzjF,YpJ+l9BM,SAAS5B,EAAQD,EAASH,GAEhC,YqJrk9BA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GArD7E1B,EAAAiB,YAAA,CAEA,IAAAsqF,GAAA1rF,EAAA,IAEAc,QAAAC,eAAAZ,EAAA,UACAc,YAAA,EACAC,IAAA,WACA,MAAAe,GAAAypF,GAAA1pF,UAIA,IAAA2pF,GAAA3rF,EAAA,GAEAc,QAAAC,eAAAZ,EAAA,oBACAc,YAAA,EACAC,IAAA,WACA,MAAAe,GAAA0pF,GAAA3pF,WAGAlB,OAAAC,eAAAZ,EAAA,uBACAc,YAAA,EACAC,IAAA,WACA,MAAAyqF,GAAAthD,QAIA,IAAAuhD,GAAA5rF,EAAA,GAEAc,QAAAC,eAAAZ,EAAA,qBACAc,YAAA,EACAC,IAAA,WACA,MAAAe,GAAA2pF,GAAA5pF,UAIA,IAAA6pF,GAAA7rF,EAAA,GAEAc,QAAAC,eAAAZ,EAAA,iBACAc,YAAA,EACAC,IAAA,WACA,MAAAe,GAAA4pF,GAAA7pF,UAIA,IAAA+lD,GAAA/nD,EAAA,GAEAc,QAAAC,eAAAZ,EAAA,YACAc,YAAA,EACAC,IAAA,WACA,MAAA6mD,GAAAn1B,arJso9BM,SAASxyB,EAAQD,EAASH,GAEhC,YsJvq9BA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAE7E,QAAA4W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAxBrX9Y,EAAAiB,YAAA,CAEA,IAAA2mD,GAAA/nD,EAAA,IAEA8rF,EAAA7pF,EAAA8lD,GAEA8jC,EAAA7rF,EAAA,IAEA+rF,EAAA9pF,EAAA4pF,GAEAD,EAAA5rF,EAAA,IAEAgsF,EAAA/pF,EAAA2pF,GAEAD,EAAA3rF,EAAA,IAEAisF,EAAAhqF,EAAA0pF,GAgCA5G,EAAA,SAAAmH,GAOA,QAAAnH,GAAAn9B,EAAA2L,GACA96C,EAAAhC,KAAAsuE,EAIA,QAFAtqE,GAAA7B,EAAAnC,KAAAy1E,EAAA3rF,KAAAkW,KAAAmxC,EAAA2L,IAEAlzD,EAAA,EAAuBA,EAAA0kF,EAAAoH,gBAAA9pF,SAAmChC,EAC1Doa,EAAA2xE,IAAArH,EAAAoH,gBAAA9rF,KAEA,OAAAoa,GAeA,MA7BA1B,GAAAgsE,EAAAmH,GAyBAnH,EAAAsH,kBAAA,SAAA/1E,GACAyuE,EAAAoH,gBAAAz4E,KAAA4C,IAGAyuE,GACC+G,EAAA9pF,QAED7B,GAAA6B,QAAA+iF,EAGAA,EAAAoH,iBAEAL,EAAA9pF,QAAA6wB,WAAAG,QAAAC,KAEA84D,EAAA/pF,QAEAgqF,EAAAhqF,QAEAiqF,EAAAjqF,QAGA,IAAA4wB,GAAAk5D,EAAA9pF,QAAA4wB,QAEAA,GAAAqa,oBAAA,MAAAra,EAAA0W,kBAAAE,WtJis9BM,SAASppC,EAAQD,EAASH,GAEhC,YuJ5x9BA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAE7E,QAAA4W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAdrX9Y,EAAAiB,YAAA,CAEA,IAAAwd,GAAA,WAAgC,QAAAC,GAAAC,EAAAC,GAA2C,OAAA1e,GAAA,EAAgBA,EAAA0e,EAAA1c,OAAkBhC,IAAA,CAAO,GAAA2e,GAAAD,EAAA1e,EAA2B2e,GAAA/d,WAAA+d,EAAA/d,aAAA,EAAwD+d,EAAAhe,cAAA,EAAgC,SAAAge,OAAA7F,UAAA,GAAuDrY,OAAAC,eAAA+d,EAAAE,EAAAjd,IAAAid,IAA+D,gBAAArG,EAAAsG,EAAAC,GAA2L,MAAlID,IAAAJ,EAAAlG,EAAAnX,UAAAyd,GAAqEC,GAAAL,EAAAlG,EAAAuG,GAA6DvG,MAExhB2zE,EAAAtsF,EAAA,IAEAusF,EAAAtqF,EAAAqqF,GAUAE,EAAA,GAkCAC,EAAA,SAAA5hC,GAUA,QAAA4hC,GAAAhsE,EAAAisE,EAAAC,EAAAC,EAAAC,GACAp0E,EAAAhC,KAAAg2E,EAEA,IAAAhyE,GAAA7B,EAAAnC,KAAAo0C,EAAAtqD,KAAAkW,KAAAgK,EAAA,MAEA4B,EAAA5H,EAAA4H,GA6DA,OA1DAA,GAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAEA5H,EAAAqyE,WAAArsE,EAAAte,MACAsY,EAAAsyE,YAAAtsE,EAAAle,OACAkY,EAAAuyE,KAAA,EAAAvyE,EAAAqyE,WACAryE,EAAAwyE,KAAA,EAAAxyE,EAAAsyE,YASAtyE,EAAAtY,MAAAse,EAAAte,MASAsY,EAAAlY,OAAAke,EAAAle,OAEA8f,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA5H,EAAAuyE,KAAAN,EACArqE,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAA5H,EAAAuyE,KAAAJ,EACAvqE,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA5H,EAAAwyE,KAAAN,EACAtqE,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAA5H,EAAAwyE,KAAAJ,EAOApyE,EAAAiyE,UAAA,mBAAAA,KAAAF,EAOA/xE,EAAAmyE,WAAA,mBAAAA,KAAAJ,EAOA/xE,EAAAkyE,UAAA,mBAAAA,KAAAH,EAOA/xE,EAAAoyE,aAAA,mBAAAA,KAAAL,EACA/xE,EAgSA,MA3WA1B,GAAA0zE,EAAA5hC,GAoFA4hC,EAAAjrF,UAAA0rF,yBAAA,WACA,GAAA9qE,GAAA3L,KAAA2L,QAEAA,GAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA3L,KAAA02E,WACA/qE,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA3L,KAAAgS,QAAAhS,KAAA22E,cACAhrE,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA3L,KAAAgS,SASAgkE,EAAAjrF,UAAA6rF,uBAAA,WACA,GAAAjrE,GAAA3L,KAAA2L,QAEAA,GAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA3L,KAAA62E,WACAlrE,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA3L,KAAA+R,OAAA/R,KAAA82E,YACAnrE,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA3L,KAAA+R,QAWAikE,EAAAjrF,UAAA+hB,cAAA,SAAA3J,GACA,GAAArD,GAAAqD,EAAArD,OAEAA,GAAA2W,YAAAzW,KAAA+P,UAEA,IAAApG,GAAA3J,KAAAuN,eACAvQ,EAAAmG,EAAAvN,UAEAuN,GAAA9H,YACAyE,EAAA0W,aAAA7M,EAAAyP,EAAApc,EAAA2M,EAAAuJ,EAAAlW,EAAA2M,EAAA3f,EAAAgT,EAAA2M,EAAAzf,EAAA8S,EAAA2M,EAAA0P,GAAArc,EAAA,EAAA2M,EAAA2P,GAAAtc,EAAA,GAEA8C,EAAA0W,aAAA7M,EAAAyP,EAAApc,EAAA2M,EAAAuJ,EAAAlW,EAAA2M,EAAA3f,EAAAgT,EAAA2M,EAAAzf,EAAA8S,EAAA2M,EAAA0P,GAAArc,EAAA2M,EAAA2P,GAAAtc,EAGA,IAAA+5E,GAAA/2E,KAAA+L,SAAAjE,YACAkvE,EAAAD,EAAAjzE,OACAuuC,EAAA0kC,EAAArrF,MACA4mD,EAAAykC,EAAAjrF,MAEAkU,MAAAi3E,YAAAn3E,EAAAk3E,EAAA3kC,EAAAC,EAAA,WACAtyC,KAAAi3E,YAAAn3E,EAAAk3E,EAAA3kC,EAAAC,EAAA,WACAtyC,KAAAi3E,YAAAn3E,EAAAk3E,EAAA3kC,EAAAC,EAAA,WACAtyC,KAAAi3E,YAAAn3E,EAAAk3E,EAAA3kC,EAAAC,EAAA,WACAtyC,KAAAi3E,YAAAn3E,EAAAk3E,EAAA3kC,EAAAC,EAAA,aACAtyC,KAAAi3E,YAAAn3E,EAAAk3E,EAAA3kC,EAAAC,EAAA,aACAtyC,KAAAi3E,YAAAn3E,EAAAk3E,EAAA3kC,EAAAC,EAAA,aACAtyC,KAAAi3E,YAAAn3E,EAAAk3E,EAAA3kC,EAAAC,EAAA,aACAtyC,KAAAi3E,YAAAn3E,EAAAk3E,EAAA3kC,EAAAC,EAAA,cAoBA0jC,EAAAjrF,UAAAksF,YAAA,SAAAn3E,EAAAk3E,EAAA3kC,EAAAC,EAAAnxB,EAAAE,EAAAD,EAAAE,GAEA,GAAA1V,GAAA5L,KAAA4L,IACAD,EAAA3L,KAAA2L,SAEAurE,GAAAtrE,EAAAwV,GAAAxV,EAAAuV,IAAAkxB,EACA8kC,GAAAvrE,EAAA0V,GAAA1V,EAAAyV,IAAAixB,EACA8kC,EAAAzrE,EAAAyV,GAAAzV,EAAAwV,GACAk2D,EAAA1rE,EAAA2V,GAAA3V,EAAA0V,EAGA61D,GAAA,IACAA,EAAA,GAGAC,EAAA,IACAA,EAAA,GAKAC,EAAA,IACAA,EAAA,GAGAC,EAAA,IACAA,EAAA,GAGAv3E,EAAAyH,UAAAyvE,EAAAprE,EAAAuV,GAAAkxB,EAAAzmC,EAAAyV,GAAAixB,EAAA4kC,EAAAC,EAAAxrE,EAAAwV,GAAAxV,EAAA0V,GAAA+1D,EAAAC,IAWAlvE,EAAA6tE,IACA1qF,IAAA,QACAb,IAAA,WACA,MAAAuV,MAAA+R,QASAhI,IAAA,SAAA9f,GACA+V,KAAA+R,OAAA9nB,EACA+V,KAAA42E,4BAWAtrF,IAAA,SACAb,IAAA,WACA,MAAAuV,MAAAgS,SASAjI,IAAA,SAAA9f,GACA+V,KAAAgS,QAAA/nB,EACA+V,KAAAy2E,8BAUAnrF,IAAA,YACAb,IAAA,WACA,MAAAuV,MAAA62E,YASA9sE,IAAA,SAAA9f,GACA+V,KAAA62E,WAAA5sF,CAEA,IAAA2hB,GAAA5L,KAAA4L,IACAD,EAAA3L,KAAA2L,QAEAC,GAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA5L,KAAAu2E,KAAAtsF,EACA0hB,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA1hB,EAEA+V,KAAAkM,OAAA,KAUA5gB,IAAA,aACAb,IAAA,WACA,MAAAuV,MAAA82E,aASA/sE,IAAA,SAAA9f,GACA+V,KAAA82E,YAAA7sF,CAEA,IAAA2hB,GAAA5L,KAAA4L,IACAD,EAAA3L,KAAA2L,QAEAC,GAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAA5L,KAAAu2E,KAAAtsF,EACA0hB,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA3L,KAAA+R,OAAA9nB,EAEA+V,KAAAkM,OAAA,KAUA5gB,IAAA,YACAb,IAAA,WACA,MAAAuV,MAAA02E,YASA3sE,IAAA,SAAA9f,GACA+V,KAAA02E,WAAAzsF,CAEA,IAAA2hB,GAAA5L,KAAA4L,IACAD,EAAA3L,KAAA2L,QAEAC,GAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA5L,KAAAw2E,KAAAvsF,EACA0hB,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA1hB,EAEA+V,KAAAkM,OAAA,KAUA5gB,IAAA,eACAb,IAAA,WACA,MAAAuV,MAAA22E,eASA5sE,IAAA,SAAA9f,GACA+V,KAAA22E,cAAA1sF,CAEA,IAAA2hB,GAAA5L,KAAA4L,IACAD,EAAA3L,KAAA2L,QAEAC,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAA5L,KAAAw2E,KAAAvsF,EACA0hB,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA3L,KAAAgS,QAAA/nB,EAEA+V,KAAAkM,OAAA,MAIA8pE,GACCF,EAAAvqF,QAED7B,GAAA6B,QAAAyqF,GvJ4y9BM,SAASrsF,EAAQD,EAASH,GAEhC,YwJrs+BA,SAAA4B,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAAG,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAE7E,QAAA4W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAlBrX9Y,EAAAiB,YAAA,CAEA,IAAAqoD,GAAAzpD,EAAA,IAEA0pD,EAAAznD,EAAAwnD,GAEA7nC,EAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GA2BAk3D,EAAA,SAAAlvB,GAOA,QAAAkvB,GAAAr4D,EAAAyD,GACAzL,EAAAhC,KAAAqiE,EAKA,IAAAr+D,GAAA7B,EAAAnC,KAAAmzC,EAAArpD,KAAAkW,KAAAgK,GAkCA,OAhCAhG,GAAAyJ,SAKAzJ,EAAA2H,SAAA,GAAAK,cAAA,EAAAyB,EAAA7hB,QAKAoY,EAAA4H,IAAA,GAAAI,cAAA,EAAAyB,EAAA7hB,QAKAoY,EAAAuvC,OAAA,GAAAvnC,cAAA,EAAAyB,EAAA7hB,QAKAoY,EAAA6H,QAAA,GAAAI,aAAA,EAAAwB,EAAA7hB,QASAoY,EAAAsvC,QAAA,EAEAtvC,EAAAmR,UACAnR,EAuJA,MArMA1B,GAAA+/D,EAAAlvB,GAuDAkvB,EAAAt3E,UAAAoqB,QAAA,WACA,GAAA1H,GAAAzN,KAAAyN,MAGA,MAAAA,EAAA7hB,OAAA,IAAAoU,KAAA+L,SAAA1C,KAAA,CAKArJ,KAAA2L,SAAA/f,OAAA,IAAA6hB,EAAA7hB,SACAoU,KAAA2L,SAAA,GAAAK,cAAA,EAAAyB,EAAA7hB,QACAoU,KAAA4L,IAAA,GAAAI,cAAA,EAAAyB,EAAA7hB,QACAoU,KAAAuzC,OAAA,GAAAvnC,cAAA,EAAAyB,EAAA7hB,QACAoU,KAAA6L,QAAA,GAAAI,aAAA,EAAAwB,EAAA7hB,QAGA,IAAAggB,GAAA5L,KAAA4L,IAEAC,EAAA7L,KAAA6L,QACA0nC,EAAAvzC,KAAAuzC,OAEA+jC,EAAAt3E,KAAA+L,SAAA1C,KACAsiC,EAAA,GAAAvgC,GAAAE,MAAAgsE,EAAA56C,GAAA46C,EAAA36C,IACA46C,EAAA,GAAAnsE,GAAAE,MAAAgsE,EAAAl2D,GAAAk2D,EAAA56C,GAAA46C,EAAAh2D,GAAAg2D,EAAA36C,GAEA/wB,GAAA,KAAA+/B,EAAA3gC,EACAY,EAAA,KAAA+/B,EAAA1gC,EACAW,EAAA,KAAA+/B,EAAA3gC,EACAY,EAAA,GAAArC,OAAAguE,EAAAtsE,GAAA0gC,EAAA1gC,EAEAsoC,EAAA,KACAA,EAAA,KAEA1nC,EAAA,KACAA,EAAA,IAIA,QAFA2nB,GAAA/lB,EAAA7hB,OAEAhC,EAAA,EAAuBA,EAAA4pC,EAAW5pC,IAAA,CAElC,GAAAwU,GAAA,EAAAxU,EACAknD,EAAAlnD,GAAA4pC,EAAA,EAEA5nB,GAAAxN,GAAA0yC,EAAAymC,EAAAvsE,EAAA2gC,EAAA3gC,EACAY,EAAAxN,EAAA,KAAAutC,EAAA1gC,EAEAW,EAAAxN,EAAA,GAAA0yC,EAAAymC,EAAAvsE,EAAA2gC,EAAA3gC,EACAY,EAAAxN,EAAA,GAAAmL,OAAAguE,EAAAtsE,GAAA0gC,EAAA1gC,EAEA7M,EAAA,EAAAxU,EACA2pD,EAAAn1C,GAAA,EACAm1C,EAAAn1C,EAAA,KAEAA,EAAA,EAAAxU,EACAiiB,EAAAzN,KACAyN,EAAAzN,EAAA,GAAAA,EAAA,EAIA4B,KAAAkM,QACAlM,KAAAmM,eAUAk2D,EAAAt3E,UAAAgiB,iBAAA,WACAomC,EAAApoD,UAAAgiB,iBAAAjjB,KAAAkW,MAGAA,KAAAszC,QACAtzC,KAAAmV,WAWAktD,EAAAt3E,UAAA+kB,gBAAA,WACA,GAAArC,GAAAzN,KAAAyN,MAEA,MAAAA,EAAA7hB,OAAA,IAcA,OAVA0mB,GAAA7E,EAAA,GACA+pE,EAAA,OACAC,EAAA,EACAC,EAAA,EAIA/rE,EAAA3L,KAAA2L,SACA6nB,EAAA/lB,EAAA7hB,OAEAhC,EAAA,EAAuBA,EAAA4pC,EAAW5pC,IAAA,CAClC,GAAAwjB,GAAAK,EAAA7jB,GACAwU,EAAA,EAAAxU,CAGA4tF,GADA5tF,EAAA6jB,EAAA7hB,OAAA,EACA6hB,EAAA7jB,EAAA,GAEAwjB,EAGAsqE,IAAAF,EAAAxsE,EAAAsH,EAAAtH,GACAysE,EAAAD,EAAAvsE,EAAAqH,EAAArH,CAEA,IAAAuqD,GAAA,MAAA5rE,GAAA4pC,EAAA,GAEAgiC,GAAA,IACAA,EAAA,EAGA,IAAAmiB,GAAA1mF,KAAA+iB,KAAAyjE,IAAAC,KACAE,EAAA53E,KAAA+L,SAAAjgB,OAAA,CAEA2rF,IAAAE,EACAD,GAAAC,EAEAF,GAAAG,EACAF,GAAAE,EAEAjsE,EAAAvN,GAAAgP,EAAApC,EAAAysE,EACA9rE,EAAAvN,EAAA,GAAAgP,EAAAnC,EAAAysE,EACA/rE,EAAAvN,EAAA,GAAAgP,EAAApC,EAAAysE,EACA9rE,EAAAvN,EAAA,GAAAgP,EAAAnC,EAAAysE,EAEAplE,EAAAlF,EAGApN,KAAAiS,6BAGAowD,GACCpvB,EAAA1nD,QAED7B,GAAA6B,QAAA82E,GxJut+BM,SAAS14E,EAAQD,EAASH,GAEhC,YyJ37+BA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAE7E,QAAAD,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAA2W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAd3FjU,EAAAiB,YAAA,CAEA,IAAAwgB,GAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GAEAgoC,EAAA5pD,EAAA,IAEAypD,EAAAxnD,EAAA2nD,GAeA0kC,EAAA,WAIA,QAAAA,GAAA10E,GACAnB,EAAAhC,KAAA63E,GAEA73E,KAAAmD,WA+NA,MArNA00E,GAAA9sF,UAAA8hB,OAAA,SAAAD,GACA,GAAAzJ,GAAAnD,KAAAmD,SACArD,EAAAqD,EAAArD,QAEA6J,EAAAiD,EAAAW,eACAvQ,EAAAmG,EAAAvN,UAEAuN,GAAA9H,YACAyE,EAAA0W,aAAA7M,EAAAyP,EAAApc,EAAA2M,EAAAuJ,EAAAlW,EAAA2M,EAAA3f,EAAAgT,EAAA2M,EAAAzf,EAAA8S,EAAA2M,EAAA0P,GAAArc,EAAA,EAAA2M,EAAA2P,GAAAtc,EAAA,GAEA8C,EAAA0W,aAAA7M,EAAAyP,EAAApc,EAAA2M,EAAAuJ,EAAAlW,EAAA2M,EAAA3f,EAAAgT,EAAA2M,EAAAzf,EAAA8S,EAAA2M,EAAA0P,GAAArc,EAAA2M,EAAA2P,GAAAtc,GAGAmG,EAAA8T,aAAArK,EAAAR,WAEAQ,EAAAd,WAAAknC,EAAAznD,QAAAoH,WAAA2Z,cACAtM,KAAA83E,oBAAAlrE,GAEA5M,KAAA+3E,iBAAAnrE,IAYAirE,EAAA9sF,UAAA+sF,oBAAA,SAAAlrE,GAIA,OAFAhhB,GAAAghB,EAAAjB,SAAA/f,OAAA,EAEAhC,EAAA,EAAuBA,EAAAgC,EAAA,EAAgBhC,IAAA,CAEvC,GAAAwU,GAAA,EAAAxU,CAEAoW,MAAAg4E,oBAAAprE,EAAAxO,IAAA,EAAAA,EAAA,KAYAy5E,EAAA9sF,UAAAgtF,iBAAA,SAAAnrE,GAKA,OAHAf,GAAAe,EAAAf,QACAjgB,EAAAigB,EAAAjgB,OAEAhC,EAAA,EAAuBA,EAAAgC,EAAYhC,GAAA,GAEnC,GAAAquF,GAAA,EAAApsE,EAAAjiB,GACAmlB,EAAA,EAAAlD,EAAAjiB,EAAA,GACAqlB,EAAA,EAAApD,EAAAjiB,EAAA,EAEAoW,MAAAg4E,oBAAAprE,EAAAqrE,EAAAlpE,EAAAE,KAeA4oE,EAAA9sF,UAAAitF,oBAAA,SAAAprE,EAAAqrE,EAAAlpE,EAAAE,GACA,GAAAnP,GAAAE,KAAAmD,SAAArD,QACA8L,EAAAgB,EAAAhB,IACAD,EAAAiB,EAAAjB,SACA3B,EAAA4C,EAAAb,QAEA,IAAA/B,EAAAb,MAAA,CAIA,GAAA4tE,GAAA/sE,EAAAlC,YACAkvE,EAAAD,EAAAjzE,OACAo0E,EAAAnB,EAAArrF,MACAysF,EAAApB,EAAAjrF,OAEAssF,EAAAxsE,EAAAqsE,GAAAlB,EAAArrF,MACA2sF,EAAAzsE,EAAAmD,GAAAgoE,EAAArrF,MACA4sF,EAAA1sE,EAAAqD,GAAA8nE,EAAArrF,MACA6sF,EAAA3sE,EAAAqsE,EAAA,GAAAlB,EAAAjrF,OACA0sF,EAAA5sE,EAAAmD,EAAA,GAAAgoE,EAAAjrF,OACA2sF,EAAA7sE,EAAAqD,EAAA,GAAA8nE,EAAAjrF,OAEA4wC,EAAA/wB,EAAAssE,GACA92D,EAAAxV,EAAAoD,GACAqS,EAAAzV,EAAAsD,GACA0tB,EAAAhxB,EAAAssE,EAAA,GACA52D,EAAA1V,EAAAoD,EAAA,GACAuS,EAAA3V,EAAAsD,EAAA,EAEA,IAAArC,EAAAP,cAAA,GACA,GAAAyU,GAAAlU,EAAAP,cAAAO,EAAAW,eAAA6L,EACA2H,EAAAnU,EAAAP,cAAAO,EAAAW,eAAArjB,EACAwuF,GAAAh8C,EAAAvb,EAAAC,GAAA,EACAu3D,GAAAh8C,EAAAtb,EAAAC,GAAA,EAEAs3D,EAAAl8C,EAAAg8C,EACAG,EAAAl8C,EAAAg8C,EAEA5kE,EAAA9iB,KAAA+iB,KAAA4kE,IAAAC,IAEAn8C,GAAAg8C,EAAAE,EAAA7kE,KAAA+M,GACA6b,EAAAg8C,EAAAE,EAAA9kE,KAAAgN,GAIA63D,EAAAz3D,EAAAu3D,EACAG,EAAAx3D,EAAAs3D,EAEA5kE,EAAA9iB,KAAA+iB,KAAA4kE,IAAAC,KACA13D,EAAAu3D,EAAAE,EAAA7kE,KAAA+M,GACAO,EAAAs3D,EAAAE,EAAA9kE,KAAAgN,GAEA63D,EAAAx3D,EAAAs3D,EACAG,EAAAv3D,EAAAq3D,EAEA5kE,EAAA9iB,KAAA+iB,KAAA4kE,IAAAC,KACAz3D,EAAAs3D,EAAAE,EAAA7kE,KAAA+M,GACAQ,EAAAq3D,EAAAE,EAAA9kE,KAAAgN,GAGAjhB,EAAAyxD,OACAzxD,EAAA6rD,YAEA7rD,EAAA8nD,OAAAlrB,EAAAC,GACA78B,EAAA+nD,OAAA1mC,EAAAE,GACAvhB,EAAA+nD,OAAAzmC,EAAAE,GAEAxhB,EAAAyrD,YAEAzrD,EAAA4xD,MAGA,IAAAnxC,GAAA63D,EAAAI,EAAAD,EAAAD,EAAAD,EAAAI,EAAAD,EAAAF,EAAAC,EAAAF,EAAAD,EAAAK,EACAK,EAAAp8C,EAAA87C,EAAAD,EAAAn3D,EAAAD,EAAAs3D,EAAAD,EAAAp3D,EAAAm3D,EAAAp3D,EAAAub,EAAA+7C,EACAM,EAAAX,EAAAj3D,EAAAub,EAAA47C,EAAAD,EAAAj3D,EAAAD,EAAAm3D,EAAA57C,EAAA27C,EAAAD,EAAAh3D,EACA43D,EAAAZ,EAAAI,EAAAp3D,EAAAm3D,EAAAp3D,EAAAm3D,EAAA57C,EAAA27C,EAAAI,EAAA/7C,EAAA87C,EAAAF,EAAAC,EAAAF,EAAAj3D,EAAAg3D,EAAAj3D,EAAAs3D,EACAQ,EAAAt8C,EAAA67C,EAAAD,EAAAj3D,EAAAD,EAAAo3D,EAAAD,EAAAl3D,EAAAi3D,EAAAl3D,EAAAsb,EAAA87C,EACAS,EAAAd,EAAA/2D,EAAAsb,EAAA27C,EAAAD,EAAA/2D,EAAAD,EAAAi3D,EAAA37C,EAAA07C,EAAAD,EAAA92D,EACA63D,EAAAf,EAAAI,EAAAl3D,EAAAi3D,EAAAl3D,EAAAi3D,EAAA37C,EAAA07C,EAAAI,EAAA97C,EAAA67C,EAAAF,EAAAC,EAAAF,EAAA/2D,EAAA82D,EAAA/2D,EAAAo3D,CAEA34E,GAAA6J,UAAAmvE,EAAAv4D,EAAA04D,EAAA14D,EAAAw4D,EAAAx4D,EAAA24D,EAAA34D,EAAAy4D,EAAAz4D,EAAA44D,EAAA54D,GAEAzgB,EAAAyH,UAAAyvE,EAAA,IAAAkB,EAAAnB,EAAAnhF,WAAAuiF,EAAApB,EAAAnhF,WAAA,IAAAsiF,EAAAC,GAEAr4E,EAAA6xD,YAWAkmB,EAAA9sF,UAAAquF,eAAA,SAAAxsE,GACA,GAAA9M,GAAAE,KAAAmD,SAAArD,QACA6L,EAAAiB,EAAAjB,SACA/f,EAAA+f,EAAA/f,OAAA,CAIAkU,GAAA6rD,WAEA,QAAA/hE,GAAA,EAAuBA,EAAAgC,EAAA,IAAgBhC,EAAA,CAEvC,GAAAwU,GAAA,EAAAxU,EAEA8yC,EAAA/wB,EAAAvN,GACAu+B,EAAAhxB,EAAAvN,EAAA,GAEA+iB,EAAAxV,EAAAvN,EAAA,GACAijB,EAAA1V,EAAAvN,EAAA,GAEAgjB,EAAAzV,EAAAvN,EAAA,GACAkjB,EAAA3V,EAAAvN,EAAA,EAEA0B,GAAA8nD,OAAAlrB,EAAAC,GACA78B,EAAA+nD,OAAA1mC,EAAAE,GACAvhB,EAAA+nD,OAAAzmC,EAAAE,GAGAxhB,EAAA8W,UAAA,UACA9W,EAAA2/B,OACA3/B,EAAAyrD,aASAssB,EAAA9sF,UAAAsY,QAAA,WACArD,KAAAmD,SAAA,MAGA00E,IAGAnuF,GAAA6B,QAAAssF,EAGAzsE,EAAAhd,eAAAg4D,eAAA,OAAAyxB,IzJ68+BM,SAASluF,EAAQD,EAASH,GAEhC,Y0Jls/BA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAE7E,QAAAD,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAA2W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAxBrX9Y,EAAAiB,YAAA,CAEA,IAAAwgB,GAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GAEAxc,EAAApF,EAAA,GAEAk5B,EAAAj3B,EAAAmD,GAEAwkD,EAAA5pD,EAAA,IAEAypD,EAAAxnD,EAAA2nD,GAiBAkmC,GAfA9vF,EAAA,GAeA,SAAA+/E,GAQA,QAAA+P,GAAAl2E,GACAnB,EAAAhC,KAAAq5E,EAEA,IAAAr1E,GAAA7B,EAAAnC,KAAAspE,EAAAx/E,KAAAkW,KAAAmD,GAGA,OADAa,GAAA7H,OAAA,KACA6H,EAkFA,MA/FA1B,GAAA+2E,EAAA/P,GAuBA+P,EAAAtuF,UAAAqY,gBAAA,WACA,GAAAlL,GAAA8H,KAAAmD,SAAAjL,EAEA8H,MAAA7D,OAAA,GAAAiP,GAAAze,OAAAuL,EAAA,+UAAqX;EAUrXmhF,EAAAtuF,UAAA8hB,OAAA,SAAAD,GACA,GAAAzJ,GAAAnD,KAAAmD,SACAjL,EAAAiL,EAAAjL,GACA8R,EAAA4C,EAAAb,QAEA,IAAA/B,EAAAb,MAAA,CAIA,GAAAmwE,GAAA1sE,EAAAJ,SAAArJ,EAAAuf,YAEA42D,KACAn2E,EAAA0iB,QAAA,MAEAyzD,GACAn9E,OAAA6D,KAAA7D,OACAsoC,aAAAhiB,EAAAl3B,QAAAuQ,SAAA4oC,mBAAAxsC,EAAA0U,EAAAjB,SAAAzT,EAAAojE,aACAie,SAAA92D,EAAAl3B,QAAAuQ,SAAA4oC,mBAAAxsC,EAAA0U,EAAAhB,IAAA1T,EAAAojE,aACA12B,YAAAniB,EAAAl3B,QAAAuQ,SAAA+oC,kBAAA3sC,EAAA0U,EAAAf,QAAA3T,EAAAysC,aAEA7e,IAAA,KACA5Z,MAAAU,EAAAV,MACAC,WAAAS,EAAAT,YAIAmtE,EAAAxzD,IAAA,GAAArD,GAAAl3B,QAAA2Q,kBAAAhE,GAAA6sC,SAAAu0C,EAAA10C,aAAAI,aAAAs0C,EAAA70C,aAAA60C,EAAAn9E,OAAA8oC,WAAAC,gBAAAhtC,EAAA21B,OAAA,OAAAmX,aAAAs0C,EAAAC,SAAAD,EAAAn9E,OAAA8oC,WAAAE,cAAAjtC,EAAA21B,OAAA,OAEAjhB,EAAAJ,SAAArJ,EAAAuf,aAAA42D,GAGA1sE,EAAAV,QAAAotE,EAAAptE,QACAotE,EAAAptE,MAAAU,EAAAV,MACAotE,EAAAC,SAAA5sD,OAAA/f,EAAAhB,MAGAgB,EAAAT,aAAAmtE,EAAAntE,aACAmtE,EAAAntE,WAAAS,EAAAT,WACAmtE,EAAA10C,YAAAjY,OAAA/f,EAAAf,UAGAytE,EAAA70C,aAAA9X,OAAA/f,EAAAjB,UAEAxI,EAAAgiB,WAAAm0D,EAAAn9E,QAEAm9E,EAAAn9E,OAAA0oB,SAAAmlD,SAAA7mE,EAAAuhB,YAAA1a,GAEA7G,EAAAggB,MAAAlM,aAAArK,EAAAR,WAEAktE,EAAAn9E,OAAA0oB,SAAAqpC,kBAAAthD,EAAAW,eAAAqR,SAAA,GACA06D,EAAAn9E,OAAA0oB,SAAA7U,MAAApD,EAAAmD,WACAupE,EAAAn9E,OAAA0oB,SAAAgC,KAAAja,EAAAL,OAEA,IAAAT,GAAAc,EAAAd,WAAAknC,EAAAznD,QAAAoH,WAAA2Z,cAAApU,EAAAjF,eAAAiF,EAAAlF,SAEAmQ,GAAA0iB,QAAAyzD,EAAAxzD,KACAwzD,EAAAxzD,IAAAqoC,KAAAriD,EAAAc,EAAAf,QAAAjgB,OAAA,KAGAytF,GACCjuE,EAAA3e,gBAED/C,GAAA6B,QAAA8tF,EAGAjuE,EAAAjd,cAAAi4D,eAAA,OAAAizB,I1J0t/BM,SAAS1vF,EAAQD,EAASH,GAEhC,Y2Jz1/BA,SAAA4B,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAA2W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAZrX9Y,EAAAiB,YAAA,CAEA,IAAAwgB,GAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GAkCAm3D,EAAA,SAAA52D,GAaA,QAAA42D,KACA,GAAAkX,GAAA7tF,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,QACAyzE,EAAAzzE,UAAA,GACA8tF,EAAA9tF,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,QAEAqW,GAAAhC,KAAAsiE,EAKA,IAAAt+D,GAAA7B,EAAAnC,KAAA0L,EAAA5hB,KAAAkW,OAEA05E,EAAA,KA4EA,OA1EAD,GAAAC,IACAD,EAAAC,GAGAD,EAAAD,IACAC,EAAAD,GASAx1E,EAAA21E,cAAA,eAMA31E,EAAA41E,SAAAJ,EAMAx1E,EAAA61E,WAAAJ,EAMAz1E,EAAA81E,cAMA91E,EAAA+1E,gBAAA,EAMA/1E,EAAAw6B,qBAAA,EAUAx6B,EAAAoI,UAAAhB,EAAA3Z,YAAAC,OASAsS,EAAA3I,aAAA,EAQA2I,EAAA8D,YAAA,KAEA9D,EAAAg2E,cAAA5a,GACAp7D,EAyLA,MA7RA1B,GAAAggE,EAAA52D,GA8GA42D,EAAAv3E,UAAAivF,cAAA,SAAA5a,GACAA,IACAp/D,KAAA25E,YAAA,YAAAva,OAAAvtD,MAAA7R,KAAA25E,YAAA,GACA35E,KAAA25E,YAAA,eAAAva,OAAA3+C,SAAAzgB,KAAA25E,YAAA,GACA35E,KAAA25E,YAAA,eAAAva,OAAAz/C,SAAA3f,KAAA25E,YAAA,GACA35E,KAAA25E,YAAA,UAAAva,OAAAxzD,IAAA5L,KAAA25E,YAAA,GACA35E,KAAA25E,YAAA,YAAAva,OAAApvD,MAAAhQ,KAAA25E,YAAA,KAWArX,EAAAv3E,UAAA+kB,gBAAA,WAEA9P,KAAAi+B,gCAYAqkC,EAAAv3E,UAAA4lB,YAAA,SAAAxN,GACA,GAAAqC,GAAAxF,IAEAA,MAAAiQ,WAAAjQ,KAAA+P,YAAA,IAAA/P,KAAAmO,SAAAviB,QAAAoU,KAAAoQ,aAIApQ,KAAA8H,cACA9H,KAAA8H,YAAA9H,KAAAmO,SAAA,GAAApC,SAAAjE,YACA9H,KAAA8H,YAAA1D,WACApE,KAAA8H,YAAA/H,KAAA,oBACA,MAAAyF,GAAA4I,iBAAA,MAKAjL,EAAAuJ,kBAAAvJ,EAAAwJ,QAAAstE,UACA92E,EAAAwJ,QAAAstE,SAAAptE,OAAA7M,QAWAsiE,EAAAv3E,UAAAqjB,iBAAA,SAAA8rE,GACA,GAAAC,GAAAlpF,KAAA+tD,MAAAk7B,EAAAl6E,KAAA65E,WAEAM,GAAAn6E,KAAA+5E,kBACA/5E,KAAA+5E,gBAAAI,IAYA7X,EAAAv3E,UAAA2mB,aAAA,SAAAvO,GACA,GAAAnD,KAAAiQ,WAAAjQ,KAAA+P,YAAA,IAAA/P,KAAAmO,SAAAviB,QAAAoU,KAAAoQ,WAAA,CAIA,GAAAtQ,GAAAqD,EAAArD,QACA6J,EAAA3J,KAAAuN,eACA6sE,GAAA,EAEAC,EAAA,EACAC,EAAA,EAEAC,EAAA,EACAC,EAAA,EAEAC,EAAAt3E,EAAAwS,WAAA3V,KAAAoM,UAEAquE,KAAA36E,EAAA4W,2BACA5W,EAAA4W,yBAAA+jE,GAGA36E,EAAA2W,YAAAzW,KAAA+P,WAEA/P,KAAAi+B,8BAEA,QAAAr0C,GAAA,EAAuBA,EAAAoW,KAAAmO,SAAAviB,SAA0BhC,EAAA,CACjD,GAAA0kB,GAAAtO,KAAAmO,SAAAvkB,EAEA,IAAA0kB,EAAA2B,QAAA,CAIA,GAAApH,GAAAyF,EAAAtE,QAAAnB,KAIA,IAFA/I,EAAA2W,YAAAzW,KAAA+P,WAAAzB,EAAA0B,MAEA1B,EAAAqR,UAAA,EAAA1uB,KAAAC,MAAA,EAEAkpF,IACAt6E,EAAA0W,aAAA7M,EAAAyP,EAAAzP,EAAAuJ,EAAAvJ,EAAA3f,EAAA2f,EAAAzf,EAAAyf,EAAA0P,GAAAlW,EAAAvN,WAAA+T,EAAA2P,GAAAnW,EAAAvN,YAEAwkF,GAAA,GAGAC,EAAA/rE,EAAA8Y,OAAApc,IAAAnC,EAAAnd,MAAA4iB,EAAAuD,MAAA7G,GAAAsD,EAAAmS,SAAAzV,EAAA,GACAsvE,EAAAhsE,EAAA8Y,OAAAnc,IAAApC,EAAA/c,OAAAwiB,EAAAuD,MAAA5G,GAAAqD,EAAAmS,SAAAxV,EAAA,GAEAsvE,EAAA1xE,EAAAnd,MAAA4iB,EAAAuD,MAAA7G,EACAwvE,EAAA3xE,EAAA/c,OAAAwiB,EAAAuD,MAAA5G,MACa,CACbmvE,IACAA,GAAA,GAGA9rE,EAAA2vB,8BAEA,IAAAy8C,GAAApsE,EAAAf,cAEApK,GAAA9H,YACAyE,EAAA0W,aAAAkkE,EAAAthE,EAAAshE,EAAAxnE,EAAAwnE,EAAA1wF,EAAA0wF,EAAAxwF,EAAAwwF,EAAArhE,GAAAlW,EAAAvN,WAAA,EAAA8kF,EAAAphE,GAAAnW,EAAAvN,WAAA,GAEAkK,EAAA0W,aAAAkkE,EAAAthE,EAAAshE,EAAAxnE,EAAAwnE,EAAA1wF,EAAA0wF,EAAAxwF,EAAAwwF,EAAArhE,GAAAlW,EAAAvN,WAAA8kF,EAAAphE,GAAAnW,EAAAvN,YAGAykF,EAAA/rE,EAAA8Y,OAAApc,GAAAnC,EAAAnd,MAAA,GACA4uF,EAAAhsE,EAAA8Y,OAAAnc,GAAApC,EAAA/c,OAAA,GAEAyuF,EAAA1xE,EAAAnd,MACA8uF,EAAA3xE,EAAA/c,OAGA,GAAA8J,GAAA0Y,EAAAtE,QAAAlC,YAAAlS,UAEAkK,GAAAyH,UAAA+G,EAAAtE,QAAAlC,YAAAhE,OAAA+E,EAAAmC,EAAApV,EAAAiT,EAAAoC,EAAArV,EAAAiT,EAAAnd,MAAAkK,EAAAiT,EAAA/c,OAAA8J,EAAAykF,EAAAzkF,EAAA0kF,EAAA1kF,EAAA2kF,EAAA3kF,EAAA4kF,EAAA5kF,OAcA0sE,EAAAv3E,UAAAsY,QAAA,SAAAtX,GAGA,GAFA2f,EAAA3gB,UAAAsY,QAAAvZ,KAAAkW,KAAAjU,GAEAiU,KAAA26E,SACA,OAAA/wF,GAAA,EAA2BA,EAAAoW,KAAA26E,SAAA/uF,SAA0BhC,EACrDoW,KAAA26E,SAAA/wF,GAAAyZ,SAIArD,MAAA25E,YAAA,KACA35E,KAAA26E,SAAA,MAGArY,GACCl3D,EAAApd,UAEDtE,GAAA6B,QAAA+2E,G3Ju2/BM,SAAS34E,EAAQD,EAASH,GAEhC,Y4JtqgCA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAE7E,QAAA4W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAZ3FjU,EAAAiB,YAAA,CAEA,IAAAgE,GAAApF,EAAA,GAEAk5B,EAAAj3B,EAAAmD,GAEA21C,EAAA/6C,EAAA,IAEAg7C,EAAA/4C,EAAA84C,GAyBAs2C,EAAA,WAOA,QAAAA,GAAA1iF,EAAAknE,EAAAyb,EAAAhkF,GACAmL,EAAAhC,KAAA46E,GAOA56E,KAAA9H,KAOA8H,KAAAy6D,SAAA,EAOAz6D,KAAA06D,aAAA,EAAA16D,KAAAy6D,SAOAz6D,KAAAnJ,OAOAmJ,KAAA86E,qBAOA96E,KAAA+6E,mBAEA,QAAAnxF,GAAA,EAAuBA,EAAAw1E,EAAAxzE,SAAuBhC,EAAA,CAC9C,GAAAkB,GAAAs0E,EAAAx1E,EAIAkB,IACA2sD,UAAA3sD,EAAA2sD,UACA5gD,KAAA/L,EAAA+L,KACAmkF,eAAAlwF,EAAAkwF,eACArvC,OAAA7gD,EAAA6gD,QAGAkvC,EAAAjxF,GACAoW,KAAA86E,kBAAA79E,KAAAnS,GAEAkV,KAAA+6E,iBAAA99E,KAAAnS,GAIAkV,KAAAi7E,aAAA,EACAj7E,KAAAk7E,aAAA,KACAl7E,KAAAm7E,WAAA,KAEAn7E,KAAAo7E,cAAA,EACAp7E,KAAAq7E,cAAA,KACAr7E,KAAAs7E,YAAA,KAEAt7E,KAAAu7E,cAwHA,MA9GAX,GAAA7vF,UAAAwwF,YAAA,WACA,GAAArjF,GAAA8H,KAAA9H,GACAsjF,EAAA,CAOAx7E,MAAA6L,SAAA,EAAA04B,EAAAh5C,SAAAyU,KAAAnJ,MACAmJ,KAAA4kC,YAAAniB,EAAAl3B,QAAAuQ,SAAA+oC,kBAAA3sC,EAAA8H,KAAA6L,QAAA3T,EAAAysC,aAEA3kC,KAAAo7E,cAAA,CAEA,QAAAxxF,GAAA,EAAuBA,EAAAoW,KAAA86E,kBAAAlvF,SAAmChC,EAAA,CAC1D,GAAAkB,GAAAkV,KAAA86E,kBAAAlxF,EAEAkB,GAAA6gD,OAAA6vC,EACAA,GAAA1wF,EAAA+L,KACAmJ,KAAAo7E,eAAAtwF,EAAA+L,KAGAmJ,KAAAs7E,YAAA,GAAAtvE,cAAAhM,KAAAnJ,KAAAmJ,KAAAo7E,cAAA,GACAp7E,KAAAq7E,cAAA54D,EAAAl3B,QAAAuQ,SAAA4oC,mBAAAxsC,EAAA8H,KAAAs7E,YAAApjF,EAAAojE,YAGA,IAAAmgB,GAAA,CAEAz7E,MAAAi7E,aAAA,CAEA,QAAArrE,GAAA,EAAwBA,EAAA5P,KAAA+6E,iBAAAnvF,SAAmCgkB,EAAA,CAC3D,GAAA8rE,GAAA17E,KAAA+6E,iBAAAnrE,EAEA8rE,GAAA/vC,OAAA8vC,EACAA,GAAAC,EAAA7kF,KACAmJ,KAAAi7E,cAAAS,EAAA7kF,KAGAmJ,KAAAm7E,WAAA,GAAAnvE,cAAAhM,KAAAnJ,KAAAmJ,KAAAi7E,aAAA,GACAj7E,KAAAk7E,aAAAz4D,EAAAl3B,QAAAuQ,SAAA4oC,mBAAAxsC,EAAA8H,KAAAm7E,WAAAjjF,EAAAysC,aAEA3kC,KAAA8lB,IAAA,GAAArD,GAAAl3B,QAAA2Q,kBAAAhE,GAAA6sC,SAAA/kC,KAAA4kC,YAEA,QAAArzB,GAAA,EAAyBA,EAAAvR,KAAA86E,kBAAAlvF,SAAqC2lB,EAAA,CAC9D,GAAAoqE,GAAA37E,KAAA86E,kBAAAvpE,EAEAvR,MAAA8lB,IAAAkf,aAAAhlC,KAAAq7E,cAAAM,EAAAlkC,UAAAv/C,EAAA21B,OAAA,IAAA7tB,KAAAo7E,cAAA,EAAAO,EAAAhwC,QAGA,OAAAuzB,GAAA,EAAyBA,EAAAl/D,KAAA+6E,iBAAAnvF,SAAoCszE,EAAA,CAC7D,GAAA0c,GAAA57E,KAAA+6E,iBAAA7b,EAEAl/D,MAAA8lB,IAAAkf,aAAAhlC,KAAAk7E,aAAAU,EAAAnkC,UAAAv/C,EAAA21B,OAAA,IAAA7tB,KAAAi7E,aAAA,EAAAW,EAAAjwC,UAaAivC,EAAA7vF,UAAA8wF,cAAA,SAAA1tE,EAAA2tE,EAAAhrC,GACA,OAAAlnD,GAAA,EAAuBA,EAAAoW,KAAA86E,kBAAAlvF,OAAmChC,IAAA,CAC1D,GAAAkB,GAAAkV,KAAA86E,kBAAAlxF,EAEAkB,GAAAkwF,eAAA7sE,EAAA2tE,EAAAhrC,EAAA9wC,KAAAs7E,YAAAt7E,KAAAo7E,cAAAtwF,EAAA6gD,QAGA3rC,KAAAq7E,cAAA1uD,UAYAiuD,EAAA7vF,UAAAgxF,aAAA,SAAA5tE,EAAA2tE,EAAAhrC,GACA,OAAAlnD,GAAA,EAAuBA,EAAAoW,KAAA+6E,iBAAAnvF,OAAkChC,IAAA,CACzD,GAAAkB,GAAAkV,KAAA+6E,iBAAAnxF,EAEAkB,GAAAkwF,eAAA7sE,EAAA2tE,EAAAhrC,EAAA9wC,KAAAm7E,WAAAn7E,KAAAi7E,aAAAnwF,EAAA6gD,QAGA3rC,KAAAk7E,aAAAvuD,UASAiuD,EAAA7vF,UAAAsY,QAAA,WACArD,KAAA86E,kBAAA,KACA96E,KAAAs7E,YAAA,KACAt7E,KAAAq7E,cAAAh4E,UAEArD,KAAA+6E,iBAAA,KACA/6E,KAAAm7E,WAAA,KACAn7E,KAAAk7E,aAAA73E,WAGAu3E,IAGAlxF,GAAA6B,QAAAqvF,G5JwrgCM,SAASjxF,EAAQD,EAASH,GAEhC,Y6Jv5gCA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAE7E,QAAAD,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAA2W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAtBrX9Y,EAAAiB,YAAA,CAEA,IAAAwgB,GAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GAEA6wE,EAAAzyF,EAAA,KAEA0yF,EAAAzwF,EAAAwwF,GAEAE,EAAA3yF,EAAA,KAEA4yF,EAAA3wF,EAAA0wF,GA8BAE,EAAA,SAAA9S,GAMA,QAAA8S,GAAAj5E,GACAnB,EAAAhC,KAAAo8E,EAaA,IAAAp4E,GAAA7B,EAAAnC,KAAAspE,EAAAx/E,KAAAkW,KAAAmD,GAWA,OATAa,GAAA7H,OAAA,KAEA6H,EAAA4gC,YAAA,KAEA5gC,EAAAo7D,WAAA,KAEAp7D,EAAAy+B,WAAA,GAAAr3B,GAAAuM,OAEA3T,EAAA0e,YAAA,EACA1e,EAwWA,MAtYA1B,GAAA85E,EAAA9S,GAwCA8S,EAAArxF,UAAAqY,gBAAA,WACA,GAAAlL,GAAA8H,KAAAmD,SAAAjL,EAEA8H,MAAA0iB,YAAA1iB,KAAAmD,SAAAuf,YAGA1iB,KAAA7D,OAAA,GAAA8/E,GAAA1wF,QAAA2M,GAEA8H,KAAAo/D,aAGA3nB,UAAAz3C,KAAA7D,OAAA8oC,WAAAC,gBACAruC,KAAA,EACAmkF,eAAAh7E,KAAAq8E,eACA1wC,OAAA,IAIA8L,UAAAz3C,KAAA7D,OAAA8oC,WAAAq3C,eACAzlF,KAAA,EACAmkF,eAAAh7E,KAAAu8E,eACA5wC,OAAA,IAIA8L,UAAAz3C,KAAA7D,OAAA8oC,WAAAu3C,UACA3lF,KAAA,EACAmkF,eAAAh7E,KAAAy8E,eACA9wC,OAAA,IAIA8L,UAAAz3C,KAAA7D,OAAA8oC,WAAAE,cACAtuC,KAAA,EACAmkF,eAAAh7E,KAAA08E,UACA/wC,OAAA,IAIA8L,UAAAz3C,KAAA7D,OAAA8oC,WAAAypB,OACA73D,KAAA,EACAmkF,eAAAh7E,KAAA28E,YACAhxC,OAAA,KAUAywC,EAAArxF,UAAA0T,MAAA,WACAuB,KAAAmD,SAAAgiB,WAAAnlB,KAAA7D,SAUAigF,EAAArxF,UAAA8hB,OAAA,SAAAuxB,GACA,GAAAjwB,GAAAiwB,EAAAjwB,SACAqrE,EAAAp7C,EAAAw7C,SACAH,EAAAr7C,EAAAy7C,WACA12E,EAAAnD,KAAAmD,SACAy5E,EAAAzuE,EAAAviB,MAEA,QAAAgxF,EAAA,CAESA,EAAApD,IACToD,EAAApD,EAGA,IAAA7e,GAAAv8B,EAAA07C,WAAA32E,EAAAuf,YAEAi4C,KACAA,EAAAv8B,EAAA07C,WAAA32E,EAAAuf,aAAA1iB,KAAA68E,gBAAAz+C,IAIAp+B,KAAAmD,SAAA8T,aAAAmnB,EAAAhyB,UAEA,IAAAlU,GAAAiL,EAAAjL,GAEAnO,EAAAq0C,EAAA7wB,eAAAxK,KAAA/C,KAAAyiC,WAEA14C,GAAAq2B,QAAAjd,EAAAsgB,oBAAA/L,kBAEA1X,KAAA7D,OAAA0oB,SAAAnN,iBAAA3tB,EAAA60B,SAAA,GACA5e,KAAA7D,OAAA0oB,SAAAi4D,OAAA1+C,EAAAruB,UAGA,IAAAjI,GAAAqG,EAAA,GAAApC,SAAAjE,WAEA9H,MAAA7D,OAAA0oB,SAAAmlD,SAAA7mE,EAAAuhB,YAAA5c,EAGA,QAAAle,GAAA,EAAA4X,EAAA,EAA8B5X,EAAAgzF,EAAmBhzF,GAAA6vF,EAAAj4E,GAAA,GACjD,GAAAsvC,GAAA8rC,EAAAhzF,CAEAknD,GAAA2oC,IACA3oC,EAAA2oC,EAGA,IAAAj8B,GAAAmd,EAAAn5D,EAGAg8C,GAAAq+B,cAAA1tE,EAAAvkB,EAAAknD,GAGA1S,EAAA27C,kBAAAv4E,IACAg8C,EAAAu+B,aAAA5tE,EAAAvkB,EAAAknD,GACA1S,EAAA27C,gBAAAv4E,EAAA,GAIA2B,EAAA0iB,QAAA23B,EAAA13B,KACA03B,EAAA13B,IAAAqoC,KAAAj2D,EAAAlF,UAAA,EAAA89C,MAYAsrC,EAAArxF,UAAA8xF,gBAAA,SAAAz+C,GAOA,OANAlmC,GAAA8H,KAAAmD,SAAAjL,GACAyiE,KACA9jE,EAAAunC,EAAAw7C,SACAH,EAAAr7C,EAAAy7C,WACAgB,EAAAz8C,EAAAu7C,YAEA/vF,EAAA,EAAuBA,EAAAiN,EAAUjN,GAAA6vF,EACjC9e,EAAA19D,KAAA,GAAAk/E,GAAA5wF,QAAA2M,EAAA8H,KAAAo/D,WAAAyb,EAAApB,GAGA,OAAA9e,IAeAyhB,EAAArxF,UAAAsxF,eAAA,SAAAluE,EAAA2tE,EAAAhrC,EAAApyB,EAAAq7B,EAAApO,GAMA,OALAtkB,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEA59B,EAAA,EAAuBA,EAAAknD,IAAYlnD,EAAA,CACnC,GAAAg+B,GAAAzZ,EAAA2tE,EAAAlyF,GACAogB,EAAA4d,EAAA7b,SACA05C,EAAA79B,EAAA/V,MAAA7G,EACAiV,EAAA2H,EAAA/V,MAAA5G,EACAzM,EAAAwL,EAAAxL,KACAsK,EAAAkB,EAAAlB,IAEAtK,IAGA8oB,EAAA9oB,EAAAwM,EAAA4c,EAAAR,OAAApc,EAAAlC,EAAApd,MACA27B,EAAAC,EAAA9oB,EAAA9S,MAEA87B,EAAAhpB,EAAAyM,EAAA2c,EAAAR,OAAAnc,EAAAnC,EAAAhd,OACAy7B,EAAAC,EAAAhpB,EAAA1S,SAEAu7B,EAAAve,EAAApd,OAAA,EAAAk8B,EAAAR,OAAApc,GACAsc,EAAAxe,EAAApd,OAAAk8B,EAAAR,OAAApc,EAEAuc,EAAAze,EAAAhd,QAAA,EAAA87B,EAAAR,OAAAnc,GACAuc,EAAA1e,EAAAhd,QAAA87B,EAAAR,OAAAnc,GAGAyT,EAAAitB,GAAArkB,EAAAm+B,EACA/mC,EAAAitB,EAAA,GAAAnkB,EAAAvH,EAEAvB,EAAAitB,EAAAoO,GAAA1yB,EAAAo+B,EACA/mC,EAAAitB,EAAAoO,EAAA,GAAAvyB,EAAAvH,EAEAvB,EAAAitB,EAAA,EAAAoO,GAAA1yB,EAAAo+B,EACA/mC,EAAAitB,EAAA,EAAAoO,EAAA,GAAAxyB,EAAAtH,EAEAvB,EAAAitB,EAAA,EAAAoO,GAAAzyB,EAAAm+B,EACA/mC,EAAAitB,EAAA,EAAAoO,EAAA,GAAAxyB,EAAAtH,EAEA0rB,GAAA,EAAAoO,IAeAqiC,EAAArxF,UAAAwxF,eAAA,SAAApuE,EAAA2tE,EAAAhrC,EAAApyB,EAAAq7B,EAAApO,GACA,OAAA/hD,GAAA,EAAuBA,EAAAknD,EAAYlnD,IAAA,CACnC,GAAAmzF,GAAA5uE,EAAA2tE,EAAAlyF,GAAA62B,QAEA/B,GAAAitB,GAAAoxC,EAAA/xE,EACA0T,EAAAitB,EAAA,GAAAoxC,EAAA9xE,EAEAyT,EAAAitB,EAAAoO,GAAAgjC,EAAA/xE,EACA0T,EAAAitB,EAAAoO,EAAA,GAAAgjC,EAAA9xE,EAEAyT,EAAAitB,EAAA,EAAAoO,GAAAgjC,EAAA/xE,EACA0T,EAAAitB,EAAA,EAAAoO,EAAA,GAAAgjC,EAAA9xE,EAEAyT,EAAAitB,EAAA,EAAAoO,GAAAgjC,EAAA/xE,EACA0T,EAAAitB,EAAA,EAAAoO,EAAA,GAAAgjC,EAAA9xE,EAEA0gC,GAAA,EAAAoO,IAeAqiC,EAAArxF,UAAA0xF,eAAA,SAAAtuE,EAAA2tE,EAAAhrC,EAAApyB,EAAAq7B,EAAApO,GACA,OAAA/hD,GAAA,EAAuBA,EAAAknD,EAAYlnD,IAAA,CACnC,GAAAozF,GAAA7uE,EAAA2tE,EAAAlyF,GAAA+1B,QAEAjB,GAAAitB,GAAAqxC,EACAt+D,EAAAitB,EAAAoO,GAAAijC,EACAt+D,EAAAitB,EAAA,EAAAoO,GAAAijC,EACAt+D,EAAAitB,EAAA,EAAAoO,GAAAijC,EAEArxC,GAAA,EAAAoO,IAeAqiC,EAAArxF,UAAA2xF,UAAA,SAAAvuE,EAAA2tE,EAAAhrC,EAAApyB,EAAAq7B,EAAApO,GACA,OAAA/hD,GAAA,EAAuBA,EAAAknD,IAAYlnD,EAAA,CACnC,GAAA0tF,GAAAnpE,EAAA2tE,EAAAlyF,GAAAmiB,SAAA1C,IAEAiuE,IACA54D,EAAAitB,GAAA2rC,EAAA56C,GACAhe,EAAAitB,EAAA,GAAA2rC,EAAA36C,GAEAje,EAAAitB,EAAAoO,GAAAu9B,EAAAn2D,GACAzC,EAAAitB,EAAAoO,EAAA,GAAAu9B,EAAAj2D,GAEA3C,EAAAitB,EAAA,EAAAoO,GAAAu9B,EAAAl2D,GACA1C,EAAAitB,EAAA,EAAAoO,EAAA,GAAAu9B,EAAAh2D,GAEA5C,EAAAitB,EAAA,EAAAoO,GAAAu9B,EAAAzuC,GACAnqB,EAAAitB,EAAA,EAAAoO,EAAA,GAAAu9B,EAAAxuC,GAEA6C,GAAA,EAAAoO,IAGAr7B,EAAAitB,GAAA,EACAjtB,EAAAitB,EAAA,KAEAjtB,EAAAitB,EAAAoO,GAAA,EACAr7B,EAAAitB,EAAAoO,EAAA,KAEAr7B,EAAAitB,EAAA,EAAAoO,GAAA,EACAr7B,EAAAitB,EAAA,EAAAoO,EAAA,KAEAr7B,EAAAitB,EAAA,EAAAoO,GAAA,EACAr7B,EAAAitB,EAAA,EAAAoO,EAAA,KAEApO,GAAA,EAAAoO,KAgBAqiC,EAAArxF,UAAA4xF,YAAA,SAAAxuE,EAAA2tE,EAAAhrC,EAAApyB,EAAAq7B,EAAApO,GACA,OAAA/hD,GAAA,EAAuBA,EAAAknD,EAAYlnD,IAAA,CACnC,GAAAqzF,GAAA9uE,EAAA2tE,EAAAlyF,GAAAomB,KAEA0O,GAAAitB,GAAAsxC,EACAv+D,EAAAitB,EAAAoO,GAAAkjC,EACAv+D,EAAAitB,EAAA,EAAAoO,GAAAkjC,EACAv+D,EAAAitB,EAAA,EAAAoO,GAAAkjC,EAEAtxC,GAAA,EAAAoO,IAUAqiC,EAAArxF,UAAAsY,QAAA,WACArD,KAAAmD,SAAAjL,IACA8H,KAAAmD,SAAAjL,GAAAmtC,aAAArlC,KAAA4kC,aAGA0kC,EAAAv+E,UAAAsY,QAAAvZ,KAAAkW,MAEAA,KAAA7D,OAAAkH,UAEArD,KAAA6L,QAAA,KACA7L,KAAAyiC,WAAA,MAGA25C,GACChxE,EAAA3e,eAED/C,GAAA6B,QAAA6wF,EAGAhxE,EAAAjd,cAAAi4D,eAAA,WAAAg2B,I7J66gCM,SAASzyF,EAAQD,EAASH,GAEhC,Y8Jh2hCA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAE7E,QAAA4W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAZrX9Y,EAAAiB,YAAA,CAEA,IAAAgkE,GAAAplE,EAAA,GAEAqlE,EAAApjE,EAAAmjE,GAeAuuB,EAAA,SAAAhtF,GAMA,QAAAgtF,GAAAhlF,GAGA,MAFA8J,GAAAhC,KAAAk9E,GAEA/6E,EAAAnC,KAAA9P,EAAApG,KAAAkW,KAAA9H,GAEA,kCAAyC,gCAAiC,0BAA2B,iCAAkC,yBAA0B,6BAA8B,iCAAkC,8BAA+B,wBAAyB,mBAAoB,+BAAgC,wFAAyF,wFAAyF,6BAA8B,yEAA0E,oCAAqC,sBAAuB,KAAK4F,KAAA,OAExqB,8BAAqC,wBAAyB,8BAA+B,wBAAyB,mBAAoB,uEAAwE,iCAAkC,0BAA2B,KAAKA,KAAA,QAGpR,MAfAwE,GAAA46E,EAAAhtF,GAeAgtF,GACCtuB,EAAArjE,QAED7B,GAAA6B,QAAA2xF,G9J82hCM,SAASvzF,EAAQD,GAEvB,Y+Jn5hCAuH,MAAAwH,OACAxH,KAAAwH,KAAA,SAAAuS,GAGA,MAFAA,GAAAzB,OAAAyB,GAEA,IAAAA,GAAAmyE,MAAAnyE,GACAA,EAGAA,EAAA,U/Jg6hCM,SAASrhB,EAAQD,EAASH,GAEhC,YgKz6hCA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAJ7E,GAAAgyF,GAAA7zF,EAAA,KAEA8zF,EAAA7xF,EAAA4xF,EAIA/yF,QAAA08C,SACA18C,OAAA08C,OAAAs2C,EAAA9xF,UhKw7hCM,SAAS5B,EAAQD,EAASH,GAEhC,YiKj8hCAA,GAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAgO,OAAAsiE,cACAtiE,OAAAsiE,YAAA17D,OAGA5G,OAAAyU,eACAzU,OAAAyU,aAAA7N,OAGA5G,OAAAyxC,cACAzxC,OAAAyxC,YAAA7qC,OAGA5G,OAAA0U,cACA1U,OAAA0U,YAAA9N,QjK08hCM,SAASxU,EAAQD,EAASH,GAEhC,ckKj+hCA,SAAAowB,GAaA,GAAA2jE,GAAA,EAGAC,MAAAhd,KAAAgd,KAAAxyF,UAAAyyF,UACAD,KAAAhd,IAAA,WACA,UAAAgd,OAAAC,YAKA7jE,EAAA2mD,aAAA3mD,EAAA2mD,YAAAC,MACA,WACA,GAAAkd,GAAAF,KAAAhd,KAEA5mD,GAAA2mD,cACA3mD,EAAA2mD,gBAGA3mD,EAAA2mD,YAAAC,IAAA,WACA,MAAAgd,MAAAhd,MAAAkd,KASA,QAHAzd,GAAAud,KAAAhd,MACAmd,GAAA,yBAEA1yE,EAAA,EAAeA,EAAA0yE,EAAA9xF,SAAA+tB,EAAAymD,wBAAqDp1D,EAAA,CACpE,GAAA/f,GAAAyyF,EAAA1yE,EAEA2O,GAAAymD,sBAAAzmD,EAAA1uB,EAAA,yBACA0uB,EAAA8mD,qBAAA9mD,EAAA1uB,EAAA,yBAAA0uB,EAAA1uB,EAAA,+BAGA0uB,EAAAymD,wBACAzmD,EAAAymD,sBAAA,SAAA5jB,GACA,qBAAAA,GACA,SAAA7+C,WAAA6+C,EAAA,oBAGA,IAAApS,GAAAmzC,KAAAhd,MACAod,EAAAL,EAAAtd,EAAA51B,CAQA,OANAuzC,GAAA,IACAA,EAAA,GAGA3d,EAAA51B,EAEApd,WAAA,WACAgzC,EAAAud,KAAAhd,MACA/jB,EAAA8jB,YAAAC,QACSod,KAIThkE,EAAA8mD,uBACA9mD,EAAA8mD,qBAAA,SAAA31D,GACA,MAAA8yE,cAAA9yE,OlKs+hC6BhhB,KAAKJ,EAASH,EAAoB,MAIzD,SAASI,EAAQD,EAASH,GAEhC,YmKxiiCA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAE7E,QAAAD,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAA2W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GA0ErX,QAAAq7E,GAAA9b,EAAA92C,GACA,GAAAA,YAAA7f,GAAAne,YAAA,CACA,GAAA8a,GAAAkjB,EAAAnnB,OAKAg6E,EAAA,IAAA/1E,EAAArc,MAAAq2E,EAAAhqE,OAAArM,MAAAuF,KAAA4N,IAAAkjE,EAAAhqE,OAAArM,MAAAqc,EAAArc,OACAqyF,EAAA,IAAAh2E,EAAAjc,OAAAi2E,EAAAhqE,OAAAjM,OAAAmF,KAAA4N,IAAAkjE,EAAAhqE,OAAAjM,OAAAic,EAAAjc,OAMA,OAFAi2E,GAAAic,IAAAz2E,UAAAQ,EAAA,IAAA+1E,EAAAC,EAAA,IAAAhc,EAAAhqE,OAAArM,MAAAq2E,EAAAhqE,OAAAjM,SAEA,EAGA,SAWA,QAAAmyF,GAAAhzD,EAAAQ,GAEA,GAAAR,YAAA7f,GAAAne,YAKA,MAJAw+B,GAAAp0B,QAAA4zB,MAAA,GACAQ,EAAAxuB,KAAAguB,IAGA,CACK,IAAAA,EAAAlf,UAAAkf,EAAAlf,mBAAAX,GAAAle,QAAA,CACL,GAAA8c,GAAAihB,EAAAlf,SAAAjE,WAMA,OAJA2jB,GAAAp0B,QAAA2S,MAAA,GACAyhB,EAAAxuB,KAAA+M,IAGA,EAGA,SA1IAtgB,EAAAiB,YAAA,CAEA,IAAAwgB,GAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GAEA+yE,EAAA30F,EAAA,IAEA40F,EAAA3yF,EAAA0yF,GAYAE,EAAA,GAYAC,EAAA,SAAA1pC,GAMA,QAAA0pC,GAAAl7E,GACAnB,EAAAhC,KAAAq+E,EAEA,IAAAr6E,GAAA7B,EAAAnC,KAAA20C,EAAA7qD,KAAAkW,KAAAmD,GAsBA,OApBAa,GAAAmoB,iBAAAnoB,EAOAA,EAAAjM,OAAAC,SAAAC,cAAA,UACA+L,EAAAjM,OAAArM,MAAA0yF,EACAp6E,EAAAjM,OAAAjM,OAAAsyF,EAOAp6E,EAAAg6E,IAAAh6E,EAAAjM,OAAAI,WAAA,MAGA6L,EAAA0oB,SAAAuxD,EAAAJ,GACA75E,EAeA,MA7CA1B,GAAA+7E,EAAA1pC,GAuCA0pC,EAAAtzF,UAAAsY,QAAA,WACAsxC,EAAA5pD,UAAAsY,QAAAvZ,KAAAkW,MACAA,KAAAg+E,IAAA,KACAh+E,KAAAjI,OAAA,MAGAsmF,GACCF,EAAA5yF,QAYD7B,GAAA6B,QAAA8yF,EAkDAjzE,EAAAhd,eAAAg4D,eAAA,UAAAi4B,InK0jiCM,SAAS10F,EAAQD,GAEvB,YoKvsiCA,SAAAsY,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAF3FjU,EAAAiB,YAAA,CAWA,IAAA2zF,GAAA,WAIA,QAAAA,GAAAC,GACAv8E,EAAAhC,KAAAs+E,GAMAt+E,KAAAu+E,kBAMAv+E,KAAAw+E,WAAA,EAsBA,MAdAF,GAAAvzF,UAAAkiC,WAAA,WACAjtB,KAAAw+E,WAAAjB,KAAAhd,OASA+d,EAAAvzF,UAAAmiC,gBAAA,WACA,MAAAqwD,MAAAhd,MAAAvgE,KAAAw+E,WAAAx+E,KAAAu+E,iBAGAD,IAGA50F,GAAA6B,QAAA+yF,GpKitiCM,SAAS30F,EAAQD,EAASH,GAEhC,YqK9viCA,SAAAiC,GAAAJ,GAAsC,MAAAA,MAAAT,WAAAS,GAAuCG,QAAAH,GAE7E,QAAAD,GAAAC,GAAuC,GAAAA,KAAAT,WAA6B,MAAAS,EAAqB,IAAAC,KAAiB,UAAAD,EAAmB,OAAAE,KAAAF,GAAuBf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,KAAAD,EAAAC,GAAAF,EAAAE,GAAsG,OAAtBD,GAAAE,QAAAH,EAAsBC,EAE1P,QAAA2W,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAvE,WAAA,qCAE3F,QAAAwE,GAAAC,EAAAtY,GAAiD,IAAAsY,EAAa,SAAAC,gBAAA,4DAAyF,QAAAvY,GAAA,gBAAAA,IAAA,kBAAAA,GAAAsY,EAAAtY,EAEvJ,QAAAwY,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAA7E,WAAA,iEAAA6E,GAAuGD,GAAAxX,UAAAV,OAAAgW,OAAAmC,KAAAzX,WAAyE0X,aAAexY,MAAAsY,EAAA/X,YAAA,EAAAkY,UAAA,EAAAnY,cAAA,KAA6EiY,IAAAnY,OAAAsY,eAAAtY,OAAAsY,eAAAJ,EAAAC,GAAAD,EAAAjC,UAAAkC,GAwCrX,QAAAq7E,GAAA16E,EAAA8nB,GACA,MAAAA,aAAA7f,GAAAne,cAIAg+B,EAAAnmB,YAAA3B,EAAAuf,cACAvf,EAAA8gB,eAAAe,cAAAiG,IAGA,GAcA,QAAAwzD,GAAAt7E,EAAA8nB,GACA,MAAAA,aAAA7f,GAAA9d,YAGA29B,EAAA/e,OAAA+e,EAAAm8B,aAAAn8B,EAAA87B,OAAA5jD,EAAAwJ,QAAAm+C,SAAApoC,eACAvf,EAAAwJ,QAAAm+C,SAAAkD,eAAA/iC,IAGA,GAcA,QAAAgzD,GAAAhzD,EAAAQ,GAEA,GAAAR,YAAA7f,GAAAne,YAKA,MAJAw+B,GAAAp0B,QAAA4zB,MAAA,GACAQ,EAAAxuB,KAAAguB,IAGA,CACK,IAAAA,EAAAlf,UAAAkf,EAAAlf,mBAAAX,GAAAle,QAAA,CACL,GAAA8c,GAAAihB,EAAAlf,SAAAjE,WAMA,OAJA2jB,GAAAp0B,QAAA2S,MAAA,GACAyhB,EAAAxuB,KAAA+M,IAGA,EAGA,SAWA,QAAA00E,GAAAzzD,EAAAQ,GACA,MAAAR,aAAA7f,GAAA9d,WACAm+B,EAAAxuB,KAAAguB,IAEA,GAxIAvhC,EAAAiB,YAAA,CAEA,IAAAwgB,GAAA5hB,EAAA,GAEA6hB,EAAAjgB,EAAAggB,GAEA+yE,EAAA30F,EAAA,IAEA40F,EAAA3yF,EAAA0yF,GAkBAS,EAAA,SAAAhqC,GAMA,QAAAgqC,GAAAx7E,GACAnB,EAAAhC,KAAA2+E,EAEA,IAAA36E,GAAA7B,EAAAnC,KAAA20C,EAAA7qD,KAAAkW,KAAAmD,GAMA,OAJAa,GAAAmoB,iBAAAnoB,EAAAb,SAGAa,EAAA0oB,SAAAuxD,EAAAJ,GAAAnxD,SAAAgyD,EAAAD,GACAz6E,EAGA,MAjBA1B,GAAAq8E,EAAAhqC,GAiBAgqC,GACCR,EAAA5yF,QAYD7B,GAAA6B,QAAAozF,EAqFAvzE,EAAAjd,cAAAi4D,eAAA,UAAAu4B,IrKgxiCM,SAASh1F,EAAQD,EAASH,IAEJ,SAASowB,EAAQhwB,GsKl6iC7C,GAAA+vB,IAQC,WAqcD,QAAAklE,GAAAluD,EAAAmuD,GAGA,MADAnuD,GAAA3mB,IAAA80E,EAAA,GAAAA,EAAA,IACAnuD,EAWA,QAAAouD,GAAA/0E,EAAA9f,GAGA,MADA8f,GAAA8iB,IAAA5iC,GACA8f,EAaA,QAAArS,GAAA66E,EAAAwM,EAAAznF,GACA,OAAAA,EAAA1L,QACA,aAAA2mF,GAAAzoF,KAAAi1F,EACA,cAAAxM,GAAAzoF,KAAAi1F,EAAAznF,EAAA,GACA,cAAAi7E,GAAAzoF,KAAAi1F,EAAAznF,EAAA,GAAAA,EAAA,GACA,cAAAi7E,GAAAzoF,KAAAi1F,EAAAznF,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,MAAAi7E,GAAA76E,MAAAqnF,EAAAznF,GAaA,QAAA0nF,GAAAtgE,EAAAugE,EAAAC,EAAAC,GAIA,IAHA,GAAA/gF,IAAA,EACAxS,EAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,SAEAwS,EAAAxS,GAAA,CACA,GAAA3B,GAAAy0B,EAAAtgB,EACA6gF,GAAAE,EAAAl1F,EAAAi1F,EAAAj1F,GAAAy0B,GAEA,MAAAygE,GAYA,QAAAC,GAAA1gE,EAAAwgE,GAIA,IAHA,GAAA9gF,IAAA,EACAxS,EAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,SAEAwS,EAAAxS,GACAszF,EAAAxgE,EAAAtgB,KAAAsgB,MAAA,IAIA,MAAAA,GAYA,QAAA2gE,GAAA3gE,EAAAwgE,GAGA,IAFA,GAAAtzF,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,OAEAA,KACAszF,EAAAxgE,EAAA9yB,KAAA8yB,MAAA,IAIA,MAAAA,GAaA,QAAA4gE,GAAA5gE,EAAA6gE,GAIA,IAHA,GAAAnhF,IAAA,EACAxS,EAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,SAEAwS,EAAAxS,GACA,IAAA2zF,EAAA7gE,EAAAtgB,KAAAsgB,GACA,QAGA,UAYA,QAAA8gE,GAAA9gE,EAAA6gE,GAMA,IALA,GAAAnhF,IAAA,EACAxS,EAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,OACA6zF,EAAA,EACArgF,OAEAhB,EAAAxS,GAAA,CACA,GAAA3B,GAAAy0B,EAAAtgB,EACAmhF,GAAAt1F,EAAAmU,EAAAsgB,KACAtf,EAAAqgF,KAAAx1F,GAGA,MAAAmV,GAYA,QAAAsgF,GAAAhhE,EAAAz0B,GACA,GAAA2B,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,SAAAA,GAAA+zF,EAAAjhE,EAAAz0B,EAAA,MAYA,QAAA21F,GAAAlhE,EAAAz0B,EAAA41F,GAIA,IAHA,GAAAzhF,IAAA,EACAxS,EAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,SAEAwS,EAAAxS,GACA,GAAAi0F,EAAA51F,EAAAy0B,EAAAtgB,IACA,QAGA,UAYA,QAAA0hF,GAAAphE,EAAAwgE,GAKA,IAJA,GAAA9gF,IAAA,EACAxS,EAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,OACAwT,EAAAjB,MAAAvS,KAEAwS,EAAAxS,GACAwT,EAAAhB,GAAA8gF,EAAAxgE,EAAAtgB,KAAAsgB,EAEA,OAAAtf,GAWA,QAAA2gF,GAAArhE,EAAAshE,GAKA,IAJA,GAAA5hF,IAAA,EACAxS,EAAAo0F,EAAAp0F,OACA+/C,EAAAjtB,EAAA9yB,SAEAwS,EAAAxS,GACA8yB,EAAAitB,EAAAvtC,GAAA4hF,EAAA5hF,EAEA,OAAAsgB,GAeA,QAAAuhE,GAAAvhE,EAAAwgE,EAAAC,EAAAe,GACA,GAAA9hF,IAAA,EACAxS,EAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MAKA,KAHAs0F,GAAAt0F,IACAuzF,EAAAzgE,IAAAtgB,MAEAA,EAAAxS,GACAuzF,EAAAD,EAAAC,EAAAzgE,EAAAtgB,KAAAsgB,EAEA,OAAAygE,GAeA,QAAAgB,GAAAzhE,EAAAwgE,EAAAC,EAAAe,GACA,GAAAt0F,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MAIA,KAHAs0F,GAAAt0F,IACAuzF,EAAAzgE,IAAA9yB,IAEAA,KACAuzF,EAAAD,EAAAC,EAAAzgE,EAAA9yB,KAAA8yB,EAEA,OAAAygE,GAaA,QAAAiB,GAAA1hE,EAAA6gE,GAIA,IAHA,GAAAnhF,IAAA,EACAxS,EAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,SAEAwS,EAAAxS,GACA,GAAA2zF,EAAA7gE,EAAAtgB,KAAAsgB,GACA,QAGA,UAmBA,QAAA2hE,GAAA3rB,GACA,MAAAA,GAAA72D,MAAA,IAUA,QAAAyiF,GAAA5rB,GACA,MAAAA,GAAAjqD,MAAA81E,QAcA,QAAAC,GAAAC,EAAAlB,EAAAmB,GACA,GAAAthF,EAOA,OANAshF,GAAAD,EAAA,SAAAx2F,EAAAqB,EAAAm1F,GACA,GAAAlB,EAAAt1F,EAAAqB,EAAAm1F,GAEA,MADArhF,GAAA9T,GACA,IAGA8T,EAcA,QAAAuhF,GAAAjiE,EAAA6gE,EAAAqB,EAAAC,GAIA,IAHA,GAAAj1F,GAAA8yB,EAAA9yB,OACAwS,EAAAwiF,GAAAC,EAAA,MAEAA,EAAAziF,QAAAxS,GACA,GAAA2zF,EAAA7gE,EAAAtgB,KAAAsgB,GACA,MAAAtgB,EAGA,UAYA,QAAAuhF,GAAAjhE,EAAAz0B,EAAA22F,GACA,MAAA32F,OACA62F,EAAApiE,EAAAz0B,EAAA22F,GACAD,EAAAjiE,EAAAqiE,EAAAH,GAaA,QAAAI,GAAAtiE,EAAAz0B,EAAA22F,EAAAf,GAIA,IAHA,GAAAzhF,GAAAwiF,EAAA,EACAh1F,EAAA8yB,EAAA9yB,SAEAwS,EAAAxS,GACA,GAAAi0F,EAAAnhE,EAAAtgB,GAAAnU,GACA,MAAAmU,EAGA,UAUA,QAAA2iF,GAAA92F,GACA,MAAAA,OAYA,QAAAg3F,GAAAviE,EAAAwgE,GACA,GAAAtzF,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,GAAAs1F,EAAAxiE,EAAAwgE,GAAAtzF,EAAAu1F,GAUA,QAAAC,GAAA91F,GACA,gBAAAT,GACA,aAAAA,EAAAgB,GAAAhB,EAAAS,IAWA,QAAA+1F,GAAAx2F,GACA,gBAAAS,GACA,aAAAT,EAAAgB,GAAAhB,EAAAS,IAiBA,QAAAg2F,GAAAb,EAAAvB,EAAAC,EAAAe,EAAAQ,GAMA,MALAA,GAAAD,EAAA,SAAAx2F,EAAAmU,EAAAqiF,GACAtB,EAAAe,GACAA,GAAA,EAAAj2F,GACAi1F,EAAAC,EAAAl1F,EAAAmU,EAAAqiF,KAEAtB,EAaA,QAAAoC,GAAA7iE,EAAA8iE,GACA,GAAA51F,GAAA8yB,EAAA9yB,MAGA,KADA8yB,EAAA0a,KAAAooD,GACA51F,KACA8yB,EAAA9yB,GAAA8yB,EAAA9yB,GAAA3B,KAEA,OAAAy0B,GAYA,QAAAwiE,GAAAxiE,EAAAwgE,GAKA,IAJA,GAAA9/E,GACAhB,GAAA,EACAxS,EAAA8yB,EAAA9yB,SAEAwS,EAAAxS,GAAA,CACA,GAAA0yE,GAAA4gB,EAAAxgE,EAAAtgB,GACAkgE,KAAAzyE,KACAuT,MAAAvT,GAAAyyE,EAAAl/D,EAAAk/D,GAGA,MAAAl/D,GAYA,QAAAqiF,GAAA/2F,EAAAw0F,GAIA,IAHA,GAAA9gF,IAAA,EACAgB,EAAAjB,MAAAzT,KAEA0T,EAAA1T,GACA0U,EAAAhB,GAAA8gF,EAAA9gF,EAEA,OAAAgB,GAYA,QAAAsiF,GAAA72F,EAAAyd,GACA,MAAAw3E,GAAAx3E,EAAA,SAAAhd,GACA,OAAAA,EAAAT,EAAAS,MAWA,QAAAq2F,GAAApP,GACA,gBAAAtoF,GACA,MAAAsoF,GAAAtoF,IAcA,QAAA23F,GAAA/2F,EAAAyd,GACA,MAAAw3E,GAAAx3E,EAAA,SAAAhd,GACA,MAAAT,GAAAS,KAYA,QAAAu2F,GAAAC,EAAAx2F,GACA,MAAAw2F,GAAA3hF,IAAA7U,GAYA,QAAAy2F,GAAAC,EAAAC,GAIA,IAHA,GAAA7jF,IAAA,EACAxS,EAAAo2F,EAAAp2F,SAEAwS,EAAAxS,GAAA+zF,EAAAsC,EAAAD,EAAA5jF,GAAA,QACA,MAAAA,GAYA,QAAA8jF,GAAAF,EAAAC,GAGA,IAFA,GAAA7jF,GAAA4jF,EAAAp2F,OAEAwS,KAAAuhF,EAAAsC,EAAAD,EAAA5jF,GAAA,QACA,MAAAA,GAWA,QAAA+jF,GAAAzjE,EAAA0jE,GAIA,IAHA,GAAAx2F,GAAA8yB,EAAA9yB,OACAwT,EAAA,EAEAxT,KACA8yB,EAAA9yB,KAAAw2F,KACAhjF,CAGA,OAAAA,GA6BA,QAAAijF,GAAAC,GACA,WAAAC,GAAAD,GAWA,QAAAE,GAAA33F,EAAAS,GACA,aAAAT,EAAAgB,GAAAhB,EAAAS,GAUA,QAAAm3F,GAAA/tB,GACA,MAAAguB,IAAA7nE,KAAA65C,GAUA,QAAAiuB,GAAAjuB,GACA,MAAAkuB,IAAA/nE,KAAA65C,GAUA,QAAAmuB,GAAAr/E,GAIA,IAHA,GAAAjN,GACA6I,OAEA7I,EAAAiN,EAAA8zB,QAAA1K,MACAxtB,EAAAnC,KAAA1G,EAAAtM,MAEA,OAAAmV,GAUA,QAAA0jF,GAAApyD,GACA,GAAAtyB,IAAA,EACAgB,EAAAjB,MAAAuyB,EAAA75B,KAKA,OAHA65B,GAAAjiC,QAAA,SAAAxE,EAAAqB,GACA8T,IAAAhB,IAAA9S,EAAArB,KAEAmV,EAWA,QAAA2jF,GAAAxQ,EAAA5oE,GACA,gBAAAq5E,GACA,MAAAzQ,GAAA5oE,EAAAq5E,KAaA,QAAAC,GAAAvkE,EAAA0jE,GAMA,IALA,GAAAhkF,IAAA,EACAxS,EAAA8yB,EAAA9yB,OACA6zF,EAAA,EACArgF,OAEAhB,EAAAxS,GAAA,CACA,GAAA3B,GAAAy0B,EAAAtgB,EACAnU,KAAAm4F,GAAAn4F,IAAAi5F,KACAxkE,EAAAtgB,GAAA8kF,GACA9jF,EAAAqgF,KAAArhF,GAGA,MAAAgB,GAUA,QAAA+jF,GAAAp5E,GACA,GAAA3L,IAAA,EACAgB,EAAAjB,MAAA4L,EAAAlT,KAKA,OAHAkT,GAAAtb,QAAA,SAAAxE,GACAmV,IAAAhB,GAAAnU,IAEAmV,EAUA,QAAAgkF,GAAAr5E,GACA,GAAA3L,IAAA,EACAgB,EAAAjB,MAAA4L,EAAAlT,KAKA,OAHAkT,GAAAtb,QAAA,SAAAxE,GACAmV,IAAAhB,IAAAnU,OAEAmV,EAaA,QAAA0hF,GAAApiE,EAAAz0B,EAAA22F,GAIA,IAHA,GAAAxiF,GAAAwiF,EAAA,EACAh1F,EAAA8yB,EAAA9yB,SAEAwS,EAAAxS,GACA,GAAA8yB,EAAAtgB,KAAAnU,EACA,MAAAmU,EAGA,UAaA,QAAAilF,GAAA3kE,EAAAz0B,EAAA22F,GAEA,IADA,GAAAxiF,GAAAwiF,EAAA,EACAxiF,KACA,GAAAsgB,EAAAtgB,KAAAnU,EACA,MAAAmU,EAGA,OAAAA,GAUA,QAAAklF,GAAA5uB,GACA,MAAA+tB,GAAA/tB,GACA6uB,GAAA7uB,GACA8uB,GAAA9uB,GAUA,QAAA+uB,IAAA/uB,GACA,MAAA+tB,GAAA/tB,GACAgvB,GAAAhvB,GACA2rB,EAAA3rB,GAmBA,QAAA6uB,IAAA7uB,GAEA,IADA,GAAAt1D,GAAAukF,GAAAv1B,UAAA,EACAu1B,GAAA9oE,KAAA65C,MACAt1D,CAEA,OAAAA,GAUA,QAAAskF,IAAAhvB,GACA,MAAAA,GAAAjqD,MAAAk5E,QAUA,QAAAC,IAAAlvB,GACA,MAAAA,GAAAjqD,MAAAo5E,QAr2CA,GAAAh4F,IAGAkF,GAAA,SAGA+yF,GAAA,IAGAC,GAAA,kEACAC,GAAA,sBAGAC,GAAA,4BAGAC,GAAA,IAGAhB,GAAA,yBAGAiB,GAAA,EACAC,GAAA,EACAC,GAAA,EAGAC,GAAA,EACAC,GAAA,EAGAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IAGAC,GAAA,GACAC,GAAA,MAGAC,GAAA,IACAC,GAAA,GAGAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAGAC,GAAA,IACAC,GAAA,iBACAC,GAAA,uBACAxE,GAAA,IAGAyE,GAAA,WACAC,GAAAD,GAAA,EACAE,GAAAF,KAAA,EAGAG,KACA,MAAAhB,KACA,OAAAP,KACA,UAAAC,KACA,QAAAE,KACA,aAAAC,KACA,OAAAK,KACA,UAAAJ,KACA,eAAAC,KACA,QAAAE,KAIAgB,GAAA,qBACAC,GAAA,iBACAC,GAAA,yBACAC,GAAA,mBACAC,GAAA,gBACAC,GAAA,wBACAC,GAAA,iBACAC,GAAA,oBACAC,GAAA,6BACAC,GAAA,eACAC,GAAA,kBACAC,GAAA,gBACAC,GAAA,kBACAC,GAAA,mBACAC,GAAA,iBACAC,GAAA,kBACAC,GAAA,eACAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,qBACAC,GAAA,mBACAC,GAAA,mBAEAC,GAAA,uBACAC,GAAA,oBACAC,GAAA,wBACAC,GAAA,wBACAC,GAAA,qBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,6BACAC,GAAA,uBACAC,GAAA,uBAGAC,GAAA,iBACAC,GAAA,qBACAC,GAAA,gCAGAC,GAAA,4BACAC,GAAA,WACAC,GAAA3tE,OAAAytE,GAAAtkF,QACAykF,GAAA5tE,OAAA0tE,GAAAvkF,QAGA0kF,GAAA,mBACAC,GAAA,kBACAC,GAAA,mBAGAC,GAAA,mDACAC,GAAA,QACAC,GAAA,MACAC,GAAA,mGAMAC,GAAA,sBACAC,GAAAruE,OAAAouE,GAAAjlF,QAGAmlF,GAAA,aACAC,GAAA,OACAC,GAAA,OAGAC,GAAA,4CACAC,GAAA,oCACAC,GAAA,QAGA/I,GAAA,4CAGAgJ,GAAA,WAMAC,GAAA,kCAGAC,GAAA,OAGAC,GAAA,qBAGAC,GAAA,aAGAC,GAAA,8BAGAC,GAAA,cAGAC,GAAA,mBAGAC,GAAA,8CAGAC,GAAA,OAGAC,GAAA,yBAGAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,kBACAC,GAAAH,GAAAC,GAAAC,GACAE,GAAA,kBACAC,GAAA,4BACAC,GAAA,uBACAC,GAAA,+CACAC,GAAA,kBACAC,GAAA,+JACAC,GAAA,4BACAC,GAAA,iBACAC,GAAAN,GAAAC,GAAAC,GAAAC,GAGAI,GAAA,OACAC,GAAA,IAAAf,GAAA,IACAgB,GAAA,IAAAH,GAAA,IACAI,GAAA,IAAAb,GAAA,IACAc,GAAA,OACAC,GAAA,IAAAd,GAAA,IACAe,GAAA,IAAAd,GAAA,IACAe,GAAA,KAAArB,GAAAa,GAAAK,GAAAb,GAAAC,GAAAK,GAAA,IACAW,GAAA,2BACAC,GAAA,MAAAN,GAAA,IAAAK,GAAA,IACAE,GAAA,KAAAxB,GAAA,IACAyB,GAAA,kCACAC,GAAA,qCACAC,GAAA,IAAAhB,GAAA,IACAiB,GAAA,UAGAC,GAAA,MAAAT,GAAA,IAAAC,GAAA,IACAS,GAAA,MAAAH,GAAA,IAAAN,GAAA,IACAU,GAAA,MAAAjB,GAAA,yBACAkB,GAAA,MAAAlB,GAAA,yBACAmB,GAAAV,GAAA,IACAW,GAAA,IAAAtB,GAAA,KACAuB,GAAA,MAAAP,GAAA,OAAAJ,GAAAC,GAAAC,IAAA9tF,KAAA,SAAAsuF,GAAAD,GAAA,KACAG,GAAA,4CACAC,GAAA,4CACAC,GAAAJ,GAAAD,GAAAE,GACAI,GAAA,OAAApB,GAAAM,GAAAC,IAAA9tF,KAAA,SAAA0uF,GACAE,GAAA,OAAAhB,GAAAP,GAAA,IAAAA,GAAAQ,GAAAC,GAAAX,IAAAntF,KAAA,SAGA6uF,GAAAhyE,OAAAqwE,GAAA,KAMA4B,GAAAjyE,OAAAwwE,GAAA,KAGAxH,GAAAhpE,OAAA6wE,GAAA,MAAAA,GAAA,KAAAkB,GAAAF,GAAA,KAGA3I,GAAAlpE,QACAkxE,GAAA,IAAAP,GAAA,IAAAW,GAAA,OAAAf,GAAAW,GAAA,KAAA/tF,KAAA,SACAkuF,GAAA,IAAAE,GAAA,OAAAhB,GAAAW,GAAAE,GAAA,KAAAjuF,KAAA,SACA+tF,GAAA,IAAAE,GAAA,IAAAE,GACAJ,GAAA,IAAAK,GACAK,GACAD,GACAlB,GACAqB,IACA3uF,KAAA,UAGA4kF,GAAA/nE,OAAA,IAAAmxE,GAAA5B,GAAAI,GAAAQ,GAAA,KAGAlI,GAAA,sEAGAiK,IACA,yEACA,uEACA,oEACA,0DACA,uDAIAC,IAAA,EAGAC,KACAA,IAAAvF,IAAAuF,GAAAtF,IACAsF,GAAArF,IAAAqF,GAAApF,IACAoF,GAAAnF,IAAAmF,GAAAlF,IACAkF,GAAAjF,IAAAiF,GAAAhF,IACAgF,GAAA/E,KAAA,EACA+E,GAAA/G,IAAA+G,GAAA9G,IACA8G,GAAAzF,IAAAyF,GAAA5G,IACA4G,GAAAxF,IAAAwF,GAAA3G,IACA2G,GAAAzG,IAAAyG,GAAAxG,IACAwG,GAAAtG,IAAAsG,GAAArG,IACAqG,GAAAnG,IAAAmG,GAAAhG,IACAgG,GAAA/F,IAAA+F,GAAA9F,IACA8F,GAAA3F,KAAA,CAGA,IAAA4F,MACAA,IAAAhH,IAAAgH,GAAA/G,IACA+G,GAAA1F,IAAA0F,GAAAzF,IACAyF,GAAA7G,IAAA6G,GAAA5G,IACA4G,GAAAxF,IAAAwF,GAAAvF,IACAuF,GAAAtF,IAAAsF,GAAArF,IACAqF,GAAApF,IAAAoF,GAAAvG,IACAuG,GAAAtG,IAAAsG,GAAApG,IACAoG,GAAAjG,IAAAiG,GAAAhG,IACAgG,GAAA/F,IAAA+F,GAAA9F,IACA8F,GAAAnF,IAAAmF,GAAAlF,IACAkF,GAAAjF,IAAAiF,GAAAhF,KAAA,EACAgF,GAAA1G,IAAA0G,GAAAzG,IACAyG,GAAA5F,KAAA,CAGA,IAAA6F,KAEAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAEAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KAIAC,IACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,SAIAC,IACAC,QAAU,IACVC,OAAS,IACTC,OAAS,IACTC,SAAW,IACXC,QAAU,KAIVpX,IACAqX,KAAA,KACAP,IAAA,IACAQ,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAIAC,GAAAlkG,WACAmkG,GAAAhqD,SAGAiqD,GAAA,gBAAAxgF,SAAAtvB,iBAAAsvB,EAGAygF,GAAA,gBAAAh4F,kBAAA/X,iBAAA+X,KAGA/C,GAAA86F,IAAAC,IAAArsF,SAAA,iBAGAssF,GAAA,gBAAA3wG,UAAA4wG,UAAA5wG,EAGA6wG,GAAAF,IAAA,gBAAA1wG,UAAA2wG,UAAA3wG,EAGA6wG,GAAAD,OAAA7wG,UAAA2wG,GAGAI,GAAAD,IAAAL,GAAA99F,QAGAq+F,GAAA,WACA,IACA,MAAAD,QAAAE,SAAAF,GAAAE,QAAA,QACK,MAAAniG,QAILoiG,GAAAF,OAAAG,cACAC,GAAAJ,OAAAK,OACAC,GAAAN,OAAAO,MACAC,GAAAR,OAAAS,SACAC,GAAAV,OAAAW,MACAC,GAAAZ,OAAAa,aAuTA/X,GAAApC,EAAA,UAsWAoa,GAAAna,EAAA4L,IASAwO,GAAApa,EAAA2X,IAqOA0C,GAAAra,EAAAiY,IAsEAqC,GAAA,QAAAA,GAAA77F,GAkPA,QAAA87F,GAAA3xG,GACA,GAAA4xG,GAAA5xG,KAAAwoC,GAAAxoC,kBAAA6xG,IAAA,CACA,GAAA7xG,YAAA8xG,GACA,MAAA9xG,EAEA,IAAAe,GAAAlB,KAAAG,EAAA,eACA,MAAA+xG,IAAA/xG,GAGA,UAAA8xG,GAAA9xG,GAgCA,QAAAgyG,MAWA,QAAAF,GAAA9xG,EAAAiyG,GACAl8F,KAAAm8F,YAAAlyG,EACA+V,KAAAo8F,eACAp8F,KAAAq8F,YAAAH,EACAl8F,KAAAs8F,UAAA,EACAt8F,KAAAu8F,WAAA1wG,GAgFA,QAAAiwG,GAAA7xG,GACA+V,KAAAm8F,YAAAlyG,EACA+V,KAAAo8F,eACAp8F,KAAAw8F,QAAA,EACAx8F,KAAAy8F,cAAA,EACAz8F,KAAA08F,iBACA18F,KAAA28F,cAAA/W,GACA5lF,KAAA48F,aAWA,QAAAC,KACA,GAAAz9F,GAAA,GAAA08F,GAAA97F,KAAAm8F,YAOA,OANA/8F,GAAAg9F,YAAAU,GAAA98F,KAAAo8F,aACAh9F,EAAAo9F,QAAAx8F,KAAAw8F,QACAp9F,EAAAq9F,aAAAz8F,KAAAy8F,aACAr9F,EAAAs9F,cAAAI,GAAA98F,KAAA08F,eACAt9F,EAAAu9F,cAAA38F,KAAA28F,cACAv9F,EAAAw9F,UAAAE,GAAA98F,KAAA48F,WACAx9F,EAWA,QAAA29F,KACA,GAAA/8F,KAAAy8F,aAAA,CACA,GAAAr9F,GAAA,GAAA08F,GAAA97F,KACAZ,GAAAo9F,SAAA,EACAp9F,EAAAq9F,cAAA,MAEAr9F,GAAAY,KAAA6J,QACAzK,EAAAo9F,UAAA,CAEA,OAAAp9F,GAWA,QAAA49F,MACA,GAAAt+E,GAAA1e,KAAAm8F,YAAAlyG,QACAqV,EAAAU,KAAAw8F,QACAS,EAAAxqE,GAAA/T,GACAw+E,EAAA59F,EAAA,EACA69F,EAAAF,EAAAv+E,EAAA9yB,OAAA,EACAiP,EAAAuiG,GAAA,EAAAD,EAAAn9F,KAAA48F,WACAn+F,EAAA5D,EAAA4D,MACAC,EAAA7D,EAAA6D,IACA9S,EAAA8S,EAAAD,EACAL,EAAA8+F,EAAAx+F,EAAAD,EAAA,EACA4+F,EAAAr9F,KAAA08F,cACAY,EAAAD,EAAAzxG,OACA6zF,EAAA,EACA8d,EAAAC,GAAA5xG,EAAAoU,KAAA28F,cAEA,KAAAM,GAAAE,EAAArZ,IACAqZ,GAAAvxG,GAAA2xG,GAAA3xG,EACA,MAAA6xG,IAAA/+E,EAAA1e,KAAAo8F,YAEA,IAAAh9F,KAEAs+F,GACA,KAAA9xG,KAAA6zF,EAAA8d,GAAA,CACAn/F,GAAAkB,CAKA,KAHA,GAAAq+F,IAAA,EACA1zG,EAAAy0B,EAAAtgB,KAEAu/F,EAAAL,GAAA,CACA,GAAA/mG,GAAA8mG,EAAAM,GACAze,EAAA3oF,EAAA2oF,SACAhoF,EAAAX,EAAAW,KACA0mG,EAAA1e,EAAAj1F,EAEA,IAAAiN,GAAAquF,GACAt7F,EAAA2zG,MACW,KAAAA,EAAA,CACX,GAAA1mG,GAAAouF,GACA,QAAAoY,EAEA,MAAAA,IAIAt+F,EAAAqgF,KAAAx1F,EAEA,MAAAmV,GAgBA,QAAAy+F,IAAAC,GACA,GAAA1/F,IAAA,EACAxS,EAAA,MAAAkyG,EAAA,EAAAA,EAAAlyG,MAGA,KADAoU,KAAAmQ,UACA/R,EAAAxS,GAAA,CACA,GAAAmyG,GAAAD,EAAA1/F,EACA4B,MAAA+J,IAAAg0F,EAAA,GAAAA,EAAA,KAWA,QAAAC,MACAh+F,KAAAi+F,SAAAC,MAAA,SACAl+F,KAAAnJ,KAAA,EAaA,QAAAsnG,IAAA7yG,GACA,GAAA8T,GAAAY,KAAAG,IAAA7U,UAAA0U,MAAAi+F,SAAA3yG,EAEA,OADA0U,MAAAnJ,MAAAuI,EAAA,IACAA,EAYA,QAAAg/F,IAAA9yG,GACA,GAAAiL,GAAAyJ,KAAAi+F,QACA,IAAAC,GAAA,CACA,GAAA9+F,GAAA7I,EAAAjL,EACA,OAAA8T,KAAA6kF,GAAAp4F,GAAAuT,EAEA,MAAApU,IAAAlB,KAAAyM,EAAAjL,GAAAiL,EAAAjL,GAAAO,GAYA,QAAAwyG,IAAA/yG,GACA,GAAAiL,GAAAyJ,KAAAi+F,QACA,OAAAC,IAAA3nG,EAAAjL,KAAAO,GAAAb,GAAAlB,KAAAyM,EAAAjL,GAaA,QAAAgzG,IAAAhzG,EAAArB,GACA,GAAAsM,GAAAyJ,KAAAi+F,QAGA,OAFAj+F,MAAAnJ,MAAAmJ,KAAAG,IAAA7U,GAAA,IACAiL,EAAAjL,GAAA4yG,IAAAj0G,IAAA4B,GAAAo4F,GAAAh6F,EACA+V,KAmBA,QAAAu+F,IAAAT,GACA,GAAA1/F,IAAA,EACAxS,EAAA,MAAAkyG,EAAA,EAAAA,EAAAlyG,MAGA,KADAoU,KAAAmQ,UACA/R,EAAAxS,GAAA,CACA,GAAAmyG,GAAAD,EAAA1/F,EACA4B,MAAA+J,IAAAg0F,EAAA,GAAAA,EAAA,KAWA,QAAAS,MACAx+F,KAAAi+F,YACAj+F,KAAAnJ,KAAA,EAYA,QAAA4nG,IAAAnzG,GACA,GAAAiL,GAAAyJ,KAAAi+F,SACA7/F,EAAAsgG,GAAAnoG,EAAAjL,EAEA,IAAA8S,EAAA,EACA,QAEA,IAAAgwD,GAAA73D,EAAA3K,OAAA,CAOA,OANAwS,IAAAgwD,EACA73D,EAAAgc,MAEA5V,GAAA7S,KAAAyM,EAAA6H,EAAA,KAEA4B,KAAAnJ,MACA,EAYA,QAAA8nG,IAAArzG,GACA,GAAAiL,GAAAyJ,KAAAi+F,SACA7/F,EAAAsgG,GAAAnoG,EAAAjL,EAEA,OAAA8S,GAAA,EAAAvS,GAAA0K,EAAA6H,GAAA,GAYA,QAAAwgG,IAAAtzG,GACA,MAAAozG,IAAA1+F,KAAAi+F,SAAA3yG,IAAA,EAaA,QAAAuzG,IAAAvzG,EAAArB,GACA,GAAAsM,GAAAyJ,KAAAi+F,SACA7/F,EAAAsgG,GAAAnoG,EAAAjL,EAQA,OANA8S,GAAA,KACA4B,KAAAnJ,KACAN,EAAA0G,MAAA3R,EAAArB,KAEAsM,EAAA6H,GAAA,GAAAnU,EAEA+V,KAmBA,QAAA8+F,IAAAhB,GACA,GAAA1/F,IAAA,EACAxS,EAAA,MAAAkyG,EAAA,EAAAA,EAAAlyG,MAGA,KADAoU,KAAAmQ,UACA/R,EAAAxS,GAAA,CACA,GAAAmyG,GAAAD,EAAA1/F,EACA4B,MAAA+J,IAAAg0F,EAAA,GAAAA,EAAA,KAWA,QAAAgB,MACA/+F,KAAAnJ,KAAA,EACAmJ,KAAAi+F,UACAe,KAAA,GAAAnB,IACAntE,IAAA,IAAAuuE,IAAAV,IACA7pC,OAAA,GAAAmpC,KAaA,QAAAqB,IAAA5zG,GACA,GAAA8T,GAAA+/F,GAAAn/F,KAAA1U,GAAA,OAAAA,EAEA,OADA0U,MAAAnJ,MAAAuI,EAAA,IACAA,EAYA,QAAAggG,IAAA9zG,GACA,MAAA6zG,IAAAn/F,KAAA1U,GAAAb,IAAAa,GAYA,QAAA+zG,IAAA/zG,GACA,MAAA6zG,IAAAn/F,KAAA1U,GAAA6U,IAAA7U,GAaA,QAAAg0G,IAAAh0G,EAAArB,GACA,GAAAsM,GAAA4oG,GAAAn/F,KAAA1U,GACAuL,EAAAN,EAAAM,IAIA,OAFAN,GAAAwT,IAAAze,EAAArB,GACA+V,KAAAnJ,MAAAN,EAAAM,QAAA,IACAmJ,KAoBA,QAAAu/F,IAAAvf,GACA,GAAA5hF,IAAA,EACAxS,EAAA,MAAAo0F,EAAA,EAAAA,EAAAp0F,MAGA,KADAoU,KAAAi+F,SAAA,GAAAa,MACA1gG,EAAAxS,GACAoU,KAAA6sB,IAAAmzD,EAAA5hF,IAcA,QAAAohG,IAAAv1G,GAEA,MADA+V,MAAAi+F,SAAAl0F,IAAA9f,EAAAg6F,IACAjkF,KAYA,QAAAy/F,IAAAx1G,GACA,MAAA+V,MAAAi+F,SAAA99F,IAAAlW,GAgBA,QAAAy1G,IAAA5B,GACA,GAAAvnG,GAAAyJ,KAAAi+F,SAAA,GAAAM,IAAAT,EACA99F,MAAAnJ,KAAAN,EAAAM,KAUA,QAAA8oG,MACA3/F,KAAAi+F,SAAA,GAAAM,IACAv+F,KAAAnJ,KAAA,EAYA,QAAA+oG,IAAAt0G,GACA,GAAAiL,GAAAyJ,KAAAi+F,SACA7+F,EAAA7I,EAAA,OAAAjL,EAGA,OADA0U,MAAAnJ,KAAAN,EAAAM,KACAuI,EAYA,QAAAygG,IAAAv0G,GACA,MAAA0U,MAAAi+F,SAAAxzG,IAAAa,GAYA,QAAAw0G,IAAAx0G,GACA,MAAA0U,MAAAi+F,SAAA99F,IAAA7U,GAaA,QAAAy0G,IAAAz0G,EAAArB,GACA,GAAAsM,GAAAyJ,KAAAi+F,QACA,IAAA1nG,YAAAgoG,IAAA;AACA,GAAAyB,GAAAzpG,EAAA0nG,QACA,KAAAgB,IAAAe,EAAAp0G,OAAAk4F,GAAA,EAGA,MAFAkc,GAAA/iG,MAAA3R,EAAArB,IACA+V,KAAAnJ,OAAAN,EAAAM,KACAmJ,IAEAzJ,GAAAyJ,KAAAi+F,SAAA,GAAAa,IAAAkB,GAIA,MAFAzpG,GAAAwT,IAAAze,EAAArB,GACA+V,KAAAnJ,KAAAN,EAAAM,KACAmJ,KAoBA,QAAAigG,IAAAh2G,EAAAi2G,GACA,GAAAjD,GAAAxqE,GAAAxoC,GACAk2G,GAAAlD,GAAAmD,GAAAn2G,GACAo2G,GAAApD,IAAAkD,GAAAG,GAAAr2G,GACAs2G,GAAAtD,IAAAkD,IAAAE,GAAA9E,GAAAtxG,GACAu2G,EAAAvD,GAAAkD,GAAAE,GAAAE,EACAnhG,EAAAohG,EAAA/e,EAAAx3F,EAAA2B,OAAAwyE,OACAxyE,EAAAwT,EAAAxT,MAEA,QAAAN,KAAArB,IACAi2G,IAAAl1G,GAAAlB,KAAAG,EAAAqB,IACAk1G,IAEA,UAAAl1G,GAEA+0G,IAAA,UAAA/0G,GAAA,UAAAA,IAEAi1G,IAAA,UAAAj1G,GAAA,cAAAA,GAAA,cAAAA,IAEAm1G,GAAAn1G,EAAAM,KAEAwT,EAAAnC,KAAA3R,EAGA,OAAA8T,GAUA,QAAAshG,IAAAhiF,GACA,GAAA9yB,GAAA8yB,EAAA9yB,MACA,OAAAA,GAAA8yB,EAAAiiF,GAAA,EAAA/0G,EAAA,IAAAC,GAWA,QAAA+0G,IAAAliF,EAAAh0B,GACA,MAAAm2G,IAAA/D,GAAAp+E,GAAAoiF,GAAAp2G,EAAA,EAAAg0B,EAAA9yB,SAUA,QAAAm1G,IAAAriF,GACA,MAAAmiF,IAAA/D,GAAAp+E,IAaA,QAAAsiF,IAAAC,EAAAC,EAAA51G,EAAAT,GACA,MAAAo2G,KAAAp1G,IACAs1G,GAAAF,EAAAG,GAAA91G,MAAAN,GAAAlB,KAAAe,EAAAS,GACA41G,EAEAD,EAYA,QAAAI,IAAAx2G,EAAAS,EAAArB,IACAA,IAAA4B,IAAAs1G,GAAAt2G,EAAAS,GAAArB,MACAA,IAAA4B,IAAAP,IAAAT,KACAy2G,GAAAz2G,EAAAS,EAAArB,GAcA,QAAAs3G,IAAA12G,EAAAS,EAAArB,GACA,GAAAg3G,GAAAp2G,EAAAS,EACAN,IAAAlB,KAAAe,EAAAS,IAAA61G,GAAAF,EAAAh3G,KACAA,IAAA4B,IAAAP,IAAAT,KACAy2G,GAAAz2G,EAAAS,EAAArB,GAYA,QAAAy0G,IAAAhgF,EAAApzB,GAEA,IADA,GAAAM,GAAA8yB,EAAA9yB,OACAA,KACA,GAAAu1G,GAAAziF,EAAA9yB,GAAA,GAAAN,GACA,MAAAM,EAGA,UAcA,QAAA41G,IAAA/gB,EAAAxB,EAAAC,EAAAC,GAIA,MAHAsiB,IAAAhhB,EAAA,SAAAx2F,EAAAqB,EAAAm1F,GACAxB,EAAAE,EAAAl1F,EAAAi1F,EAAAj1F,GAAAw2F,KAEAtB,EAYA,QAAAuiB,IAAA72G,EAAAiZ,GACA,MAAAjZ,IAAA82G,GAAA79F,EAAAtV,GAAAsV,GAAAjZ,GAYA,QAAA+2G,IAAA/2G,EAAAiZ,GACA,MAAAjZ,IAAA82G,GAAA79F,EAAA+9F,GAAA/9F,GAAAjZ,GAYA,QAAAy2G,IAAAz2G,EAAAS,EAAArB,GACA,aAAAqB,GAAAhB,GACAA,GAAAO,EAAAS,GACAf,cAAA,EACAC,YAAA,EACAP,QACAyY,UAAA,IAGA7X,EAAAS,GAAArB,EAYA,QAAA63G,IAAAj3G,EAAAqT,GAMA,IALA,GAAAE,IAAA,EACAxS,EAAAsS,EAAAtS,OACAwT,EAAAjB,GAAAvS,GACAm2G,EAAA,MAAAl3G,IAEAuT,EAAAxS,GACAwT,EAAAhB,GAAA2jG,EAAAl2G,GAAApB,GAAAI,EAAAqT,EAAAE,GAEA,OAAAgB,GAYA,QAAA0hG,IAAAkB,EAAAC,EAAAC,GASA,MARAF,SACAE,IAAAr2G,KACAm2G,KAAAE,EAAAF,EAAAE,GAEAD,IAAAp2G,KACAm2G,KAAAC,EAAAD,EAAAC,IAGAD,EAmBA,QAAAG,IAAAl4G,EAAAm4G,EAAAC,EAAA/2G,EAAAT,EAAA2oE,GACA,GAAAp0D,GACAkjG,EAAAF,EAAAje,GACAoe,EAAAH,EAAAhe,GACAoe,EAAAJ,EAAA/d,EAKA,IAHAge,IACAjjG,EAAAvU,EAAAw3G,EAAAp4G,EAAAqB,EAAAT,EAAA2oE,GAAA6uC,EAAAp4G,IAEAmV,IAAAvT,GACA,MAAAuT,EAEA,KAAAqjG,GAAAx4G,GACA,MAAAA,EAEA,IAAAgzG,GAAAxqE,GAAAxoC,EACA,IAAAgzG,GAEA,GADA79F,EAAAsjG,GAAAz4G,IACAq4G,EACA,MAAAxF,IAAA7yG,EAAAmV,OAEO,CACP,GAAAujG,GAAAC,GAAA34G,GACA44G,EAAAF,GAAApc,IAAAoc,GAAAnc,EAEA,IAAA8Z,GAAAr2G,GACA,MAAA64G,IAAA74G,EAAAq4G,EAEA,IAAAK,GAAA/b,IAAA+b,GAAA3c,IAAA6c,IAAAh4G,GAEA,GADAuU,EAAAmjG,GAAAM,KAA0CE,GAAA94G,IAC1Cq4G,EACA,MAAAC,GACAS,GAAA/4G,EAAA23G,GAAAxiG,EAAAnV,IACAg5G,GAAAh5G,EAAAy3G,GAAAtiG,EAAAnV,QAES,CACT,IAAA+iG,GAAA2V,GACA,MAAA93G,GAAAZ,IAEAmV,GAAA8jG,GAAAj5G,EAAA04G,EAAAR,GAAAG,IAIA9uC,MAAA,GAAAksC,IACA,IAAAyD,GAAA3vC,EAAA/oE,IAAAR,EACA,IAAAk5G,EACA,MAAAA,EAEA3vC,GAAAzpD,IAAA9f,EAAAmV,EAEA,IAAAgkG,GAAAZ,EACAD,EAAAc,GAAAC,GACAf,EAAAV,GAAArzG,GAEA8Z,EAAA20F,EAAApxG,GAAAu3G,EAAAn5G,EASA,OARAm1F,GAAA92E,GAAAre,EAAA,SAAAs5G,EAAAj4G,GACAgd,IACAhd,EAAAi4G,EACAA,EAAAt5G,EAAAqB,IAGAi2G,GAAAniG,EAAA9T,EAAA62G,GAAAoB,EAAAnB,EAAAC,EAAA/2G,EAAArB,EAAAupE,MAEAp0D,EAUA,QAAAokG,IAAA1/F,GACA,GAAAwE,GAAA9Z,GAAAsV,EACA,iBAAAjZ,GACA,MAAA44G,IAAA54G,EAAAiZ,EAAAwE,IAYA,QAAAm7F,IAAA54G,EAAAiZ,EAAAwE,GACA,GAAA1c,GAAA0c,EAAA1c,MACA,UAAAf,EACA,OAAAe,CAGA,KADAf,EAAAR,GAAAQ,GACAe,KAAA,CACA,GAAAN,GAAAgd,EAAA1c,GACA2zF,EAAAz7E,EAAAxY,GACArB,EAAAY,EAAAS,EAEA,IAAArB,IAAA4B,MAAAP,IAAAT,MAAA00F,EAAAt1F,GACA,SAGA,SAaA,QAAAy5G,IAAAnxB,EAAAoxB,EAAArsG,GACA,qBAAAi7E,GACA,SAAA50E,IAAAqmF,GAEA,OAAAh3D,IAAA,WAAoCulD,EAAA76E,MAAA7L,GAAAyL,IAA+BqsG,GAcnE,QAAAC,IAAAllF,EAAAshE,EAAAd,EAAAW,GACA,GAAAzhF,IAAA,EACAylG,EAAAnkB,EACAokB,GAAA,EACAl4G,EAAA8yB,EAAA9yB,OACAwT,KACA2kG,EAAA/jB,EAAAp0F,MAEA,KAAAA,EACA,MAAAwT,EAEA8/E,KACAc,EAAAF,EAAAE,EAAA2B,EAAAzC,KAEAW,GACAgkB,EAAAjkB,EACAkkB,GAAA,GAEA9jB,EAAAp0F,QAAAk4F,KACA+f,EAAAhiB,EACAiiB,GAAA,EACA9jB,EAAA,GAAAuf,IAAAvf,GAEA0d,GACA,OAAAt/F,EAAAxS,GAAA,CACA,GAAA3B,GAAAy0B,EAAAtgB,GACAw/F,EAAA,MAAA1e,EAAAj1F,EAAAi1F,EAAAj1F,EAGA,IADAA,EAAA41F,GAAA,IAAA51F,IAAA,EACA65G,GAAAlG,MAAA,CAEA,IADA,GAAAoG,GAAAD,EACAC,KACA,GAAAhkB,EAAAgkB,KAAApG,EACA,QAAAF,EAGAt+F,GAAAnC,KAAAhT,OAEA45G,GAAA7jB,EAAA4d,EAAA/d,IACAzgF,EAAAnC,KAAAhT,GAGA,MAAAmV,GAgCA,QAAA6kG,IAAAxjB,EAAAlB,GACA,GAAAngF,IAAA,CAKA,OAJAqiG,IAAAhhB,EAAA,SAAAx2F,EAAAmU,EAAAqiF,GAEA,MADArhF,KAAAmgF,EAAAt1F,EAAAmU,EAAAqiF,KAGArhF,EAaA,QAAA8kG,IAAAxlF,EAAAwgE,EAAAW,GAIA,IAHA,GAAAzhF,IAAA,EACAxS,EAAA8yB,EAAA9yB,SAEAwS,EAAAxS,GAAA,CACA,GAAA3B,GAAAy0B,EAAAtgB,GACAkgE,EAAA4gB,EAAAj1F,EAEA,UAAAq0E,IAAAs/B,IAAA/xG,GACAyyE,QAAA6lC,GAAA7lC,GACAuhB,EAAAvhB,EAAAs/B,IAEA,GAAAA,GAAAt/B,EACAl/D,EAAAnV,EAGA,MAAAmV,GAaA,QAAAglG,IAAA1lF,EAAAz0B,EAAAwU,EAAAC,GACA,GAAA9S,GAAA8yB,EAAA9yB,MAWA,KATA6S,EAAA4lG,GAAA5lG,GACAA,EAAA,IACAA,KAAA7S,EAAA,EAAAA,EAAA6S,GAEAC,MAAA7S,IAAA6S,EAAA9S,IAAAy4G,GAAA3lG,GACAA,EAAA,IACAA,GAAA9S,GAEA8S,EAAAD,EAAAC,EAAA,EAAA4lG,GAAA5lG,GACAD,EAAAC,GACAggB,EAAAjgB,KAAAxU,CAEA,OAAAy0B,GAWA,QAAA6lF,IAAA9jB,EAAAlB,GACA,GAAAngF,KAMA,OALAqiG,IAAAhhB,EAAA,SAAAx2F,EAAAmU,EAAAqiF,GACAlB,EAAAt1F,EAAAmU,EAAAqiF,IACArhF,EAAAnC,KAAAhT,KAGAmV,EAcA,QAAAolG,IAAA9lF,EAAA+lF,EAAAllB,EAAAmlB,EAAAtlG,GACA,GAAAhB,IAAA,EACAxS,EAAA8yB,EAAA9yB,MAKA,KAHA2zF,MAAAolB,IACAvlG,YAEAhB,EAAAxS,GAAA,CACA,GAAA3B,GAAAy0B,EAAAtgB,EACAqmG,GAAA,GAAAllB,EAAAt1F,GACAw6G,EAAA,EAEAD,GAAAv6G,EAAAw6G,EAAA,EAAAllB,EAAAmlB,EAAAtlG,GAEA2gF,EAAA3gF,EAAAnV,GAESy6G,IACTtlG,IAAAxT,QAAA3B,GAGA,MAAAmV,GAoCA,QAAAwlG,IAAA/5G,EAAAq0F,GACA,MAAAr0F,IAAAg6G,GAAAh6G,EAAAq0F,EAAA1wF,IAWA,QAAAs2G,IAAAj6G,EAAAq0F,GACA,MAAAr0F,IAAAk6G,GAAAl6G,EAAAq0F,EAAA1wF,IAYA,QAAAw2G,IAAAn6G,EAAAyd,GACA,MAAAk3E,GAAAl3E,EAAA,SAAAhd,GACA,MAAA25G,IAAAp6G,EAAAS,MAYA,QAAA45G,IAAAr6G,EAAA4S,GACAA,EAAA0nG,GAAA1nG,EAAA5S,EAKA,KAHA,GAAAuT,GAAA,EACAxS,EAAA6R,EAAA7R,OAEA,MAAAf,GAAAuT,EAAAxS,GACAf,IAAAu6G,GAAA3nG,EAAAW,MAEA,OAAAA,OAAAxS,EAAAf,EAAAgB,GAcA,QAAAw5G,IAAAx6G,EAAAu4G,EAAAkC,GACA,GAAAlmG,GAAAgkG,EAAAv4G,EACA,OAAA4nC,IAAA5nC,GAAAuU,EAAA2gF,EAAA3gF,EAAAkmG,EAAAz6G,IAUA,QAAA06G,IAAAt7G,GACA,aAAAA,EACAA,IAAA4B,GAAAs7F,GAAAR,IAEA18F,EAAAI,GAAAJ,GACAu7G,SAAAv7G,GACAw7G,GAAAx7G,GACAy7G,GAAAz7G,IAYA,QAAA07G,IAAA17G,EAAAwxB,GACA,MAAAxxB,GAAAwxB,EAWA,QAAAmqF,IAAA/6G,EAAAS,GACA,aAAAT,GAAAG,GAAAlB,KAAAe,EAAAS,GAWA,QAAAu6G,IAAAh7G,EAAAS,GACA,aAAAT,GAAAS,IAAAjB,IAAAQ,GAYA,QAAAi7G,IAAA9D,EAAAvjG,EAAAC,GACA,MAAAsjG,IAAAxE,GAAA/+F,EAAAC,IAAAsjG,EAAA+D,GAAAtnG,EAAAC,GAaA,QAAAsnG,IAAAC,EAAA/mB,EAAAW,GASA,IARA,GAAAgkB,GAAAhkB,EAAAD,EAAAF,EACA9zF,EAAAq6G,EAAA,GAAAr6G,OACAs6G,EAAAD,EAAAr6G,OACAu6G,EAAAD,EACAE,EAAAjoG,GAAA+nG,GACAG,EAAAzsE,IACAx6B,KAEA+mG,KAAA,CACA,GAAAznF,GAAAunF,EAAAE,EACAA,IAAAjnB,IACAxgE,EAAAohE,EAAAphE,EAAAijE,EAAAzC,KAEAmnB,EAAA7I,GAAA9+E,EAAA9yB,OAAAy6G,GACAD,EAAAD,IAAAtmB,IAAAX,GAAAtzF,GAAA,KAAA8yB,EAAA9yB,QAAA,KACA,GAAA2zG,IAAA4G,GAAAznF,GACA7yB,GAEA6yB,EAAAunF,EAAA,EAEA,IAAA7nG,IAAA,EACAkoG,EAAAF,EAAA,EAEA1I,GACA,OAAAt/F,EAAAxS,GAAAwT,EAAAxT,OAAAy6G,GAAA,CACA,GAAAp8G,GAAAy0B,EAAAtgB,GACAw/F,EAAA1e,IAAAj1F,IAGA,IADAA,EAAA41F,GAAA,IAAA51F,IAAA,IACAq8G,EACAzkB,EAAAykB,EAAA1I,GACAiG,EAAAzkG,EAAAw+F,EAAA/d,IACA,CAEA,IADAsmB,EAAAD,IACAC,GAAA,CACA,GAAArkB,GAAAskB,EAAAD,EACA,MAAArkB,EACAD,EAAAC,EAAA8b,GACAiG,EAAAoC,EAAAE,GAAAvI,EAAA/d,IAEA,QAAA6d,GAGA4I,GACAA,EAAArpG,KAAA2gG,GAEAx+F,EAAAnC,KAAAhT,IAGA,MAAAmV,GAcA,QAAAmnG,IAAA17G,EAAAo0F,EAAAC,EAAAC,GAIA,MAHAylB,IAAA/5G,EAAA,SAAAZ,EAAAqB,EAAAT,GACAo0F,EAAAE,EAAAD,EAAAj1F,GAAAqB,EAAAT,KAEAs0F,EAaA,QAAAqnB,IAAA37G,EAAA4S,EAAAnG,GACAmG,EAAA0nG,GAAA1nG,EAAA5S,GACAA,EAAA2jB,GAAA3jB,EAAA4S,EACA,IAAA80E,GAAA,MAAA1nF,MAAAu6G,GAAA1oG,GAAAe,IACA,cAAA80E,EAAA1mF,GAAA6L,EAAA66E,EAAA1nF,EAAAyM,GAUA,QAAAmvG,IAAAx8G,GACA,MAAA4xG,IAAA5xG,IAAAs7G,GAAAt7G,IAAA+7F,GAUA,QAAA0gB,IAAAz8G,GACA,MAAA4xG,IAAA5xG,IAAAs7G,GAAAt7G,IAAAq9F,GAUA,QAAAqf,IAAA18G,GACA,MAAA4xG,IAAA5xG,IAAAs7G,GAAAt7G,IAAAm8F,GAiBA,QAAAwgB,IAAA38G,EAAAwxB,EAAA2mF,EAAAC,EAAA7uC,GACA,MAAAvpE,KAAAwxB,IAGA,MAAAxxB,GAAA,MAAAwxB,IAAAgnF,GAAAx4G,KAAA4xG,GAAApgF,GACAxxB,OAAAwxB,MAEAorF,GAAA58G,EAAAwxB,EAAA2mF,EAAAC,EAAAuE,GAAApzC,IAiBA,QAAAqzC,IAAAh8G,EAAA4wB,EAAA2mF,EAAAC,EAAAyE,EAAAtzC,GACA,GAAAuzC,GAAAt0E,GAAA5nC,GACAm8G,EAAAv0E,GAAAhX,GACAwrF,EAAAhhB,GACAihB,EAAAjhB,EAEA8gB,KACAE,EAAArE,GAAA/3G,GACAo8G,KAAAjhB,GAAAY,GAAAqgB,GAEAD,IACAE,EAAAtE,GAAAnnF,GACAyrF,KAAAlhB,GAAAY,GAAAsgB,EAEA,IAAAC,GAAAF,GAAArgB,GACAwgB,EAAAF,GAAAtgB,GACAygB,EAAAJ,GAAAC,CAEA,IAAAG,GAAA/G,GAAAz1G,GAAA,CACA,IAAAy1G,GAAA7kF,GACA,QAEAsrF,IAAA,EACAI,GAAA,EAEA,GAAAE,IAAAF,EAEA,MADA3zC,OAAA,GAAAksC,KACAqH,GAAAxL,GAAA1wG,GACAy8G,GAAAz8G,EAAA4wB,EAAA2mF,EAAAC,EAAAyE,EAAAtzC,GACA+zC,GAAA18G,EAAA4wB,EAAAwrF,EAAA7E,EAAAC,EAAAyE,EAAAtzC,EAEA,MAAA4uC,EAAA9d,IAAA,CACA,GAAAkjB,GAAAL,GAAAn8G,GAAAlB,KAAAe,EAAA,eACA48G,EAAAL,GAAAp8G,GAAAlB,KAAA2xB,EAAA,cAEA,IAAA+rF,GAAAC,EAAA,CACA,GAAAC,GAAAF,EAAA38G,EAAAZ,QAAAY,EACA88G,EAAAF,EAAAhsF,EAAAxxB,QAAAwxB,CAGA,OADA+3C,OAAA,GAAAksC,KACAoH,EAAAY,EAAAC,EAAAvF,EAAAC,EAAA7uC,IAGA,QAAA6zC,IAGA7zC,MAAA,GAAAksC,KACAkI,GAAA/8G,EAAA4wB,EAAA2mF,EAAAC,EAAAyE,EAAAtzC,IAUA,QAAAq0C,IAAA59G,GACA,MAAA4xG,IAAA5xG,IAAA24G,GAAA34G,IAAAw8F,GAaA,QAAAqhB,IAAAj9G,EAAAiZ,EAAAikG,EAAA1F,GACA,GAAAjkG,GAAA2pG,EAAAn8G,OACAA,EAAAwS,EACA4pG,GAAA3F,CAEA,UAAAx3G,EACA,OAAAe,CAGA,KADAf,EAAAR,GAAAQ,GACAuT,KAAA,CACA,GAAA7H,GAAAwxG,EAAA3pG,EACA,IAAA4pG,GAAAzxG,EAAA,GACAA,EAAA,KAAA1L,EAAA0L,EAAA,MACAA,EAAA,IAAA1L,IAEA,SAGA,OAAAuT,EAAAxS,GAAA,CACA2K,EAAAwxG,EAAA3pG,EACA,IAAA9S,GAAAiL,EAAA,GACA0qG,EAAAp2G,EAAAS,GACA41G,EAAA3qG,EAAA,EAEA,IAAAyxG,GAAAzxG,EAAA,IACA,GAAA0qG,IAAAp1G,MAAAP,IAAAT,IACA,aAES,CACT,GAAA2oE,GAAA,GAAAksC,GACA,IAAA2C,EACA,GAAAjjG,GAAAijG,EAAApB,EAAAC,EAAA51G,EAAAT,EAAAiZ,EAAA0vD,EAEA,MAAAp0D,IAAAvT,GACA+6G,GAAA1F,EAAAD,EAAA3c,GAAAC,GAAA8d,EAAA7uC,GACAp0D,GAEA,UAIA,SAWA,QAAA6oG,IAAAh+G,GACA,IAAAw4G,GAAAx4G,IAAAi+G,GAAAj+G,GACA,QAEA,IAAAk+G,GAAAlD,GAAAh7G,GAAAm+G,GAAAxe,EACA,OAAAue,GAAAttF,KAAAwtF,GAAAp+G,IAUA,QAAAq+G,IAAAr+G,GACA,MAAA4xG,IAAA5xG,IAAAs7G,GAAAt7G,IAAA88F,GAUA,QAAAwhB,IAAAt+G,GACA,MAAA4xG,IAAA5xG,IAAA24G,GAAA34G,IAAA+8F,GAUA,QAAAwhB,IAAAv+G,GACA,MAAA4xG,IAAA5xG,IACAw+G,GAAAx+G,EAAA2B,WAAAmhG,GAAAwY,GAAAt7G,IAUA,QAAAy+G,IAAAz+G,GAGA,wBAAAA,GACAA,EAEA,MAAAA,EACAssB,GAEA,gBAAAtsB,GACAwoC,GAAAxoC,GACA0+G,GAAA1+G,EAAA,GAAAA,EAAA,IACA2+G,GAAA3+G,GAEAa,GAAAb,GAUA,QAAA4+G,IAAAh+G,GACA,IAAAi+G,GAAAj+G,GACA,MAAAk+G,IAAAl+G,EAEA,IAAAuU,KACA,QAAA9T,KAAAjB,IAAAQ,GACAG,GAAAlB,KAAAe,EAAAS,IAAA,eAAAA,GACA8T,EAAAnC,KAAA3R,EAGA,OAAA8T,GAUA,QAAA4pG,IAAAn+G,GACA,IAAA43G,GAAA53G,GACA,MAAAo+G,IAAAp+G,EAEA,IAAAq+G,GAAAJ,GAAAj+G,GACAuU,IAEA,QAAA9T,KAAAT,IACA,eAAAS,IAAA49G,GAAAl+G,GAAAlB,KAAAe,EAAAS,KACA8T,EAAAnC,KAAA3R,EAGA,OAAA8T,GAYA,QAAA+pG,IAAAl/G,EAAAwxB,GACA,MAAAxxB,GAAAwxB,EAWA,QAAA2tF,IAAA3oB,EAAAvB,GACA,GAAA9gF,IAAA,EACAgB,EAAAiqG,GAAA5oB,GAAAtiF,GAAAsiF,EAAA70F,UAKA,OAHA61G,IAAAhhB,EAAA,SAAAx2F,EAAAqB,EAAAm1F,GACArhF,IAAAhB,GAAA8gF,EAAAj1F,EAAAqB,EAAAm1F,KAEArhF,EAUA,QAAAwpG,IAAA9kG,GACA,GAAAikG,GAAAuB,GAAAxlG,EACA,WAAAikG,EAAAn8G,QAAAm8G,EAAA,MACAwB,GAAAxB,EAAA,MAAAA,EAAA,OAEA,SAAAl9G,GACA,MAAAA,KAAAiZ,GAAAgkG,GAAAj9G,EAAAiZ,EAAAikG,IAYA,QAAAY,IAAAlrG,EAAAyjG,GACA,MAAAsI,IAAA/rG,IAAAgsG,GAAAvI,GACAqI,GAAAnE,GAAA3nG,GAAAyjG,GAEA,SAAAr2G,GACA,GAAAo2G,GAAAx2G,GAAAI,EAAA4S,EACA,OAAAwjG,KAAAp1G,IAAAo1G,IAAAC,EACAwI,GAAA7+G,EAAA4S,GACAmpG,GAAA1F,EAAAD,EAAA3c,GAAAC,KAeA,QAAAolB,IAAA9+G,EAAAiZ,EAAA8lG,EAAAvH,EAAA7uC,GACA3oE,IAAAiZ,GAGA+gG,GAAA/gG,EAAA,SAAAo9F,EAAA51G,GACA,GAAAm3G,GAAAvB,GACA1tC,MAAA,GAAAksC,KACAmK,GAAAh/G,EAAAiZ,EAAAxY,EAAAs+G,EAAAD,GAAAtH,EAAA7uC,OAEA,CACA,GAAAs2C,GAAAzH,EACAA,EAAAx3G,EAAAS,GAAA41G,EAAA51G,EAAA,GAAAT,EAAAiZ,EAAA0vD,GACA3nE,EAEAi+G,KAAAj+G,KACAi+G,EAAA5I,GAEAG,GAAAx2G,EAAAS,EAAAw+G,KAEOjI,IAkBP,QAAAgI,IAAAh/G,EAAAiZ,EAAAxY,EAAAs+G,EAAAG,EAAA1H,EAAA7uC,GACA,GAAAytC,GAAAp2G,EAAAS,GACA41G,EAAAp9F,EAAAxY,GACA63G,EAAA3vC,EAAA/oE,IAAAy2G,EAEA,IAAAiC,EAEA,WADA9B,IAAAx2G,EAAAS,EAAA63G,EAGA,IAAA2G,GAAAzH,EACAA,EAAApB,EAAAC,EAAA51G,EAAA,GAAAT,EAAAiZ,EAAA0vD,GACA3nE,GAEAi4G,EAAAgG,IAAAj+G,EAEA,IAAAi4G,EAAA,CACA,GAAA7G,GAAAxqE,GAAAyuE,GACAb,GAAApD,GAAAqD,GAAAY,GACA8I,GAAA/M,IAAAoD,GAAA9E,GAAA2F,EAEA4I,GAAA5I,EACAjE,GAAAoD,GAAA2J,EACAv3E,GAAAwuE,GACA6I,EAAA7I,EAEAgJ,GAAAhJ,GACA6I,EAAAhN,GAAAmE,GAEAZ,GACAyD,GAAA,EACAgG,EAAAhH,GAAA5B,GAAA,IAEA8I,GACAlG,GAAA,EACAgG,EAAAI,GAAAhJ,GAAA,IAGA4I,KAGAK,GAAAjJ,IAAAd,GAAAc,IACA4I,EAAA7I,EACAb,GAAAa,GACA6I,EAAAM,GAAAnJ,KAEAwB,GAAAxB,IAAA2I,GAAA3E,GAAAhE,MACA6I,EAAA/G,GAAA7B,KAIA4C,GAAA,EAGAA,IAEAtwC,EAAAzpD,IAAAm3F,EAAA4I,GACAC,EAAAD,EAAA5I,EAAA0I,EAAAvH,EAAA7uC,GACAA,EAAA,OAAA0tC,IAEAG,GAAAx2G,EAAAS,EAAAw+G,GAWA,QAAAO,IAAA3rF,EAAAh0B,GACA,GAAAkB,GAAA8yB,EAAA9yB,MACA,IAAAA,EAIA,MADAlB,MAAA,EAAAkB,EAAA,EACA60G,GAAA/1G,EAAAkB,GAAA8yB,EAAAh0B,GAAAmB,GAYA,QAAAy+G,IAAA7pB,EAAA4c,EAAAkN,GACA,GAAAnsG,IAAA,CACAi/F,GAAAvd,EAAAud,EAAAzxG,OAAAyxG,GAAA9mF,IAAAorE,EAAA6oB,MAEA,IAAAprG,GAAAgqG,GAAA3oB,EAAA,SAAAx2F,EAAAqB,EAAAm1F,GACA,GAAAgqB,GAAA3qB,EAAAud,EAAA,SAAAne,GACA,MAAAA,GAAAj1F,IAEA,QAAgBwgH,WAAArsG,UAAAnU,UAGhB,OAAAs3F,GAAAniF,EAAA,SAAAvU,EAAA4wB,GACA,MAAAivF,IAAA7/G,EAAA4wB,EAAA8uF,KAaA,QAAAI,IAAA9/G,EAAAqT,GAEA,MADArT,GAAAR,GAAAQ,GACA+/G,GAAA//G,EAAAqT,EAAA,SAAAjU,EAAAwT,GACA,MAAAisG,IAAA7+G,EAAA4S,KAaA,QAAAmtG,IAAA//G,EAAAqT,EAAAqhF,GAKA,IAJA,GAAAnhF,IAAA,EACAxS,EAAAsS,EAAAtS,OACAwT,OAEAhB,EAAAxS,GAAA,CACA,GAAA6R,GAAAS,EAAAE,GACAnU,EAAAi7G,GAAAr6G,EAAA4S,EAEA8hF,GAAAt1F,EAAAwT,IACAotG,GAAAzrG,EAAA+lG,GAAA1nG,EAAA5S,GAAAZ,GAGA,MAAAmV,GAUA,QAAA0rG,IAAArtG,GACA,gBAAA5S,GACA,MAAAq6G,IAAAr6G,EAAA4S,IAeA,QAAAstG,IAAArsF,EAAAshE,EAAAd,EAAAW,GACA,GAAAxoF,GAAAwoF,EAAAmB,EAAArB,EACAvhF,GAAA,EACAxS,EAAAo0F,EAAAp0F,OACA06G,EAAA5nF,CAQA,KANAA,IAAAshE,IACAA,EAAA8c,GAAA9c,IAEAd,IACAonB,EAAAxmB,EAAAphE,EAAAijE,EAAAzC,OAEA9gF,EAAAxS,GAKA,IAJA,GAAAg1F,GAAA,EACA32F,EAAA+1F,EAAA5hF,GACAw/F,EAAA1e,IAAAj1F,MAEA22F,EAAAvpF,EAAAivG,EAAA1I,EAAAhd,EAAAf,KAAA,GACAymB,IAAA5nF,GACA/hB,GAAA7S,KAAAw8G,EAAA1lB,EAAA,GAEAjkF,GAAA7S,KAAA40B,EAAAkiE,EAAA,EAGA,OAAAliE,GAYA,QAAAssF,IAAAtsF,EAAAusF,GAIA,IAHA,GAAAr/G,GAAA8yB,EAAAusF,EAAAr/G,OAAA,EACAwiE,EAAAxiE,EAAA,EAEAA,KAAA,CACA,GAAAwS,GAAA6sG,EAAAr/G,EACA,IAAAA,GAAAwiE,GAAAhwD,IAAA8sG,EAAA,CACA,GAAAA,GAAA9sG,CACAqiG,IAAAriG,GACAzB,GAAA7S,KAAA40B,EAAAtgB,EAAA,GAEA+sG,GAAAzsF,EAAAtgB,IAIA,MAAAsgB,GAYA,QAAAiiF,IAAAsB,EAAAC,GACA,MAAAD,GAAAmJ,GAAAC,MAAAnJ,EAAAD,EAAA,IAcA,QAAAqJ,IAAA7sG,EAAAC,EAAAgP,EAAAmzE,GAKA,IAJA,GAAAziF,IAAA,EACAxS,EAAAm6G,GAAAwF,IAAA7sG,EAAAD,IAAAiP,GAAA,OACAtO,EAAAjB,GAAAvS,GAEAA,KACAwT,EAAAyhF,EAAAj1F,IAAAwS,GAAAK,EACAA,GAAAiP,CAEA,OAAAtO,GAWA,QAAAosG,IAAA92C,EAAAhqE,GACA,GAAA0U,GAAA,EACA,KAAAs1D,GAAAhqE,EAAA,GAAAA,EAAAg7F,GACA,MAAAtmF,EAIA,GACA1U,GAAA,IACA0U,GAAAs1D,GAEAhqE,EAAA0gH,GAAA1gH,EAAA,GACAA,IACAgqE,YAEOhqE,EAEP,OAAA0U,GAWA,QAAAqsG,IAAAl5B,EAAA9zE,GACA,MAAAitG,IAAAC,GAAAp5B,EAAA9zE,EAAA8X,IAAAg8D,EAAA,IAUA,QAAAq5B,IAAAnrB,GACA,MAAAigB,IAAA1gB,GAAAS,IAWA,QAAAorB,IAAAprB,EAAA/1F,GACA,GAAAg0B,GAAAshE,GAAAS,EACA,OAAAogB,IAAAniF,EAAAoiF,GAAAp2G,EAAA,EAAAg0B,EAAA9yB,SAaA,QAAAi/G,IAAAhgH,EAAA4S,EAAAxT,EAAAo4G,GACA,IAAAI,GAAA53G,GACA,MAAAA,EAEA4S,GAAA0nG,GAAA1nG,EAAA5S,EAOA,KALA,GAAAuT,IAAA,EACAxS,EAAA6R,EAAA7R,OACAwiE,EAAAxiE,EAAA,EACAkgH,EAAAjhH,EAEA,MAAAihH,KAAA1tG,EAAAxS,GAAA,CACA,GAAAN,GAAA85G,GAAA3nG,EAAAW,IACA0rG,EAAA7/G,CAEA,IAAAmU,GAAAgwD,EAAA,CACA,GAAA6yC,GAAA6K,EAAAxgH,EACAw+G,GAAAzH,IAAApB,EAAA31G,EAAAwgH,GAAAjgH,GACAi+G,IAAAj+G,KACAi+G,EAAArH,GAAAxB,GACAA,EACAR,GAAAhjG,EAAAW,EAAA,WAGAmjG,GAAAuK,EAAAxgH,EAAAw+G,GACAgC,IAAAxgH,GAEA,MAAAT,GAwCA,QAAAkhH,IAAAtrB,GACA,MAAAogB,IAAA7gB,GAAAS,IAYA,QAAAurB,IAAAttF,EAAAjgB,EAAAC,GACA,GAAAN,IAAA,EACAxS,EAAA8yB,EAAA9yB,MAEA6S,GAAA,IACAA,KAAA7S,EAAA,EAAAA,EAAA6S,GAEAC,IAAA9S,IAAA8S,EACAA,EAAA,IACAA,GAAA9S,GAEAA,EAAA6S,EAAAC,EAAA,EAAAA,EAAAD,IAAA,EACAA,KAAA,CAGA,KADA,GAAAW,GAAAjB,GAAAvS,KACAwS,EAAAxS,GACAwT,EAAAhB,GAAAsgB,EAAAtgB,EAAAK,EAEA,OAAAW,GAYA,QAAA6sG,IAAAxrB,EAAAlB,GACA,GAAAngF,EAMA,OAJAqiG,IAAAhhB,EAAA,SAAAx2F,EAAAmU,EAAAqiF,GAEA,MADArhF,GAAAmgF,EAAAt1F,EAAAmU,EAAAqiF,IACArhF,MAEAA,EAeA,QAAA8sG,IAAAxtF,EAAAz0B,EAAAkiH,GACA,GAAAC,GAAA,EACAC,EAAA,MAAA3tF,EAAA0tF,EAAA1tF,EAAA9yB,MAEA,oBAAA3B,WAAAoiH,GAAAvmB,GAAA,CACA,KAAAsmB,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,EACAzO,EAAAl/E,EAAA4tF,EAEA,QAAA1O,IAAAuG,GAAAvG,KACAuO,EAAAvO,GAAA3zG,EAAA2zG,EAAA3zG,GACAmiH,EAAAE,EAAA,EAEAD,EAAAC,EAGA,MAAAD,GAEA,MAAAE,IAAA7tF,EAAAz0B,EAAAssB,GAAA41F,GAgBA,QAAAI,IAAA7tF,EAAAz0B,EAAAi1F,EAAAitB,GACAliH,EAAAi1F,EAAAj1F,EASA,KAPA,GAAAmiH,GAAA,EACAC,EAAA,MAAA3tF,EAAA,EAAAA,EAAA9yB,OACA4gH,EAAAviH,MACAwiH,EAAA,OAAAxiH,EACAyiH,EAAAvI,GAAAl6G,GACA0iH,EAAA1iH,IAAA4B,GAEAugH,EAAAC,GAAA,CACA,GAAAC,GAAAlB,IAAAgB,EAAAC,GAAA,GACAzO,EAAA1e,EAAAxgE,EAAA4tF,IACAM,EAAAhP,IAAA/xG,GACAghH,EAAA,OAAAjP,EACAkP,EAAAlP,MACAmP,EAAA5I,GAAAvG,EAEA,IAAA4O,EACA,GAAAQ,GAAAb,GAAAW,MAEAE,GADSL,EACTG,IAAAX,GAAAS,GACSH,EACTK,GAAAF,IAAAT,IAAAU,GACSH,EACTI,GAAAF,IAAAC,IAAAV,IAAAY,IACSF,IAAAE,IAGTZ,EAAAvO,GAAA3zG,EAAA2zG,EAAA3zG,EAEA+iH,GACAZ,EAAAE,EAAA,EAEAD,EAAAC,EAGA,MAAA9O,IAAA6O,EAAAxmB,IAYA,QAAAonB,IAAAvuF,EAAAwgE,GAMA,IALA,GAAA9gF,IAAA,EACAxS,EAAA8yB,EAAA9yB,OACA6zF,EAAA,EACArgF,OAEAhB,EAAAxS,GAAA,CACA,GAAA3B,GAAAy0B,EAAAtgB,GACAw/F,EAAA1e,IAAAj1F,IAEA,KAAAmU,IAAA+iG,GAAAvD,EAAA0I,GAAA,CACA,GAAAA,GAAA1I,CACAx+F,GAAAqgF,KAAA,IAAAx1F,EAAA,EAAAA,GAGA,MAAAmV,GAWA,QAAA8tG,IAAAjjH,GACA,sBAAAA,GACAA,EAEAk6G,GAAAl6G,GACAk3F,IAEAl3F,EAWA,QAAAkjH,IAAAljH,GAEA,mBAAAA,GACA,MAAAA,EAEA,IAAAwoC,GAAAxoC,GAEA,MAAA61F,GAAA71F,EAAAkjH,IAAA,EAEA,IAAAhJ,GAAAl6G,GACA,MAAAmjH,OAAAtjH,KAAAG,GAAA,EAEA,IAAAmV,GAAAnV,EAAA,EACA,YAAAmV,GAAA,EAAAnV,IAAAw7F,GAAA,KAAArmF,EAYA,QAAAiuG,IAAA3uF,EAAAwgE,EAAAW,GACA,GAAAzhF,IAAA,EACAylG,EAAAnkB,EACA9zF,EAAA8yB,EAAA9yB,OACAk4G,GAAA,EACA1kG,KACAknG,EAAAlnG,CAEA,IAAAygF,EACAikB,GAAA,EACAD,EAAAjkB,MAEA,IAAAh0F,GAAAk4F,GAAA,CACA,GAAA/5E,GAAAm1E,EAAA,KAAAouB,GAAA5uF,EACA,IAAA3U,EACA,MAAAo5E,GAAAp5E,EAEA+5F,IAAA,EACAD,EAAAhiB,EACAykB,EAAA,GAAA/G,QAGA+G,GAAApnB,KAAA9/E,CAEAs+F,GACA,OAAAt/F,EAAAxS,GAAA,CACA,GAAA3B,GAAAy0B,EAAAtgB,GACAw/F,EAAA1e,IAAAj1F,IAGA,IADAA,EAAA41F,GAAA,IAAA51F,IAAA,EACA65G,GAAAlG,MAAA,CAEA,IADA,GAAA2P,GAAAjH,EAAA16G,OACA2hH,KACA,GAAAjH,EAAAiH,KAAA3P,EACA,QAAAF,EAGAxe,IACAonB,EAAArpG,KAAA2gG,GAEAx+F,EAAAnC,KAAAhT,OAEA45G,GAAAyC,EAAA1I,EAAA/d,KACAymB,IAAAlnG,GACAknG,EAAArpG,KAAA2gG,GAEAx+F,EAAAnC,KAAAhT,IAGA,MAAAmV,GAWA,QAAA+rG,IAAAtgH,EAAA4S,GAGA,MAFAA,GAAA0nG,GAAA1nG,EAAA5S,GACAA,EAAA2jB,GAAA3jB,EAAA4S,GACA,MAAA5S,YAAAu6G,GAAA1oG,GAAAe,KAaA,QAAA+vG,IAAA3iH,EAAA4S,EAAAgwG,EAAApL,GACA,MAAAwI,IAAAhgH,EAAA4S,EAAAgwG,EAAAvI,GAAAr6G,EAAA4S,IAAA4kG,GAcA,QAAAqL,IAAAhvF,EAAA6gE,EAAAouB,EAAA9sB,GAIA,IAHA,GAAAj1F,GAAA8yB,EAAA9yB,OACAwS,EAAAyiF,EAAAj1F,GAAA,GAEAi1F,EAAAziF,QAAAxS,IACA2zF,EAAA7gE,EAAAtgB,KAAAsgB,KAEA,MAAAivF,GACA3B,GAAAttF,EAAAmiE,EAAA,EAAAziF,EAAAyiF,EAAAziF,EAAA,EAAAxS,GACAogH,GAAAttF,EAAAmiE,EAAAziF,EAAA,IAAAyiF,EAAAj1F,EAAAwS,GAaA,QAAAq/F,IAAAxzG,EAAA2jH,GACA,GAAAxuG,GAAAnV,CAIA,OAHAmV,aAAA08F,KACA18F,IAAAnV,SAEAg2F,EAAA2tB,EAAA,SAAAxuG,EAAAyuG,GACA,MAAAA,GAAAt7B,KAAA76E,MAAAm2G,EAAA9uB,QAAAgB,GAAA3gF,GAAAyuG,EAAAv2G,QACO8H,GAaP,QAAA0uG,IAAA7H,EAAA/mB,EAAAW,GACA,GAAAj0F,GAAAq6G,EAAAr6G,MACA,IAAAA,EAAA,EACA,MAAAA,GAAAyhH,GAAApH,EAAA,MAKA,KAHA,GAAA7nG,IAAA,EACAgB,EAAAjB,GAAAvS,KAEAwS,EAAAxS,GAIA,IAHA,GAAA8yB,GAAAunF,EAAA7nG,GACA+nG,GAAA,IAEAA,EAAAv6G,GACAu6G,GAAA/nG,IACAgB,EAAAhB,GAAAwlG,GAAAxkG,EAAAhB,IAAAsgB,EAAAunF,EAAAE,GAAAjnB,EAAAW,GAIA,OAAAwtB,IAAA7I,GAAAplG,EAAA,GAAA8/E,EAAAW,GAYA,QAAAkuB,IAAAzlG,EAAA03E,EAAAguB,GAMA,IALA,GAAA5vG,IAAA,EACAxS,EAAA0c,EAAA1c,OACAqiH,EAAAjuB,EAAAp0F,OACAwT,OAEAhB,EAAAxS,GAAA,CACA,GAAA3B,GAAAmU,EAAA6vG,EAAAjuB,EAAA5hF,GAAAvS,EACAmiH,GAAA5uG,EAAAkJ,EAAAlK,GAAAnU,GAEA,MAAAmV,GAUA,QAAA8uG,IAAAjkH,GACA,MAAAggH,IAAAhgH,QAUA,QAAAkkH,IAAAlkH,GACA,wBAAAA,KAAAssB,GAWA,QAAA4uF,IAAAl7G,EAAAY,GACA,MAAA4nC,IAAAxoC,GACAA,EAEAu/G,GAAAv/G,EAAAY,IAAAZ,GAAAmkH,GAAA94G,GAAArL,IAuBA,QAAAokH,IAAA3vF,EAAAjgB,EAAAC,GACA,GAAA9S,GAAA8yB,EAAA9yB,MAEA,OADA8S,OAAA7S,GAAAD,EAAA8S,GACAD,GAAAC,GAAA9S,EAAA8yB,EAAAstF,GAAAttF,EAAAjgB,EAAAC,GAqBA,QAAAokG,IAAAtlD,EAAA8kD,GACA,GAAAA,EACA,MAAA9kD,GAAAngD,OAEA,IAAAzR,GAAA4xD,EAAA5xD,OACAwT,EAAAkvG,MAAA1iH,GAAA,GAAA4xD,GAAA/6C,YAAA7W,EAGA,OADA4xD,GAAAz6C,KAAA3D,GACAA,EAUA,QAAAmvG,IAAAC,GACA,GAAApvG,GAAA,GAAAovG,GAAA/rG,YAAA+rG,EAAAC,WAEA,OADA,IAAAp7C,IAAAj0D,GAAA2K,IAAA,GAAAspD,IAAAm7C,IACApvG,EAWA,QAAAsvG,IAAAC,EAAArM,GACA,GAAA9kD,GAAA8kD,EAAAiM,GAAAI,EAAAnxD,QAAAmxD,EAAAnxD,MACA,WAAAmxD,GAAAlsG,YAAA+6C,EAAAmxD,EAAAC,WAAAD,EAAAF,YAYA,QAAAI,IAAAn+E,EAAA4xE,EAAAwM,GACA,GAAApwF,GAAA4jF,EAAAwM,EAAAhsB,EAAApyD,GAAAyzD,IAAArB,EAAApyD,EACA,OAAAuvD,GAAAvhE,EAAAkgE,EAAA,GAAAluD,GAAAjuB,aAUA,QAAAssG,IAAAC,GACA,GAAA5vG,GAAA,GAAA4vG,GAAAvsG,YAAAusG,EAAAlrG,OAAA2lF,GAAA3zF,KAAAk5G,GAEA,OADA5vG,GAAAgvD,UAAA4gD,EAAA5gD,UACAhvD,EAYA,QAAA6vG,IAAAllG,EAAAu4F,EAAAwM,GACA,GAAApwF,GAAA4jF,EAAAwM,EAAA3rB,EAAAp5E,GAAAo6E,IAAAhB,EAAAp5E,EACA,OAAAk2E,GAAAvhE,EAAAogE,EAAA,GAAA/0E,GAAAtH,aAUA,QAAAysG,IAAAC,GACA,MAAAC,IAAA/kH,GAAA+kH,GAAAtlH,KAAAqlH,OAWA,QAAAjF,IAAAmF,EAAA/M,GACA,GAAA9kD,GAAA8kD,EAAAiM,GAAAc,EAAA7xD,QAAA6xD,EAAA7xD,MACA,WAAA6xD,GAAA5sG,YAAA+6C,EAAA6xD,EAAAT,WAAAS,EAAAzjH,QAWA,QAAA0jH,IAAArlH,EAAAwxB,GACA,GAAAxxB,IAAAwxB,EAAA,CACA,GAAA8zF,GAAAtlH,IAAA4B,GACA4gH,EAAA,OAAAxiH,EACAulH,EAAAvlH,MACAyiH,EAAAvI,GAAAl6G,GAEA2iH,EAAAnxF,IAAA5vB,GACAghH,EAAA,OAAApxF,EACAqxF,EAAArxF,MACAsxF,EAAA5I,GAAA1oF,EAEA,KAAAoxF,IAAAE,IAAAL,GAAAziH,EAAAwxB,GACAixF,GAAAE,GAAAE,IAAAD,IAAAE,GACAN,GAAAG,GAAAE,IACAyC,GAAAzC,IACA0C,EACA,QAEA,KAAA/C,IAAAC,IAAAK,GAAA9iH,EAAAwxB,GACAsxF,GAAAwC,GAAAC,IAAA/C,IAAAC,GACAG,GAAA0C,GAAAC,IACA5C,GAAA4C,IACA1C,EACA,SAGA,SAiBA,QAAApC,IAAA7/G,EAAA4wB,EAAA8uF,GAOA,IANA,GAAAnsG,IAAA,EACAqxG,EAAA5kH,EAAA4/G,SACAiF,EAAAj0F,EAAAgvF,SACA7+G,EAAA6jH,EAAA7jH,OACA+jH,EAAApF,EAAA3+G,SAEAwS,EAAAxS,GAAA,CACA,GAAAwT,GAAAkwG,GAAAG,EAAArxG,GAAAsxG,EAAAtxG,GACA,IAAAgB,EAAA,CACA,GAAAhB,GAAAuxG,EACA,MAAAvwG,EAEA,IAAAwwG,GAAArF,EAAAnsG,EACA,OAAAgB,IAAA,QAAAwwG,GAAA,MAUA,MAAA/kH,GAAAuT,MAAAqd,EAAArd,MAcA,QAAAyxG,IAAAv4G,EAAAw4G,EAAAC,EAAAC,GAUA,IATA,GAAAC,IAAA,EACAC,EAAA54G,EAAA1L,OACAukH,EAAAJ,EAAAnkH,OACAwkH,GAAA,EACAC,EAAAP,EAAAlkH,OACA0kH,EAAAvK,GAAAmK,EAAAC,EAAA,GACA/wG,EAAAjB,GAAAkyG,EAAAC,GACAC,GAAAP,IAEAI,EAAAC,GACAjxG,EAAAgxG,GAAAN,EAAAM,EAEA,QAAAH,EAAAE,IACAI,GAAAN,EAAAC,KACA9wG,EAAA2wG,EAAAE,IAAA34G,EAAA24G,GAGA,MAAAK,KACAlxG,EAAAgxG,KAAA94G,EAAA24G,IAEA,OAAA7wG,GAcA,QAAAoxG,IAAAl5G,EAAAw4G,EAAAC,EAAAC,GAWA,IAVA,GAAAC,IAAA,EACAC,EAAA54G,EAAA1L,OACA6kH,GAAA,EACAN,EAAAJ,EAAAnkH,OACA8kH,GAAA,EACAC,EAAAb,EAAAlkH,OACA0kH,EAAAvK,GAAAmK,EAAAC,EAAA,GACA/wG,EAAAjB,GAAAmyG,EAAAK,GACAJ,GAAAP,IAEAC,EAAAK,GACAlxG,EAAA6wG,GAAA34G,EAAA24G,EAGA,KADA,GAAAtkE,GAAAskE,IACAS,EAAAC,GACAvxG,EAAAusC,EAAA+kE,GAAAZ,EAAAY,EAEA,QAAAD,EAAAN,IACAI,GAAAN,EAAAC,KACA9wG,EAAAusC,EAAAokE,EAAAU,IAAAn5G,EAAA24G,KAGA,OAAA7wG,GAWA,QAAA09F,IAAAh5F,EAAA4a,GACA,GAAAtgB,IAAA,EACAxS,EAAAkY,EAAAlY,MAGA,KADA8yB,MAAAvgB,GAAAvS,MACAwS,EAAAxS,GACA8yB,EAAAtgB,GAAA0F,EAAA1F,EAEA,OAAAsgB,GAaA,QAAAijF,IAAA79F,EAAAwE,EAAAzd,EAAAw3G,GACA,GAAAuO,IAAA/lH,CACAA,UAKA,KAHA,GAAAuT,IAAA,EACAxS,EAAA0c,EAAA1c,SAEAwS,EAAAxS,GAAA,CACA,GAAAN,GAAAgd,EAAAlK,GAEA0rG,EAAAzH,EACAA,EAAAx3G,EAAAS,GAAAwY,EAAAxY,KAAAT,EAAAiZ,GACAjY,EAEAi+G,KAAAj+G,KACAi+G,EAAAhmG,EAAAxY,IAEAslH,EACAtP,GAAAz2G,EAAAS,EAAAw+G,GAEAvI,GAAA12G,EAAAS,EAAAw+G,GAGA,MAAAj/G,GAWA,QAAAo4G,IAAAn/F,EAAAjZ,GACA,MAAA82G,IAAA79F,EAAA+sG,GAAA/sG,GAAAjZ,GAWA,QAAAm4G,IAAAl/F,EAAAjZ,GACA,MAAA82G,IAAA79F,EAAAgtG,GAAAhtG,GAAAjZ,GAWA,QAAAkmH,IAAA9xB,EAAA+xB,GACA,gBAAAvwB,EAAAvB,GACA,GAAA3M,GAAA9/C,GAAAguD,GAAAzB,EAAAwiB,GACAriB,EAAA6xB,QAEA,OAAAz+B,GAAAkO,EAAAxB,EAAAurB,GAAAtrB,EAAA,GAAAC,IAWA,QAAA8xB,IAAAC,GACA,MAAAzF,IAAA,SAAA5gH,EAAAsmH,GACA,GAAA/yG,IAAA,EACAxS,EAAAulH,EAAAvlH,OACAy2G,EAAAz2G,EAAA,EAAAulH,EAAAvlH,EAAA,GAAAC,GACAulH,EAAAxlH,EAAA,EAAAulH,EAAA,GAAAtlH,EAWA,KATAw2G,EAAA6O,EAAAtlH,OAAA,qBAAAy2G,IACAz2G,IAAAy2G,GACAx2G,GAEAulH,GAAAC,GAAAF,EAAA,GAAAA,EAAA,GAAAC,KACA/O,EAAAz2G,EAAA,EAAAC,GAAAw2G,EACAz2G,EAAA,GAEAf,EAAAR,GAAAQ,KACAuT,EAAAxS,GAAA,CACA,GAAAkY,GAAAqtG,EAAA/yG,EACA0F,IACAotG,EAAArmH,EAAAiZ,EAAA1F,EAAAikG,GAGA,MAAAx3G,KAYA,QAAAymH,IAAA5wB,EAAAG,GACA,gBAAAJ,EAAAvB,GACA,SAAAuB,EACA,MAAAA,EAEA,KAAA4oB,GAAA5oB,GACA,MAAAC,GAAAD,EAAAvB,EAMA,KAJA,GAAAtzF,GAAA60F,EAAA70F,OACAwS,EAAAyiF,EAAAj1F,GAAA,EACA2lH,EAAAlnH,GAAAo2F,IAEAI,EAAAziF,QAAAxS,IACAszF,EAAAqyB,EAAAnzG,KAAAmzG,MAAA,IAIA,MAAA9wB,IAWA,QAAA+wB,IAAA3wB,GACA,gBAAAh2F,EAAAq0F,EAAAkkB,GAMA,IALA,GAAAhlG,IAAA,EACAmzG,EAAAlnH,GAAAQ,GACAyd,EAAA86F,EAAAv4G,GACAe,EAAA0c,EAAA1c,OAEAA,KAAA,CACA,GAAAN,GAAAgd,EAAAu4E,EAAAj1F,IAAAwS,EACA,IAAA8gF,EAAAqyB,EAAAjmH,KAAAimH,MAAA,EACA,MAGA,MAAA1mH,IAcA,QAAA4mH,IAAAl/B,EAAA6vB,EAAArjB,GAIA,QAAA2yB,KACA,GAAA7xG,GAAAG,aAAAX,IAAAW,eAAA0xG,GAAAC,EAAAp/B,CACA,OAAA1yE,GAAAnI,MAAAk6G,EAAA7yB,EAAA/+E,KAAArU,WALA,GAAAimH,GAAAxP,EAAA5d,GACAmtB,EAAAE,GAAAt/B,EAMA,OAAAm/B,GAUA,QAAAI,IAAAC,GACA,gBAAAr9C,GACAA,EAAAp/D,GAAAo/D,EAEA,IAAAstB,GAAAS,EAAA/tB,GACA+uB,GAAA/uB,GACA7oE,GAEAy2F,EAAAN,EACAA,EAAA,GACAttB,EAAA92D,OAAA,GAEAo0G,EAAAhwB,EACAqsB,GAAArsB,EAAA,GAAAlkF,KAAA,IACA42D,EAAAr3D,MAAA,EAEA,OAAAilF,GAAAyvB,KAAAC,GAWA,QAAAC,IAAAz1D,GACA,gBAAAkY,GACA,MAAAurB,GAAAzhB,GAAA0zC,GAAAx9C,GAAAlkC,QAAAm8D,GAAA,KAAAnwC,EAAA,KAYA,QAAAq1D,IAAAF,GACA,kBAIA,GAAAr6G,GAAA3L,SACA,QAAA2L,EAAA1L,QACA,iBAAA+lH,EACA,kBAAAA,GAAAr6G,EAAA,GACA,kBAAAq6G,GAAAr6G,EAAA,GAAAA,EAAA,GACA,kBAAAq6G,GAAAr6G,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAq6G,GAAAr6G,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAq6G,GAAAr6G,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAq6G,GAAAr6G,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAq6G,GAAAr6G,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,GAAA66G,GAAAC,GAAAT,EAAA5mH,WACAqU,EAAAuyG,EAAAj6G,MAAAy6G,EAAA76G,EAIA,OAAAmrG,IAAArjG,KAAA+yG,GAaA,QAAAE,IAAA9/B,EAAA6vB,EAAAkQ,GAGA,QAAAZ,KAMA,IALA,GAAA9lH,GAAAD,UAAAC,OACA0L,EAAA6G,GAAAvS,GACAwS,EAAAxS,EACAw2F,EAAAmwB,GAAAb,GAEAtzG,KACA9G,EAAA8G,GAAAzS,UAAAyS,EAEA,IAAA2xG,GAAAnkH,EAAA,GAAA0L,EAAA,KAAA8qF,GAAA9qF,EAAA1L,EAAA,KAAAw2F,KAEAa,EAAA3rF,EAAA8qF,EAGA,IADAx2F,GAAAmkH,EAAAnkH,OACAA,EAAA0mH,EACA,MAAAE,IACAjgC,EAAA6vB,EAAAqQ,GAAAf,EAAAtvB,YAAAv2F,GACAyL,EAAAy4G,EAAAlkH,MAAAymH,EAAA1mH,EAEA,IAAAiU,GAAAG,aAAAX,IAAAW,eAAA0xG,GAAAC,EAAAp/B,CACA,OAAA76E,GAAAmI,EAAAG,KAAA1I,GAtBA,GAAAq6G,GAAAE,GAAAt/B,EAwBA,OAAAm/B,GAUA,QAAAgB,IAAAC,GACA,gBAAAlyB,EAAAlB,EAAAqB,GACA,GAAA2wB,GAAAlnH,GAAAo2F,EACA,KAAA4oB,GAAA5oB,GAAA,CACA,GAAAvB,GAAAsrB,GAAAjrB,EAAA,EACAkB,GAAAjyF,GAAAiyF,GACAlB,EAAA,SAAAj0F,GAAqC,MAAA4zF,GAAAqyB,EAAAjmH,KAAAimH,IAErC,GAAAnzG,GAAAu0G,EAAAlyB,EAAAlB,EAAAqB,EACA,OAAAxiF,IAAA,EAAAmzG,EAAAryB,EAAAuB,EAAAriF,MAAAvS,IAWA,QAAA+mH,IAAA/xB,GACA,MAAAgyB,IAAA,SAAAC,GACA,GAAAlnH,GAAAknH,EAAAlnH,OACAwS,EAAAxS,EACAmnH,EAAAhX,EAAAhxG,UAAAioH,IAKA,KAHAnyB,GACAiyB,EAAAt1F,UAEApf,KAAA,CACA,GAAAm0E,GAAAugC,EAAA10G,EACA,sBAAAm0E,GACA,SAAA50E,IAAAqmF,GAEA,IAAA+uB,IAAArB,GAAA,WAAAuB,GAAA1gC,GACA,GAAAm/B,GAAA,GAAA3V,OAAA,GAIA,IADA39F,EAAAszG,EAAAtzG,EAAAxS,IACAwS,EAAAxS,GAAA,CACA2mF,EAAAugC,EAAA10G,EAEA,IAAA80G,GAAAD,GAAA1gC,GACAh8E,EAAA,WAAA28G,EAAAC,GAAA5gC,GAAA1mF,EAMA6lH,GAJAn7G,GAAA68G,GAAA78G,EAAA,KACAA,EAAA,KAAAwuF,GAAAJ,GAAAE,GAAAG,MACAzuF,EAAA,GAAA3K,QAAA,GAAA2K,EAAA,GAEAm7G,EAAAuB,GAAA18G,EAAA,KAAAmB,MAAAg6G,EAAAn7G,EAAA,IAEA,GAAAg8E,EAAA3mF,QAAAwnH,GAAA7gC,GACAm/B,EAAAwB,KACAxB,EAAAsB,KAAAzgC,GAGA,kBACA,GAAAj7E,GAAA3L,UACA1B,EAAAqN,EAAA,EAEA,IAAAo6G,GAAA,GAAAp6G,EAAA1L,QACA6mC,GAAAxoC,MAAA2B,QAAAk4F,GACA,MAAA4tB,GAAA2B,MAAAppH,UAKA,KAHA,GAAAmU,GAAA,EACAgB,EAAAxT,EAAAknH,EAAA10G,GAAA1G,MAAAsI,KAAA1I,GAAArN,IAEAmU,EAAAxS,GACAwT,EAAA0zG,EAAA10G,GAAAtU,KAAAkW,KAAAZ,EAEA,OAAAA,MAwBA,QAAAqzG,IAAAlgC,EAAA6vB,EAAArjB,EAAA+wB,EAAAC,EAAAuD,EAAAC,EAAAC,EAAAC,EAAAnB,GAQA,QAAAZ,KAKA,IAJA,GAAA9lH,GAAAD,UAAAC,OACA0L,EAAA6G,GAAAvS,GACAwS,EAAAxS,EAEAwS,KACA9G,EAAA8G,GAAAzS,UAAAyS,EAEA,IAAA4xG,EACA,GAAA5tB,GAAAmwB,GAAAb,GACAgC,EAAAvxB,EAAA7qF,EAAA8qF,EASA,IAPA0tB,IACAx4G,EAAAu4G,GAAAv4G,EAAAw4G,EAAAC,EAAAC,IAEAsD,IACAh8G,EAAAk5G,GAAAl5G,EAAAg8G,EAAAC,EAAAvD,IAEApkH,GAAA8nH,EACA1D,GAAApkH,EAAA0mH,EAAA,CACA,GAAAqB,GAAA1wB,EAAA3rF,EAAA8qF,EACA,OAAAowB,IACAjgC,EAAA6vB,EAAAqQ,GAAAf,EAAAtvB,YAAArD,EACAznF,EAAAq8G,EAAAH,EAAAC,EAAAnB,EAAA1mH,GAGA,GAAAumH,GAAAP,EAAA7yB,EAAA/+E,KACAH,EAAA+zG,EAAAzB,EAAA5/B,IAcA,OAZA3mF,GAAA0L,EAAA1L,OACA4nH,EACAl8G,EAAAu8G,GAAAv8G,EAAAk8G,GACSM,GAAAloH,EAAA,GACT0L,EAAAkmB,UAEAu2F,GAAAN,EAAA7nH,IACA0L,EAAA1L,OAAA6nH,GAEAzzG,aAAAX,IAAAW,eAAA0xG,KACA7xG,EAAA8xG,GAAAE,GAAAhyG,IAEAA,EAAAnI,MAAAy6G,EAAA76G,GAhDA,GAAAy8G,GAAA3R,EAAArd,GACA6sB,EAAAxP,EAAA5d,GACAovB,EAAAxR,EAAA3d,GACAurB,EAAA5N,GAAAzd,GAAAC,IACAkvB,EAAA1R,EAAAnd,GACA0sB,EAAAiC,EAAA/nH,GAAAgmH,GAAAt/B,EA6CA,OAAAm/B,GAWA,QAAAsC,IAAA/0B,EAAAg1B,GACA,gBAAAppH,EAAAq0F,GACA,MAAAqnB,IAAA17G,EAAAo0F,EAAAg1B,EAAA/0B,QAYA,QAAAg1B,IAAAC,EAAAh7D,GACA,gBAAAlvD,EAAAwxB,GACA,GAAArc,EACA,IAAAnV,IAAA4B,IAAA4vB,IAAA5vB,GACA,MAAAstD,EAKA,IAHAlvD,IAAA4B,KACAuT,EAAAnV,GAEAwxB,IAAA5vB,GAAA,CACA,GAAAuT,IAAAvT,GACA,MAAA4vB,EAEA,iBAAAxxB,IAAA,gBAAAwxB,IACAxxB,EAAAkjH,GAAAljH,GACAwxB,EAAA0xF,GAAA1xF,KAEAxxB,EAAAijH,GAAAjjH,GACAwxB,EAAAyxF,GAAAzxF,IAEArc,EAAA+0G,EAAAlqH,EAAAwxB,GAEA,MAAArc,IAWA,QAAAg1G,IAAAC,GACA,MAAAxB,IAAA,SAAAxV,GAEA,MADAA,GAAAvd,EAAAud,EAAA1b,EAAA6oB,OACAiB,GAAA,SAAAn0G,GACA,GAAAynF,GAAA/+E,IACA,OAAAq0G,GAAAhX,EAAA,SAAAne,GACA,MAAAxnF,GAAAwnF,EAAAH,EAAAznF,SAeA,QAAAg9G,IAAA1oH,EAAAukD,GACAA,MAAAtkD,GAAA,IAAAshH,GAAAh9D,EAEA,IAAAokE,GAAApkE,EAAAvkD,MACA,IAAA2oH,EAAA,EACA,MAAAA,GAAA/I,GAAAr7D,EAAAvkD,GAAAukD,CAEA,IAAA/wC,GAAAosG,GAAAr7D,EAAAo7D,GAAA3/G,EAAA03F,EAAAnzC,IACA,OAAAsyC,GAAAtyC,GACAk+D,GAAA5qB,GAAArkF,GAAA,EAAAxT,GAAAkS,KAAA,IACAsB,EAAA/B,MAAA,EAAAzR,GAeA,QAAA4oH,IAAAjiC,EAAA6vB,EAAArjB,EAAA+wB,GAIA,QAAA4B,KAQA,IAPA,GAAAzB,IAAA,EACAC,EAAAvkH,UAAAC,OACAwkH,GAAA,EACAC,EAAAP,EAAAlkH,OACA0L,EAAA6G,GAAAkyG,EAAAH,GACArwG,EAAAG,aAAAX,IAAAW,eAAA0xG,GAAAC,EAAAp/B,IAEA69B,EAAAC,GACA/4G,EAAA84G,GAAAN,EAAAM,EAEA,MAAAF,KACA54G,EAAA84G,KAAAzkH,YAAAskH,EAEA,OAAAv4G,GAAAmI,EAAA+xG,EAAA7yB,EAAA/+E,KAAA1I,GAjBA,GAAAs6G,GAAAxP,EAAA5d,GACAmtB,EAAAE,GAAAt/B,EAkBA,OAAAm/B,GAUA,QAAA+C,IAAA5zB,GACA,gBAAApiF,EAAAC,EAAAgP,GAaA,MAZAA,IAAA,gBAAAA,IAAA2jG,GAAA5yG,EAAAC,EAAAgP,KACAhP,EAAAgP,EAAA7hB,IAGA4S,EAAAi2G,GAAAj2G,GACAC,IAAA7S,IACA6S,EAAAD,EACAA,EAAA,GAEAC,EAAAg2G,GAAAh2G,GAEAgP,MAAA7hB,GAAA4S,EAAAC,EAAA,KAAAg2G,GAAAhnG,GACA49F,GAAA7sG,EAAAC,EAAAgP,EAAAmzE,IAWA,QAAA8zB,IAAAR,GACA,gBAAAlqH,EAAAwxB,GAKA,MAJA,gBAAAxxB,IAAA,gBAAAwxB,KACAxxB,EAAA2qH,GAAA3qH,GACAwxB,EAAAm5F,GAAAn5F,IAEA04F,EAAAlqH,EAAAwxB,IAqBA,QAAA+2F,IAAAjgC,EAAA6vB,EAAAyS,EAAAzyB,EAAArD,EAAA+wB,EAAAC,EAAAyD,EAAAC,EAAAnB,GACA,GAAAwC,GAAA1S,EAAAzd,GACAgvB,EAAAmB,EAAA/E,EAAAlkH,GACAkpH,EAAAD,EAAAjpH,GAAAkkH,EACAiF,EAAAF,EAAAhF,EAAAjkH,GACAopH,EAAAH,EAAAjpH,GAAAikH,CAEA1N,IAAA0S,EAAAjwB,GAAAC,GACAsd,KAAA0S,EAAAhwB,GAAAD,IAEAud,EAAA1d,KACA0d,KAAA5d,GAAAC,IAEA,IAAAywB,IACA3iC,EAAA6vB,EAAArjB,EAAAi2B,EAAArB,EAAAsB,EACAF,EAAAvB,EAAAC,EAAAnB,GAGAlzG,EAAAy1G,EAAAn9G,MAAA7L,GAAAqpH,EAKA,OAJA9B,IAAA7gC,IACA4iC,GAAA/1G,EAAA81G,GAEA91G,EAAAgjF,cACAgzB,GAAAh2G,EAAAmzE,EAAA6vB,GAUA,QAAAiT,IAAAtD,GACA,GAAAx/B,GAAAthF,GAAA8gH,EACA,iBAAA/P,EAAAsT,GAGA,GAFAtT,EAAA4S,GAAA5S,GACAsT,EAAA9X,GAAA6G,GAAAiR,GAAA,KACA,CAGA,GAAAz2B,IAAAvpF,GAAA0sG,GAAA,KAAAnkG,MAAA,KACA5T,EAAAsoF,EAAAsM,EAAA,SAAAA,EAAA,GAAAy2B,GAGA,OADAz2B,IAAAvpF,GAAArL,GAAA,KAAA4T,MAAA,OACAghF,EAAA,SAAAA,EAAA,GAAAy2B,IAEA,MAAA/iC,GAAAyvB,IAsBA,QAAAuT,IAAAnS,GACA,gBAAAv4G,GACA,GAAA83G,GAAAC,GAAA/3G,EACA,OAAA83G,IAAAlc,GACA3D,EAAAj4F,GAEA83G,GAAA3b,GACA5D,EAAAv4F,GAEA62F,EAAA72F,EAAAu4G,EAAAv4G,KA6BA,QAAA2qH,IAAAjjC,EAAA6vB,EAAArjB,EAAA+wB,EAAAC,EAAAyD,EAAAC,EAAAnB,GACA,GAAAsB,GAAAxR,EAAA3d,EACA,KAAAmvB,GAAA,kBAAArhC,GACA,SAAA50E,IAAAqmF,GAEA,IAAAp4F,GAAAkkH,IAAAlkH,OAAA,CASA,IARAA,IACAw2G,KAAAvd,GAAAC,IACAgrB,EAAAC,EAAAlkH,IAEA4nH,MAAA5nH,GAAA4nH,EAAA1N,GAAA1B,GAAAoP,GAAA,GACAnB,MAAAzmH,GAAAymH,EAAAjO,GAAAiO,GACA1mH,GAAAmkH,IAAAnkH,OAAA,EAEAw2G,EAAAtd,GAAA,CACA,GAAAwuB,GAAAxD,EACAyD,EAAAxD,CAEAD,GAAAC,EAAAlkH,GAEA,GAAA0K,GAAAq9G,EAAA/nH,GAAAsnH,GAAA5gC,GAEA2iC,GACA3iC,EAAA6vB,EAAArjB,EAAA+wB,EAAAC,EAAAuD,EAAAC,EACAC,EAAAC,EAAAnB,EAkBA,IAfA/7G,GACAk/G,GAAAP,EAAA3+G,GAEAg8E,EAAA2iC,EAAA,GACA9S,EAAA8S,EAAA,GACAn2B,EAAAm2B,EAAA,GACApF,EAAAoF,EAAA,GACAnF,EAAAmF,EAAA,GACA5C,EAAA4C,EAAA,SAAAA,EAAA,GACAtB,EAAA,EAAArhC,EAAA3mF,OACAm6G,GAAAmP,EAAA,GAAAtpH,EAAA,IAEA0mH,GAAAlQ,GAAAzd,GAAAC,MACAwd,KAAAzd,GAAAC,KAEAwd,MAAA5d,GAGAplF,EADOgjG,GAAAzd,IAAAyd,GAAAxd,GACPytB,GAAA9/B,EAAA6vB,EAAAkQ,GACOlQ,GAAAvd,IAAAud,IAAA5d,GAAAK,KAAAkrB,EAAAnkH,OAGP6mH,GAAA/6G,MAAA7L,GAAAqpH,GAFAV,GAAAjiC,EAAA6vB,EAAArjB,EAAA+wB,OAJA,IAAA1wG,GAAAqyG,GAAAl/B,EAAA6vB,EAAArjB,EAQA,IAAAE,GAAA1oF,EAAAm/G,GAAAP,EACA,OAAAC,IAAAn2B,EAAA7/E,EAAA81G,GAAA3iC,EAAA6vB,GAgBA,QAAAkF,IAAA5oF,EAAAjD,EAAA2mF,EAAAC,EAAAyE,EAAAtzC,GACA,GAAAmiD,GAAAvT,EAAA9d,GACA6Y,EAAAz+E,EAAA9yB,OACAs6G,EAAAzqF,EAAA7vB,MAEA,IAAAuxG,GAAA+I,KAAAyP,GAAAzP,EAAA/I,GACA,QAGA,IAAAgG,GAAA3vC,EAAA/oE,IAAAi0B,EACA,IAAAykF,GAAA3vC,EAAA/oE,IAAAgxB,GACA,MAAA0nF,IAAA1nF,CAEA,IAAArd,IAAA,EACAgB,GAAA,EACAknG,EAAAlE,EAAA7d,GAAA,GAAAgb,IAAA1zG,EAMA,KAJA2nE,EAAAzpD,IAAA2U,EAAAjD,GACA+3C,EAAAzpD,IAAA0R,EAAAiD,KAGAtgB,EAAA++F,GAAA,CACA,GAAAyY,GAAAl3F,EAAAtgB,GACAy3G,EAAAp6F,EAAArd,EAEA,IAAAikG,EACA,GAAAyT,GAAAH,EACAtT,EAAAwT,EAAAD,EAAAx3G,EAAAqd,EAAAiD,EAAA80C,GACA6uC,EAAAuT,EAAAC,EAAAz3G,EAAAsgB,EAAAjD,EAAA+3C,EAEA,IAAAsiD,IAAAjqH,GAAA,CACA,GAAAiqH,EACA,QAEA12G,IAAA,CACA,OAGA,GAAAknG,GACA,IAAAlmB,EAAA3kE,EAAA,SAAAo6F,EAAA1P,GACA,IAAAtkB,EAAAykB,EAAAH,KACAyP,IAAAC,GAAA/O,EAAA8O,EAAAC,EAAAzT,EAAAC,EAAA7uC,IACA,MAAA8yC,GAAArpG,KAAAkpG,KAEe,CACf/mG,GAAA,CACA,YAES,IACTw2G,IAAAC,IACA/O,EAAA8O,EAAAC,EAAAzT,EAAAC,EAAA7uC,GACA,CACAp0D,GAAA,CACA,QAKA,MAFAo0D,GAAA,OAAA90C,GACA80C,EAAA,OAAA/3C,GACArc,EAoBA,QAAAmoG,IAAA18G,EAAA4wB,EAAAknF,EAAAP,EAAAC,EAAAyE,EAAAtzC,GACA,OAAAmvC,GACA,IAAApb,IACA,GAAA18F,EAAA4jH,YAAAhzF,EAAAgzF,YACA5jH,EAAA+jH,YAAAnzF,EAAAmzF,WACA,QAEA/jH,KAAA2yD,OACA/hC,IAAA+hC,MAEA,KAAA8pC,IACA,QAAAz8F,EAAA4jH,YAAAhzF,EAAAgzF,aACA3H,EAAA,GAAAzzC,IAAAxoE,GAAA,GAAAwoE,IAAA53C,IAKA,KAAA0qE,IACA,IAAAC,IACA,IAAAM,IAGA,MAAAya,KAAAt2G,GAAA4wB,EAEA,KAAA6qE,IACA,MAAAz7F,GAAAV,MAAAsxB,EAAAtxB,MAAAU,EAAAymC,SAAA7V,EAAA6V,OAEA,KAAAy1D,IACA,IAAAE,IAIA,MAAAp8F,IAAA4wB,EAAA,EAEA,KAAAgrE,IACA,GAAAsvB,GAAAjzB,CAEA,KAAAkE,IACA,GAAA2uB,GAAAvT,EAAA9d,EAGA,IAFAyxB,MAAA5yB,GAEAt4F,EAAAgM,MAAA4kB,EAAA5kB,OAAA8+G,EACA,QAGA,IAAAxS,GAAA3vC,EAAA/oE,IAAAI,EACA,IAAAs4G,EACA,MAAAA,IAAA1nF,CAEA2mF,IAAA7d,GAGA/wB,EAAAzpD,IAAAlf,EAAA4wB,EACA,IAAArc,GAAAkoG,GAAAyO,EAAAlrH,GAAAkrH,EAAAt6F,GAAA2mF,EAAAC,EAAAyE,EAAAtzC,EAEA,OADAA,GAAA,OAAA3oE,GACAuU,CAEA,KAAA8nF,IACA,GAAAkoB,GACA,MAAAA,IAAAtlH,KAAAe,IAAAukH,GAAAtlH,KAAA2xB,GAGA,SAgBA,QAAAmsF,IAAA/8G,EAAA4wB,EAAA2mF,EAAAC,EAAAyE,EAAAtzC,GACA,GAAAmiD,GAAAvT,EAAA9d,GACA0xB,EAAAxnH,GAAA3D,GACAorH,EAAAD,EAAApqH,OACAsqH,EAAA1nH,GAAAitB,GACAyqF,EAAAgQ,EAAAtqH,MAEA,IAAAqqH,GAAA/P,IAAAyP,EACA,QAGA,KADA,GAAAv3G,GAAA63G,EACA73G,KAAA,CACA,GAAA9S,GAAA0qH,EAAA53G,EACA,MAAAu3G,EAAArqH,IAAAmwB,GAAAzwB,GAAAlB,KAAA2xB,EAAAnwB,IACA,SAIA,GAAA63G,GAAA3vC,EAAA/oE,IAAAI,EACA,IAAAs4G,GAAA3vC,EAAA/oE,IAAAgxB,GACA,MAAA0nF,IAAA1nF,CAEA,IAAArc,IAAA,CACAo0D,GAAAzpD,IAAAlf,EAAA4wB,GACA+3C,EAAAzpD,IAAA0R,EAAA5wB,EAGA,KADA,GAAAsrH,GAAAR,IACAv3G,EAAA63G,GAAA,CACA3qH,EAAA0qH,EAAA53G,EACA,IAAA6iG,GAAAp2G,EAAAS,GACAuqH,EAAAp6F,EAAAnwB,EAEA,IAAA+2G,EACA,GAAAyT,GAAAH,EACAtT,EAAAwT,EAAA5U,EAAA31G,EAAAmwB,EAAA5wB,EAAA2oE,GACA6uC,EAAApB,EAAA4U,EAAAvqH,EAAAT,EAAA4wB,EAAA+3C,EAGA,MAAAsiD,IAAAjqH,GACAo1G,IAAA4U,GAAA/O,EAAA7F,EAAA4U,EAAAzT,EAAAC,EAAA7uC,GACAsiD,GACA,CACA12G,GAAA,CACA,OAEA+2G,MAAA,eAAA7qH,GAEA,GAAA8T,IAAA+2G,EAAA,CACA,GAAAC,GAAAvrH,EAAA4X,YACA4zG,EAAA56F,EAAAhZ,WAGA2zG,IAAAC,GACA,eAAAxrH,IAAA,eAAA4wB,MACA,kBAAA26F,oBACA,kBAAAC,sBACAj3G,GAAA,GAKA,MAFAo0D,GAAA,OAAA3oE,GACA2oE,EAAA,OAAA/3C,GACArc,EAUA,QAAAyzG,IAAAtgC,GACA,MAAAm5B,IAAAC,GAAAp5B,EAAA1mF,GAAA8vC,IAAA42C,EAAA,IAUA,QAAA+wB,IAAAz4G,GACA,MAAAw6G,IAAAx6G,EAAA2D,GAAAqiH,IAWA,QAAAxN,IAAAx4G,GACA,MAAAw6G,IAAAx6G,EAAAg3G,GAAAiP,IAqBA,QAAAmC,IAAA1gC,GAKA,IAJA,GAAAnzE,GAAAmzE,EAAApoF,KAAA,GACAu0B,EAAA43F,GAAAl3G,GACAxT,EAAAZ,GAAAlB,KAAAwsH,GAAAl3G,GAAAsf,EAAA9yB,OAAA,EAEAA,KAAA,CACA,GAAA2K,GAAAmoB,EAAA9yB,GACA2qH,EAAAhgH,EAAAg8E,IACA,UAAAgkC,MAAAhkC,EACA,MAAAh8E,GAAApM,KAGA,MAAAiV,GAUA,QAAAmzG,IAAAhgC,GACA,GAAA1nF,GAAAG,GAAAlB,KAAA8xG,EAAA,eAAAA,EAAArpB,CACA,OAAA1nF,GAAAu3F,YAcA,QAAAooB,MACA,GAAAprG,GAAAw8F,EAAA1c,YAEA,OADA9/E,OAAA8/E,GAAAwpB,GAAAtpG,EACAzT,UAAAC,OAAAwT,EAAAzT,UAAA,GAAAA,UAAA,IAAAyT,EAWA,QAAA+/F,IAAAzuE,EAAAplC,GACA,GAAAiL,GAAAm6B,EAAAutE,QACA,OAAAuY,IAAAlrH,GACAiL,EAAA,gBAAAjL,GAAA,iBACAiL,EAAAm6B,IAUA,QAAA44E,IAAAz+G,GAIA,IAHA,GAAAuU,GAAA5Q,GAAA3D,GACAe,EAAAwT,EAAAxT,OAEAA,KAAA,CACA,GAAAN,GAAA8T,EAAAxT,GACA3B,EAAAY,EAAAS,EAEA8T,GAAAxT,IAAAN,EAAArB,EAAAw/G,GAAAx/G,IAEA,MAAAmV,GAWA,QAAAq3G,IAAA5rH,EAAAS,GACA,GAAArB,GAAAu4F,EAAA33F,EAAAS,EACA,OAAA28G,IAAAh+G,KAAA4B,GAUA,QAAA45G,IAAAx7G,GACA,GAAAysH,GAAA1rH,GAAAlB,KAAAG,EAAAu7G,IACA7C,EAAA14G,EAAAu7G,GAEA,KACAv7G,EAAAu7G,IAAA35G,EACA,IAAA8qH,IAAA,EACO,MAAAn+G,IAEP,GAAA4G,GAAAw3G,GAAA9sH,KAAAG,EAQA,OAPA0sH,KACAD,EACAzsH,EAAAu7G,IAAA7C,QAEA14G,GAAAu7G,KAGApmG,EAuEA,QAAAg+F,IAAA3+F,EAAAC,EAAAm4G,GAIA,IAHA,GAAAz4G,IAAA,EACAxS,EAAAirH,EAAAjrH,SAEAwS,EAAAxS,GAAA,CACA,GAAA2K,GAAAsgH,EAAAz4G,GACAvH,EAAAN,EAAAM,IAEA,QAAAN,EAAAW,MACA,WAAAuH,GAAA5H,CAA0C,MAC1C,iBAAA6H,GAAA7H,CAAwC,MACxC,YAAA6H,EAAA8+F,GAAA9+F,EAAAD,EAAA5H,EAA+D,MAC/D,iBAAA4H,EAAAsnG,GAAAtnG,EAAAC,EAAA7H,IAGA,OAAc4H,QAAAC,OAUd,QAAAo4G,IAAAhzG,GACA,GAAA2G,GAAA3G,EAAA2G,MAAA4+E,GACA,OAAA5+E,KAAA,GAAA5M,MAAAyrF,OAYA,QAAAytB,IAAAlsH,EAAA4S,EAAAu5G,GACAv5G,EAAA0nG,GAAA1nG,EAAA5S,EAMA,KAJA,GAAAuT,IAAA,EACAxS,EAAA6R,EAAA7R,OACAwT,GAAA,IAEAhB,EAAAxS,GAAA,CACA,GAAAN,GAAA85G,GAAA3nG,EAAAW,GACA,MAAAgB,EAAA,MAAAvU,GAAAmsH,EAAAnsH,EAAAS,IACA,KAEAT,KAAAS,GAEA,MAAA8T,MAAAhB,GAAAxS,EACAwT,GAEAxT,EAAA,MAAAf,EAAA,EAAAA,EAAAe,SACAA,GAAA68G,GAAA78G,IAAA60G,GAAAn1G,EAAAM,KACA6mC,GAAA5nC,IAAAu1G,GAAAv1G,KAUA,QAAA63G,IAAAhkF,GACA,GAAA9yB,GAAA8yB,EAAA9yB,OACAwT,EAAAsf,EAAAjc,YAAA7W,EAOA,OAJAA,IAAA,gBAAA8yB,GAAA,IAAA1zB,GAAAlB,KAAA40B,EAAA,WACAtf,EAAAhB,MAAAsgB,EAAAtgB,MACAgB,EAAAykC,MAAAnlB,EAAAmlB,OAEAzkC,EAUA,QAAA2jG,IAAAl4G,GACA,wBAAAA,GAAA4X,aAAAqmG,GAAAj+G,MACAunH,GAAA6E,GAAApsH,IAiBA,QAAAq4G,IAAAr4G,EAAA83G,EAAAmM,EAAAxM,GACA,GAAAqP,GAAA9mH,EAAA4X,WACA,QAAAkgG,GACA,IAAArb,IACA,MAAAinB,IAAA1jH,EAEA,KAAAs7F,IACA,IAAAC,IACA,UAAAurB,IAAA9mH,EAEA,KAAA08F,IACA,MAAAmnB,IAAA7jH,EAAAy3G,EAEA,KAAA9a,IAAA,IAAAC,IACA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IACA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IACA,MAAAkiB,IAAAr/G,EAAAy3G,EAEA,KAAA7b,IACA,MAAAooB,IAAAhkH,EAAAy3G,EAAAwM,EAEA,KAAApoB,IACA,IAAAO,IACA,UAAA0qB,GAAA9mH,EAEA,KAAAk8F,IACA,MAAAgoB,IAAAlkH,EAEA,KAAAm8F,IACA,MAAAioB,IAAApkH,EAAAy3G,EAAAwM,EAEA,KAAA5nB,IACA,MAAAgoB,IAAArkH,IAYA,QAAAqsH,IAAApzG,EAAAqzG,GACA,GAAAvrH,GAAAurH,EAAAvrH,MACA,KAAAA,EACA,MAAAkY,EAEA,IAAAsqD,GAAAxiE,EAAA,CAGA,OAFAurH,GAAA/oD,IAAAxiE,EAAA,WAAAurH,EAAA/oD,GACA+oD,IAAAr5G,KAAAlS,EAAA,YACAkY,EAAA0sB,QAAA44D,GAAA,uBAA6C+tB,EAAA,UAU7C,QAAAxS,IAAA16G,GACA,MAAAwoC,IAAAxoC,IAAAm2G,GAAAn2G,OACAmtH,IAAAntH,KAAAmtH,KAWA,QAAA3W,IAAAx2G,EAAA2B,GAEA,MADAA,GAAA,MAAAA,EAAA85F,GAAA95F,IACAA,IACA,gBAAA3B,IAAA6/F,GAAAjvE,KAAA5wB,KACAA,GAAA,GAAAA,EAAA,MAAAA,EAAA2B,EAaA,QAAAylH,IAAApnH,EAAAmU,EAAAvT,GACA,IAAA43G,GAAA53G,GACA,QAEA,IAAAqM,SAAAkH,EACA,oBAAAlH,EACAmyG,GAAAx+G,IAAA41G,GAAAriG,EAAAvT,EAAAe,QACA,UAAAsL,GAAAkH,IAAAvT,KAEAs2G,GAAAt2G,EAAAuT,GAAAnU,GAaA,QAAAu/G,IAAAv/G,EAAAY,GACA,GAAA4nC,GAAAxoC,GACA,QAEA,IAAAiN,SAAAjN,EACA,mBAAAiN,GAAA,UAAAA,GAAA,WAAAA,GACA,MAAAjN,IAAAk6G,GAAAl6G,MAGA2+F,GAAA/tE,KAAA5wB,KAAA0+F,GAAA9tE,KAAA5wB,IACA,MAAAY,GAAAZ,IAAAI,IAAAQ,IAUA,QAAA2rH,IAAAvsH,GACA,GAAAiN,SAAAjN,EACA,iBAAAiN,GAAA,UAAAA,GAAA,UAAAA,GAAA,WAAAA,EACA,cAAAjN,EACA,OAAAA,EAWA,QAAAmpH,IAAA7gC,GACA,GAAA2gC,GAAAD,GAAA1gC,GACA92D,EAAAmgF,EAAAsX,EAEA,sBAAAz3F,MAAAy3F,IAAApX,GAAA/wG,WACA,QAEA,IAAAwnF,IAAA92D,EACA,QAEA,IAAAllB,GAAA48G,GAAA13F,EACA,SAAAllB,GAAAg8E,IAAAh8E,EAAA,GAUA,QAAA2xG,IAAA31B,GACA,QAAA8kC,SAAA9kC,GAmBA,QAAAu2B,IAAA7+G,GACA,GAAA0nH,GAAA1nH,KAAAwY,YACA60G,EAAA,kBAAA3F,MAAA5mH,WAAAq2G,EAEA,OAAAn3G,KAAAqtH,EAWA,QAAA7N,IAAAx/G,GACA,MAAAA,SAAAw4G,GAAAx4G,GAYA,QAAAs/G,IAAAj+G,EAAA41G,GACA,gBAAAr2G,GACA,aAAAA,IAGAA,EAAAS,KAAA41G,IACAA,IAAAr1G,IAAAP,IAAAjB,IAAAQ,MAYA,QAAA0sH,IAAAhlC,GACA,GAAAnzE,GAAAo4G,GAAAjlC,EAAA,SAAAjnF,GAIA,MAHAw2F,GAAAjrF,OAAAqtF,IACApC,EAAA3xE,QAEA7kB,IAGAw2F,EAAA1iF,EAAA0iF,KACA,OAAA1iF,GAmBA,QAAAq2G,IAAAl/G,EAAAuN,GACA,GAAAs+F,GAAA7rG,EAAA,GACAkhH,EAAA3zG,EAAA,GACA4zG,EAAAtV,EAAAqV,EACA3T,EAAA4T,GAAAlzB,GAAAC,GAAAM,IAEA4yB,EACAF,GAAA1yB,IAAAqd,GAAAzd,IACA8yB,GAAA1yB,IAAAqd,GAAApd,IAAAzuF,EAAA,GAAA3K,QAAAkY,EAAA,IACA2zG,IAAA1yB,GAAAC,KAAAlhF,EAAA,GAAAlY,QAAAkY,EAAA,IAAAs+F,GAAAzd,EAGA,KAAAmf,IAAA6T,EACA,MAAAphH,EAGAkhH,GAAAjzB,KACAjuF,EAAA,GAAAuN,EAAA,GAEA4zG,GAAAtV,EAAA5d,GAAA,EAAAE,GAGA,IAAAz6F,GAAA6Z,EAAA,EACA,IAAA7Z,EAAA,CACA,GAAA6lH,GAAAv5G,EAAA,EACAA,GAAA,GAAAu5G,EAAAD,GAAAC,EAAA7lH,EAAA6Z,EAAA,IAAA7Z,EACAsM,EAAA,GAAAu5G,EAAA7sB,EAAA1sF,EAAA,GAAA2sF,IAAAp/E,EAAA,GA0BA,MAvBA7Z,GAAA6Z,EAAA,GACA7Z,IACA6lH,EAAAv5G,EAAA,GACAA,EAAA,GAAAu5G,EAAAU,GAAAV,EAAA7lH,EAAA6Z,EAAA,IAAA7Z,EACAsM,EAAA,GAAAu5G,EAAA7sB,EAAA1sF,EAAA,GAAA2sF,IAAAp/E,EAAA,IAGA7Z,EAAA6Z,EAAA,GACA7Z,IACAsM,EAAA,GAAAtM,GAGAwtH,EAAA1yB,KACAxuF,EAAA,SAAAA,EAAA,GAAAuN,EAAA,GAAA05F,GAAAjnG,EAAA,GAAAuN,EAAA,KAGA,MAAAvN,EAAA,KACAA,EAAA,GAAAuN,EAAA,IAGAvN,EAAA,GAAAuN,EAAA,GACAvN,EAAA,GAAAmhH,EAEAnhH,EAgBA,QAAAqhH,IAAA3W,EAAAC,EAAA51G,EAAAT,EAAAiZ,EAAA0vD,GAOA,MANAivC,IAAAxB,IAAAwB,GAAAvB,KAEA1tC,EAAAzpD,IAAAm3F,EAAAD,GACA0I,GAAA1I,EAAAC,EAAAr1G,GAAA+rH,GAAApkD,GACAA,EAAA,OAAA0tC,IAEAD,EAYA,QAAAgI,IAAAp+G,GACA,GAAAuU,KACA,UAAAvU,EACA,OAAAS,KAAAjB,IAAAQ,GACAuU,EAAAnC,KAAA3R,EAGA,OAAA8T,GAUA,QAAAsmG,IAAAz7G,GACA,MAAA2sH,IAAA9sH,KAAAG,GAYA,QAAA0hH,IAAAp5B,EAAA9zE,EAAAkL,GAEA,MADAlL,GAAAsnG,GAAAtnG,IAAA5S,GAAA0mF,EAAA3mF,OAAA,EAAA6S,EAAA,GACA,WAMA,IALA,GAAAnH,GAAA3L,UACAyS,GAAA,EACAxS,EAAAm6G,GAAAzuG,EAAA1L,OAAA6S,EAAA,GACAigB,EAAAvgB,GAAAvS,KAEAwS,EAAAxS,GACA8yB,EAAAtgB,GAAA9G,EAAAmH,EAAAL,EAEAA,IAAA,CAEA,KADA,GAAAy5G,GAAA15G,GAAAM,EAAA,KACAL,EAAAK,GACAo5G,EAAAz5G,GAAA9G,EAAA8G,EAGA,OADAy5G,GAAAp5G,GAAAkL,EAAA+U,GACAhnB,EAAA66E,EAAAvyE,KAAA63G,IAYA,QAAArpG,IAAA3jB,EAAA4S,GACA,MAAAA,GAAA7R,OAAA,EAAAf,EAAAq6G,GAAAr6G,EAAAmhH,GAAAvuG,EAAA,OAaA,QAAAo2G,IAAAn1F,EAAAusF,GAKA,IAJA,GAAA9N,GAAAz+E,EAAA9yB,OACAA,EAAA4xG,GAAAyN,EAAAr/G,OAAAuxG,GACA2a,EAAAhb,GAAAp+E,GAEA9yB,KAAA,CACA,GAAAwS,GAAA6sG,EAAAr/G,EACA8yB,GAAA9yB,GAAA60G,GAAAriG,EAAA++F,GAAA2a,EAAA15G,GAAAvS,GAEA,MAAA6yB,GAmDA,QAAA02F,IAAA1D,EAAAqG,EAAA3V,GACA,GAAAt+F,GAAAi0G,EAAA,EACA,OAAArM,IAAAgG,EAAAwF,GAAApzG,EAAAk0G,GAAAlB,GAAAhzG,GAAAs+F,KAYA,QAAA6V,IAAA1lC,GACA,GAAAjtD,GAAA,EACA4yF,EAAA,CAEA,mBACA,GAAAC,GAAAC,KACAC,EAAAhzB,IAAA8yB,EAAAD,EAGA,IADAA,EAAAC,EACAE,EAAA,GACA,KAAA/yF,GAAA8/D,GACA,MAAAz5F,WAAA,OAGA25B,GAAA,CAEA,OAAAitD,GAAA76E,MAAA7L,GAAAF,YAYA,QAAAk1G,IAAAniF,EAAA7nB,GACA,GAAAuH,IAAA,EACAxS,EAAA8yB,EAAA9yB,OACAwiE,EAAAxiE,EAAA,CAGA,KADAiL,MAAAhL,GAAAD,EAAAiL,IACAuH,EAAAvH,GAAA,CACA,GAAAyhH,GAAA3X,GAAAviG,EAAAgwD,GACAnkE,EAAAy0B,EAAA45F,EAEA55F,GAAA45F,GAAA55F,EAAAtgB,GACAsgB,EAAAtgB,GAAAnU,EAGA,MADAy0B,GAAA9yB,OAAAiL,EACA6nB,EA4BA,QAAA0mF,IAAAn7G,GACA,mBAAAA,IAAAk6G,GAAAl6G,GACA,MAAAA,EAEA,IAAAmV,GAAAnV,EAAA,EACA,YAAAmV,GAAA,EAAAnV,IAAAw7F,GAAA,KAAArmF,EAUA,QAAAipG,IAAA91B,GACA,SAAAA,EAAA,CACA,IACA,MAAAgmC,IAAAzuH,KAAAyoF,GACS,MAAA/5E,IACT,IACA,MAAA+5E,GAAA,GACS,MAAA/5E,KAET,SAWA,QAAAw/G,IAAAb,EAAA/U,GAOA,MANAhjB,GAAA2G,GAAA,SAAAlH,GACA,GAAA50F,GAAA,KAAA40F,EAAA,EACAujB,GAAAvjB,EAAA,KAAAa,EAAAy3B,EAAAltH,IACAktH,EAAAl6G,KAAAhT,KAGAktH,EAAA/9E,OAUA,QAAA4iE,IAAA0V,GACA,GAAAA,YAAA5V,GACA,MAAA4V,GAAA7nG,OAEA,IAAAzK,GAAA,GAAA28F,GAAA2V,EAAAvV,YAAAuV,EAAArV,UAIA,OAHAj9F,GAAAg9F,YAAAU,GAAA4U,EAAAtV,aACAh9F,EAAAk9F,UAAAoV,EAAApV,UACAl9F,EAAAm9F,WAAAmV,EAAAnV,WACAn9F,EA0BA,QAAAo5G,IAAA95F,EAAA7nB,EAAAu6G,GAEAv6G,GADAu6G,EAAAC,GAAA3yF,EAAA7nB,EAAAu6G,GAAAv6G,IAAAhL,IACA,EAEAk6G,GAAA1B,GAAAxtG,GAAA,EAEA,IAAAjL,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,KAAAA,GAAAiL,EAAA,EACA,QAMA,KAJA,GAAAuH,GAAA,EACAqhF,EAAA,EACArgF,EAAAjB,GAAAotG,GAAA3/G,EAAAiL,IAEAuH,EAAAxS,GACAwT,EAAAqgF,KAAAusB,GAAAttF,EAAAtgB,KAAAvH,EAEA,OAAAuI,GAkBA,QAAAq5G,IAAA/5F,GAMA,IALA,GAAAtgB,IAAA,EACAxS,EAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,OACA6zF,EAAA,EACArgF,OAEAhB,EAAAxS,GAAA,CACA,GAAA3B,GAAAy0B,EAAAtgB,EACAnU,KACAmV,EAAAqgF,KAAAx1F,GAGA,MAAAmV,GAyBA,QAAAJ,MACA,GAAApT,GAAAD,UAAAC,MACA,KAAAA,EACA,QAMA,KAJA,GAAA0L,GAAA6G,GAAAvS,EAAA,GACA8yB,EAAA/yB,UAAA,GACAyS,EAAAxS,EAEAwS,KACA9G,EAAA8G,EAAA,GAAAzS,UAAAyS,EAEA,OAAA2hF,GAAAttD,GAAA/T,GAAAo+E,GAAAp+E,OAAA8lF,GAAAltG,EAAA,IA4HA,QAAAohH,IAAAh6F,EAAAh0B,EAAA0mH,GACA,GAAAxlH,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,IAGAlB,EAAA0mH,GAAA1mH,IAAAmB,GAAA,EAAAw4G,GAAA35G,GACAshH,GAAAttF,EAAAh0B,EAAA,IAAAA,EAAAkB,OA4BA,QAAA+sH,IAAAj6F,EAAAh0B,EAAA0mH,GACA,GAAAxlH,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,IAGAlB,EAAA0mH,GAAA1mH,IAAAmB,GAAA,EAAAw4G,GAAA35G,GACAA,EAAAkB,EAAAlB,EACAshH,GAAAttF,EAAA,EAAAh0B,EAAA,IAAAA,OAsCA,QAAAkuH,IAAAl6F,EAAA6gE,GACA,MAAA7gE,MAAA9yB,OACA8hH,GAAAhvF,EAAA8rF,GAAAjrB,EAAA,aAuCA,QAAAs5B,IAAAn6F,EAAA6gE,GACA,MAAA7gE,MAAA9yB,OACA8hH,GAAAhvF,EAAA8rF,GAAAjrB,EAAA,UAiCA,QAAA9/C,IAAA/gB,EAAAz0B,EAAAwU,EAAAC,GACA,GAAA9S,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,IAGA6S,GAAA,gBAAAA,IAAA4yG,GAAA3yF,EAAAz0B,EAAAwU,KACAA,EAAA,EACAC,EAAA9S,GAEAw4G,GAAA1lF,EAAAz0B,EAAAwU,EAAAC,OAsCA,QAAAo6G,IAAAp6F,EAAA6gE,EAAAqB,GACA,GAAAh1F,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,KAAAA,EACA,QAEA,IAAAwS,GAAA,MAAAwiF,EAAA,EAAAyjB,GAAAzjB,EAIA,OAHAxiF,GAAA,IACAA,EAAA2nG,GAAAn6G,EAAAwS,EAAA,IAEAuiF,EAAAjiE,EAAA8rF,GAAAjrB,EAAA,GAAAnhF,GAsCA,QAAA26G,IAAAr6F,EAAA6gE,EAAAqB,GACA,GAAAh1F,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,KAAAA,EACA,QAEA,IAAAwS,GAAAxS,EAAA,CAOA,OANAg1F,KAAA/0F,KACAuS,EAAAimG,GAAAzjB,GACAxiF,EAAAwiF,EAAA,EACAmlB,GAAAn6G,EAAAwS,EAAA,GACAo/F,GAAAp/F,EAAAxS,EAAA,IAEA+0F,EAAAjiE,EAAA8rF,GAAAjrB,EAAA,GAAAnhF,GAAA,GAiBA,QAAAu9B,IAAAjd,GACA,GAAA9yB,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,GAAA44G,GAAA9lF,EAAA,MAiBA,QAAAs6F,IAAAt6F,GACA,GAAA9yB,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,GAAA44G,GAAA9lF,EAAA+mE,OAuBA,QAAAwzB,IAAAv6F,EAAA+lF,GACA,GAAA74G,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,IAGA64G,MAAA54G,GAAA,EAAAw4G,GAAAI,GACAD,GAAA9lF,EAAA+lF,OAkBA,QAAAyU,IAAAlZ,GAKA,IAJA,GAAA5hG,IAAA,EACAxS,EAAA,MAAAo0G,EAAA,EAAAA,EAAAp0G,OACAwT,OAEAhB,EAAAxS,GAAA,CACA,GAAAizF,GAAAmhB,EAAA5hG,EACAgB,GAAAy/E,EAAA,IAAAA,EAAA,GAEA,MAAAz/E,GAqBA,QAAA+5G,IAAAz6F,GACA,MAAAA,MAAA9yB,OAAA8yB,EAAA,GAAA7yB,GA0BA,QAAAwL,IAAAqnB,EAAAz0B,EAAA22F,GACA,GAAAh1F,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,KAAAA,EACA,QAEA,IAAAwS,GAAA,MAAAwiF,EAAA,EAAAyjB,GAAAzjB,EAIA,OAHAxiF,GAAA,IACAA,EAAA2nG,GAAAn6G,EAAAwS,EAAA,IAEAuhF,EAAAjhE,EAAAz0B,EAAAmU,GAiBA,QAAAg7G,IAAA16F,GACA,GAAA9yB,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,GAAAogH,GAAAttF,EAAA,SAiHA,QAAA5gB,IAAA4gB,EAAA26F,GACA,aAAA36F,EAAA,GAAA46F,GAAAxvH,KAAA40B,EAAA26F,GAiBA,QAAA38G,IAAAgiB,GACA,GAAA9yB,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,GAAA8yB,EAAA9yB,EAAA,GAAAC,GAwBA,QAAAunC,IAAA1U,EAAAz0B,EAAA22F,GACA,GAAAh1F,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,KAAAA,EACA,QAEA,IAAAwS,GAAAxS,CAKA,OAJAg1F,KAAA/0F,KACAuS,EAAAimG,GAAAzjB,GACAxiF,IAAA,EAAA2nG,GAAAn6G,EAAAwS,EAAA,GAAAo/F,GAAAp/F,EAAAxS,EAAA,IAEA3B,MACAo5F,EAAA3kE,EAAAz0B,EAAAmU,GACAuiF,EAAAjiE,EAAAqiE,EAAA3iF,GAAA,GAwBA,QAAAm7G,IAAA76F,EAAAh0B,GACA,MAAAg0B,MAAA9yB,OAAAy+G,GAAA3rF,EAAA2lF,GAAA35G,IAAAmB,GAgDA,QAAA2tH,IAAA96F,EAAAshE,GACA,MAAAthE,MAAA9yB,QAAAo0F,KAAAp0F,OACAm/G,GAAArsF,EAAAshE,GACAthE,EA0BA,QAAA+6F,IAAA/6F,EAAAshE,EAAAd,GACA,MAAAxgE,MAAA9yB,QAAAo0F,KAAAp0F,OACAm/G,GAAArsF,EAAAshE,EAAAwqB,GAAAtrB,EAAA,IACAxgE,EA0BA,QAAAg7F,IAAAh7F,EAAAshE,EAAAH,GACA,MAAAnhE,MAAA9yB,QAAAo0F,KAAAp0F,OACAm/G,GAAArsF,EAAAshE,EAAAn0F,GAAAg0F,GACAnhE,EAkEA,QAAA6O,IAAA7O,EAAA6gE,GACA,GAAAngF,KACA,KAAAsf,MAAA9yB,OACA,MAAAwT,EAEA,IAAAhB,IAAA,EACA6sG,KACAr/G,EAAA8yB,EAAA9yB,MAGA,KADA2zF,EAAAirB,GAAAjrB,EAAA,KACAnhF,EAAAxS,GAAA,CACA,GAAA3B,GAAAy0B,EAAAtgB,EACAmhF,GAAAt1F,EAAAmU,EAAAsgB,KACAtf,EAAAnC,KAAAhT,GACAghH,EAAAhuG,KAAAmB,IAIA,MADA4sG,IAAAtsF,EAAAusF,GACA7rG,EA0BA,QAAAoe,IAAAkB,GACA,aAAAA,IAAAi7F,GAAA7vH,KAAA40B,GAmBA,QAAArhB,IAAAqhB,EAAAjgB,EAAAC,GACA,GAAA9S,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,IAGA8S,GAAA,gBAAAA,IAAA2yG,GAAA3yF,EAAAjgB,EAAAC,IACAD,EAAA,EACAC,EAAA9S,IAGA6S,EAAA,MAAAA,EAAA,EAAA4lG,GAAA5lG,GACAC,MAAA7S,GAAAD,EAAAy4G,GAAA3lG,IAEAstG,GAAAttF,EAAAjgB,EAAAC,OAoBA,QAAAk7G,IAAAl7F,EAAAz0B,GACA,MAAAiiH,IAAAxtF,EAAAz0B,GA4BA,QAAA4vH,IAAAn7F,EAAAz0B,EAAAi1F,GACA,MAAAqtB,IAAA7tF,EAAAz0B,EAAAugH,GAAAtrB,EAAA,IAmBA,QAAA46B,IAAAp7F,EAAAz0B,GACA,GAAA2B,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,IAAAA,EAAA,CACA,GAAAwS,GAAA8tG,GAAAxtF,EAAAz0B,EACA,IAAAmU,EAAAxS,GAAAu1G,GAAAziF,EAAAtgB,GAAAnU,GACA,MAAAmU,GAGA,SAqBA,QAAA27G,IAAAr7F,EAAAz0B,GACA,MAAAiiH,IAAAxtF,EAAAz0B,GAAA,GA4BA,QAAA+vH,IAAAt7F,EAAAz0B,EAAAi1F,GACA,MAAAqtB,IAAA7tF,EAAAz0B,EAAAugH,GAAAtrB,EAAA,OAmBA,QAAA+6B,IAAAv7F,EAAAz0B,GACA,GAAA2B,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,IAAAA,EAAA,CACA,GAAAwS,GAAA8tG,GAAAxtF,EAAAz0B,GAAA,IACA,IAAAk3G,GAAAziF,EAAAtgB,GAAAnU,GACA,MAAAmU,GAGA,SAkBA,QAAA87G,IAAAx7F,GACA,MAAAA,MAAA9yB,OACAqhH,GAAAvuF,MAoBA,QAAAy7F,IAAAz7F,EAAAwgE,GACA,MAAAxgE,MAAA9yB,OACAqhH,GAAAvuF,EAAA8rF,GAAAtrB,EAAA,OAkBA,QAAA/kD,IAAAzb,GACA,GAAA9yB,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,GAAAogH,GAAAttF,EAAA,EAAA9yB,MA4BA,QAAAwuH,IAAA17F,EAAAh0B,EAAA0mH,GACA,MAAA1yF,MAAA9yB,QAGAlB,EAAA0mH,GAAA1mH,IAAAmB,GAAA,EAAAw4G,GAAA35G,GACAshH,GAAAttF,EAAA,EAAAh0B,EAAA,IAAAA,OA4BA,QAAA2vH,IAAA37F,EAAAh0B,EAAA0mH,GACA,GAAAxlH,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,MACA,OAAAA,IAGAlB,EAAA0mH,GAAA1mH,IAAAmB,GAAA,EAAAw4G,GAAA35G,GACAA,EAAAkB,EAAAlB,EACAshH,GAAAttF,EAAAh0B,EAAA,IAAAA,EAAAkB,OAsCA,QAAA0uH,IAAA57F,EAAA6gE,GACA,MAAA7gE,MAAA9yB,OACA8hH,GAAAhvF,EAAA8rF,GAAAjrB,EAAA,aAuCA,QAAAg7B,IAAA77F,EAAA6gE,GACA,MAAA7gE,MAAA9yB,OACA8hH,GAAAhvF,EAAA8rF,GAAAjrB,EAAA,OAoGA,QAAAi7B,IAAA97F,GACA,MAAAA,MAAA9yB,OAAAyhH,GAAA3uF,MA0BA,QAAA+7F,IAAA/7F,EAAAwgE,GACA,MAAAxgE,MAAA9yB,OAAAyhH,GAAA3uF,EAAA8rF,GAAAtrB,EAAA,OAuBA,QAAAw7B,IAAAh8F,EAAAmhE,GAEA,MADAA,GAAA,kBAAAA,KAAAh0F,GACA6yB,KAAA9yB,OAAAyhH,GAAA3uF,EAAA7yB,GAAAg0F,MAsBA,QAAA86B,IAAAj8F,GACA,IAAAA,MAAA9yB,OACA,QAEA,IAAAA,GAAA,CAOA,OANA8yB,GAAA8gE,EAAA9gE,EAAA,SAAAw9C,GACA,GAAA+tC,GAAA/tC,GAEA,MADAtwE,GAAAm6G,GAAA7pC,EAAAtwE,WACA,IAGA61F,EAAA71F,EAAA,SAAAwS,GACA,MAAA0hF,GAAAphE,EAAA0iE,EAAAhjF,MAyBA,QAAAw8G,IAAAl8F,EAAAwgE,GACA,IAAAxgE,MAAA9yB,OACA,QAEA,IAAAwT,GAAAu7G,GAAAj8F,EACA,cAAAwgE,EACA9/E,EAEA0gF,EAAA1gF,EAAA,SAAA88D,GACA,MAAAxkE,GAAAwnF,EAAArzF,GAAAqwE,KAgJA,QAAA2+C,IAAAvyG,EAAA03E,GACA,MAAA+tB,IAAAzlG,MAAA03E,MAAAuhB,IAkBA,QAAAuZ,IAAAxyG,EAAA03E,GACA,MAAA+tB,IAAAzlG,MAAA03E,MAAA6qB,IA8DA,QAAAkQ,IAAA9wH,GACA,GAAAmV,GAAAw8F,EAAA3xG,EAEA,OADAmV,GAAAi9F,WAAA,EACAj9F,EA0BA,QAAA47G,IAAA/wH,EAAAgxH,GAEA,MADAA,GAAAhxH,GACAA,EA0BA,QAAA+oH,IAAA/oH,EAAAgxH,GACA,MAAAA,GAAAhxH,GAsEA,QAAAixH,MACA,MAAAH,IAAA/6G,MA6BA,QAAAm7G,MACA,UAAApf,GAAA/7F,KAAA/V,QAAA+V,KAAAq8F,WAyBA,QAAA+e,MACAp7G,KAAAu8F,aAAA1wG,KACAmU,KAAAu8F,WAAA39E,GAAA5e,KAAA/V,SAEA,IAAA2iC,GAAA5sB,KAAAs8F,WAAAt8F,KAAAu8F,WAAA3wG,OACA3B,EAAA2iC,EAAA/gC,GAAAmU,KAAAu8F,WAAAv8F,KAAAs8F,YAEA,QAAc1vE,OAAA3iC,SAqBd,QAAAoxH,MACA,MAAAr7G,MA2BA,QAAAs7G,IAAArxH,GAIA,IAHA,GAAAmV,GACAoP,EAAAxO,KAEAwO,YAAAytF,IAAA,CACA,GAAApyF,GAAAmyF,GAAAxtF,EACA3E,GAAAyyF,UAAA,EACAzyF,EAAA0yF,WAAA1wG,GACAuT,EACA8rG,EAAA/O,YAAAtyF,EAEAzK,EAAAyK,CAEA,IAAAqhG,GAAArhG,CACA2E,KAAA2tF,YAGA,MADA+O,GAAA/O,YAAAlyG,EACAmV,EAuBA,QAAAm8G,MACA,GAAAtxH,GAAA+V,KAAAm8F,WACA,IAAAlyG,YAAA6xG,GAAA,CACA,GAAA0f,GAAAvxH,CAUA,OATA+V,MAAAo8F,YAAAxwG,SACA4vH,EAAA,GAAA1f,GAAA97F,OAEAw7G,IAAAh+F,UACAg+F,EAAApf,YAAAn/F,MACAs1E,KAAAygC,GACA17G,MAAAkmB,IACAuhE,QAAAlzF,KAEA,GAAAkwG,GAAAyf,EAAAx7G,KAAAq8F,WAEA,MAAAr8F,MAAAgzG,KAAAx1F,IAiBA,QAAAi+F,MACA,MAAAhe,IAAAz9F,KAAAm8F,YAAAn8F,KAAAo8F,aA4EA,QAAAsf,IAAAj7B,EAAAlB,EAAA6xB,GACA,GAAA7+B,GAAA9/C,GAAAguD,GAAAnB,EAAA2kB,EAIA,OAHAmN,IAAAC,GAAA5wB,EAAAlB,EAAA6xB,KACA7xB,EAAA1zF,IAEA0mF,EAAAkO,EAAA+pB,GAAAjrB,EAAA,IAwCA,QAAA1iF,IAAA4jF,EAAAlB,GACA,GAAAhN,GAAA9/C,GAAAguD,GAAAjB,EAAA+kB,EACA,OAAAhyB,GAAAkO,EAAA+pB,GAAAjrB,EAAA,IAmFA,QAAAo8B,IAAAl7B,EAAAvB,GACA,MAAAslB,IAAA9zE,GAAA+vD,EAAAvB,GAAA,GAuBA,QAAA08B,IAAAn7B,EAAAvB,GACA,MAAAslB,IAAA9zE,GAAA+vD,EAAAvB,GAAAuG,IAwBA,QAAAo2B,IAAAp7B,EAAAvB,EAAAulB,GAEA,MADAA,OAAA54G,GAAA,EAAAw4G,GAAAI,GACAD,GAAA9zE,GAAA+vD,EAAAvB,GAAAulB,GAiCA,QAAAh2G,IAAAgyF,EAAAvB,GACA,GAAA3M,GAAA9/C,GAAAguD,GAAArB,EAAAqiB,EACA,OAAAlvB,GAAAkO,EAAA+pB,GAAAtrB,EAAA,IAuBA,QAAA48B,IAAAr7B,EAAAvB,GACA,GAAA3M,GAAA9/C,GAAAguD,GAAApB,EAAA08B,EACA,OAAAxpC,GAAAkO,EAAA+pB,GAAAtrB,EAAA,IAgEA,QAAA2kB,IAAApjB,EAAAx2F,EAAA22F,EAAAwwB,GACA3wB,EAAA4oB,GAAA5oB,KAAAT,GAAAS,GACAG,MAAAwwB,EAAA/M,GAAAzjB,GAAA,CAEA,IAAAh1F,GAAA60F,EAAA70F,MAIA,OAHAg1F,GAAA,IACAA,EAAAmlB,GAAAn6G,EAAAg1F,EAAA,IAEAo7B,GAAAv7B,GACAG,GAAAh1F,GAAA60F,EAAAppF,QAAApN,EAAA22F,IAAA,IACAh1F,GAAA+zF,EAAAc,EAAAx2F,EAAA22F,IAAA,EA+GA,QAAAlwD,IAAA+vD,EAAAvB,GACA,GAAA3M,GAAA9/C,GAAAguD,GAAAX,EAAAspB,EACA,OAAA72B,GAAAkO,EAAA+pB,GAAAtrB,EAAA,IAgCA,QAAA+8B,IAAAx7B,EAAA4c,EAAAkN,EAAA6G,GACA,aAAA3wB,MAGAhuD,GAAA4qE,KACAA,EAAA,MAAAA,UAEAkN,EAAA6G,EAAAvlH,GAAA0+G,EACA93E,GAAA83E,KACAA,EAAA,MAAAA,UAEAD,GAAA7pB,EAAA4c,EAAAkN,IAgFA,QAAA2R,IAAAz7B,EAAAvB,EAAAC,GACA,GAAA5M,GAAA9/C,GAAAguD,GAAAR,EAAAqB,EACApB,EAAAv0F,UAAAC,OAAA,CAEA,OAAA2mF,GAAAkO,EAAA+pB,GAAAtrB,EAAA,GAAAC,EAAAe,EAAAuhB,IAyBA,QAAA0a,IAAA17B,EAAAvB,EAAAC,GACA,GAAA5M,GAAA9/C,GAAAguD,GAAAN,EAAAmB,EACApB,EAAAv0F,UAAAC,OAAA,CAEA,OAAA2mF,GAAAkO,EAAA+pB,GAAAtrB,EAAA,GAAAC,EAAAe,EAAA67B,IAqCA,QAAAK,IAAA37B,EAAAlB,GACA,GAAAhN,GAAA9/C,GAAAguD,GAAAjB,EAAA+kB,EACA,OAAAhyB,GAAAkO,EAAA47B,GAAA7R,GAAAjrB,EAAA,KAiBA,QAAA+8B,IAAA77B,GACA,GAAAlO,GAAA9/C,GAAAguD,GAAAigB,GAAAkL,EACA,OAAAr5B,GAAAkO,GAuBA,QAAA87B,IAAA97B,EAAA/1F,EAAA0mH,GAEA1mH,GADA0mH,EAAAC,GAAA5wB,EAAA/1F,EAAA0mH,GAAA1mH,IAAAmB,IACA,EAEAw4G,GAAA35G,EAEA,IAAA6nF,GAAA9/C,GAAAguD,GAAAmgB,GAAAiL,EACA,OAAAt5B,GAAAkO,EAAA/1F,GAkBA,QAAA8xH,IAAA/7B,GACA,GAAAlO,GAAA9/C,GAAAguD,GAAAsgB,GAAAgL,EACA,OAAAx5B,GAAAkO,GAwBA,QAAA5pF,IAAA4pF,GACA,SAAAA,EACA,QAEA,IAAA4oB,GAAA5oB,GACA,MAAAu7B,IAAAv7B,GAAA6C,EAAA7C,KAAA70F,MAEA,IAAA+2G,GAAAC,GAAAniB,EACA,OAAAkiB,IAAAlc,IAAAkc,GAAA3b,GACAvG,EAAA5pF,KAEAgyG,GAAApoB,GAAA70F,OAuCA,QAAA6wH,IAAAh8B,EAAAlB,EAAA6xB,GACA,GAAA7+B,GAAA9/C,GAAAguD,GAAAL,EAAA6rB,EAIA,OAHAmF,IAAAC,GAAA5wB,EAAAlB,EAAA6xB,KACA7xB,EAAA1zF,IAEA0mF,EAAAkO,EAAA+pB,GAAAjrB,EAAA,IA6FA,QAAAm9B,IAAAhyH,EAAA6nF,GACA,qBAAAA,GACA,SAAA50E,IAAAqmF,GAGA,OADAt5F,GAAA25G,GAAA35G,GACA,WACA,KAAAA,EAAA,EACA,MAAA6nF,GAAA76E,MAAAsI,KAAArU,YAsBA,QAAA8nH,IAAAlhC,EAAA7nF,EAAA0mH,GAGA,MAFA1mH,GAAA0mH,EAAAvlH,GAAAnB,EACAA,EAAA6nF,GAAA,MAAA7nF,EAAA6nF,EAAA3mF,OAAAlB,EACA8qH,GAAAjjC,EAAAwS,GAAAl5F,YAAAnB,GAoBA,QAAAiyH,IAAAjyH,EAAA6nF,GACA,GAAAnzE,EACA,sBAAAmzE,GACA,SAAA50E,IAAAqmF,GAGA,OADAt5F,GAAA25G,GAAA35G,GACA,WAOA,QANAA,EAAA,IACA0U,EAAAmzE,EAAA76E,MAAAsI,KAAArU,YAEAjB,GAAA,IACA6nF,EAAA1mF,IAEAuT,GA+IA,QAAAw9G,IAAArqC,EAAA+/B,EAAAlB,GACAkB,EAAAlB,EAAAvlH,GAAAymH,CACA,IAAAlzG,GAAAo2G,GAAAjjC,EAAAoS,GAAA94F,eAAAymH,EAEA,OADAlzG,GAAAgjF,YAAAw6B,GAAAx6B,YACAhjF,EAyCA,QAAAy9G,IAAAtqC,EAAA+/B,EAAAlB,GACAkB,EAAAlB,EAAAvlH,GAAAymH,CACA,IAAAlzG,GAAAo2G,GAAAjjC,EAAAqS,GAAA/4F,eAAAymH,EAEA,OADAlzG,GAAAgjF,YAAAy6B,GAAAz6B,YACAhjF,EAyDA,QAAAygD,IAAA0yB,EAAAoxB,EAAA53G,GAuBA,QAAA+wH,GAAA38C,GACA,GAAA7oE,GAAAylH,EACAh+B,EAAAi+B,CAKA,OAHAD,GAAAC,EAAAnxH,GACAoxH,EAAA98C,EACA/gE,EAAAmzE,EAAA76E,MAAAqnF,EAAAznF,GAIA,QAAA4lH,GAAA/8C,GAMA,MAJA88C,GAAA98C,EAEAg9C,EAAAnwF,GAAAowF,EAAAzZ,GAEA0Z,EAAAP,EAAA38C,GAAA/gE,EAGA,QAAAk+G,GAAAn9C,GACA,GAAAo9C,GAAAp9C,EAAAq9C,EACAC,EAAAt9C,EAAA88C,EACA79G,EAAAukG,EAAA4Z,CAEA,OAAAG,GAAAlgB,GAAAp+F,EAAAu+G,EAAAF,GAAAr+G,EAGA,QAAAw+G,GAAAz9C,GACA,GAAAo9C,GAAAp9C,EAAAq9C,EACAC,EAAAt9C,EAAA88C,CAKA,OAAAO,KAAA3xH,IAAA0xH,GAAA5Z,GACA4Z,EAAA,GAAAG,GAAAD,GAAAE,EAGA,QAAAP,KACA,GAAAj9C,GAAAI,IACA,OAAAq9C,GAAAz9C,GACA09C,EAAA19C,QAGAg9C,EAAAnwF,GAAAowF,EAAAE,EAAAn9C,KAGA,QAAA09C,GAAA19C,GAKA,MAJAg9C,GAAAtxH,GAIAmmH,GAAA+K,EACAD,EAAA38C,IAEA48C,EAAAC,EAAAnxH,GACAuT,GAGA,QAAA0+G,KACAX,IAAAtxH,IACA+xF,GAAAu/B,GAEAF,EAAA,EACAF,EAAAS,EAAAR,EAAAG,EAAAtxH,GAGA,QAAAilB,KACA,MAAAqsG,KAAAtxH,GAAAuT,EAAAy+G,EAAAt9C,MAGA,QAAAw9C,KACA,GAAA59C,GAAAI,KACAy9C,EAAAJ,EAAAz9C,EAMA,IAJA48C,EAAApxH,UACAqxH,EAAAh9G,KACAw9G,EAAAr9C,EAEA69C,EAAA,CACA,GAAAb,IAAAtxH,GACA,MAAAqxH,GAAAM,EAEA,IAAAE,EAGA,MADAP,GAAAnwF,GAAAowF,EAAAzZ,GACAmZ,EAAAU,GAMA,MAHAL,KAAAtxH,KACAsxH,EAAAnwF,GAAAowF,EAAAzZ,IAEAvkG,EAlHA,GAAA29G,GACAC,EACAW,EACAv+G,EACA+9G,EACAK,EACAP,EAAA,EACAI,GAAA,EACAK,GAAA,EACA1L,GAAA,CAEA,sBAAAz/B,GACA,SAAA50E,IAAAqmF,GA0GA,OAxGA2f,GAAAiR,GAAAjR,IAAA,EACAlB,GAAA12G,KACAsxH,IAAAtxH,EAAAsxH,QACAK,EAAA,WAAA3xH,GACA4xH,EAAAD,EAAA3X,GAAA6O,GAAA7oH,EAAA4xH,UAAA,EAAAha,GAAAga,EACA3L,EAAA,YAAAjmH,OAAAimH,YAiGA+L,EAAAD,SACAC,EAAAjtG,QACAitG,EAkEA,QAAAlxE,IAAA0lC,GACA,MAAAijC,IAAAjjC,EAAA0S,IA+CA,QAAAuyB,IAAAjlC,EAAA0rC,GACA,qBAAA1rC,IAAA,MAAA0rC,GAAA,kBAAAA,GACA,SAAAtgH,IAAAqmF,GAEA,IAAAk6B,GAAA,WACA,GAAA5mH,GAAA3L,UACAL,EAAA2yH,IAAAvmH,MAAAsI,KAAA1I,KAAA,GACAwqF,EAAAo8B,EAAAp8B,KAEA,IAAAA,EAAA3hF,IAAA7U,GACA,MAAAw2F,GAAAr3F,IAAAa,EAEA,IAAA8T,GAAAmzE,EAAA76E,MAAAsI,KAAA1I,EAEA,OADA4mH,GAAAp8B,QAAA/3E,IAAAze,EAAA8T,IAAA0iF,EACA1iF,EAGA,OADA8+G,GAAAp8B,MAAA,IAAA01B,GAAA2G,OAAArf,IACAof,EA0BA,QAAA7B,IAAA98B,GACA,qBAAAA,GACA,SAAA5hF,IAAAqmF,GAEA,mBACA,GAAA1sF,GAAA3L,SACA,QAAA2L,EAAA1L,QACA,cAAA2zF,EAAAz1F,KAAAkW,KACA,eAAAu/E,EAAAz1F,KAAAkW,KAAA1I,EAAA,GACA,eAAAioF,EAAAz1F,KAAAkW,KAAA1I,EAAA,GAAAA,EAAA,GACA,eAAAioF,EAAAz1F,KAAAkW,KAAA1I,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,OAAAioF,EAAA7nF,MAAAsI,KAAA1I,IAsBA,QAAAyI,IAAAwyE,GACA,MAAAoqC,IAAA,EAAApqC,GAiLA,QAAA6rC,IAAA7rC,EAAA9zE,GACA,qBAAA8zE,GACA,SAAA50E,IAAAqmF,GAGA,OADAvlF,OAAA5S,GAAA4S,EAAA4lG,GAAA5lG,GACAgtG,GAAAl5B,EAAA9zE,GAqCA,QAAA4/G,IAAA9rC,EAAA9zE,GACA,qBAAA8zE,GACA,SAAA50E,IAAAqmF,GAGA,OADAvlF,OAAA5S,GAAA,EAAAk6G,GAAA1B,GAAA5lG,GAAA,GACAgtG,GAAA,SAAAn0G,GACA,GAAAonB,GAAApnB,EAAAmH,GACAo5G,EAAAxJ,GAAA/2G,EAAA,EAAAmH,EAKA,OAHAigB,IACAqhE,EAAA83B,EAAAn5F,GAEAhnB,EAAA66E,EAAAvyE,KAAA63G,KAgDA,QAAAyG,IAAA/rC,EAAAoxB,EAAA53G,GACA,GAAAsxH,IAAA,EACArL,GAAA,CAEA,sBAAAz/B,GACA,SAAA50E,IAAAqmF,GAMA,OAJAye,IAAA12G,KACAsxH,EAAA,WAAAtxH,OAAAsxH,UACArL,EAAA,YAAAjmH,OAAAimH,YAEAnyD,GAAA0yB,EAAAoxB,GACA0Z,UACAM,QAAAha,EACAqO,aAmBA,QAAAuM,IAAAhsC,GACA,MAAAkhC,IAAAlhC,EAAA,GAyBA,QAAAisC,IAAAv0H,EAAAynH,GACA,MAAA+M,IAAAtQ,GAAAuD,GAAAznH,GAsCA,QAAAy0H,MACA,IAAA/yH,UAAAC,OACA,QAEA,IAAA3B,GAAA0B,UAAA,EACA,OAAA8mC,IAAAxoC,SA6BA,QAAA4f,IAAA5f,GACA,MAAAk4G,IAAAl4G,EAAAo6F,IAkCA,QAAAs6B,IAAA10H,EAAAo4G,GAEA,MADAA,GAAA,kBAAAA,KAAAx2G,GACAs2G,GAAAl4G,EAAAo6F,GAAAge,GAqBA,QAAAuc,IAAA30H,GACA,MAAAk4G,IAAAl4G,EAAAk6F,GAAAE,IA+BA,QAAAw6B,IAAA50H,EAAAo4G;AAEA,MADAA,GAAA,kBAAAA,KAAAx2G,GACAs2G,GAAAl4G,EAAAk6F,GAAAE,GAAAge,GA2BA,QAAAyc,IAAAj0H,EAAAiZ,GACA,aAAAA,GAAA2/F,GAAA54G,EAAAiZ,EAAAtV,GAAAsV,IAmCA,QAAAq9F,IAAAl3G,EAAAwxB,GACA,MAAAxxB,KAAAwxB,GAAAxxB,OAAAwxB,MAmJA,QAAA4tF,IAAAp/G,GACA,aAAAA,GAAAw+G,GAAAx+G,EAAA2B,UAAAq5G,GAAAh7G,GA4BA,QAAAggH,IAAAhgH,GACA,MAAA4xG,IAAA5xG,IAAAo/G,GAAAp/G,GAoBA,QAAA80H,IAAA90H,GACA,MAAAA,MAAA,GAAAA,KAAA,GACA4xG,GAAA5xG,IAAAs7G,GAAAt7G,IAAAk8F,GA0DA,QAAA64B,IAAA/0H,GACA,MAAA4xG,IAAA5xG,IAAA,IAAAA,EAAAqwG,WAAA6P,GAAAlgH,GAoCA,QAAAqyC,IAAAryC,GACA,SAAAA,EACA,QAEA,IAAAo/G,GAAAp/G,KACAwoC,GAAAxoC,IAAA,gBAAAA,IAAA,kBAAAA,GAAA0S,QACA2jG,GAAAr2G,IAAAsxG,GAAAtxG,IAAAm2G,GAAAn2G,IACA,OAAAA,EAAA2B,MAEA,IAAA+2G,GAAAC,GAAA34G,EACA,IAAA04G,GAAAlc,IAAAkc,GAAA3b,GACA,OAAA/8F,EAAA4M,IAEA,IAAAiyG,GAAA7+G,GACA,OAAA4+G,GAAA5+G,GAAA2B,MAEA,QAAAN,KAAArB,GACA,GAAAe,GAAAlB,KAAAG,EAAAqB,GACA,QAGA,UA+BA,QAAA2zH,IAAAh1H,EAAAwxB,GACA,MAAAmrF,IAAA38G,EAAAwxB,GAmCA,QAAAyjG,IAAAj1H,EAAAwxB,EAAA4mF,GACAA,EAAA,kBAAAA,KAAAx2G,EACA,IAAAuT,GAAAijG,IAAAp4G,EAAAwxB,GAAA5vB,EACA,OAAAuT,KAAAvT,GAAA+6G,GAAA38G,EAAAwxB,EAAA5vB,GAAAw2G,KAAAjjG,EAqBA,QAAA+/G,IAAAl1H,GACA,IAAA4xG,GAAA5xG,GACA,QAEA,IAAA04G,GAAA4C,GAAAt7G,EACA,OAAA04G,IAAArc,IAAAqc,GAAAtc,IACA,gBAAAp8F,GAAAqnC,SAAA,gBAAArnC,GAAAE,OAAAggH,GAAAlgH,GA6BA,QAAAm1H,IAAAn1H,GACA,sBAAAA,IAAAo1H,GAAAp1H,GAoBA,QAAAg7G,IAAAh7G,GACA,IAAAw4G,GAAAx4G,GACA,QAIA,IAAA04G,GAAA4C,GAAAt7G,EACA,OAAA04G,IAAApc,IAAAoc,GAAAnc,IAAAmc,GAAAzc,IAAAyc,GAAA7b,GA6BA,QAAAw4B,IAAAr1H,GACA,sBAAAA,OAAAo6G,GAAAp6G,GA6BA,QAAAw+G,IAAAx+G,GACA,sBAAAA,IACAA,GAAA,GAAAA,EAAA,MAAAA,GAAAy7F,GA4BA,QAAA+c,IAAAx4G,GACA,GAAAiN,SAAAjN,EACA,cAAAA,IAAA,UAAAiN,GAAA,YAAAA,GA2BA,QAAA2kG,IAAA5xG,GACA,aAAAA,GAAA,gBAAAA,GAkDA,QAAAs1H,IAAA10H,EAAAiZ,GACA,MAAAjZ,KAAAiZ,GAAAgkG,GAAAj9G,EAAAiZ,EAAAwlG,GAAAxlG,IAmCA,QAAA07G,IAAA30H,EAAAiZ,EAAAu+F,GAEA,MADAA,GAAA,kBAAAA,KAAAx2G,GACAi8G,GAAAj9G,EAAAiZ,EAAAwlG,GAAAxlG,GAAAu+F,GA+BA,QAAAllB,IAAAlzF,GAIA,MAAAw1H,IAAAx1H,UA6BA,QAAAy1H,IAAAz1H,GACA,GAAA01H,GAAA11H,GACA,SAAAoc,IAAA09E,GAEA,OAAAkkB,IAAAh+G,GAoBA,QAAA21H,IAAA31H,GACA,cAAAA,EAuBA,QAAA41H,IAAA51H,GACA,aAAAA,EA6BA,QAAAw1H,IAAAx1H,GACA,sBAAAA,IACA4xG,GAAA5xG,IAAAs7G,GAAAt7G,IAAAy8F,GA+BA,QAAAyjB,IAAAlgH,GACA,IAAA4xG,GAAA5xG,IAAAs7G,GAAAt7G,IAAA28F,GACA,QAEA,IAAA0wB,GAAAL,GAAAhtH,EACA,WAAAqtH,EACA,QAEA,IAAA3F,GAAA3mH,GAAAlB,KAAAwtH,EAAA,gBAAAA,EAAA70G,WACA,yBAAAkvG,oBACA4G,GAAAzuH,KAAA6nH,IAAAmO,GAiDA,QAAAC,IAAA91H,GACA,MAAAq1H,IAAAr1H,QAAAy7F,IAAAz7F,GAAAy7F,GAuCA,QAAAs2B,IAAA/xH,GACA,sBAAAA,KACAwoC,GAAAxoC,IAAA4xG,GAAA5xG,IAAAs7G,GAAAt7G,IAAAg9F,GAoBA,QAAAkd,IAAAl6G,GACA,sBAAAA,IACA4xG,GAAA5xG,IAAAs7G,GAAAt7G,IAAAi9F,GAuCA,QAAA84B,IAAA/1H,GACA,MAAAA,KAAA4B,GAoBA,QAAAo0H,IAAAh2H,GACA,MAAA4xG,IAAA5xG,IAAA24G,GAAA34G,IAAAm9F,GAoBA,QAAA84B,IAAAj2H,GACA,MAAA4xG,IAAA5xG,IAAAs7G,GAAAt7G,IAAAo9F,GA8EA,QAAAzoE,IAAA30B,GACA,IAAAA,EACA,QAEA,IAAAo/G,GAAAp/G,GACA,MAAA+xH,IAAA/xH,GAAAw5F,GAAAx5F,GAAA6yG,GAAA7yG,EAEA,IAAAk2H,IAAAl2H,EAAAk2H,IACA,MAAAt9B,GAAA54F,EAAAk2H,MAEA,IAAAxd,GAAAC,GAAA34G,GACAsoF,EAAAowB,GAAAlc,GAAA3D,EAAA6f,GAAA3b,GAAA7D,EAAAnD,EAEA,OAAAzN,GAAAtoF,GA0BA,QAAAyqH,IAAAzqH,GACA,IAAAA,EACA,WAAAA,IAAA,CAGA,IADAA,EAAA2qH,GAAA3qH,GACAA,IAAAw7F,IAAAx7F,KAAAw7F,GAAA,CACA,GAAAhtF,GAAAxO,EAAA,MACA,OAAAwO,GAAAktF,GAEA,MAAA17F,SAAA,EA6BA,QAAAo6G,IAAAp6G,GACA,GAAAmV,GAAAs1G,GAAAzqH,GACAggE,EAAA7qD,EAAA,CAEA,OAAAA,OAAA6qD,EAAA7qD,EAAA6qD,EAAA7qD,EAAA,EA8BA,QAAAklG,IAAAr6G,GACA,MAAAA,GAAA62G,GAAAuD,GAAAp6G,GAAA,EAAA27F,IAAA,EA0BA,QAAAgvB,IAAA3qH,GACA,mBAAAA,GACA,MAAAA,EAEA,IAAAk6G,GAAAl6G,GACA,MAAAk3F,GAEA,IAAAshB,GAAAx4G,GAAA,CACA,GAAAwxB,GAAA,kBAAAxxB,GAAAm2H,QAAAn2H,EAAAm2H,UAAAn2H,CACAA,GAAAw4G,GAAAhnF,KAAA,GAAAA,EAEA,mBAAAxxB,GACA,WAAAA,MAEAA,KAAAumC,QAAAy4D,GAAA,GACA,IAAAo3B,GAAA12B,GAAA9uE,KAAA5wB,EACA,OAAAo2H,IAAAx2B,GAAAhvE,KAAA5wB,GACAiwG,GAAAjwG,EAAAoT,MAAA,GAAAgjH,EAAA,KACA32B,GAAA7uE,KAAA5wB,GAAAk3F,IAAAl3F,EA2BA,QAAAmgH,IAAAngH,GACA,MAAA03G,IAAA13G,EAAA43G,GAAA53G,IA2BA,QAAAq2H,IAAAr2H,GACA,MAAA62G,IAAAuD,GAAAp6G,IAAAy7F,OAwBA,QAAApwF,IAAArL,GACA,aAAAA,EAAA,GAAAkjH,GAAAljH,GA0MA,QAAAoW,IAAAtV,EAAAq0E,GACA,GAAAhgE,GAAAgzG,GAAArnH,EACA,cAAAq0E,EAAAhgE,EAAAsiG,GAAAtiG,EAAAggE,GAwFA,QAAAmhD,IAAA11H,EAAA00F,GACA,MAAAiB,GAAA31F,EAAA2/G,GAAAjrB,EAAA,GAAAqlB,IAsCA,QAAA4b,IAAA31H,EAAA00F,GACA,MAAAiB,GAAA31F,EAAA2/G,GAAAjrB,EAAA,GAAAulB,IA+BA,QAAA2b,IAAA51H,EAAAq0F,GACA,aAAAr0F,EACAA,EACAg6G,GAAAh6G,EAAA2/G,GAAAtrB,EAAA,GAAA2iB,IA6BA,QAAA6e,IAAA71H,EAAAq0F,GACA,aAAAr0F,EACAA,EACAk6G,GAAAl6G,EAAA2/G,GAAAtrB,EAAA,GAAA2iB,IA+BA,QAAA8e,IAAA91H,EAAAq0F,GACA,MAAAr0F,IAAA+5G,GAAA/5G,EAAA2/G,GAAAtrB,EAAA,IA6BA,QAAA0hC,IAAA/1H,EAAAq0F,GACA,MAAAr0F,IAAAi6G,GAAAj6G,EAAA2/G,GAAAtrB,EAAA,IA0BA,QAAA2hC,IAAAh2H,GACA,aAAAA,KAAAm6G,GAAAn6G,EAAA2D,GAAA3D,IA0BA,QAAAi2H,IAAAj2H,GACA,aAAAA,KAAAm6G,GAAAn6G,EAAAg3G,GAAAh3G,IA4BA,QAAAJ,IAAAI,EAAA4S,EAAA07C,GACA,GAAA/5C,GAAA,MAAAvU,EAAAgB,GAAAq5G,GAAAr6G,EAAA4S,EACA,OAAA2B,KAAAvT,GAAAstD,EAAA/5C,EA8BA,QAAAe,IAAAtV,EAAA4S,GACA,aAAA5S,GAAAksH,GAAAlsH,EAAA4S,EAAAmoG,IA6BA,QAAA8D,IAAA7+G,EAAA4S,GACA,aAAA5S,GAAAksH,GAAAlsH,EAAA4S,EAAAooG,IA2GA,QAAAr3G,IAAA3D,GACA,MAAAw+G,IAAAx+G,GAAAo1G,GAAAp1G,GAAAg+G,GAAAh+G,GA0BA,QAAAg3G,IAAAh3G,GACA,MAAAw+G,IAAAx+G,GAAAo1G,GAAAp1G,GAAA,GAAAm+G,GAAAn+G,GAwBA,QAAAk2H,IAAAl2H,EAAAq0F,GACA,GAAA9/E,KAMA,OALA8/E,GAAAsrB,GAAAtrB,EAAA,GAEA0lB,GAAA/5G,EAAA,SAAAZ,EAAAqB,EAAAT,GACAy2G,GAAAliG,EAAA8/E,EAAAj1F,EAAAqB,EAAAT,GAAAZ,KAEAmV,EA+BA,QAAA4hH,IAAAn2H,EAAAq0F,GACA,GAAA9/E,KAMA,OALA8/E,GAAAsrB,GAAAtrB,EAAA,GAEA0lB,GAAA/5G,EAAA,SAAAZ,EAAAqB,EAAAT,GACAy2G,GAAAliG,EAAA9T,EAAA4zF,EAAAj1F,EAAAqB,EAAAT,MAEAuU,EAuIA,QAAA6hH,IAAAp2H,EAAA00F,GACA,MAAA2hC,IAAAr2H,EAAAwxH,GAAA7R,GAAAjrB,KA0CA,QAAA2hC,IAAAr2H,EAAA00F,GACA,SAAA10F,EACA,QAEA,IAAAyd,GAAAw3E,EAAAujB,GAAAx4G,GAAA,SAAAs2H,GACA,OAAAA,IAGA,OADA5hC,GAAAirB,GAAAjrB,GACAqrB,GAAA//G,EAAAyd,EAAA,SAAAre,EAAAwT,GACA,MAAA8hF,GAAAt1F,EAAAwT,EAAA,MAiCA,QAAA2B,IAAAvU,EAAA4S,EAAA07C,GACA17C,EAAA0nG,GAAA1nG,EAAA5S,EAEA,IAAAuT,IAAA,EACAxS,EAAA6R,EAAA7R,MAOA,KAJAA,IACAA,EAAA,EACAf,EAAAgB,MAEAuS,EAAAxS,GAAA,CACA,GAAA3B,GAAA,MAAAY,EAAAgB,GAAAhB,EAAAu6G,GAAA3nG,EAAAW,IACAnU,KAAA4B,KACAuS,EAAAxS,EACA3B,EAAAkvD,GAEAtuD,EAAAo6G,GAAAh7G,KAAAH,KAAAe,GAAAZ,EAEA,MAAAY,GA+BA,QAAAkf,IAAAlf,EAAA4S,EAAAxT,GACA,aAAAY,IAAAggH,GAAAhgH,EAAA4S,EAAAxT,GA2BA,QAAAm3H,IAAAv2H,EAAA4S,EAAAxT,EAAAo4G,GAEA,MADAA,GAAA,kBAAAA,KAAAx2G,GACA,MAAAhB,IAAAggH,GAAAhgH,EAAA4S,EAAAxT,EAAAo4G,GAqFA,QAAA14F,IAAA9e,EAAAq0F,EAAAC,GACA,GAAA8d,GAAAxqE,GAAA5nC,GACAw2H,EAAApkB,GAAAqD,GAAAz1G,IAAA0wG,GAAA1wG,EAGA,IADAq0F,EAAAsrB,GAAAtrB,EAAA,GACA,MAAAC,EAAA,CACA,GAAAwyB,GAAA9mH,KAAA4X,WAEA08E,GADAkiC,EACApkB,EAAA,GAAA0U,MAEAlP,GAAA53G,IACAo6G,GAAA0M,GAAAS,GAAA6E,GAAApsH,OASA,OAHAw2H,EAAAjiC,EAAAwlB,IAAA/5G,EAAA,SAAAZ,EAAAmU,EAAAvT,GACA,MAAAq0F,GAAAC,EAAAl1F,EAAAmU,EAAAvT,KAEAs0F,EA8BA,QAAAmiC,IAAAz2H,EAAA4S,GACA,aAAA5S,GAAAsgH,GAAAtgH,EAAA4S,GA8BA,QAAAyH,IAAAra,EAAA4S,EAAAgwG,GACA,aAAA5iH,IAAA2iH,GAAA3iH,EAAA4S,EAAA0wG,GAAAV,IA2BA,QAAA8T,IAAA12H,EAAA4S,EAAAgwG,EAAApL,GAEA,MADAA,GAAA,kBAAAA,KAAAx2G,GACA,MAAAhB,IAAA2iH,GAAA3iH,EAAA4S,EAAA0wG,GAAAV,GAAApL,GA6BA,QAAAriB,IAAAn1F,GACA,aAAAA,KAAA+2F,EAAA/2F,EAAA2D,GAAA3D,IA2BA,QAAA22H,IAAA32H,GACA,aAAAA,KAAA+2F,EAAA/2F,EAAAg3G,GAAAh3G,IAwBA,QAAA42H,IAAAzf,EAAAC,EAAAC,GAaA,MAZAA,KAAAr2G,KACAq2G,EAAAD,EACAA,EAAAp2G,IAEAq2G,IAAAr2G,KACAq2G,EAAA0S,GAAA1S,GACAA,UAAA,GAEAD,IAAAp2G,KACAo2G,EAAA2S,GAAA3S,GACAA,UAAA,GAEAnB,GAAA8T,GAAA5S,GAAAC,EAAAC,GAyCA,QAAAwf,IAAA1f,EAAAvjG,EAAAC,GASA,MARAD,GAAAi2G,GAAAj2G,GACAC,IAAA7S,IACA6S,EAAAD,EACAA,EAAA,GAEAC,EAAAg2G,GAAAh2G,GAEAsjG,EAAA4S,GAAA5S,GACA8D,GAAA9D,EAAAvjG,EAAAC,GAkCA,QAAAmgD,IAAAojD,EAAAC,EAAAyf,GA2BA,GA1BAA,GAAA,iBAAAA,IAAAtQ,GAAApP,EAAAC,EAAAyf,KACAzf,EAAAyf,EAAA91H,IAEA81H,IAAA91H,KACA,iBAAAq2G,IACAyf,EAAAzf,EACAA,EAAAr2G,IAEA,iBAAAo2G,KACA0f,EAAA1f,EACAA,EAAAp2G,KAGAo2G,IAAAp2G,IAAAq2G,IAAAr2G,IACAo2G,EAAA,EACAC,EAAA,IAGAD,EAAAyS,GAAAzS,GACAC,IAAAr2G,IACAq2G,EAAAD,EACAA,EAAA,GAEAC,EAAAwS,GAAAxS,IAGAD,EAAAC,EAAA,CACA,GAAAn1D,GAAAk1D,CACAA,GAAAC,EACAA,EAAAn1D,EAEA,GAAA40E,GAAA1f,EAAA,GAAAC,EAAA,GACA,GAAAoW,GAAAjN,IACA,OAAA7N,IAAAyE,EAAAqW,GAAApW,EAAAD,EAAAhI,GAAA,QAAAqe,EAAA,IAAA1sH,OAAA,KAAAs2G,GAEA,MAAAvB,IAAAsB,EAAAC,GA6CA,QAAA0f,IAAAltD,GACA,MAAAmtD,IAAAvsH,GAAAo/D,GAAAt+D,eAqBA,QAAA87G,IAAAx9C,GAEA,MADAA,GAAAp/D,GAAAo/D,GACAA,KAAAlkC,QAAAu5D,GAAAyR,IAAAhrE,QAAAo8D,GAAA,IA0BA,QAAAk1B,IAAAptD,EAAArsD,EAAAoY,GACAi0C,EAAAp/D,GAAAo/D,GACArsD,EAAA8kG,GAAA9kG,EAEA,IAAAzc,GAAA8oE,EAAA9oE,MACA60B,OAAA50B,GACAD,EACAk1G,GAAAuD,GAAA5jF,GAAA,EAAA70B,EAEA,IAAA8S,GAAA+hB,CAEA,OADAA,IAAApY,EAAAzc,OACA60B,GAAA,GAAAi0C,EAAAr3D,MAAAojB,EAAA/hB,IAAA2J,EA+BA,QAAA05G,IAAArtD,GAEA,MADAA,GAAAp/D,GAAAo/D,GACAA,GAAA6zB,GAAA1tE,KAAA65C,GACAA,EAAAlkC,QAAA63D,GAAAoT,IACA/mC,EAkBA,QAAAstD,IAAAttD,GAEA,MADAA,GAAAp/D,GAAAo/D,GACAA,GAAAs0B,GAAAnuE,KAAA65C,GACAA,EAAAlkC,QAAAu4D,GAAA,QACAr0B,EA8FA,QAAA7zC,IAAA6zC,EAAA9oE,EAAAukD,GACAukB,EAAAp/D,GAAAo/D,GACA9oE,EAAAy4G,GAAAz4G,EAEA,IAAAq2H,GAAAr2H,EAAA03F,EAAA5uB,GAAA,CACA,KAAA9oE,GAAAq2H,GAAAr2H,EACA,MAAA8oE,EAEA,IAAA43C,IAAA1gH,EAAAq2H,GAAA,CACA,OACA3N,IAAAlJ,GAAAkB,GAAAn8D,GACAukB,EACA4/C,GAAA/I,GAAAe,GAAAn8D,GA2BA,QAAA+xE,IAAAxtD,EAAA9oE,EAAAukD,GACAukB,EAAAp/D,GAAAo/D,GACA9oE,EAAAy4G,GAAAz4G,EAEA,IAAAq2H,GAAAr2H,EAAA03F,EAAA5uB,GAAA,CACA,OAAA9oE,IAAAq2H,EAAAr2H,EACA8oE,EAAA4/C,GAAA1oH,EAAAq2H,EAAA9xE,GACAukB,EA0BA,QAAAytD,IAAAztD,EAAA9oE,EAAAukD,GACAukB,EAAAp/D,GAAAo/D,GACA9oE,EAAAy4G,GAAAz4G,EAEA,IAAAq2H,GAAAr2H,EAAA03F,EAAA5uB,GAAA,CACA,OAAA9oE,IAAAq2H,EAAAr2H,EACA0oH,GAAA1oH,EAAAq2H,EAAA9xE,GAAAukB,EACAA,EA2BA,QAAAxkB,IAAAwkB,EAAA0tD,EAAAhR,GAMA,MALAA,IAAA,MAAAgR,EACAA,EAAA,EACOA,IACPA,MAEAC,GAAA/sH,GAAAo/D,GAAAlkC,QAAA04D,GAAA,IAAAk5B,GAAA,GAyBA,QAAAE,IAAA5tD,EAAAhqE,EAAA0mH,GAMA,MAJA1mH,IADA0mH,EAAAC,GAAA38C,EAAAhqE,EAAA0mH,GAAA1mH,IAAAmB,IACA,EAEAw4G,GAAA35G,GAEA8gH,GAAAl2G,GAAAo/D,GAAAhqE,GAsBA,QAAA8lC,MACA,GAAAl5B,GAAA3L,UACA+oE,EAAAp/D,GAAAgC,EAAA,GAEA,OAAAA,GAAA1L,OAAA,EAAA8oE,IAAAlkC,QAAAl5B,EAAA,GAAAA,EAAA,IA+CA,QAAAuG,IAAA62D,EAAA2kD,EAAAkJ,GAKA,MAJAA,IAAA,gBAAAA,IAAAlR,GAAA38C,EAAA2kD,EAAAkJ,KACAlJ,EAAAkJ,EAAA12H,KAEA02H,MAAA12H,GAAA+5F,GAAA28B,IAAA,IAIA7tD,EAAAp/D,GAAAo/D,GACAA,IACA,gBAAA2kD,IACA,MAAAA,IAAAle,GAAAke,MAEAA,EAAAlM,GAAAkM,IACAA,GAAA52B,EAAA/tB,IACA25C,GAAA5qB,GAAA/uB,GAAA,EAAA6tD,GAGA7tD,EAAA72D,MAAAw7G,EAAAkJ,OAmDA,QAAAC,IAAA9tD,EAAArsD,EAAAoY,GAIA,MAHAi0C,GAAAp/D,GAAAo/D,GACAj0C,EAAAqgF,GAAAuD,GAAA5jF,GAAA,EAAAi0C,EAAA9oE,QACAyc,EAAA8kG,GAAA9kG,GACAqsD,EAAAr3D,MAAAojB,IAAApY,EAAAzc,SAAAyc,EA2GA,QAAAolC,IAAAinB,EAAA3oE,EAAAqlH,GAIA,GAAA9iH,GAAAstG,EAAA6mB,gBAEArR,IAAAC,GAAA38C,EAAA3oE,EAAAqlH,KACArlH,EAAAF,IAEA6oE,EAAAp/D,GAAAo/D,GACA3oE,EAAA22H,MAA+B32H,EAAAuC,EAAA0yG,GAE/B,IAIA2hB,GACAC,EALAC,EAAAH,MAAmC32H,EAAA82H,QAAAv0H,EAAAu0H,QAAA7hB,IACnC8hB,EAAAt0H,GAAAq0H,GACAE,EAAAnhC,EAAAihC,EAAAC,GAIA1kH,EAAA,EACA4kH,EAAAj3H,EAAAi3H,aAAAh5B,GACAlmF,EAAA,WAGAm/G,EAAAtoG,IACA5uB,EAAAg2H,QAAA/3B,IAAAlmF,OAAA,IACAk/G,EAAAl/G,OAAA,KACAk/G,IAAAt6B,GAAAc,GAAAQ,IAAAlmF,OAAA,KACA/X,EAAAm3H,UAAAl5B,IAAAlmF,OAAA,KACA,KAGAq/G,EAAA,kBACA,aAAAp3H,GACAA,EAAAo3H,UACA,6BAAAr2B,GAAA,KACA,IAEAp4B,GAAAlkC,QAAAyyF,EAAA,SAAAx4G,EAAA24G,EAAAC,EAAAC,EAAAC,EAAA53E,GAsBA,MArBA03E,OAAAC,GAGAx/G,GAAA4wD,EAAAr3D,MAAAe,EAAAutC,GAAAnb,QAAAy5D,GAAA5H,GAGA+gC,IACAT,GAAA,EACA7+G,GAAA,YAAAs/G,EAAA,UAEAG,IACAX,GAAA,EACA9+G,GAAA,OAAuBy/G,EAAA,eAEvBF,IACAv/G,GAAA,iBAAAu/G,EAAA,+BAEAjlH,EAAAutC,EAAAlhC,EAAA7e,OAIA6e,IAGA3G,GAAA,MAIA,IAAA0/G,GAAAz3H,EAAAy3H,QACAA,KACA1/G,EAAA,iBAA8BA,EAAA,SAG9BA,GAAA8+G,EAAA9+G,EAAA0sB,QAAAy3D,GAAA,IAAAnkF,GACA0sB,QAAA03D,GAAA,MACA13D,QAAA23D,GAAA,OAGArkF,EAAA,aAAA0/G,GAAA,gBACAA,EACA,GACA,wBAEA,qBACAb,EACA,mBACA,KAEAC,EACA,uFAEA,OAEA9+G,EACA,eAEA,IAAA1E,GAAAqkH,GAAA,WACA,MAAA11G,IAAA+0G,EAAAK,EAAA,UAAAr/G,GACApM,MAAA7L,GAAAk3H,IAMA,IADA3jH,EAAA0E,SACAq7G,GAAA//G,GACA,KAAAA,EAEA,OAAAA,GAwBA,QAAAskH,IAAAz5H,GACA,MAAAqL,IAAArL,GAAAmM,cAwBA,QAAAutH,IAAA15H,GACA,MAAAqL,IAAArL,GAAAsoC,cAyBA,QAAA/zB,IAAAk2D,EAAAvkB,EAAAihE,GAEA,GADA18C,EAAAp/D,GAAAo/D,GACAA,IAAA08C,GAAAjhE,IAAAtkD,IACA,MAAA6oE,GAAAlkC,QAAAy4D,GAAA,GAEA,KAAAv0B,KAAAvkB,EAAAg9D,GAAAh9D,IACA,MAAAukB,EAEA,IAAAstB,GAAAyB,GAAA/uB,GACAutB,EAAAwB,GAAAtzC,GACA1xC,EAAAsjF,EAAAC,EAAAC,GACAvjF,EAAAwjF,EAAAF,EAAAC,GAAA,CAEA,OAAAosB,IAAArsB,EAAAvjF,EAAAC,GAAAZ,KAAA,IAsBA,QAAA8lH,IAAAlvD,EAAAvkB,EAAAihE,GAEA,GADA18C,EAAAp/D,GAAAo/D,GACAA,IAAA08C,GAAAjhE,IAAAtkD,IACA,MAAA6oE,GAAAlkC,QAAA24D,GAAA,GAEA,KAAAz0B,KAAAvkB,EAAAg9D,GAAAh9D,IACA,MAAAukB,EAEA,IAAAstB,GAAAyB,GAAA/uB,GACAh2D,EAAAwjF,EAAAF,EAAAyB,GAAAtzC,IAAA,CAEA,OAAAk+D,IAAArsB,EAAA,EAAAtjF,GAAAZ,KAAA,IAsBA,QAAA+lH,IAAAnvD,EAAAvkB,EAAAihE,GAEA,GADA18C,EAAAp/D,GAAAo/D,GACAA,IAAA08C,GAAAjhE,IAAAtkD,IACA,MAAA6oE,GAAAlkC,QAAA04D,GAAA,GAEA,KAAAx0B,KAAAvkB,EAAAg9D,GAAAh9D,IACA,MAAAukB,EAEA,IAAAstB,GAAAyB,GAAA/uB,GACAj2D,EAAAsjF,EAAAC,EAAAyB,GAAAtzC,GAEA,OAAAk+D,IAAArsB,EAAAvjF,GAAAX,KAAA,IAwCA,QAAAgmH,IAAApvD,EAAA3oE,GACA,GAAAH,GAAAs5F,GACA6+B,EAAA5+B,EAEA,IAAAsd,GAAA12G,GAAA,CACA,GAAAstH,GAAA,aAAAttH,KAAAstH,WACAztH,GAAA,UAAAG,GAAAs4G,GAAAt4G,EAAAH,UACAm4H,EAAA,YAAAh4H,GAAAohH,GAAAphH,EAAAg4H,YAEArvD,EAAAp/D,GAAAo/D,EAEA,IAAAutD,GAAAvtD,EAAA9oE,MACA,IAAA62F,EAAA/tB,GAAA,CACA,GAAAstB,GAAAyB,GAAA/uB,EACAutD,GAAAjgC,EAAAp2F,OAEA,GAAAA,GAAAq2H,EACA,MAAAvtD,EAEA,IAAAh2D,GAAA9S,EAAA03F,EAAAygC,EACA,IAAArlH,EAAA,EACA,MAAAqlH,EAEA,IAAA3kH,GAAA4iF,EACAqsB,GAAArsB,EAAA,EAAAtjF,GAAAZ,KAAA,IACA42D,EAAAr3D,MAAA,EAAAqB,EAEA,IAAA26G,IAAAxtH,GACA,MAAAuT,GAAA2kH,CAKA,IAHA/hC,IACAtjF,GAAAU,EAAAxT,OAAA8S,GAEAy8F,GAAAke,IACA,GAAA3kD,EAAAr3D,MAAAqB,GAAAslH,OAAA3K,GAAA,CACA,GAAA5uG,GACA3H,EAAA1D,CAMA,KAJAi6G,EAAA1/F,SACA0/F,EAAA1+F,GAAA0+F,EAAAv1G,OAAAxO,GAAAm0F,GAAA3zF,KAAAujH,IAAA,MAEAA,EAAAjrD,UAAA,EACA3jD,EAAA4uG,EAAAvjH,KAAAgN,IACA,GAAAmhH,GAAAx5G,EAAArM,KAEAgB,KAAA/B,MAAA,EAAA4mH,IAAAp4H,GAAA6S,EAAAulH,QAEO,IAAAvvD,EAAAr9D,QAAA81G,GAAAkM,GAAA36G,MAAA,CACP,GAAAN,GAAAgB,EAAAg0B,YAAAimF,EACAj7G,IAAA,IACAgB,IAAA/B,MAAA,EAAAe,IAGA,MAAAgB,GAAA2kH,EAsBA,QAAAG,IAAAxvD,GAEA,MADAA,GAAAp/D,GAAAo/D,GACAA,GAAA4zB,GAAAztE,KAAA65C,GACAA,EAAAlkC,QAAA43D,GAAAsT,IACAhnC,EAiEA,QAAA8J,IAAA9J,EAAAyzC,EAAAiJ,GAIA,MAHA18C,GAAAp/D,GAAAo/D,GACAyzC,EAAAiJ,EAAAvlH,GAAAs8G,EAEAA,IAAAt8G,GACA82F,EAAAjuB,GAAAkvB,GAAAlvB,GAAA4rB,EAAA5rB,GAEAA,EAAAjqD,MAAA09F,OAkGA,QAAAgc,IAAAnkB,GACA,GAAAp0G,GAAA,MAAAo0G,EAAA,EAAAA,EAAAp0G,OACAqoH,EAAAzJ,IASA,OAPAxK,GAAAp0G,EAAAk0F,EAAAkgB,EAAA,SAAAnhB,GACA,qBAAAA,GAAA,GACA,SAAAlhF,IAAAqmF,GAEA,QAAAiwB,EAAAp1B,EAAA,IAAAA,EAAA,SAGA4sB,GAAA,SAAAn0G,GAEA,IADA,GAAA8G,IAAA,IACAA,EAAAxS,GAAA,CACA,GAAAizF,GAAAmhB,EAAA5hG,EACA,IAAA1G,EAAAmnF,EAAA,GAAA7+E,KAAA1I,GACA,MAAAI,GAAAmnF,EAAA,GAAA7+E,KAAA1I,MA8BA,QAAA8sH,IAAAtgH,GACA,MAAA0/F,IAAArB,GAAAr+F,EAAAqgF,KAsBA,QAAAkgC,IAAAp6H,GACA,kBACA,MAAAA,IAwBA,QAAAq6H,IAAAr6H,EAAAkvD,GACA,aAAAlvD,SAAAkvD,EAAAlvD,EAkEA,QAAAssB,IAAAtsB,GACA,MAAAA,GA6CA,QAAAi1F,IAAA3M,GACA,MAAAm2B,IAAA,kBAAAn2B,KAAA4vB,GAAA5vB,EAAA4R,KA+BA,QAAAogC,IAAAzgH,GACA,MAAA8kG,IAAAzG,GAAAr+F,EAAAqgF,KA6BA,QAAAqgC,IAAA/mH,EAAAyjG,GACA,MAAAyH,IAAAlrG,EAAA0kG,GAAAjB,EAAA/c,KAkGA,QAAA/sE,IAAAvsB,EAAAiZ,EAAA/X,GACA,GAAAuc,GAAA9Z,GAAAsV,GACA2gH,EAAAzf,GAAAlhG,EAAAwE,EAEA,OAAAvc,GACA02G,GAAA3+F,KAAA2gH,EAAA74H,SAAA0c,EAAA1c,UACAG,EAAA+X,EACAA,EAAAjZ,EACAA,EAAAmV,KACAykH,EAAAzf,GAAAlhG,EAAAtV,GAAAsV,IAEA,IAAAi3G,KAAAtY,GAAA12G,IAAA,SAAAA,OAAAgvH,OACAlY,EAAAoC,GAAAp6G,EAqBA,OAnBAu0F,GAAAqlC,EAAA,SAAA1S,GACA,GAAAx/B,GAAAzuE,EAAAiuG,EACAlnH,GAAAknH,GAAAx/B,EACAswB,IACAh4G,EAAAE,UAAAgnH,GAAA,WACA,GAAA7V,GAAAl8F,KAAAq8F,SACA,IAAA0e,GAAA7e,EAAA,CACA,GAAA98F,GAAAvU,EAAAmV,KAAAm8F,aACAyR,EAAAxuG,EAAAg9F,YAAAU,GAAA98F,KAAAo8F,YAIA,OAFAwR,GAAA3wG,MAA4Bs1E,OAAAj7E,KAAA3L,UAAAozF,QAAAl0F,IAC5BuU,EAAAi9F,UAAAH,EACA98F,EAEA,MAAAmzE,GAAA76E,MAAA7M,EAAAk1F,GAAA//E,KAAA/V,SAAA0B,gBAKAd,EAgBA,QAAA65H,MAIA,MAHArlH,IAAAslH,IAAA3kH,OACAX,GAAAslH,EAAAC,IAEA5kH,KAeA,QAAA6kH,OAwBA,QAAAC,IAAAp6H,GAEA,MADAA,GAAA25G,GAAA35G,GACA+gH,GAAA,SAAAn0G,GACA,MAAA+yG,IAAA/yG,EAAA5M,KAkGA,QAAAI,IAAA2S,GACA,MAAA+rG,IAAA/rG,GAAA2jF,EAAAgkB,GAAA3nG,IAAAqtG,GAAArtG,GAwBA,QAAAsnH,IAAAl6H,GACA,gBAAA4S,GACA,aAAA5S,EAAAgB,GAAAq5G,GAAAr6G,EAAA4S,IAuGA,QAAAunH,MACA,SAgBA,QAAAC,MACA,SAqBA,QAAAC,MACA,SAgBA,QAAAC,MACA,SAgBA,QAAAC,MACA,SAsBA,QAAAC,IAAA36H,EAAAw0F,GAEA,GADAx0F,EAAA25G,GAAA35G,GACAA,EAAA,GAAAA,EAAAg7F,GACA,QAEA,IAAAtnF,GAAAwnF,GACAh6F,EAAA4xG,GAAA9yG,EAAAk7F,GAEA1G,GAAAsrB,GAAAtrB,GACAx0F,GAAAk7F,EAGA,KADA,GAAAxmF,GAAAqiF,EAAA71F,EAAAszF,KACA9gF,EAAA1T,GACAw0F,EAAA9gF,EAEA,OAAAgB,GAoBA,QAAAkmH,IAAAr7H,GACA,MAAAwoC,IAAAxoC,GACA61F,EAAA71F,EAAAm7G,IAEAjB,GAAAl6G,OAAA6yG,GAAAsR,GAAA94G,GAAArL,KAoBA,QAAAs7H,IAAAnlH,GACA,GAAA0K,KAAA06G,EACA,OAAAlwH,IAAA8K,GAAA0K,EA2GA,QAAAgS,IAAA4B,GACA,MAAAA,MAAA9yB,OACAs4G,GAAAxlF,EAAAnI,GAAAovF,IACA95G,GA0BA,QAAA45H,IAAA/mG,EAAAwgE,GACA,MAAAxgE,MAAA9yB,OACAs4G,GAAAxlF,EAAA8rF,GAAAtrB,EAAA,GAAAymB,IACA95G,GAiBA,QAAA65H,IAAAhnG,GACA,MAAAuiE,GAAAviE,EAAAnI,IA0BA,QAAAovG,IAAAjnG,EAAAwgE,GACA,MAAA+B,GAAAviE,EAAA8rF,GAAAtrB,EAAA,IAqBA,QAAArgF,IAAA6f,GACA,MAAAA,MAAA9yB,OACAs4G,GAAAxlF,EAAAnI,GAAA4yF,IACAt9G,GA0BA,QAAA+5H,IAAAlnG,EAAAwgE,GACA,MAAAxgE,MAAA9yB,OACAs4G,GAAAxlF,EAAA8rF,GAAAtrB,EAAA,GAAAiqB,IACAt9G,GA8EA,QAAA0vC,IAAA7c,GACA,MAAAA,MAAA9yB,OACAs1F,EAAAxiE,EAAAnI,IACA,EA0BA,QAAAsvG,IAAAnnG,EAAAwgE,GACA,MAAAxgE,MAAA9yB,OACAs1F,EAAAxiE,EAAA8rF,GAAAtrB,EAAA,IACA,EApsdAp/E,EAAA,MAAAA,EAAAT,GAAAslH,GAAA9hD,SAAAxjE,GAAAhV,SAAAyV,EAAA6kH,GAAAmB,KAAAzmH,GAAAwtF,IAGA,IAAA1uF,IAAA2B,EAAA3B,MACAo/E,GAAAz9E,EAAAy9E,KACAl3E,GAAAvG,EAAAuG,MACA0H,GAAAjO,EAAAiO,SACA9c,GAAA6O,EAAA7O,KACA5G,GAAAyV,EAAAzV,OACAswB,GAAA7a,EAAA6a,OACAyjD,GAAAt+D,EAAAs+D,OACAzgE,GAAAmC,EAAAnC,UAGAooH,GAAA5nH,GAAApT,UACAi7H,GAAAj4G,GAAAhjB,UACAq2G,GAAA/2G,GAAAU,UAGAk7H,GAAAnmH,EAAA,sBAGAy4G,GAAAyN,GAAA1wH,SAGAtK,GAAAo2G,GAAAp2G,eAGAw6H,GAAA,EAGAnO,GAAA,WACA,GAAAriH,GAAA,SAAAc,KAAAmwH,OAAAz3H,MAAAy3H,GAAAz3H,KAAA03H,UAAA,GACA,OAAAlxH,GAAA,iBAAAA,EAAA,MAQA4hH,GAAAxV,GAAA9rG,SAGAwqH,GAAAvH,GAAAzuH,KAAAO,IAGAu6H,GAAAvlH,GAAAslH,EAGAvc,GAAAztF,GAAA,IACA49F,GAAAzuH,KAAAkB,IAAAwlC,QAAAu4D,GAAA,QACAv4D,QAAA,uEAIAopC,GAAA4gC,GAAA16F,EAAA85D,OAAA/tE,GACA0X,GAAAzD,EAAAyD,OACA8vD,GAAAvzD,EAAAuzD,WACAi7C,GAAA10C,MAAA00C,YAAAziH,GACAorH,GAAAl0B,EAAA14F,GAAA87H,eAAA97H,IACA+7H,GAAA/7H,GAAAgW,OACAgmH,GAAAjlB,GAAAilB,qBACA1pH,GAAAopH,GAAAppH,OACAy6G,GAAA7zG,MAAA+iH,mBAAAz6H,GACAs0H,GAAA58G,MAAAC,SAAA3X,GACA25G,GAAAjiG,MAAAgjH,YAAA16H,GAEAvB,GAAA,WACA,IACA,GAAAioF,GAAAkkC,GAAApsH,GAAA,iBAEA,OADAkoF,MAAe,OACfA,EACO,MAAA/5E,QAIPguH,GAAA1mH,EAAA89E,eAAAv+E,GAAAu+E,cAAA99E,EAAA89E,aACA6oC,GAAAlpC,OAAAhd,MAAAlhE,GAAAk+E,KAAAhd,KAAAgd,GAAAhd,IACAmmD,GAAA5mH,EAAAktB,aAAA3tB,GAAA2tB,YAAAltB,EAAAktB,WAGAu+E,GAAAt6G,GAAAi9C,KACAk9D,GAAAn6G,GAAA+tD,MACA2nE,GAAAt8H,GAAAqW,sBACAkmH,GAAAhtD,MAAA0mC,SAAAz0G,GACAwzH,GAAAv/G,EAAAs/G,SACA9F,GAAAyM,GAAAjoH,KACAirG,GAAAhmB,EAAA14F,GAAAmE,KAAAnE,IACA07G,GAAA90G,GAAA6rB,IACA0gF,GAAAvsG,GAAA4N,IACAu5G,GAAA76B,GAAAhd,IACA8hD,GAAAviH,EAAAowC,SACAm7D,GAAAp6G,GAAA4tD,OACA86D,GAAAoM,GAAAvoG,QAGAqpG,GAAApQ,GAAA32G,EAAA,YACAm/F,GAAAwX,GAAA32G,EAAA,OACAgnH,GAAArQ,GAAA32G,EAAA,WACAinH,GAAAtQ,GAAA32G,EAAA,OACAknH,GAAAvQ,GAAA32G,EAAA,WACAo+F,GAAAuY,GAAApsH,GAAA,UAGA48H,GAAAD,IAAA,GAAAA,IAGA1Q,MAGA4Q,GAAA7e,GAAAwe,IACAM,GAAA9e,GAAApJ,IACAmoB,GAAA/e,GAAAye,IACAO,GAAAhf,GAAA0e,IACAO,GAAAjf,GAAA2e,IAGAO,GAAAhkH,MAAAxY,UAAAc,GACAujH,GAAAmY,MAAAnH,QAAAv0H,GACAuhH,GAAAma,MAAAjyH,SAAAzJ,GA6IAumH,GAAA,WACA,QAAAvnH,MACA,gBAAAysH,GACA,IAAA7U,GAAA6U,GACA,QAEA,IAAA8O,GACA,MAAAA,IAAA9O,EAEAzsH,GAAAE,UAAAusH,CACA,IAAAl4G,GAAA,GAAAvU,EAEA,OADAA,GAAAE,UAAAc,GACAuT,KAqCAw8F,GAAA6mB,kBAQAV,OAAAv5B,GAQA06B,SAAAz6B,GAQAu6B,YAAAt6B,GAQA86B,SAAA,GAQAX,SAQA8B,EAAA/oB,IAKAA,EAAA7wG,UAAAkxG,EAAAlxG,UACA6wG,EAAA7wG,UAAA0X,YAAAm5F,EAEAG,EAAAhxG,UAAAqnH,GAAAnW,EAAAlxG,WACAgxG,EAAAhxG,UAAA0X,YAAAs5F,EAuHAD,EAAA/wG,UAAAqnH,GAAAnW,EAAAlxG,WACA+wG,EAAA/wG,UAAA0X,YAAAq5F,EAoGA+B,GAAA9yG,UAAAolB,MAAA6tF,GACAH,GAAA9yG,UAAA,OAAAozG,GACAN,GAAA9yG,UAAAN,IAAA2zG,GACAP,GAAA9yG,UAAAoV,IAAAk+F,GACAR,GAAA9yG,UAAAgf,IAAAu0F,GAiHAC,GAAAxzG,UAAAolB,MAAAquF,GACAD,GAAAxzG,UAAA,OAAA0zG,GACAF,GAAAxzG,UAAAN,IAAAk0G,GACAJ,GAAAxzG,UAAAoV,IAAAy+F,GACAL,GAAAxzG,UAAAgf,IAAA80F,GAmGAC,GAAA/zG,UAAAolB,MAAA4uF,GACAD,GAAA/zG,UAAA,OAAAm0G,GACAJ,GAAA/zG,UAAAN,IAAA20G,GACAN,GAAA/zG,UAAAoV,IAAAk/F,GACAP,GAAA/zG,UAAAgf,IAAAu1F,GAmDAC,GAAAx0G,UAAA8hC,IAAA0yE,GAAAx0G,UAAAkS,KAAAuiG,GACAD,GAAAx0G,UAAAoV,IAAAs/F,GAkGAC,GAAA30G,UAAAolB,MAAAwvF,GACAD,GAAA30G,UAAA,OAAA60G,GACAF,GAAA30G,UAAAN,IAAAo1G,GACAH,GAAA30G,UAAAoV,IAAA2/F,GACAJ,GAAA30G,UAAAgf,IAAAg2F,EAscA,IAAA0B,IAAA6P,GAAA1M,IAUAmX,GAAAzK,GAAAxM,IAAA,GA4IAD,GAAA2M,KAYAzM,GAAAyM,IAAA,GAugCAkE,GAAAuR,GAAA,SAAA10C,EAAAh8E,GAEA,MADA0wH,IAAAl9G,IAAAwoE,EAAAh8E,GACAg8E,GAFAh8D,GAaAixG,GAAAl9H,GAAA,SAAAioF,EAAA7d,GACA,MAAApqE,IAAAioF,EAAA,YACAhoF,cAAA,EACAC,YAAA,EACAP,MAAAo6H,GAAA3vD,GACAhyD,UAAA,KALA6T,GAucAkxG,GAAAhc,GAuBA7tB,GAAA4oC,IAAA,SAAA17G,GACA,MAAAzL,IAAAu+E,aAAA9yE,IA68BAwiG,GAAAyZ,IAAA,EAAA5jC,EAAA,GAAA4jC,KAAA,WAAAthC,GAAA,SAAAzF,GACA,UAAA+mC,IAAA/mC,IADA6kC,GA0XA1R,GAAA8T,GAAA,SAAA10C,GACA,MAAA00C,IAAAx8H,IAAA8nF,IADAsyC,GAyIAhU,GAAA8V,GAAA5jC,EAAA4jC,GAAAt8H,IAAA26H,GASAlU,GAAA6V,GAAA,SAAA97H,GAEA,IADA,GAAAuU,MACAvU,GACAk1F,EAAA3gF,EAAAyxG,GAAAhmH,IACAA,EAAAosH,GAAApsH,EAEA,OAAAuU,IANA4lH,GAgBApiB,GAAA2C,IAGAshB,IAAAjkB,GAAA,GAAAikB,IAAA,GAAAhtD,aAAA,MAAA0tB,IACA0X,IAAA2D,GAAA,GAAA3D,MAAAxY,IACAqgC,IAAAlkB,GAAAkkB,GAAAxpH,YAAAupF,IACAkgC,IAAAnkB,GAAA,GAAAmkB,MAAA//B,IACAggC,IAAApkB,GAAA,GAAAokB,MAAA5/B,MACAwb,GAAA,SAAA34G,GACA,GAAAmV,GAAAmmG,GAAAt7G,GACA0nH,EAAAvyG,GAAAwnF,GAAA38F,EAAAwY,YAAA5W,GACA67H,EAAA/V,EAAAtJ,GAAAsJ,GAAA,EAEA,IAAA+V,EACA,OAAAA,GACA,IAAAR,IAAA,MAAA3/B,GACA,KAAA4/B,IAAA,MAAA1gC,GACA,KAAA2gC,IAAA,MAAAvgC,GACA,KAAAwgC,IAAA,MAAArgC,GACA,KAAAsgC,IAAA,MAAAlgC,IAGA,MAAAhoF,IA6SA,IAAAugH,IAAAsG,GAAAhhB,GAAAggB,GA6QA9P,GAAA8C,GAAAvC,IAUA1oF,GAAA05F,IAAA,SAAAn0C,EAAAoxB,GACA,MAAAtkG,IAAA2tB,WAAAulD,EAAAoxB,IAWA+H,GAAAuM,GAAAuP,IA8EApZ,GAAAmJ,GAAA,SAAA7iD,GACA,GAAAt1D,KAOA,OANAypF,IAAAhuE,KAAA65C,IACAt1D,EAAAnC,KAAA,IAEAy3D,EAAAlkC,QAAAs4D,GAAA,SAAAr+E,EAAAu3F,EAAA2lB,EAAAjzD,GACAt1D,EAAAnC,KAAA0qH,EAAAjzD,EAAAlkC,QAAA+4D,GAAA,MAAAyY,GAAAv3F,KAEArL,IA4MAwoH,GAAAnc,GAAA,SAAA/sF,EAAAshE,GACA,MAAAiqB,IAAAvrF,GACAklF,GAAAllF,EAAA8lF,GAAAxkB,EAAA,EAAAiqB,IAAA,SA8BA4d,GAAApc,GAAA,SAAA/sF,EAAAshE,GACA,GAAAd,GAAAxiF,GAAAsjF,EAIA,OAHAiqB,IAAA/qB,KACAA,EAAArzF,IAEAo+G,GAAAvrF,GACAklF,GAAAllF,EAAA8lF,GAAAxkB,EAAA,EAAAiqB,IAAA,GAAAO,GAAAtrB,EAAA,SA2BA4oC,GAAArc,GAAA,SAAA/sF,EAAAshE,GACA,GAAAH,GAAAnjF,GAAAsjF,EAIA,OAHAiqB,IAAApqB,KACAA,EAAAh0F,IAEAo+G,GAAAvrF,GACAklF,GAAAllF,EAAA8lF,GAAAxkB,EAAA,EAAAiqB,IAAA,GAAAp+G,GAAAg0F,QAgeAkoC,GAAAtc,GAAA,SAAAxF,GACA,GAAA+hB,GAAAloC,EAAAmmB,EAAAiI,GACA,OAAA8Z,GAAAp8H,QAAAo8H,EAAA,KAAA/hB,EAAA,GACAD,GAAAgiB,QA2BAC,GAAAxc,GAAA,SAAAxF,GACA,GAAA/mB,GAAAxiF,GAAAupG,GACA+hB,EAAAloC,EAAAmmB,EAAAiI,GAOA,OALAhvB,KAAAxiF,GAAAsrH,GACA9oC,EAAArzF,GAEAm8H,EAAAz1G,MAEAy1G,EAAAp8H,QAAAo8H,EAAA,KAAA/hB,EAAA,GACAD,GAAAgiB,EAAAxd,GAAAtrB,EAAA,SAyBAgpC,GAAAzc,GAAA,SAAAxF,GACA,GAAApmB,GAAAnjF,GAAAupG,GACA+hB,EAAAloC,EAAAmmB,EAAAiI,GAMA,OAJAruB,GAAA,kBAAAA,KAAAh0F,GACAg0F,GACAmoC,EAAAz1G,MAEAy1G,EAAAp8H,QAAAo8H,EAAA,KAAA/hB,EAAA,GACAD,GAAAgiB,EAAAn8H,GAAAg0F,QA8HAsoC,GAAA1c,GAAA+N,IA8GA4O,GAAAvV,GAAA,SAAAn0F,EAAAusF,GACA,GAAAr/G,GAAA,MAAA8yB,EAAA,EAAAA,EAAA9yB,OACAwT,EAAA0iG,GAAApjF,EAAAusF,EAMA,OAJAD,IAAAtsF,EAAAohE,EAAAmrB,EAAA,SAAA7sG,GACA,MAAAqiG,IAAAriG,EAAAxS,IAAAwS,MACOg7B,KAAAk2E,KAEPlwG,IA8eAipH,GAAA5c,GAAA,SAAAxF,GACA,MAAAoH,IAAA7I,GAAAyB,EAAA,EAAAgE,IAAA,MA0BAqe,GAAA7c,GAAA,SAAAxF,GACA,GAAA/mB,GAAAxiF,GAAAupG,EAIA,OAHAgE,IAAA/qB,KACAA,EAAArzF,IAEAwhH,GAAA7I,GAAAyB,EAAA,EAAAgE,IAAA,GAAAO,GAAAtrB,EAAA,MAwBAqpC,GAAA9c,GAAA,SAAAxF,GACA,GAAApmB,GAAAnjF,GAAAupG,EAEA,OADApmB,GAAA,kBAAAA,KAAAh0F,GACAwhH,GAAA7I,GAAAyB,EAAA,EAAAgE,IAAA,GAAAp+G,GAAAg0F,KAsKA2oC,GAAA/c,GAAA,SAAA/sF,EAAAshE,GACA,MAAAiqB,IAAAvrF,GACAklF,GAAAllF,EAAAshE,QAsBAyoC,GAAAhd,GAAA,SAAAxF,GACA,MAAA6H,IAAAtuB,EAAAymB,EAAAgE,OA0BAye,GAAAjd,GAAA,SAAAxF,GACA,GAAA/mB,GAAAxiF,GAAAupG,EAIA,OAHAgE,IAAA/qB,KACAA,EAAArzF,IAEAiiH,GAAAtuB,EAAAymB,EAAAgE,IAAAO,GAAAtrB,EAAA,MAwBAypC,GAAAld,GAAA,SAAAxF,GACA,GAAApmB,GAAAnjF,GAAAupG,EAEA,OADApmB,GAAA,kBAAAA,KAAAh0F,GACAiiH,GAAAtuB,EAAAymB,EAAAgE,IAAAp+G,GAAAg0F,KAmBA+oC,GAAAnd,GAAAkP,IA6DAkO,GAAApd,GAAA,SAAAxF,GACA,GAAAr6G,GAAAq6G,EAAAr6G,OACAszF,EAAAtzF,EAAA,EAAAq6G,EAAAr6G,EAAA,GAAAC,EAGA,OADAqzF,GAAA,kBAAAA,IAAA+mB,EAAA1zF,MAAA2sE,GAAArzF,GACA+uH,GAAA3U,EAAA/mB,KA+GA4pC,GAAAjW,GAAA,SAAA30G,GACA,GAAAtS,GAAAsS,EAAAtS,OACA6S,EAAA7S,EAAAsS,EAAA,KACAjU,EAAA+V,KAAAm8F,YACA8e,EAAA,SAAApwH,GAA0C,MAAAi3G,IAAAj3G,EAAAqT,GAE1C,SAAAtS,EAAA,GAAAoU,KAAAo8F,YAAAxwG,SACA3B,YAAA6xG,IAAA2E,GAAAhiG,IAGAxU,IAAAoT,MAAAoB,MAAA7S,EAAA,MACA3B,EAAAmyG,YAAAn/F,MACAs1E,KAAAygC,GACA17G,MAAA2jH,GACAl8B,QAAAlzF,KAEA,GAAAkwG,GAAA9xG,EAAA+V,KAAAq8F,WAAA2W,KAAA,SAAAt0F,GAIA,MAHA9yB,KAAA8yB,EAAA9yB,QACA8yB,EAAAzhB,KAAApR,IAEA6yB,KAZA1e,KAAAgzG,KAAAiI,KA+PA8N,GAAAhY,GAAA,SAAA3xG,EAAAnV,EAAAqB,GACAN,GAAAlB,KAAAsV,EAAA9T,KACA8T,EAAA9T,GAEAg2G,GAAAliG,EAAA9T,EAAA,KAmIA09H,GAAAtW,GAAAoG,IAqBAmQ,GAAAvW,GAAAqG,IAgKAmQ,GAAAnY,GAAA,SAAA3xG,EAAAnV,EAAAqB,GACAN,GAAAlB,KAAAsV,EAAA9T,GACA8T,EAAA9T,GAAA2R,KAAAhT,GAEAq3G,GAAAliG,EAAA9T,GAAArB,MAsEAk/H,GAAA1d,GAAA,SAAAhrB,EAAAhjF,EAAAnG,GACA,GAAA8G,IAAA,EACAykG,EAAA,kBAAAplG,GACA2B,EAAAiqG,GAAA5oB,GAAAtiF,GAAAsiF,EAAA70F,UAKA,OAHA61G,IAAAhhB,EAAA,SAAAx2F,GACAmV,IAAAhB,GAAAykG,EAAAnrG,EAAA+F,EAAAxT,EAAAqN,GAAAkvG,GAAAv8G,EAAAwT,EAAAnG,KAEA8H,IA+BAgqH,GAAArY,GAAA,SAAA3xG,EAAAnV,EAAAqB,GACAg2G,GAAAliG,EAAA9T,EAAArB,KAiIAo/H,GAAAtY,GAAA,SAAA3xG,EAAAnV,EAAAqB,GACA8T,EAAA9T,EAAA,KAAA2R,KAAAhT,IACK,WAAc,gBAmSnBq/H,GAAA7d,GAAA,SAAAhrB,EAAA4c,GACA,SAAA5c,EACA,QAEA,IAAA70F,GAAAyxG,EAAAzxG,MAMA,OALAA,GAAA,GAAAylH,GAAA5wB,EAAA4c,EAAA,GAAAA,EAAA,IACAA,KACOzxG,EAAA,GAAAylH,GAAAhU,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACPA,KAAA,KAEAiN,GAAA7pB,EAAA+jB,GAAAnH,EAAA,SAqBA98B,GAAAkmD,IAAA,WACA,MAAApnH,IAAAk+E,KAAAhd,OAqIA5nD,GAAA8yF,GAAA,SAAAl5B,EAAAwM,EAAA+wB,GACA,GAAA1N,GAAA5d,EACA,IAAAsrB,EAAAlkH,OAAA,CACA,GAAAmkH,GAAA9sB,EAAA6sB,EAAAyC,GAAA55F,IACAypF,IAAAvd,GAEA,MAAA2wB,IAAAjjC,EAAA6vB,EAAArjB,EAAA+wB,EAAAC,KAgDAwZ,GAAA9d,GAAA,SAAA5gH,EAAAS,EAAAwkH,GACA,GAAA1N,GAAA5d,GAAAC,EACA,IAAAqrB,EAAAlkH,OAAA,CACA,GAAAmkH,GAAA9sB,EAAA6sB,EAAAyC,GAAAgX,IACAnnB,IAAAvd,GAEA,MAAA2wB,IAAAlqH,EAAA82G,EAAAv3G,EAAAilH,EAAAC,KAkSAyZ,GAAA/d,GAAA,SAAAl5B,EAAAj7E,GACA,MAAAosG,IAAAnxB,EAAA,EAAAj7E,KAsBAqmF,GAAA8tB,GAAA,SAAAl5B,EAAAoxB,EAAArsG,GACA,MAAAosG,IAAAnxB,EAAAqiC,GAAAjR,IAAA,EAAArsG,IA0FAkgH,IAAA2G,MAAArf,EA2FA,IAAA2qB,IAAAhC,GAAA,SAAAl1C,EAAAskC,GACAA,EAAA,GAAAA,EAAAjrH,QAAA6mC,GAAAokF,EAAA,IACA/2B,EAAA+2B,EAAA,GAAAl1B,EAAA6oB,OACA1qB,EAAA0kB,GAAAqS,EAAA,GAAAl1B,EAAA6oB,MAEA,IAAAkf,GAAA7S,EAAAjrH,MACA,OAAA6/G,IAAA,SAAAn0G,GAIA,IAHA,GAAA8G,IAAA,EACAxS,EAAA4xG,GAAAlmG,EAAA1L,OAAA89H,KAEAtrH,EAAAxS,GACA0L,EAAA8G,GAAAy4G,EAAAz4G,GAAAtU,KAAAkW,KAAA1I,EAAA8G,GAEA,OAAA1G,GAAA66E,EAAAvyE,KAAA1I,OAqCAmnH,GAAAhT,GAAA,SAAAl5B,EAAAu9B,GACA,GAAAC,GAAA9sB,EAAA6sB,EAAAyC,GAAAkM,IACA,OAAAjJ,IAAAjjC,EAAAsS,GAAAh5F,GAAAikH,EAAAC,KAmCA4Z,GAAAle,GAAA,SAAAl5B,EAAAu9B,GACA,GAAAC,GAAA9sB,EAAA6sB,EAAAyC,GAAAoX,IACA,OAAAnU,IAAAjjC,EAAAuS,GAAAj5F,GAAAikH,EAAAC,KAyBA6Z,GAAA/W,GAAA,SAAAtgC,EAAA04B,GACA,MAAAuK,IAAAjjC,EAAAyS,GAAAn5F,SAAAo/G,KA4bA4e,GAAAlV,GAAAhP,IAyBAmkB,GAAAnV,GAAA,SAAA1qH,EAAAwxB,GACA,MAAAxxB,IAAAwxB,IAqBA2kF,GAAAqG,GAAA,WAAkD,MAAA96G,eAAoB86G,GAAA,SAAAx8G,GACtE,MAAA4xG,IAAA5xG,IAAAe,GAAAlB,KAAAG,EAAA,YACAo8H,GAAAv8H,KAAAG,EAAA,WA0BAwoC,GAAAt0B,GAAAs0B,QAmBAooE,GAAAD,GAAAjZ,EAAAiZ,IAAA8L,GAmGApG,GAAAsmB,IAAA3B,GAmBAlqB,GAAAD,GAAAnZ,EAAAmZ,IAAA6L,GAkXA1L,GAAAD,GAAArZ,EAAAqZ,IAAA6M,GAiRA1M,GAAAD,GAAAvZ,EAAAuZ,IAAAoN,GAkDAjN,GAAAD,GAAAzZ,EAAAyZ,IAAAmN,GA+DAhN,GAAAD,GAAA3Z,EAAA2Z,IAAAkN,GAwFAlqF,GAAAq2F,GAAAxL,IAyBA4gB,GAAApV,GAAA,SAAA1qH,EAAAwxB,GACA,MAAAxxB,IAAAwxB,IA4SAsrB,GAAAkqE,GAAA,SAAApmH,EAAAiZ,GACA,GAAAglG,GAAAhlG,IAAAulG,GAAAvlG,GAEA,WADA69F,IAAA79F,EAAAtV,GAAAsV,GAAAjZ,EAGA,QAAAS,KAAAwY,GACA9Y,GAAAlB,KAAAga,EAAAxY,IACAi2G,GAAA12G,EAAAS,EAAAwY,EAAAxY,MAoCA0+H,GAAA/Y,GAAA,SAAApmH,EAAAiZ,GACA69F,GAAA79F,EAAA+9F,GAAA/9F,GAAAjZ,KAgCA63H,GAAAzR,GAAA,SAAApmH,EAAAiZ,EAAA8lG,EAAAvH,GACAV,GAAA79F,EAAA+9F,GAAA/9F,GAAAjZ,EAAAw3G,KA+BA4nB,GAAAhZ,GAAA,SAAApmH,EAAAiZ,EAAA8lG,EAAAvH,GACAV,GAAA79F,EAAAtV,GAAAsV,GAAAjZ,EAAAw3G,KAoBA6nB,GAAArX,GAAA/Q,IA8DAj/B,GAAA4oC,GAAA,SAAAn0G,GAEA,MADAA,GAAA2F,KAAApR,GAAAm1G,IACAtpG,EAAAgrH,GAAA72H,GAAAyL,KAsBA6yH,GAAA1e,GAAA,SAAAn0G,GAEA,MADAA,GAAA2F,KAAApR,GAAA+rH,IACAlgH,EAAA0yH,GAAAv+H,GAAAyL,KAoXAopB,GAAAszF,GAAA,SAAA50G,EAAAnV,EAAAqB,GACA8T,EAAAnV,GAAAqB,GACK+4H,GAAA9tG,KA4BL8zG,GAAArW,GAAA,SAAA50G,EAAAnV,EAAAqB,GACAN,GAAAlB,KAAAsV,EAAAnV,GACAmV,EAAAnV,GAAAgT,KAAA3R,GAEA8T,EAAAnV,IAAAqB,IAEKk/G,IAoBL8f,GAAA7e,GAAAjF,IAiKA+jB,GAAAtZ,GAAA,SAAApmH,EAAAiZ,EAAA8lG,GACAD,GAAA9+G,EAAAiZ,EAAA8lG,KAkCAwgB,GAAAnZ,GAAA,SAAApmH,EAAAiZ,EAAA8lG,EAAAvH,GACAsH,GAAA9+G,EAAAiZ,EAAA8lG,EAAAvH,KAuBAmoB,GAAA3X,GAAA,SAAAhoH,EAAAqT,GACA,GAAAkB,KACA,UAAAvU,EACA,MAAAuU,EAEA,IAAAkjG,IAAA,CACApkG,GAAA4hF,EAAA5hF,EAAA,SAAAT,GAGA,MAFAA,GAAA0nG,GAAA1nG,EAAA5S,GACAy3G,MAAA7kG,EAAA7R,OAAA,GACA6R,IAEAkkG,GAAA92G,EAAAw4G,GAAAx4G,GAAAuU,GACAkjG,IACAljG,EAAA+iG,GAAA/iG,EAAA+kF,GAAAC,GAAAC,IAGA,KADA,GAAAz4F,GAAAsS,EAAAtS,OACAA,KACAu/G,GAAA/rG,EAAAlB,EAAAtS,GAEA,OAAAwT,KA4CA0mH,GAAAjT,GAAA,SAAAhoH,EAAAqT,GACA,aAAArT,KAAgC8/G,GAAA9/G,EAAAqT,KA0KhCusH,GAAAlV,GAAA/mH,IA0BAk8H,GAAAnV,GAAA1T,IA+XA8oB,GAAA1Y,GAAA,SAAA7yG,EAAAwrH,EAAAxsH,GAEA,MADAwsH,KAAAx0H,cACAgJ,GAAAhB,EAAAwjH,GAAAgJ,QAgKAC,GAAA5Y,GAAA,SAAA7yG,EAAAwrH,EAAAxsH,GACA,MAAAgB,IAAAhB,EAAA,QAAAwsH,EAAAx0H,gBAuBA00H,GAAA7Y,GAAA,SAAA7yG,EAAAwrH,EAAAxsH,GACA,MAAAgB,IAAAhB,EAAA,QAAAwsH,EAAAx0H,gBAoBA20H,GAAAjZ,GAAA,eA0NAkZ,GAAA/Y,GAAA,SAAA7yG,EAAAwrH,EAAAxsH,GACA,MAAAgB,IAAAhB,EAAA,QAAAwsH,EAAAx0H,gBAgEA60H,GAAAhZ,GAAA,SAAA7yG,EAAAwrH,EAAAxsH,GACA,MAAAgB,IAAAhB,EAAA,QAAAyjH,GAAA+I,KA0hBAM,GAAAjZ,GAAA,SAAA7yG,EAAAwrH,EAAAxsH,GACA,MAAAgB,IAAAhB,EAAA,QAAAwsH,EAAAr4F,gBAoBAsvF,GAAA/P,GAAA,eAuDA2R,GAAAhY,GAAA,SAAAl5B,EAAAj7E,GACA,IACA,MAAAI,GAAA66E,EAAA1mF,GAAAyL,GACO,MAAAkB,GACP,MAAA2mH,IAAA3mH,KAAA,GAAA6N,IAAA7N,MA8BA2yH,GAAAtY,GAAA,SAAAhoH,EAAA45H,GAKA,MAJArlC,GAAAqlC,EAAA,SAAAn5H,GACAA,EAAA85G,GAAA95G,GACAg2G,GAAAz2G,EAAAS,EAAAqtB,GAAA9tB,EAAAS,GAAAT,MAEAA,IAyJAugI,GAAAxY,KAuBAyY,GAAAzY,IAAA,GA0JA0Y,GAAA7f,GAAA,SAAAhuG,EAAAnG,GACA,gBAAAzM,GACA,MAAA27G,IAAA37G,EAAA4S,EAAAnG,MA2BAi0H,GAAA9f,GAAA,SAAA5gH,EAAAyM,GACA,gBAAAmG,GACA,MAAA+oG,IAAA37G,EAAA4S,EAAAnG,MA6JAk0H,GAAApX,GAAAt0B,GA0BA2rC,GAAArX,GAAA90B,GA0BAosC,GAAAtX,GAAAh0B,GAgGA1wE,GAAA+kG,KAsCAkX,GAAAlX,IAAA,GAqMA5nF,GAAAqnF,GAAA,SAAA0X,EAAAC,GACA,MAAAD,GAAAC,GACK,GAuBL39E,GAAAmnE,GAAA,QAiBAyW,GAAA5X,GAAA,SAAA6X,EAAAC,GACA,MAAAD,GAAAC,GACK,GAuBLhtE,GAAAq2D,GAAA,SAwKA7qC,GAAA0pC,GAAA,SAAA+X,EAAAC,GACA,MAAAD,GAAAC,GACK,GAuBLp1H,GAAAu+G,GAAA,SAiBA8W,GAAAjY,GAAA,SAAAkY,EAAAC,GACA,MAAAD,GAAAC,GACK,EAgmBL,OA1iBAzwB,GAAA8gB,SACA9gB,EAAA6X,OACA7X,EAAA70D,UACA60D,EAAAouB,YACApuB,EAAA8mB,gBACA9mB,EAAAquB,cACAruB,EAAAsuB,MACAtuB,EAAA+gB,UACA/gB,EAAAjjF,QACAijF,EAAAuvB,WACAvvB,EAAA2tB,WACA3tB,EAAA8iB,aACA9iB,EAAAmf,SACAnf,EAAA4c,SACA5c,EAAA6c,WACA7c,EAAA58F,UACA48F,EAAAuoB,QACAvoB,EAAAwoB,YACAxoB,EAAAyoB,YACAzoB,EAAAmtB,WACAntB,EAAAv7F,UACAu7F,EAAAghB,SACAhhB,EAAAihB,cACAjhB,EAAA/7C,YACA+7C,EAAA/4B,YACA+4B,EAAAuuB,gBACAvuB,EAAA4tB,SACA5tB,EAAAje,SACAie,EAAAgsB,cACAhsB,EAAAisB,gBACAjsB,EAAAksB,kBACAlsB,EAAA8c,QACA9c,EAAA+c,aACA/c,EAAAgd,kBACAhd,EAAAid,aACAjd,EAAAn8D,QACAm8D,EAAA/+F,UACA++F,EAAA+f,WACA/f,EAAAggB,eACAhgB,EAAAigB,gBACAjgB,EAAAjgE,WACAigE,EAAAod,eACApd,EAAAqd,gBACArd,EAAA/uD,QACA+uD,EAAAwvB,QACAxvB,EAAAyvB,aACAzvB,EAAAsd,aACAtd,EAAAilB,aACAjlB,EAAAklB,eACAllB,EAAAstB,WACAttB,EAAAwd,WACAxd,EAAAmsB,gBACAnsB,EAAAqsB,kBACArsB,EAAAssB,oBACAtsB,EAAAl7E,UACAk7E,EAAAyuB,YACAzuB,EAAAutB,aACAvtB,EAAA1c,YACA0c,EAAAwtB,SACAxtB,EAAAptG,QACAotG,EAAAiG,UACAjG,EAAAlrE,OACAkrE,EAAAmlB,WACAnlB,EAAAolB,aACAplB,EAAA2oB,WACA3oB,EAAA4oB,mBACA5oB,EAAA4b,WACA5b,EAAA2uB,SACA3uB,EAAAwuB,aACAxuB,EAAA0vB,UACA1vB,EAAA2vB,YACA3vB,EAAAxkF,SACAwkF,EAAAygB,UACAzgB,EAAAkpB,UACAlpB,EAAA4uB,QACA5uB,EAAAqlB,UACArlB,EAAA77F,QACA67F,EAAAqgB,WACArgB,EAAA4vB,QACA5vB,EAAA6tB,YACA7tB,EAAA6vB,aACA7vB,EAAA8vB,YACA9vB,EAAA6iB,WACA7iB,EAAA+tB,gBACA/tB,EAAAytB,aACAztB,EAAAkqB,QACAlqB,EAAAslB,UACAtlB,EAAA9wG,YACA8wG,EAAAmpB,cACAnpB,EAAAusB,QACAvsB,EAAA4d,WACA5d,EAAA6d,aACA7d,EAAA8d,eACA9d,EAAAwsB,UACAxsB,EAAAlsF,SACAksF,EAAA+vB,cACA/vB,EAAAguB,SACAhuB,EAAAwgB,UACAxgB,EAAAruE,UACAquE,EAAAwiB,QACAxiB,EAAAp+E,WACAo+E,EAAA2gB,cACA3gB,EAAA7xF,OACA6xF,EAAAwlB,WACAxlB,EAAA4gB,WACA5gB,EAAAv+F,SACAu+F,EAAA0tB,UACA1tB,EAAAse,cACAte,EAAAue,gBACAve,EAAA/9F,SACA+9F,EAAAyiB,UACAziB,EAAAzhE,QACAyhE,EAAAwe,QACAxe,EAAAye,aACAze,EAAA0e,kBACA1e,EAAA2e,aACA3e,EAAAof,OACApf,EAAA0iB,YACA1iB,EAAAoX,QACApX,EAAAh9E,WACAg9E,EAAA6uB,WACA7uB,EAAA8uB,aACA9uB,EAAA0pB,UACA1pB,EAAAwO,iBACAxO,EAAAjyF,aACAiyF,EAAA2iB,SACA3iB,EAAAysB,SACAzsB,EAAA0sB,WACA1sB,EAAA2sB,aACA3sB,EAAA4e,QACA5e,EAAA6e,UACA7e,EAAA8e,YACA9e,EAAA0lB,SACA1lB,EAAA+e,SACA/e,EAAAgf,aACAhf,EAAA12F,UACA02F,EAAA2lB,cACA3lB,EAAA5b,UACA4b,EAAA4lB,YACA5lB,EAAA4sB,WACA5sB,EAAAp9B,SACAo9B,EAAA4iB,QACA5iB,EAAA6sB,OACA7sB,EAAA8sB,SACA9sB,EAAA+sB,WACA/sB,EAAAgtB,OACAhtB,EAAAif,aACAjf,EAAAkf,iBACAlf,EAAAitB,WAGAjtB,EAAAkC,QAAA2sB,GACA7uB,EAAA0wB,UAAA5B,GACA9uB,EAAA2wB,OAAAvC,GACApuB,EAAA4wB,WAAA9J,GAGAtrG,GAAAwkF,KAKAA,EAAA/uE,OACA+uE,EAAA6nB,WACA7nB,EAAA+uB,aACA/uB,EAAAgmB,cACAhmB,EAAA1tD,QACA0tD,EAAA6lB,SACA7lB,EAAA/xF,SACA+xF,EAAAgjB,aACAhjB,EAAAijB,iBACAjjB,EAAA+iB,aACA/iB,EAAAkjB,cACAljB,EAAAsW,UACAtW,EAAA0oB,aACA1oB,EAAAkwB,UACAlwB,EAAAkmB,YACAlmB,EAAAuF,MACAvF,EAAAmmB,UACAnmB,EAAAomB,gBACApmB,EAAA8f,SACA9f,EAAAotB,QACAptB,EAAAkd,aACAld,EAAA2kB,WACA3kB,EAAAqtB,YACArtB,EAAAmd,iBACAnd,EAAA4kB,eACA5kB,EAAA58C,SACA48C,EAAAntG,WACAmtG,EAAAkgB,gBACAlgB,EAAA6kB,SACA7kB,EAAA8kB,cACA9kB,EAAA+kB,UACA/kB,EAAAglB,eACAhlB,EAAAnxG,OACAmxG,EAAAiuB,MACAjuB,EAAAkuB,OACAluB,EAAAz7F,OACAy7F,EAAA8N,SACA9N,EAAAud,QACAvd,EAAArlF,YACAqlF,EAAAiI,YACAjI,EAAAvkG,WACAukG,EAAA8lB,WACA9lB,EAAA0uB,UACA1uB,EAAAwE,eACAxE,EAAAnpE,WACAmpE,EAAAf,iBACAe,EAAAyN,eACAzN,EAAAqO,qBACArO,EAAAmjB,aACAnjB,EAAA0E,YACA1E,EAAAb,UACAa,EAAAojB,aACApjB,EAAAt/D,WACAs/D,EAAAqjB,WACArjB,EAAAsjB,eACAtjB,EAAAujB,WACAvjB,EAAAwjB,YACAxjB,EAAAqJ,cACArJ,EAAA0jB,aACA1jB,EAAA6M,YACA7M,EAAAX,SACAW,EAAA2jB,WACA3jB,EAAA4jB,eACA5jB,EAAAze,SACAye,EAAA8jB,YACA9jB,EAAAikB,SACAjkB,EAAAgkB,UACAhkB,EAAA6jB,YACA7jB,EAAA6G,YACA7G,EAAAC,gBACAD,EAAAuO,iBACAvO,EAAAT,YACAS,EAAAmkB,iBACAnkB,EAAAP,SACAO,EAAAogB,YACApgB,EAAAuI,YACAvI,EAAAL,gBACAK,EAAAokB,eACApkB,EAAAqkB,aACArkB,EAAAskB,aACAtkB,EAAA99F,QACA89F,EAAAivB,aACAjvB,EAAAl/F,QACAk/F,EAAAxoE,eACAwoE,EAAAkvB,aACAlvB,EAAAmvB,cACAnvB,EAAAt9E,MACAs9E,EAAAmuB,OACAnuB,EAAA9+E,OACA8+E,EAAA6pB,SACA7pB,EAAA8pB,QACA9pB,EAAA+pB,UACA/pB,EAAA/8F,OACA+8F,EAAAgqB,SACAhqB,EAAAopB,aACAppB,EAAAqpB,aACArpB,EAAAspB,cACAtpB,EAAAupB,cACAvpB,EAAAwpB,YACAxpB,EAAApxB,YACAoxB,EAAA2d,OACA3d,EAAA8oB,cACA9oB,EAAAipB,QACAjpB,EAAAr7B,OACAq7B,EAAA/6E,OACA+6E,EAAAsmB,UACAtmB,EAAAumB,YACAvmB,EAAA1rD,YACA0rD,EAAA/8C,UACA+8C,EAAAsgB,UACAtgB,EAAAugB,eACAvgB,EAAA0mB,UACA1mB,EAAAprE,WACAorE,EAAAx8F,UACAw8F,EAAA9kG,SACA8kG,EAAAD,eACAC,EAAA0gB,UACA1gB,EAAA/kG,QACA+kG,EAAAovB,aACApvB,EAAA6gB,QACA7gB,EAAAge,eACAhe,EAAAie,iBACAje,EAAAke,iBACAle,EAAAme,mBACAne,EAAAoe,qBACApe,EAAAqe,qBACAre,EAAAqvB,aACArvB,EAAA4mB,cACA5mB,EAAAuwB,YACAvwB,EAAArgE,OACAqgE,EAAAiqB,SACAjqB,EAAAnuD,YACAmuD,EAAAypB,SACAzpB,EAAA8Y,YACA9Y,EAAAyI,aACAzI,EAAA0I,YACA1I,EAAA8nB,WACA9nB,EAAAgZ,YACAhZ,EAAA0kB,iBACA1kB,EAAAtmG,YACAsmG,EAAA+nB,WACA/nB,EAAAp9F,QACAo9F,EAAAgoB,WACAhoB,EAAAioB,aACAjoB,EAAAkoB,YACAloB,EAAAsoB,YACAtoB,EAAA2pB,YACA3pB,EAAAsvB,aACAtvB,EAAAimB,cAGAjmB,EAAA6wB,KAAAh+H,GACAmtG,EAAA8wB,UAAA5Q,GACAlgB,EAAAhrD,MAAAuoE,GAEA/hG,GAAAwkF,EAAA,WACA,GAAA93F,KAMA,OALA8gG,IAAAhJ,EAAA,SAAArpB,EAAAw/B,GACA/mH,GAAAlB,KAAA8xG,EAAA7wG,UAAAgnH,KACAjuG,EAAAiuG,GAAAx/B,KAGAzuE,MACWi3G,OAAA,IAWXnf,EAAA7qG,WAGAquF,GAAA,yEAAA2yB,GACAnW,EAAAmW,GAAA3vB,YAAAwZ,IAIAxc,GAAA,wBAAA2yB,EAAA3zG,GACA09F,EAAA/wG,UAAAgnH,GAAA,SAAArnH,GACA,GAAAiiI,GAAA3sH,KAAAy8F,YACA,IAAAkwB,IAAAvuH,EACA,UAAA09F,GAAA97F,KAEAtV,OAAAmB,GAAA,EAAAk6G,GAAA1B,GAAA35G,GAAA,EAEA,IAAA0U,GAAAY,KAAA6J,OASA,OARA8iH,GACAvtH,EAAAu9F,cAAAa,GAAA9yG,EAAA0U,EAAAu9F,eAEAv9F,EAAAw9F,UAAA3/F,MACApG,KAAA2mG,GAAA9yG,EAAAk7F,IACA1uF,KAAA66G,GAAA3yG,EAAAo9F,QAAA,gBAGAp9F,GAGA08F,EAAA/wG,UAAAgnH,EAAA,kBAAArnH,GACA,MAAAsV,MAAAwd,UAAAu0F,GAAArnH,GAAA8yB,aAKA4hE,GAAA,qCAAA2yB,EAAA3zG,GACA,GAAAlH,GAAAkH,EAAA,EACAwuH,EAAA11H,GAAAouF,IAAApuF,GAAAsuF,EAEAsW,GAAA/wG,UAAAgnH,GAAA,SAAA7yB,GACA,GAAA9/E,GAAAY,KAAA6J,OAMA,OALAzK,GAAAs9F,cAAAz/F,MACAiiF,SAAAsrB,GAAAtrB,EAAA,GACAhoF,SAEAkI,EAAAq9F,aAAAr9F,EAAAq9F,cAAAmwB,EACAxtH,KAKAggF,GAAA,wBAAA2yB,EAAA3zG,GACA,GAAAyuH,GAAA,QAAAzuH,EAAA,WAEA09F,GAAA/wG,UAAAgnH,GAAA,WACA,MAAA/xG,MAAA6sH,GAAA,GAAA5iI,QAAA,MAKAm1F,GAAA,2BAAA2yB,EAAA3zG,GACA,GAAA0uH,GAAA,QAAA1uH,EAAA,WAEA09F,GAAA/wG,UAAAgnH,GAAA,WACA,MAAA/xG,MAAAy8F,aAAA,GAAAX,GAAA97F,WAAA8sH,GAAA,MAIAhxB,EAAA/wG,UAAA0tH,QAAA,WACA,MAAAz4G,MAAAnD,OAAA0Z,KAGAulF,EAAA/wG,UAAAi+H,KAAA,SAAAzpC,GACA,MAAAv/E,MAAAnD,OAAA0iF,GAAA45B,QAGArd,EAAA/wG,UAAAk+H,SAAA,SAAA1pC,GACA,MAAAv/E,MAAAwd,UAAAwrG,KAAAzpC,IAGAuc,EAAA/wG,UAAAo+H,UAAA1d,GAAA,SAAAhuG,EAAAnG,GACA,wBAAAmG,GACA,GAAAq+F,GAAA97F,MAEAA,KAAA0wB,IAAA,SAAAzmC,GACA,MAAAu8G,IAAAv8G,EAAAwT,EAAAnG,OAIAwkG,EAAA/wG,UAAAqxH,OAAA,SAAA78B,GACA,MAAAv/E,MAAAnD,OAAAw/G,GAAA7R,GAAAjrB,MAGAuc,EAAA/wG,UAAAsS,MAAA,SAAAoB,EAAAC,GACAD,EAAA4lG,GAAA5lG,EAEA,IAAAW,GAAAY,IACA,OAAAZ,GAAAq9F,eAAAh+F,EAAA,GAAAC,EAAA,GACA,GAAAo9F,GAAA18F,IAEAX,EAAA,EACAW,IAAAi7G,WAAA57G,GACOA,IACPW,IAAAs5G,KAAAj6G,IAEAC,IAAA7S,KACA6S,EAAA2lG,GAAA3lG,GACAU,EAAAV,EAAA,EAAAU,EAAAu5G,WAAAj6G,GAAAU,EAAAg7G,KAAA17G,EAAAD,IAEAW,IAGA08F,EAAA/wG,UAAAuvH,eAAA,SAAA/6B,GACA,MAAAv/E,MAAAwd,UAAA+8F,UAAAh7B,GAAA/hE,WAGAs+E,EAAA/wG,UAAA6zB,QAAA,WACA,MAAA5e,MAAAo6G,KAAAx0B,KAIAgf,GAAA9I,EAAA/wG,UAAA,SAAAwnF,EAAAw/B,GACA,GAAAgb,GAAA,qCAAAlyG,KAAAk3F,GACAib,EAAA,kBAAAnyG,KAAAk3F,GACAkb,EAAArxB,EAAAoxB,EAAA,gBAAAjb,EAAA,YAAAA,GACAmb,EAAAF,GAAA,QAAAnyG,KAAAk3F,EAEAkb,KAGArxB,EAAA7wG,UAAAgnH,GAAA,WACA,GAAA9nH,GAAA+V,KAAAm8F,YACA7kG,EAAA01H,GAAA,GAAArhI,UACAwhI,EAAAljI,YAAA6xG,GACA5c,EAAA5nF,EAAA,GACA81H,EAAAD,GAAA16F,GAAAxoC,GAEAgxH,EAAA,SAAAhxH,GACA,GAAAmV,GAAA6tH,EAAAv1H,MAAAkkG,EAAA7b,GAAA91F,GAAAqN,GACA,OAAA01H,IAAA9wB,EAAA98F,EAAA,GAAAA,EAGAguH,IAAAL,GAAA,kBAAA7tC,IAAA,GAAAA,EAAAtzF,SAEAuhI,EAAAC,GAAA,EAEA,IAAAlxB,GAAAl8F,KAAAq8F,UACAgxB,IAAArtH,KAAAo8F,YAAAxwG,OACA0hI,EAAAJ,IAAAhxB,EACAqxB,EAAAJ,IAAAE,CAEA,KAAAH,GAAAE,EAAA,CACAnjI,EAAAsjI,EAAAtjI,EAAA,GAAA6xG,GAAA97F,KACA,IAAAZ,GAAAmzE,EAAA76E,MAAAzN,EAAAqN,EAEA,OADA8H,GAAAg9F,YAAAn/F,MAAmCs1E,KAAAygC,GAAA17G,MAAA2jH,GAAAl8B,QAAAlzF,KACnC,GAAAkwG,GAAA38F,EAAA88F,GAEA,MAAAoxB,IAAAC,EACAh7C,EAAA76E,MAAAsI,KAAA1I,IAEA8H,EAAAY,KAAAgzG,KAAAiI,GACAqS,EAAAN,EAAA5tH,EAAAnV,QAAA,GAAAmV,EAAAnV,QAAAmV,OAKAggF,GAAA,yDAAA2yB,GACA,GAAAx/B,GAAAwzC,GAAAhU,GACAyb,EAAA,0BAAA3yG,KAAAk3F,GAAA,aACAmb,EAAA,kBAAAryG,KAAAk3F,EAEAnW,GAAA7wG,UAAAgnH,GAAA,WACA,GAAAz6G,GAAA3L,SACA,IAAAuhI,IAAAltH,KAAAq8F,UAAA,CACA,GAAApyG,GAAA+V,KAAA/V,OACA,OAAAsoF,GAAA76E,MAAA+6B,GAAAxoC,QAAAqN,GAEA,MAAA0I,MAAAwtH,GAAA,SAAAvjI,GACA,MAAAsoF,GAAA76E,MAAA+6B,GAAAxoC,QAAAqN,QAMAstG,GAAA9I,EAAA/wG,UAAA,SAAAwnF,EAAAw/B,GACA,GAAAkb,GAAArxB,EAAAmW,EACA,IAAAkb,EAAA,CACA,GAAA3hI,GAAA2hI,EAAA9iI,KAAA,GACAsW,EAAA61G,GAAAhrH,KAAAgrH,GAAAhrH,MAEAmV,GAAAxD,MAAoB9S,KAAA4nH,EAAAx/B,KAAA06C,OAIpB3W,GAAA7D,GAAA5mH,GAAA44F,IAAAt6F,QACAA,KAAA,UACAooF,KAAA1mF,KAIAiwG,EAAA/wG,UAAA8e,MAAAgzF,EACAf,EAAA/wG,UAAAyyB,QAAAu/E,EACAjB,EAAA/wG,UAAAd,MAAA+yG,GAGApB,EAAA7wG,UAAAm/H,GAAApB,GACAltB,EAAA7wG,UAAAgwH,MAAAG,GACAtf,EAAA7wG,UAAA0iI,OAAAtS,GACAvf,EAAA7wG,UAAAusC,KAAA8jF,GACAxf,EAAA7wG,UAAAsoH,MAAAiI,GACA1f,EAAA7wG,UAAAyyB,QAAA+9F,GACA3f,EAAA7wG,UAAA2iI,OAAA9xB,EAAA7wG,UAAAq1H,QAAAxkB,EAAA7wG,UAAAd,MAAAwxH,GAGA7f,EAAA7wG,UAAA6lD,MAAAgrD,EAAA7wG,UAAAouH,KAEAgH,KACAvkB,EAAA7wG,UAAAo1H,IAAA9E,IAEAzf,GAMA+oB,GAAAhpB,IAQAt8F,IAAAslH,KAIAjrG,EAAA,WACA,MAAAirG,KACK76H,KAAAJ,EAAAH,EAAAG,EAAAC,KAAA+vB,IAAA7tB,KAAAlC,EAAAD,QAAAgwB,MAaJ5vB,KAAAkW,QtKo6iC4BlW,KAAKJ,EAASH,EAAoB,IAAKA,EAAoB,IAAII,KAItF,SAASA,EAAQD,GAEvB,YuK7kkDA,SAAAikI,GAAAh9F,GACA,UAAAA,GAAA9kC,SAAA8kC,EACA,SAAAhzB,WAAA,wDAGA,OAAAtT,QAAAsmC,GAGA,QAAAi9F,KACA,IACA,IAAAvjI,OAAA08C,OACA,QAMA,IAAA8mF,GAAA,GAAAzvD,QAAA,MAEA,IADAyvD,EAAA,QACA,MAAAxjI,OAAAyjI,oBAAAD,GAAA,GACA,QAKA,QADAE,MACAnkI,EAAA,EAAiBA,EAAA,GAAQA,IACzBmkI,EAAA,IAAA3vD,OAAA4vD,aAAApkI,KAEA,IAAAqkI,GAAA5jI,OAAAyjI,oBAAAC,GAAAr9F,IAAA,SAAAhmC,GACA,MAAAqjI,GAAArjI,IAEA,mBAAAujI,EAAAnwH,KAAA,IACA,QAIA,IAAAowH,KAIA,OAHA,uBAAArwH,MAAA,IAAApP,QAAA,SAAA0/H,GACAD,EAAAC,OAGA,yBADA9jI,OAAAmE,KAAAnE,OAAA08C,UAAkCmnF,IAAApwH,KAAA,IAMhC,MAAAtF,GAEF,UAnDA,GAAAxN,GAAAX,OAAAU,UAAAC,eACAojI,EAAA/jI,OAAAU,UAAAs7H,oBAsDA18H,GAAAD,QAAAkkI,IAAAvjI,OAAA08C,OAAA,SAAA1+B,EAAAvE,GAKA,OAJAxF,GAEA+vH,EADA9vH,EAAAovH,EAAAtlH,GAGAnd,EAAA,EAAgBA,EAAAS,UAAAC,OAAsBV,IAAA,CACtCoT,EAAAjU,OAAAsB,UAAAT,GAEA,QAAAI,KAAAgT,GACAtT,EAAAlB,KAAAwU,EAAAhT,KACAiT,EAAAjT,GAAAgT,EAAAhT,GAIA,IAAAjB,OAAAqW,sBAAA,CACA2tH,EAAAhkI,OAAAqW,sBAAApC,EACA,QAAA1U,GAAA,EAAkBA,EAAAykI,EAAAziI,OAAoBhC,IACtCwkI,EAAAtkI,KAAAwU,EAAA+vH,EAAAzkI,MACA2U,EAAA8vH,EAAAzkI,IAAA0U,EAAA+vH,EAAAzkI,MAMA,MAAA2U,KvKylkDM,SAAS5U,EAAQD,GwK1qkDvB,GAAA4kI,GAAA,GAAAz0D,aAAA,GAYAD,EAAA,SAAA1hE,EAAAhB,EAAAX,EAAAg4H,GAQAvuH,KAAA9H,KAOA8H,KAAAw9C,OAAAtlD,EAAAs2H,eAOAxuH,KAAA9I,QAAAgB,EAAAu2H,aAOAzuH,KAAAuuH,YAAAr2H,EAAAysC,YAOA3kC,KAAAzJ,KAAA+3H,EAEA/3H,GAEAyJ,KAAA2sB,OAAAp2B,GAUAqjE,GAAA7uE,UAAA4hC,OAAA,SAAAp2B,EAAAo1C,EAAA+iF,GAGAA,GAAA1uH,KAAA2Y,MAEA,IAAAzgB,GAAA8H,KAAA9H,EAEA3B,MAAAyJ,KAAAzJ,KACAo1C,KAAA,EAEA3rC,KAAAzJ,KAAAk4G,YAAAl4G,EAAAk4G,WAEAv2G,EAAAy2H,cAAA3uH,KAAA9I,KAAAy0C,EAAAp1C,GAIA2B,EAAA02H,WAAA5uH,KAAA9I,KAAAX,EAAAyJ,KAAAuuH,UAGAvuH,KAAAzJ,QAMAqjE,EAAA7uE,UAAA4tB,KAAA,WAEA,GAAAzgB,GAAA8H,KAAA9H,EACAA,GAAA22H,WAAA7uH,KAAA9I,KAAA8I,KAAAw9C,SAGAoc,EAAAl1B,mBAAA,SAAAxsC,EAAA3B,EAAAg4H,GAEA,UAAA30D,GAAA1hE,IAAAu2H,aAAAl4H,EAAAg4H,IAGA30D,EAAA/0B,kBAAA,SAAA3sC,EAAA3B,EAAAg4H,GAEA,UAAA30D,GAAA1hE,IAAA42H,qBAAAv4H,EAAAg4H,IAGA30D,EAAAv5D,OAAA,SAAAnI,EAAAhB,EAAAX,EAAAg4H,GAEA,UAAA30D,GAAA1hE,EAAAhB,EAAAX,EAAAg4H,IAOA30D,EAAA7uE,UAAAsY,QAAA,WACArD,KAAA9H,GAAAmtC,aAAArlC,KAAAw9C,SAGA7zD,EAAAD,QAAAkwE,GxKirkDM,SAASjwE,EAAQD,EAASH,GyKpykDhC,GAAA2D,GAAA3D,EAAA,IAWAwlI,EAAA,SAAA72H,EAAAxM,EAAAI,GAOAkU,KAAA9H,KAOA8H,KAAAkY,YAAAhgB,EAAA82H,oBAOAhvH,KAAApI,QAAA,KAOAoI,KAAAgK,QAAA,KAOAhK,KAAAtU,SAAA,IAMAsU,KAAAlU,UAAA,IAOAijI,GAAAhkI,UAAAkkI,cAAA,SAAAjlH,GAEA,GAAA9R,GAAA8H,KAAA9H,EAEA8H,MAAAgK,WAAA,GAAA9c,GAAAgL,GAEA8H,KAAAgK,QAAA2O,OAIA3Y,KAAA2Y,OAEAzgB,EAAAg3H,qBAAAh3H,EAAAi3H,YAAAj3H,EAAAk3H,kBAAAl3H,EAAAwtB,WAAA1lB,KAAAgK,gBAAA,IAMA+kH,EAAAhkI,UAAA0tB,cAAA,WAEA,IAAAzY,KAAApI,QAAA,CAEA,GAAAM,GAAA8H,KAAA9H,EAEA8H,MAAApI,QAAAM,EAAAm3H,qBAEAn3H,EAAAo3H,iBAAAp3H,EAAAq3H,aAAAvvH,KAAApI,SAGAM,EAAAs3H,wBAAAt3H,EAAAi3H,YAAAj3H,EAAAu3H,yBAAAv3H,EAAAq3H,aAAAvvH,KAAApI,SACAM,EAAAw3H,oBAAAx3H,EAAAq3H,aAAAr3H,EAAAy3H,cAAA3vH,KAAAtU,MAAAsU,KAAAlU,UAUAijI,EAAAhkI,UAAAolB,MAAA,SAAA8C,EAAAnF,EAAAoF,EAAAkG,GAEApZ,KAAA2Y,MAEA,IAAAzgB,GAAA8H,KAAA9H,EAEAA,GAAAuf,WAAAxE,EAAAnF,EAAAoF,EAAAkG,GACAlhB,EAAAiY,MAAAjY,EAAA03H,mBAMAb,EAAAhkI,UAAA4tB,KAAA,WAEA,GAAAzgB,GAAA8H,KAAA9H,EACAA,GAAA23H,gBAAA33H,EAAAi3H,YAAAnvH,KAAAkY,cAMA62G,EAAAhkI,UAAAg7B,OAAA,WAEA,GAAA7tB,GAAA8H,KAAA9H,EACAA,GAAA23H,gBAAA33H,EAAAi3H,YAAA,OAOAJ,EAAAhkI,UAAA+qB,OAAA,SAAApqB,EAAAI,GAEA,GAAAoM,GAAA8H,KAAA9H,EAEA8H,MAAAtU,QACAsU,KAAAlU,SAEAkU,KAAAgK,SAEAhK,KAAAgK,QAAAosC,WAAA,KAAA1qD,EAAAI,GAGAkU,KAAApI,UAGAM,EAAAo3H,iBAAAp3H,EAAAq3H,aAAAvvH,KAAApI,SACAM,EAAAw3H,oBAAAx3H,EAAAq3H,aAAAr3H,EAAAy3H,cAAAjkI,EAAAI,KAOAijI,EAAAhkI,UAAAsY,QAAA,WAEA,GAAAnL,GAAA8H,KAAA9H,EAGA8H,MAAAgK,SAEAhK,KAAAgK,QAAA3G,UAGAnL,EAAA43H,kBAAA9vH,KAAAkY,aAEAlY,KAAA9H,GAAA,KAEA8H,KAAApI,QAAA,KACAoI,KAAAgK,QAAA,MAWA+kH,EAAA52G,WAAA,SAAAjgB,EAAAxM,EAAAI,EAAAyK,GAEA,GAAAyT,GAAA9c,EAAAq3B,SAAArsB,EAAA,KAAAxM,EAAAI,EACAke,GAAAoO,uBACApO,EAAA+sC,iBAGA,IAAAg5E,GAAA,GAAAhB,GAAA72H,EAAAxM,EAAAI,EAKA,OAJAikI,GAAAd,cAAAjlH,GAEA+lH,EAAAhqG,SAEAgqG,GAWAhB,EAAAiB,cAAA,SAAA93H,EAAAxM,EAAAI,EAAAyK,GAGA,GAAAyT,GAAA,GAAA9c,GAAAq3B,SAAArsB,EAAA3B,EAAA7K,EAAAI,EACAke,GAAAoO,uBACApO,EAAA+sC,iBAGA,IAAAg5E,GAAA,GAAAhB,GAAA72H,EAAAxM,EAAAI,EAKA,OAJAikI,GAAAd,cAAAjlH,GAEA+lH,EAAAhqG,SAEAgqG,GAGApmI,EAAAD,QAAAqlI,GzK4ykDM,SAASplI,EAAQD,EAASH,G0KvglDhC,GAAAsuD,GAAAtuD,EAAA,IACAgwD,EAAAhwD,EAAA,IACA0wD,EAAA1wD,EAAA,IACA+wD,EAAA/wD,EAAA,IAWAoD,EAAA,SAAAuL,EAAA+K,EAAAC,GAOAlD,KAAA9H,KAQA8H,KAAAm4C,QAAAN,EAAA3/C,EAAA+K,EAAAC,GAcAlD,KAAAilC,WAAAsU,EAAArhD,EAAA8H,KAAAm4C,QAEA,IAAA1U,GAAAwW,EAAA/hD,EAAA8H,KAAAm4C,QAUAn4C,MAAA6kB,SAAAy1B,EAAApiD,EAAAurC,GAKA92C,GAAA5B,UAAA4tB,KAAA,WAEA3Y,KAAA9H,GAAAkuB,WAAApmB,KAAAm4C,UAOAxrD,EAAA5B,UAAAsY,QAAA,aAKA1Z,EAAAD,QAAAiD,G1K+glDM,SAAShD,EAAQD,EAASH,G2K9klDhC,QAAA2S,GAAAhE,EAAAirB,GAaA,GAXAnjB,KAAA2zD,mBAAA,KAEAz3D,EAAA+zH,eAEAjwH,KAAA2zD,mBAAAz7D,EAAAK,aAAA,4BACAL,EAAAK,aAAA,gCACAL,EAAAK,aAAA,mCAGAyH,KAAAkwH,YAAA/sG,EAEAnjB,KAAA2zD,mBACA,CACA3zD,KAAAmwH,UAAAnwH,KAAA2zD,mBAAAy8D,sBAEA,IAAA38D,GAAAv7D,EAAA4rB,aAAA5rB,EAAAw7D,mBAGA1zD,MAAAkwH,aACA14E,gBAAA,GAAAr5C,OAAAs1D,GACA7tC,YAAA,GAAAznB,OAAAs1D,IASAzzD,KAAA9H,KAOA8H,KAAAilC,cAKAjlC,KAAA4kC,YAAA,KAOA5kC,KAAAkM,OAAA,EA5DA,GAAArQ,GAAAtS,EAAA,GA+DA2S,GAAAnR,UAAA0X,YAAAvG,EACAvS,EAAAD,QAAAwS,EAaAA,EAAA+zH,cAAA,EAKA/zH,EAAAnR,UAAA4tB,KAAA,WAkBA,MAhBA3Y,MAAAmwH,WAEAnwH,KAAA2zD,mBAAAS,mBAAAp0D,KAAAmwH,WAEAnwH,KAAAkM,QAEAlM,KAAAkM,OAAA,EACAlM,KAAA0Y,aAMA1Y,KAAA0Y,WAGA1Y,MAMA9D,EAAAnR,UAAAg7B,OAAA,WAOA,MALA/lB,MAAAmwH,WAEAnwH,KAAA2zD,mBAAAS,mBAAA,MAGAp0D,MAMA9D,EAAAnR,UAAA2tB,SAAA,WAMA,OAHAxgB,GAAA8H,KAAA9H,GACAm4H,EAAA,KAEAzmI,EAAA,EAAmBA,EAAAoW,KAAAilC,WAAAr5C,OAA4BhC,IAC/C,CACA,GAAAguD,GAAA53C,KAAAilC,WAAAr7C,EAEAymI,KAAAz4E,EAAA4F,SAEA5F,EAAA4F,OAAA7kC,OACA03G,EAAAz4E,EAAA4F,QAIAtlD,EAAA8hD,oBAAApC,EAAAH,UAAAryB,SACAwyB,EAAAH,UAAA5gD,KAAA+gD,EAAA1gD,MAAAgB,EAAA21B,MACA+pB,EAAAkC,aAAA,EACAlC,EAAAmC,QAAA,EACAnC,EAAAn5C,OAAA,GASA,MAJA5C,GAAA3D,EAAA8H,KAAAilC,WAAAjlC,KAAAkwH,aAEAlwH,KAAA4kC,YAAAjsB,OAEA3Y,MAYA9D,EAAAnR,UAAAi6C,aAAA,SAAAwY,EAAA/F,EAAAvgD,EAAA4iD,EAAAC,EAAAt7C,GAeA,MAbAuB,MAAAilC,WAAAhoC,MACAugD,SACA/F,YAEAryB,SAAAqyB,EAAAryB,SACAluB,QAAA8I,KAAA9H,GAAA21B,MACAisB,eAAA,EACAC,UAAA,EACAt7C,SAAA,IAGAuB,KAAAkM,OAAA,EAEAlM,MAOA9D,EAAAnR,UAAAg6C,SAAA,SAAAyY,GAMA,MAJAx9C,MAAA4kC,YAAA4Y,EAEAx9C,KAAAkM,OAAA,EAEAlM,MAMA9D,EAAAnR,UAAAolB,MAAA,WAcA,MARAnQ,MAAAmwH,WAEAnwH,KAAA2zD,mBAAAS,mBAAAp0D,KAAAmwH,WAGAnwH,KAAAilC,WAAAr5C,OAAA,EACAoU,KAAA4kC,YAAA,KAEA5kC,MAQA9D,EAAAnR,UAAAojE,KAAA,SAAAj3D,EAAAL,EAAA4H,GAEA,GAAAvG,GAAA8H,KAAA9H,EAGA,OAFAA,GAAAkkE,aAAAllE,EAAAL,EAAAqB,EAAAqjE,eAAA98D,GAAA,GAEAuB,MAMA9D,EAAAnR,UAAAsY,QAAA,WAGArD,KAAA9H,GAAA,KACA8H,KAAA4kC,YAAA,KACA5kC,KAAAilC,WAAA,KACAjlC,KAAAkwH,YAAA,KAEAlwH,KAAAmwH,WAEAnwH,KAAA2zD,mBAAA28D,qBAAAtwH,KAAAmwH,WAGAnwH,KAAA2zD,mBAAA,KACA3zD,KAAAmwH,UAAA,O3KkmlDM,SAASxmI,EAAQD,G4K30lDvB,GAAAkS,GAAA,SAAA7D,EAAAhM,GAEA,GAAAmM,GAAAH,EAAAI,WAAA,QAAApM,IACAgM,EAAAI,WAAA,qBAAApM,EAEA,KAAAmM,EAGA,SAAAmO,OAAA,qEAGA,OAAAnO,GAGAvO,GAAAD,QAAAkS,G5K61lDM,SAASjS,EAAQD,EAASH,G6Kt3lDhCI,EAAAD,SACAmuD,eAAAtuD,EAAA,IACA4vD,aAAA5vD,EAAA,IACAgwD,kBAAAhwD,EAAA,IACA0wD,gBAAA1wD,EAAA,IACA+wD,4BAAA/wD,EAAA,IACAikC,QAAAjkC,EAAA,IACA+vD,QAAA/vD,EAAA,M7K63lDM,SAASI,EAAQD,I8Kp4lDvB,WAEA,mBAAA0Y,YAAAmuH,OAAAnuH,KAAApK,UAIAu4H,MAAAC,MAAA3jG,IAAA,oBAAA4jG;AACA,GAAAA,EAAAC,KAAA,CAKA,GAAAC,GAAAF,EAAA7+C,QAAA9uC,WACA8tF,EAAA,wBACA,IACAD,GAAA,OAAA91G,KAAA81G,EAAAt9F,YAEAu9F,EAAA/1G,KAAA81G,EAAAE,YAAAD,EAAA/1G,KAAA41G,EAAA7+C,QAAAi/C,cAKAJ,EAAA7+C,QAAAk/C,cAAA,uBAKAF,EAAA/1G,KAAA41G,EAAA7+C,QAAAi/C,aAEAJ,EAAA7+C,QAAAi/C,UAAAJ,EAAA7+C,QAAAi/C,UAAArgG,QAAAogG,EAAA,KAEAA,EAAA/1G,KAAA81G,EAAAE,aAEAF,EAAAE,WAAA,gBAGA,IAEAE,GAFAtmH,EAAAgmH,EAAAC,KAAAjmH,MAAA,YACAumH,EAAAvmH,IAAA7e,OAAA,IAGAipE,EAAA,GAAA12D,OAAA6yH,EAAA,EACAn8D,KAAA/2D,KAAA,iBAEAizH,EAAA/4H,SAAAC,cAAA,QACA84H,EAAAF,UAAA,oBACAE,EAAA98F,UAAA4gC,EAEA87D,EAAAM,aAAA,gBACAN,EAAAjlG,MAAAwlG,aAAA,eAAAhhF,SAAAygF,EAAA1gF,aAAA,sBAGAwgF,EAAA7+C,QAAAl/C,YAAAq+F,W9K84lDM,SAASpnI,EAAQD,EAASH,IAEJ,SAASowB,G+K97lDrC,GAAAw3G,GAAA,mBAAA55H,QACAA,OAEA,mBAAA65H,oBAAAhvH,eAAAgvH,mBACAhvH,QAUAmuH,EAAA,WAGA,GAAAc,GAAA,2BACA9L,EAAA,EAEAZ,EAAAwM,EAAAZ,OACAe,MACAC,OAAA,SAAAC,GACA,MAAAA,aAAAC,GACA,GAAAA,GAAAD,EAAAt6H,KAAAytH,EAAA2M,KAAAC,OAAAC,EAAAtwE,SAAAswE,EAAAE,OACI,UAAA/M,EAAA2M,KAAAp6H,KAAAs6H,GACJA,EAAA9gG,IAAAi0F,EAAA2M,KAAAC,QAEAC,EAAAhhG,QAAA,cAAsCA,QAAA,aAAsBA,QAAA,gBAI5Dt5B,KAAA,SAAAtM,GACA,MAAAP,QAAAU,UAAAuK,SAAAxL,KAAAc,GAAA6f,MAAA,wBAGAknH,MAAA,SAAAvmI,GAIA,MAHAA,GAAA,MACAf,OAAAC,eAAAc,EAAA,QAAwCnB,QAAAs7H,IAExCn6H,EAAA,MAIAye,MAAA,SAAAjf,GACA,GAAAsM,GAAAytH,EAAA2M,KAAAp6H,KAAAtM,EAEA,QAAAsM,GACA,aACA,GAAA2S,KAEA,QAAAve,KAAAV,GACAA,EAAAI,eAAAM,KACAue,EAAAve,GAAAq5H,EAAA2M,KAAAznH,MAAAjf,EAAAU,IAIA,OAAAue,EAEA,aAEA,MAAAjf,GAAA8lC,KAAA9lC,EAAA8lC,IAAA,SAAAvqB,GAAwC,MAAAw+G,GAAA2M,KAAAznH,MAAA1D,KAGxC,MAAAvb,KAIAgnI,WACArF,OAAA,SAAAzhH,EAAA+mH,GACA,GAAAR,GAAA1M,EAAA2M,KAAAznH,MAAA86G,EAAAiN,UAAA9mH,GAEA,QAAAxf,KAAAumI,GACAR,EAAA/lI,GAAAumI,EAAAvmI,EAGA,OAAA+lI,IAYAS,aAAA,SAAA32F,EAAAwhF,EAAAoV,EAAA1yH,GACAA,KAAAslH,EAAAiN,SACA,IAAAI,GAAA3yH,EAAA87B,EAEA,OAAAxvC,UAAAC,OAAA,CACAmmI,EAAApmI,UAAA,EAEA,QAAAsmI,KAAAF,GACAA,EAAA/mI,eAAAinI,KACAD,EAAAC,GAAAF,EAAAE,GAIA,OAAAD,GAGA,GAAAE,KAEA,QAAAC,KAAAH,GAEA,GAAAA,EAAAhnI,eAAAmnI,GAAA,CAEA,GAAAA,GAAAxV,EAEA,OAAAsV,KAAAF,GAEAA,EAAA/mI,eAAAinI,KACAC,EAAAD,GAAAF,EAAAE,GAKAC,GAAAC,GAAAH,EAAAG,GAWA,MANAxN,GAAAiN,UAAAQ,IAAAzN,EAAAiN,UAAA,SAAAtmI,EAAArB,GACAA,IAAAoV,EAAA87B,IAAA7vC,GAAA6vC,IACAn7B,KAAA1U,GAAA4mI,KAIA7yH,EAAA87B,GAAA+2F,GAIAE,IAAA,SAAAxnI,EAAA4xD,EAAAtlD,EAAAm7H,GACAA,OACA,QAAAzoI,KAAAgB,GACAA,EAAAI,eAAApB,KACA4yD,EAAA1yD,KAAAc,EAAAhB,EAAAgB,EAAAhB,GAAAsN,GAAAtN,GAEA,WAAA+6H,EAAA2M,KAAAp6H,KAAAtM,EAAAhB,KAAAyoI,EAAA1N,EAAA2M,KAAAK,MAAA/mI,EAAAhB,KAIA,UAAA+6H,EAAA2M,KAAAp6H,KAAAtM,EAAAhB,KAAAyoI,EAAA1N,EAAA2M,KAAAK,MAAA/mI,EAAAhB,OACAyoI,EAAA1N,EAAA2M,KAAAK,MAAA/mI,EAAAhB,MAAA,EACA+6H,EAAAiN,UAAAQ,IAAAxnI,EAAAhB,GAAA4yD,EAAA5yD,EAAAyoI,KALAA,EAAA1N,EAAA2M,KAAAK,MAAA/mI,EAAAhB,MAAA,EACA+6H,EAAAiN,UAAAQ,IAAAxnI,EAAAhB,GAAA4yD,EAAA,KAAA61E,OAUA1lH,WAEA2lH,aAAA,SAAA71G,EAAA+/B,GACA,GAAAi0E,IACAj0E,WACA+1E,SAAA,mGAGA5N,GAAA6L,MAAAt+D,IAAA,sBAAAu+D,EAIA,QAAA7+C,GAFA4gD,EAAA/B,EAAA+B,UAAAx6H,SAAAy6H,iBAAAhC,EAAA8B,UAEA3oI,EAAA,EAAwBgoF,EAAA4gD,EAAA5oI,MACxB+6H,EAAA+N,iBAAA9gD,EAAAn1D,KAAA,EAAAg0G,EAAAj0E,WAIAk2E,iBAAA,SAAA9gD,EAAAn1D,EAAA+/B,GAIA,IAFA,GAAAm2E,GAAAX,EAAAxjH,EAAAojE,EAEApjE,IAAA6iH,EAAAx2G,KAAArM,EAAAqiH,YACAriH,IAAAs0B,UAGAt0B,KACAmkH,GAAAnkH,EAAAqiH,UAAApmH,MAAA4mH,KAAA,SAAAj7H,cACA47H,EAAArN,EAAAiN,UAAAe,IAIA/gD,EAAAi/C,UAAAj/C,EAAAi/C,UAAArgG,QAAA6gG,EAAA,IAAA7gG,QAAA,yBAAAmiG,EAGAnkH,EAAAojE,EAAA9uC,WAEA,OAAAjoB,KAAArM,EAAA6kB,YACA7kB,EAAAqiH,UAAAriH,EAAAqiH,UAAArgG,QAAA6gG,EAAA,IAAA7gG,QAAA,yBAAAmiG,EAGA,IAAAjC,GAAA9+C,EAAAghD,YAEAnC,GACA7+C,UACA+gD,WACAX,UACAtB,OAKA,IAFA/L,EAAA6L,MAAAt+D,IAAA,sBAAAu+D,IAEAA,EAAAC,OAAAD,EAAAuB,QAEA,WADArN,GAAA6L,MAAAt+D,IAAA,WAAAu+D,EAMA,IAFA9L,EAAA6L,MAAAt+D,IAAA,mBAAAu+D,GAEAh0G,GAAA00G,EAAA0B,OAAA,CACA,GAAAh2E,GAAA,GAAAg2E,QAAAlO,EAAAvnH,SAEAy/C,GAAAi2E,UAAA,SAAAhyH,GACA2vH,EAAAsC,gBAAAjyH,EAAAvK,KAEAouH,EAAA6L,MAAAt+D,IAAA,gBAAAu+D,GAEAA,EAAA7+C,QAAA39C,UAAAw8F,EAAAsC,gBAEAv2E,KAAA1yD,KAAA2mI,EAAA7+C,SACA+yC,EAAA6L,MAAAt+D,IAAA,kBAAAu+D,GACA9L,EAAA6L,MAAAt+D,IAAA,WAAAu+D,IAGA5zE,EAAAm2E,YAAAlgG,KAAAmgG,WACAN,SAAAlC,EAAAkC,SACAjC,KAAAD,EAAAC,KACAwC,gBAAA,SAIAzC,GAAAsC,gBAAApO,EAAAwO,UAAA1C,EAAAC,KAAAD,EAAAuB,QAAAvB,EAAAkC,UAEAhO,EAAA6L,MAAAt+D,IAAA,gBAAAu+D,GAEAA,EAAA7+C,QAAA39C,UAAAw8F,EAAAsC,gBAEAv2E,KAAA1yD,KAAA8nF,GAEA+yC,EAAA6L,MAAAt+D,IAAA,kBAAAu+D,GACA9L,EAAA6L,MAAAt+D,IAAA,WAAAu+D,IAIA0C,UAAA,SAAA98F,EAAA27F,EAAAW,GACA,GAAAnB,GAAA7M,EAAAyO,SAAA/8F,EAAA27F,EACA,OAAAP,GAAAwB,UAAAtO,EAAA2M,KAAAC,OAAAC,GAAAmB,IAGAS,SAAA,SAAA/8F,EAAA27F,EAAAW,GACA,GAAAlB,GAAA9M,EAAA8M,MAEA4B,GAAAh9F,GAEA+nF,EAAA4T,EAAA5T,IAEA,IAAAA,EAAA,CACA,OAAA+T,KAAA/T,GACA4T,EAAAG,GAAA/T,EAAA+T,SAGAH,GAAA5T,KAGAkV,EAAA,OAAAnB,KAAAH,GACA,GAAAA,EAAAhnI,eAAAmnI,IAAAH,EAAAG,GAAA,CAIA,GAAAoB,GAAAvB,EAAAG,EACAoB,GAAA,UAAA5O,EAAA2M,KAAAp6H,KAAAq8H,QAEA,QAAA/xH,GAAA,EAAkBA,EAAA+xH,EAAA3nI,SAAqB4V,EAAA,CACvC,GAAA2mG,GAAAorB,EAAA/xH,GACA25B,EAAAgtE,EAAAhtE,OACAq4F,IAAArrB,EAAAqrB,WACAC,IAAAtrB,EAAAsrB,OACAC,EAAA,EACAhC,EAAAvpB,EAAAupB,KAEAvpB,eAEA,QAAAv+G,GAAA,EAAiBA,EAAAypI,EAAAznI,OAAiBhC,IAAA,CAElC,GAAA8V,GAAA2zH,EAAAzpI,EAEA,IAAAypI,EAAAznI,OAAAyqC,EAAAzqC,OAEA,KAAA0nI,EAGA,MAAA5zH,YAAA+xH,IAAA,CAIAtpB,EAAA/5C,UAAA,CAEA,IAAA3jD,GAAA09F,EAAAryG,KAAA4J,GACAi0H,EAAA,CAGA,KAAAlpH,GAAAgpH,GAAA7pI,GAAAypI,EAAAznI,OAAA,GAEA,GAAAgoI,GAAAP,EAAAzpI,EAAA,GAAAiqI,YAAAR,EAAAzpI,EAAA,GACAkqI,EAAAp0H,EAAAk0H,CASA,IAPAhqI,EAAAypI,EAAAznI,OAAA,IACAkoI,GAAAT,EAAAzpI,EAAA,GAAAiqI,YAAAR,EAAAzpI,EAAA,IAIAu+G,EAAA/5C,UAAA,EACA3jD,EAAA09F,EAAAryG,KAAAg+H,IACArpH,EACA,QAGA,IAAAnM,GAAAmM,EAAArM,OAAAo1H,EAAA/oH,EAAA,GAAA7e,OAAA,EAEA,IAAA0S,GAAAoB,EAAA9T,OACA,QAEA,IAAA2S,GAAAkM,EAAArM,MAAAqM,EAAA,GAAA7e,OACAkN,EAAA4G,EAAA9T,OAAAgoI,EAAAhoI,MAKA,IAFA+nI,EAAA,EAEAp1H,GAAAzF,EAAA,CACA,GAAAu6H,EAAAzpI,EAAA,GAAA6pI,OACA,QAEAE,GAAA,EACAG,IAAAz2H,MAAA,EAAAvE,GAEA4G,EAAAo0H,EAGA,GAAArpH,EAAA,CAIA+oH,IACAE,EAAAjpH,EAAA,GAAA7e,OAGA,IAAA0S,GAAAmM,EAAArM,MAAAs1H,EACAjpH,IAAA,GAAApN,MAAAq2H,GACAn1H,EAAAD,EAAAmM,EAAA7e,OACA+wH,EAAAj9G,EAAArC,MAAA,EAAAiB,GACAo+G,EAAAh9G,EAAArC,MAAAkB,GAEAjH,GAAA1N,EAAA+pI,EAEAhX,IACArlH,EAAA2F,KAAA0/G,EAGA,IAAAnB,GAAA,GAAAiW,GAAAU,EAAAh3F,EAAAwpF,EAAAyO,SAAA3oH,EAAA0wB,GAAA1wB,EAAAinH,EAAAjnH,EAAAgpH,EAEAn8H,GAAA2F,KAAAu+G,GAEAkB,GACAplH,EAAA2F,KAAAy/G,GAGAv+G,MAAApT,UAAA4R,OAAAjF,MAAA27H,EAAA/7H,OAKA,MAAA+7H,IAGA7C,OACAuD,OAEAlnG,IAAA,SAAA1iC,EAAAqyD,GACA,GAAAg0E,GAAA7L,EAAA6L,MAAAuD,GAEAvD,GAAArmI,GAAAqmI,EAAArmI,OAEAqmI,EAAArmI,GAAA8S,KAAAu/C,IAGA0V,IAAA,SAAA/nE,EAAAsmI,GACA,GAAAuD,GAAArP,EAAA6L,MAAAuD,IAAA5pI,EAEA,IAAA6pI,KAAApoI,OAIA,OAAA4wD,GAAA5yD,EAAA,EAA0B4yD,EAAAw3E,EAAApqI,MAC1B4yD,EAAAi0E,MAMAgB,EAAA9M,EAAA8M,MAAA,SAAAv6H,EAAAgqD,EAAAwwE,EAAAmC,EAAAJ,GACAzzH,KAAA9I,OACA8I,KAAAkhD,UACAlhD,KAAA0xH,QAEA1xH,KAAA6zH,cAAA,KACA7zH,KAAAyzH,WA6CA,IA1CAhC,EAAAwB,UAAA,SAAAroI,EAAA+nI,EAAAnkH,GACA,mBAAA5jB,GACA,MAAAA,EAGA,cAAA+5H,EAAA2M,KAAAp6H,KAAAtM,GACA,MAAAA,GAAA8lC,IAAA,SAAAkhD,GACA,MAAA6/C,GAAAwB,UAAArhD,EAAA+gD,EAAA/nI,KACGkT,KAAA,GAGH,IAAA2yH,IACAv5H,KAAAtM,EAAAsM,KACAgqD,QAAAuwE,EAAAwB,UAAAroI,EAAAs2D,QAAAyxE,EAAAnkH,GACAm0F,IAAA,OACAsxB,SAAA,QAAArpI,EAAAsM,MACA+tC,cACA0tF,WACAnkH,SAOA,IAJA,WAAAiiH,EAAAv5H,OACAu5H,EAAAxrF,WAAA,mBAGAr6C,EAAA8mI,MAAA,CACA,GAAAwC,GAAA,UAAAvP,EAAA2M,KAAAp6H,KAAAtM,EAAA8mI,OAAA9mI,EAAA8mI,OAAA9mI,EAAA8mI,MACAvzH,OAAApT,UAAAkS,KAAAvF,MAAA+4H,EAAAwD,QAAAC,GAGAvP,EAAA6L,MAAAt+D,IAAA,OAAAu+D,EAEA,IAAAxrF,GAAA,EAEA,QAAA96C,KAAAsmI,GAAAxrF,WACAA,MAAA,QAAA96C,EAAA,MAAAsmI,EAAAxrF,WAAA96C,IAAA,OAGA,WAAAsmI,EAAA9tB,IAAA,WAAA8tB,EAAAwD,QAAAn2H,KAAA,UAAAmnC,EAAA,IAAAwrF,EAAAvvE,QAAA,KAAAuvE,EAAA9tB,IAAA,MAIAwuB,EAAAn5H,SACA,MAAAm5H,GAAAtuG,kBAKAsuG,EAAAtuG,iBAAA,mBAAA/hB,GACA,GAAAwwB,GAAAwB,KAAAc,MAAA9yB,EAAAvK,MACA86H,EAAA//F,EAAAqhG,SACAjC,EAAAp/F,EAAAo/F,KACAwC,EAAA5hG,EAAA4hG,cAEA/B,GAAA6B,YAAArO,EAAAwO,UAAAzC,EAAA/L,EAAAiN,UAAAP,OACA6B,GACA/B,EAAA3lE,UAEE,GAEF2lE,EAAAZ,OAfAY,EAAAZ,KAmBA,IAAA4D,GAAAn8H,SAAAo8H,kBAAA/2H,MAAAvT,KAAAkO,SAAA+3C,qBAAA,WAAAx9B,KAeA,OAbA4hH,KACAxP,EAAAvnH,SAAA+2H,EAAAtxH,IAEA7K,SAAA6qB,mBAAAsxG,EAAAlD,aAAA,iBACA,YAAAj5H,SAAA6O,WACAu5D,sBAAAukD,EAAA2N,aAAA,GAGAt6H,SAAA6qB,iBAAA,mBAAA8hG,EAAA2N,gBAKAnB,EAAAZ,QAIA,oBAAA5mI,MAAAD,UACAC,EAAAD,QAAA6mI,GAIA,mBAAA52G,KACAA,EAAA42G,SAQAA,EAAAqB,UAAAyC,QACAC,QAAA,kBACAC,OAAA,iBACAC,QAAA,qBACAC,MAAA,0BACA9xB,KACAwF,QAAA,yGACAhtE,QACAwnE,KACAwF,QAAA,kBACAhtE,QACAu5F,YAAA,QACAC,UAAA,iBAGAC,cACAzsB,QAAA,kCACAhtE,QACAu5F,YAAA,WAGAA,YAAA,OACAG,aACA1sB,QAAA,YACAhtE,QACAw5F,UAAA,mBAMAG,OAAA,qBAIAvE,EAAAC,MAAA3jG,IAAA,gBAAA4jG,GAEA,WAAAA,EAAAv5H,OACAu5H,EAAAxrF,WAAA,MAAAwrF,EAAAvvE,QAAA1wB,QAAA,QAAsD,QAItD+/F,EAAAqB,UAAA57F,IAAAu6F,EAAAqB,UAAAyC,OACA9D,EAAAqB,UAAA97F,KAAAy6F,EAAAqB,UAAAyC,OACA9D,EAAAqB,UAAAmD,OAAAxE,EAAAqB,UAAAyC,OACA9D,EAAAqB,UAAAz7F,IAAAo6F,EAAAqB,UAAAyC,OAOA9D,EAAAqB,UAAAoD,KACAV,QAAA,mBACAW,QACA9sB,QAAA,4BACAhtE,QACA+5F,KAAA,YAIAv/H,IAAA,+DACA48H,SAAA,+BACA79D,OAAA,8CACA5pE,SAAA,yBACAqqI,UAAA,kBACAC,SAAA,oBACAV,YAAA,YAGAnE,EAAAqB,UAAAoD,IAAA,OAAA75F,OAAAijF,KAAAmS,EAAAe,KAAAznH,MAAA0mH,EAAAqB,UAAAoD,KAEAzE,EAAAqB,UAAAyC,SACA9D,EAAAqB,UAAAE,aAAA,gBACApmG,OACAy8E,QAAA,0CACAqrB,YAAA,EACAr4F,OAAAo1F,EAAAqB,UAAAoD,IACAtD,MAAA,kBAIAnB,EAAAqB,UAAAE,aAAA,uBACAuD,cACAltB,QAAA,uBACAhtE,QACA05F,aACA1sB,QAAA,aACAhtE,OAAAo1F,EAAAqB,UAAAyC,OAAA1xB,IAAAxnE,QAEAu5F,YAAA,wBACAE,cACAzsB,QAAA,MACAhtE,OAAAo1F,EAAAqB,UAAAoD,MAGAtD,MAAA,iBAEEnB,EAAAqB,UAAAyC,OAAA1xB,MAOF4tB,EAAAqB,UAAA0D,OACAhB,UAEAnsB,QAAA,4BACAqrB,YAAA,IAGArrB,QAAA,mBACAqrB,YAAA,IAGA9+D,QACAyzC,QAAA,+CACAsrB,QAAA,GAEA8B,cACAptB,QAAA,uGACAqrB,YAAA,EACAr4F,QACAu5F,YAAA,YAGAc,QAAA,2GACAC,QAAA,mBACAL,SAAA,oBACApzB,OAAA,gDACAmS,SAAA,0DACAugB,YAAA,iBAQAnE,EAAAqB,UAAA8D,WAAAnF,EAAAqB,UAAArF,OAAA,SACAiJ,QAAA,4TACAxzB,OAAA,+EAEAozB,SAAA,0DAGA7E,EAAAqB,UAAAE,aAAA,wBACAl3G,OACAutF,QAAA,iFACAqrB,YAAA,EACAC,QAAA,KAIAlD,EAAAqB,UAAAE,aAAA,uBACA6D,mBACAxtB,QAAA,wBACAsrB,QAAA,EACAt4F,QACAy6F,eACAztB,QAAA,cACAhtE,QACA06F,6BACA1tB,QAAA,YACAupB,MAAA,eAEAtT,KAAAmS,EAAAqB,UAAA8D,aAGAhhE,OAAA,cAKA67D,EAAAqB,UAAAyC,QACA9D,EAAAqB,UAAAE,aAAA,gBACAqC,QACAhsB,QAAA,4CACAqrB,YAAA,EACAr4F,OAAAo1F,EAAAqB,UAAA8D,WACAhE,MAAA,yBAKAnB,EAAAqB,UAAAkE,GAAAvF,EAAAqB,UAAA8D,WAMA,WACA,mBAAAtzH,YAAAmuH,OAAAnuH,KAAApK,mBAAA84H,gBAIA1uH,KAAAmuH,MAAAwF,cAAA,WAEA,GAAAC,IACAF,GAAA,aACAthH,GAAA,SACAyhH,GAAA,OACAC,IAAA,aACAC,KAAA,aACAh/C,GAAA,OACAi/C,IAAA,QACA9jF,EAAA,IACA9G,IAAA,QAGArtC,OAAApT,UAAA0D,SACA0P,MAAApT,UAAAsS,MAAAvT,KAAAkO,SAAAy6H,iBAAA,kBAAAhkI,QAAA,SAAAkiI,GAKA,IAJA,GAEAgC,GAFA9vH,EAAA8tH,EAAA1gF,aAAA,YAEAzhC,EAAAmiH,EACAU,EAAA,iCACA7iH,IAAA6iH,EAAAx2G,KAAArM,EAAAqiH,YACAriH,IAAAs0B,UAOA,IAJAt0B,IACAmkH,GAAAhC,EAAAE,UAAApmH,MAAA4mH,KAAA,WAGAsB,EAAA,CACA,GAAAl8H,IAAAoM,EAAA4H,MAAA,sBACAkoH,GAAAqD,EAAAv/H,MAGA,GAAAi6H,GAAA14H,SAAAC,cAAA,OACAy4H,GAAAG,UAAA,YAAA8B,EAEAhC,EAAAiC,YAAA,GAEAlC,EAAAkC,YAAA,WAEAjC,EAAAj+F,YAAAg+F,EAEA,IAAAvhG,GAAA,GAAAvoB,eAEAuoB,GAAAloB,KAAA,MAAApE,GAAA,GAEAssB,EAAAknG,mBAAA,WACA,GAAAlnG,EAAAtoB,aAEAsoB,EAAApoB,OAAA,KAAAooB,EAAAuE,cACAg9F,EAAAkC,YAAAzjG,EAAAuE,aAEA68F,EAAAmC,iBAAAhC,IAEAvhG,EAAApoB,QAAA,IACA2pH,EAAAkC,YAAA,WAAAzjG,EAAApoB,OAAA,yBAAAooB,EAAAsE,WAGAi9F,EAAAkC,YAAA,6CAKAzjG,EAAAjoB,KAAA,SAMAlP,SAAA6qB,iBAAA,mBAAAzgB,KAAAmuH,MAAAwF,qB/Ku8lD6BjsI,KAAKJ,EAASH,EAAoB,MAIzD,SAASI,EAAQD,GgL1snDvB,QAAA4sI,KACA,SAAAjwH,OAAA,mCAEA,QAAAkwH,KACA,SAAAlwH,OAAA,qCAsBA,QAAAmwH,GAAAC,GACA,GAAAC,IAAA1pG,WAEA,MAAAA,YAAAypG,EAAA,EAGA,KAAAC,IAAAJ,IAAAI,IAAA1pG,WAEA,MADA0pG,GAAA1pG,WACAA,WAAAypG,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAAj+H,GACL,IAEA,MAAAk+H,GAAA5sI,KAAA,KAAA2sI,EAAA,GACS,MAAAj+H,GAET,MAAAk+H,GAAA5sI,KAAAkW,KAAAy2H,EAAA,KAMA,QAAAE,GAAAC,GACA,GAAAC,IAAAj5C,aAEA,MAAAA,cAAAg5C,EAGA,KAAAC,IAAAN,IAAAM,IAAAj5C,aAEA,MADAi5C,GAAAj5C,aACAA,aAAAg5C,EAEA,KAEA,MAAAC,GAAAD,GACK,MAAAp+H,GACL,IAEA,MAAAq+H,GAAA/sI,KAAA,KAAA8sI,GACS,MAAAp+H,GAGT,MAAAq+H,GAAA/sI,KAAAkW,KAAA42H,KAYA,QAAAE,KACAC,GAAAC,IAGAD,GAAA,EACAC,EAAAprI,OACA6/B,EAAAurG,EAAAh4H,OAAAysB,GAEAwrG,GAAA,EAEAxrG,EAAA7/B,QACAsrI,KAIA,QAAAA,KACA,IAAAH,EAAA,CAGA,GAAA7jG,GAAAsjG,EAAAM,EACAC,IAAA,CAGA,KADA,GAAAj+H,GAAA2yB,EAAA7/B,OACAkN,GAAA,CAGA,IAFAk+H,EAAAvrG,EACAA,OACAwrG,EAAAn+H,GACAk+H,GACAA,EAAAC,GAAA/kE,KAGA+kE,IAAA,EACAn+H,EAAA2yB,EAAA7/B,OAEAorI,EAAA,KACAD,GAAA,EACAJ,EAAAzjG,IAiBA,QAAAikG,GAAAV,EAAA/3G,GACA1e,KAAAy2H,MACAz2H,KAAA0e,QAYA,QAAAmmG,MAhKA,GAOA6R,GACAG,EARAx6H,EAAA1S,EAAAD,YAgBA,WACA,IAEAgtI,EADA,kBAAA1pG,YACAA,WAEAspG,EAEK,MAAA99H,GACLk+H,EAAAJ,EAEA,IAEAO,EADA,kBAAAj5C,cACAA,aAEA24C,EAEK,MAAA/9H,GACLq+H,EAAAN,KAuDA,IAEAS,GAFAvrG,KACAsrG,GAAA,EAEAE,GAAA,CAyCA56H,GAAA+6H,SAAA,SAAAX,GACA,GAAAn/H,GAAA,GAAA6G,OAAAxS,UAAAC,OAAA,EACA,IAAAD,UAAAC,OAAA,EACA,OAAAhC,GAAA,EAAuBA,EAAA+B,UAAAC,OAAsBhC,IAC7C0N,EAAA1N,EAAA,GAAA+B,UAAA/B,EAGA6hC,GAAAxuB,KAAA,GAAAk6H,GAAAV,EAAAn/H,IACA,IAAAm0B,EAAA7/B,QAAAmrI,GACAP,EAAAU,IASAC,EAAApsI,UAAAmnE,IAAA,WACAlyD,KAAAy2H,IAAA/+H,MAAA,KAAAsI,KAAA0e,QAEAriB,EAAA+oD,MAAA,UACA/oD,EAAAg7H,SAAA,EACAh7H,EAAAo0H,OACAp0H,EAAAi7H,QACAj7H,EAAAk7H,QAAA,GACAl7H,EAAAm7H,YAIAn7H,EAAAoF,GAAAojH,EACAxoH,EAAAwF,YAAAgjH,EACAxoH,EAAA0D,KAAA8kH,EACAxoH,EAAAuF,IAAAijH,EACAxoH,EAAAkF,eAAAsjH,EACAxoH,EAAAsF,mBAAAkjH,EACAxoH,EAAA4E,KAAA4jH,EAEAxoH,EAAAs+F,QAAA,SAAAxwG,GACA,SAAAkc,OAAA,qCAGAhK,EAAAqB,IAAA,WAA2B,WAC3BrB,EAAAo7H,MAAA,SAAAn4H,GACA,SAAA+G,OAAA,mCAEAhK,EAAAq7H,MAAA,WAA4B,WhL4tnDtB,SAAS/tI,EAAQD,EAASH,IAEJ,SAASI,EAAQgwB,GiLj5nD7C,GAAAD,IACC,SAAAra,GAgED,QAAA6vB,GAAAh4B,GACA,SAAA2Y,YAAA8nH,EAAAzgI,IAWA,QAAAw5B,GAAAhS,EAAA7e,GAGA,IAFA,GAAAjU,GAAA8yB,EAAA9yB,OACAwT,KACAxT,KACAwT,EAAAxT,GAAAiU,EAAA6e,EAAA9yB,GAEA,OAAAwT,GAaA,QAAAw4H,GAAAljE,EAAA70D,GACA,GAAAtD,GAAAm4D,EAAA72D,MAAA,KACAuB,EAAA,EACA7C,GAAA3Q,OAAA,IAGAwT,EAAA7C,EAAA,OACAm4D,EAAAn4D,EAAA,IAGAm4D,IAAAlkC,QAAAqnG,EAAA,IACA,IAAAC,GAAApjE,EAAA72D,MAAA,KACAk6H,EAAArnG,EAAAonG,EAAAj4H,GAAA/B,KAAA,IACA,OAAAsB,GAAA24H,EAgBA,QAAAC,GAAAtjE,GAMA,IALA,GAGAzqE,GACAguI,EAJAn0F,KACAo0F,EAAA,EACAtsI,EAAA8oE,EAAA9oE,OAGAssI,EAAAtsI,GACA3B,EAAAyqE,EAAA6R,WAAA2xD,KACAjuI,GAAA,OAAAA,GAAA,OAAAiuI,EAAAtsI,GAEAqsI,EAAAvjE,EAAA6R,WAAA2xD,KACA,cAAAD,GACAn0F,EAAA7mC,OAAA,KAAAhT,IAAA,UAAAguI,GAAA,QAIAn0F,EAAA7mC,KAAAhT,GACAiuI,MAGAp0F,EAAA7mC,KAAAhT,EAGA,OAAA65C,GAWA,QAAAq0F,GAAAz5G,GACA,MAAAgS,GAAAhS,EAAA,SAAAz0B,GACA,GAAA65C,GAAA,EAOA,OANA75C,GAAA,QACAA,GAAA,MACA65C,GAAAs0F,EAAAnuI,IAAA,eACAA,EAAA,WAAAA,GAEA65C,GAAAs0F,EAAAnuI,KAEG6T,KAAA,IAYH,QAAAu6H,GAAAC,GACA,MAAAA,GAAA,MACAA,EAAA,GAEAA,EAAA,MACAA,EAAA,GAEAA,EAAA,MACAA,EAAA,GAEAvhD,EAcA,QAAAwhD,GAAAC,EAAAC,GAGA,MAAAD,GAAA,OAAAA,EAAA,SAAAC,IAAA,GAQA,QAAAC,GAAAn4G,EAAAo4G,EAAAC,GACA,GAAAl4F,GAAA,CAGA,KAFAngB,EAAAq4G,EAAA55E,EAAAz+B,EAAAs4G,GAAAt4G,GAAA,EACAA,GAAAy+B,EAAAz+B,EAAAo4G,GAC+Bp4G,EAAAu4G,EAAAC,GAAA,EAAmCr4F,GAAAq2C,EAClEx2D,EAAAy+B,EAAAz+B,EAAAu4G,EAEA,OAAA95E,GAAAte,GAAAo4F,EAAA,GAAAv4G,KAAAC,IAUA,QAAAw4G,GAAAn1F,GAEA,GAEAzuC,GAIA6jI,EACAz3H,EACApD,EACA86H,EACA7mF,EACA3R,EACA83F,EACAz6G,EAEAo7G,EAfAr1F,KACAs1F,EAAAv1F,EAAAj4C,OAEAhC,EAAA,EACAc,EAAA2uI,EACAC,EAAAC,CAqBA,KALAN,EAAAp1F,EAAAzQ,YAAAl0B,GACA+5H,EAAA,IACAA,EAAA,GAGAz3H,EAAA,EAAaA,EAAAy3H,IAAWz3H,EAExBqiC,EAAA0iC,WAAA/kE,IAAA,KACA0tB,EAAA,aAEA4U,EAAA7mC,KAAA4mC,EAAA0iC,WAAA/kE,GAMA,KAAApD,EAAA66H,EAAA,EAAAA,EAAA,IAAyC76H,EAAAg7H,GAAqB,CAO9D,IAAAF,EAAAtvI,EAAAyoD,EAAA,EAAA3R,EAAAq2C,EAEA34E,GAAAg7H,GACAlqG,EAAA,iBAGAspG,EAAAH,EAAAx0F,EAAA0iC,WAAAnoE,OAEAo6H,GAAAzhD,GAAAyhD,EAAAx5E,GAAAw6E,EAAA5vI,GAAAyoD,KACAnjB,EAAA,YAGAtlC,GAAA4uI,EAAAnmF,EACAt0B,EAAA2iB,GAAA44F,EAAAG,EAAA/4F,GAAA44F,EAAAP,IAAAr4F,EAAA44F,IAEAd,EAAAz6G,GAfsD2iB,GAAAq2C,EAmBtDoiD,EAAApiD,EAAAh5D,EACAs0B,EAAA2M,EAAAw6E,EAAAL,IACAjqG,EAAA,YAGAmjB,GAAA8mF,CAIA/jI,GAAA0uC,EAAAl4C,OAAA,EACA0tI,EAAAZ,EAAA9uI,EAAAsvI,EAAA9jI,EAAA,GAAA8jI,GAIAl6E,EAAAp1D,EAAAwL,GAAAokI,EAAA9uI,GACAwkC,EAAA,YAGAxkC,GAAAs0D,EAAAp1D,EAAAwL,GACAxL,GAAAwL,EAGA0uC,EAAAnnC,OAAA/S,IAAA,EAAAc,GAIA,MAAAytI,GAAAr0F,GAUA,QAAAytF,GAAA1tF,GACA,GAAAn5C,GACA61B,EACAm5G,EACAC,EACAL,EACA93H,EACAzX,EACAmwC,EACAwG,EACA3iB,EACA67G,EAGAR,EAEAS,EACAV,EACAW,EANAh2F,IAoBA,KAXAD,EAAAm0F,EAAAn0F,GAGAu1F,EAAAv1F,EAAAj4C,OAGAlB,EAAA2uI,EACA94G,EAAA,EACA+4G,EAAAC,EAGA/3H,EAAA,EAAaA,EAAA43H,IAAiB53H,EAC9Bo4H,EAAA/1F,EAAAriC,GACAo4H,EAAA,KACA91F,EAAA7mC,KAAAm7H,EAAAwB,GAeA,KAXAF,EAAAC,EAAA71F,EAAAl4C,OAMA+tI,GACA71F,EAAA7mC,KAAAiC,GAIAw6H,EAAAN,GAAA,CAIA,IAAArvI,EAAAyvI,EAAAh4H,EAAA,EAA0BA,EAAA43H,IAAiB53H,EAC3Co4H,EAAA/1F,EAAAriC,GACAo4H,GAAAlvI,GAAAkvI,EAAA7vI,IACAA,EAAA6vI,EAcA,KARAC,EAAAH,EAAA,EACA3vI,EAAAW,EAAAs0D,GAAAw6E,EAAAj5G,GAAAs5G,IACA3qG,EAAA,YAGA3O,IAAAx2B,EAAAW,GAAAmvI,EACAnvI,EAAAX,EAEAyX,EAAA,EAAcA,EAAA43H,IAAiB53H,EAO/B,GANAo4H,EAAA/1F,EAAAriC,GAEAo4H,EAAAlvI,KAAA61B,EAAAi5G,GACAtqG,EAAA,YAGA0qG,GAAAlvI,EAAA,CAEA,IAAAwvC,EAAA3Z,EAAAmgB,EAAAq2C,EACAh5D,EAAA2iB,GAAA44F,EAAAG,EAAA/4F,GAAA44F,EAAAP,IAAAr4F,EAAA44F,IACAp/F,EAAAnc,GAFkD2iB,GAAAq2C,EAKlD+iD,EAAA5/F,EAAAnc,EACAo7G,EAAApiD,EAAAh5D,EACA+lB,EAAA7mC,KACAm7H,EAAAG,EAAAx6G,EAAA+7G,EAAAX,EAAA,KAEAj/F,EAAA8kB,EAAA86E,EAAAX,EAGAr1F,GAAA7mC,KAAAm7H,EAAAG,EAAAr+F,EAAA,KACAo/F,EAAAZ,EAAAn4G,EAAAs5G,EAAAH,GAAAC,GACAp5G,EAAA,IACAm5G,IAIAn5G,IACA71B,EAGA,MAAAo5C,GAAAhmC,KAAA,IAcA,QAAAi8H,GAAAl2F,GACA,MAAA+zF,GAAA/zF,EAAA,SAAA6wB,GACA,MAAAslE,GAAAn/G,KAAA65C,GACAskE,EAAAtkE,EAAAr3D,MAAA,GAAAjH,eACAs+D,IAeA,QAAAulE,GAAAp2F,GACA,MAAA+zF,GAAA/zF,EAAA,SAAA6wB,GACA,MAAAwlE,GAAAr/G,KAAA65C,GACA,OAAA68D,EAAA78D,GACAA,IAvdA,GAIAylC,IAJA,gBAAAzwG,QACAA,EAAA4wG,UAAA5wG,EACA,gBAAAC,QACAA,EAAA2wG,UAAA3wG,EACA,gBAAAgwB,MAEAwgF,GAAAxgF,SAAAwgF,GACAA,EAAA5iG,SAAA4iG,GACAA,EAAA/3F,OAAA+3F,IAEA96F,EAAA86F,EAQA,IAAAggC,GAGAX,EAAA,WAGAziD,EAAA,GACA0iD,EAAA,EACAV,EAAA,GACAv4G,EAAA,GACAq4G,EAAA,IACAU,EAAA,GACAF,EAAA,IACAn6H,EAAA,IAGA86H,EAAA,QACAE,EAAA,eACArC,EAAA,4BAGAF,GACAyC,SAAA,kDACAC,YAAA,iDACAC,gBAAA,iBAIAxB,EAAA/hD,EAAA0iD,EACAz6E,EAAA/tD,KAAA+tD,MACAo5E,EAAAh6D,OAAA4vD,YA8aAmM,IAMA5C,QAAA,QAQAgD,MACAvB,OAAAhB,EACAzG,OAAA4G,GAEAa,SACAzH,SACA0I,UACAF,aAWArgH,EAAA,WACA,MAAAygH,IACGrwI,KAAAJ,EAAAH,EAAAG,EAAAC,KAAAkC,SAAA6tB,IAAA/vB,EAAAD,QAAAgwB,KAgBF1Z,QjLi5nD4BlW,KAAKJ,EAASH,EAAoB,IAAII,GAASJ,EAAoB,MAI1F,SAASI,EAAQD,GAEvB,YkLj5oDA,SAAAsB,GAAAI,EAAA+1H,GACA,MAAA92H,QAAAU,UAAAC,eAAAlB,KAAAsB,EAAA+1H,GAGAx3H,EAAAD,QAAA,SAAA8wI,EAAAv7H,EAAAkiG,EAAAp1G,GACAkT,KAAA,IACAkiG,KAAA,GACA,IAAA/1G,KAEA,oBAAAovI,IAAA,IAAAA,EAAA5uI,OACA,MAAAR,EAGA,IAAA4jH,GAAA,KACAwrB,KAAA38H,MAAAoB,EAEA,IAAAw7H,GAAA,GACA1uI,IAAA,gBAAAA,GAAA0uI,UACAA,EAAA1uI,EAAA0uI,QAGA,IAAA3hI,GAAA0hI,EAAA5uI,MAEA6uI,GAAA,GAAA3hI,EAAA2hI,IACA3hI,EAAA2hI,EAGA,QAAA7wI,GAAA,EAAiBA,EAAAkP,IAASlP,EAAA,CAC1B,GAEA8wI,GAAAC,EAAAj6F,EAAAv6B,EAFA6E,EAAAwvH,EAAA5wI,GAAA4mC,QAAAw+E,EAAA,OACAvvC,EAAAz0D,EAAA3T,QAAA8pG,EAGA1hC,IAAA,GACAi7D,EAAA1vH,EAAAzV,OAAA,EAAAkqE,GACAk7D,EAAA3vH,EAAAzV,OAAAkqE,EAAA,KAEAi7D,EAAA1vH,EACA2vH,EAAA,IAGAj6F,EAAAk6F,mBAAAF,GACAv0H,EAAAy0H,mBAAAD,GAEA3vI,EAAAI,EAAAs1C,GAEKjO,EAAArnC,EAAAs1C,IACLt1C,EAAAs1C,GAAAzjC,KAAAkJ,GAEA/a,EAAAs1C,IAAAt1C,EAAAs1C,GAAAv6B,GAJA/a,EAAAs1C,GAAAv6B,EAQA,MAAA/a,GAGA,IAAAqnC,GAAAt0B,MAAAs0B,SAAA,SAAA31B,GACA,yBAAAzS,OAAAU,UAAAuK,SAAAxL,KAAAgT,KlLk7oDM,SAASnT,EAAQD,GAEvB,YmLj8oDA,SAAAgnC,GAAA5zB,EAAAC,GACA,GAAAD,EAAA4zB,IAAA,MAAA5zB,GAAA4zB,IAAA3zB,EAEA,QADAC,MACApT,EAAA,EAAiBA,EAAAkT,EAAAlR,OAAehC,IAChCoT,EAAAC,KAAAF,EAAAD,EAAAlT,MAEA,OAAAoT,GApDA,GAAA69H,GAAA,SAAA10H,GACA,aAAAA,IACA,aACA,MAAAA,EAEA,eACA,MAAAA,GAAA,cAEA,cACA,MAAAi5G,UAAAj5G,KAAA,EAEA,SACA,UAIAxc,GAAAD,QAAA,SAAA0B,EAAA6T,EAAAkiG,EAAAh3G,GAOA,MANA8U,MAAA,IACAkiG,KAAA,IACA,OAAA/1G,IACAA,EAAAS,QAGA,gBAAAT,GACAslC,EAAAoqG,EAAA1vI,GAAA,SAAAs1C,GACA,GAAAq6F,GAAAC,mBAAAH,EAAAn6F,IAAAygE,CACA,OAAA1uE,GAAArnC,EAAAs1C,IACAhQ,EAAAtlC,EAAAs1C,GAAA,SAAAv6B,GACA,MAAA40H,GAAAC,mBAAAH,EAAA10H,MACSrI,KAAAmB,GAET87H,EAAAC,mBAAAH,EAAAzvI,EAAAs1C,OAEK5iC,KAAAmB,GAIL9U,EACA6wI,mBAAAH,EAAA1wI,IAAAg3G,EACA65B,mBAAAH,EAAAzvI,IAFA,GAKA,IAAAqnC,GAAAt0B,MAAAs0B,SAAA,SAAA31B,GACA,yBAAAzS,OAAAU,UAAAuK,SAAAxL,KAAAgT,IAYAg+H,EAAAzwI,OAAAmE,MAAA,SAAApD,GACA,GAAA4R,KACA,QAAA1R,KAAAF,GACAf,OAAAU,UAAAC,eAAAlB,KAAAsB,EAAAE,IAAA0R,EAAAC,KAAA3R,EAEA,OAAA0R,KnL6gpDM,SAASrT,EAAQD,EAASH,GAEhC,YoLhmpDAG,GAAAsvI,OAAAtvI,EAAAkqC,MAAArqC,EAAA,KACAG,EAAA6nI,OAAA7nI,EAAAupI,UAAA1pI,EAAA,MpLwmpDM,SAASI,EAAQD,EAASH,GAEhC,YqL3lpDA,SAAA+kF,GAAAn9B,EAAA2L,GACA5jD,EAAApP,KAAAkW,MAEA88C,KAAAm+E,EAOAj7H,KAAAmxC,WAAA,GAOAnxC,KAAAk7H,SAAA,EAOAl7H,KAAAm7H,SAAA,EAOAn7H,KAAAo7H,eAAA,EAOAp7H,KAAAq7H,qBAOAr7H,KAAAs7H,oBAQAt7H,KAAAu7H,mBAAAv7H,KAAAw7H,cAAA7iH,KAAA3Y,MAQAA,KAAAy7H,WAQAz7H,KAAA07H,WAAA,EAQA17H,KAAA27H,OAAAl/G,EAAAgP,MAAAzrB,KAAAu7H,mBAAAz+E,GAOA98C,KAAA4xC,aApGA,GAAAhhB,GAAArnC,EAAA,IACAkzB,EAAAlzB,EAAA,IACA4yB,EAAA5yB,EAAA,IACA2P,EAAA3P,EAAA,GAGA0xI,EAAA,GACAW,EAAA,GAmIAttD,GAAAvjF,UAAAV,OAAAgW,OAAAnH,EAAAnO,WACAujF,EAAAvjF,UAAA0X,YAAA6rE,EACA3kF,EAAAD,QAAA4kF,EAyDAA,EAAAvjF,UAAA8hC,IAAAyhD,EAAAvjF,UAAA8wI,QAAA,SAAA1xI,EAAAwL,EAAA5J,EAAA2lC,GAEA,GAAAvzB,MAAAs0B,QAAAtoC,GAAA,CACA,OAAAP,GAAA,EAAuBA,EAAAO,EAAAyB,SAAiBhC,EACxCoW,KAAA6sB,IAAA1iC,EAAAP,GAGA,OAAAoW,MAmBA,GAfA,gBAAA7V,KACAunC,EAAA/7B,GAAAxL,EAAAqyD,UAAAryD,EAAA46E,WACAh5E,EAAA5B,EACAwL,EAAAxL,EAAAwL,IACAxL,YAAAmB,KAAAnB,EAAAwL,KAIA,gBAAAA,KACA+7B,EAAA3lC,EACAA,EAAA4J,EACAA,EAAAxL,GAIA,gBAAAwL,GACA,SAAA0Q,OAAA,2CAUA,IANA,kBAAAta,KACA2lC,EAAA3lC,EACAA,EAAA,MAIAiU,KAAA4xC,UAAAznD,GACA,SAAAkc,OAAA,uBAAAlc,EAAA,oBA0BA,OAtBAwL,GAAAqK,KAAA87H,YAAAnmI,GAGAqK,KAAA4xC,UAAAznD,GAAA,GAAAgyB,GAAAhyB,EAAAwL,EAAA5J,GAEA,kBAAA2lC,IACA1xB,KAAA4xC,UAAAznD,GAAA4V,KAAA,kBAAA2xB,GAGA1xB,KAAA07H,aAGA17H,KAAA27H,OAAA1+E,SACAj9C,KAAA27H,OAAA1+H,KAAA+C,KAAA4xC,UAAAznD,IACA6V,KAAAo7H,gBAAAQ,EAAA57H,KAAAk7H,WAAAl7H,KAAA27H,OAAA/vI,SAAAoU,KAAA27H,OAAA/9E,aAIA59C,KAAAy7H,QAAAx+H,KAAA+C,KAAA4xC,UAAAznD,IACA6V,KAAAo7H,eAAAQ,EAAA57H,KAAAy7H,QAAA7vI,QAGAoU,MAYAsuE,EAAAvjF,UAAA4xH,OAAAruC,EAAAvjF,UAAA4lI,IAAA,SAAA9wH,GAGA,MAFAG,MAAAq7H,kBAAAp+H,KAAA4C,GAEAG,MAYAsuE,EAAAvjF,UAAA2xH,MAAApuC,EAAAvjF,UAAA4qF,IAAA,SAAA91E,GAGA,MAFAG,MAAAs7H,iBAAAr+H,KAAA4C,GAEAG,MAQAsuE,EAAAvjF,UAAAi7B,MAAA,WAGAhmB,KAAAk7H,SAAA,EAEAl7H,KAAAm7H,SAAA,EAEAn7H,KAAAo7H,eAAA,EAKAp7H,KAAAy7H,QAAA7vI,OAAA,EAEAoU,KAAA07H,WAAA,EAEA17H,KAAA27H,OAAAh+E,OACA39C,KAAA27H,OAAA1+E,SAAA,CAGA,QAAAvc,KAAA1gC,MAAA4xC,UAAA,CACA,GAAA50C,GAAAgD,KAAA4xC,UAAAlR,EAEA1jC,GAAA4E,IAAA,WAAA5B,KAAA+7H,QAAA/7H,MAEAhD,EAAAqH,WACArH,EAAAq0B,QAMA,MAFArxB,MAAA4xC,aAEA5xC,MAUAsuE,EAAAvjF,UAAA0mC,KAAA,SAAAC,GAOA,GALA,kBAAAA,IACA1xB,KAAAD,KAAA,WAAA2xB,GAIA1xB,KAAA27H,OAAA1+E,QACA,MAAAj9C,KAIAA,MAAAiB,KAAA,QAAAjB,MAGAA,KAAAm7H,SAAA,CAGA,QAAAvxI,GAAA,EAAmBA,EAAAoW,KAAAy7H,QAAA7vI,SAAyBhC,EAC5CoW,KAAA27H,OAAA1+H,KAAA+C,KAAAy7H,QAAA7xI,GAMA,OAFAoW,MAAAy7H,QAAA7vI,OAAA,EAEAoU,MAUAsuE,EAAAvjF,UAAA+wI,YAAA,SAAAnmI,GACA,GAAAqmI,GAAAprG,EAAAj7B,GAAmCy+B,YAAA,GAGnC,OAAA4nG,GAAAznG,WAAAynG,EAAAv+H,MAAA,IAAAu+H,EAAAv+H,KAAApG,QAAA,MACA1B,EAIAqK,KAAAmxC,QAAAvlD,QACAoU,KAAAmxC,QAAA/d,YAAA,OAAApzB,KAAAmxC,QAAAvlD,OAAA,GACA,MAAA+J,EAAAiI,OAAA,GAEAoC,KAAAmxC,QAAA,IAAAx7C,EAGAqK,KAAAmxC,QAAAx7C,GAUA24E,EAAAvjF,UAAAywI,cAAA,SAAA3rF,EAAAosF,GACA,GAAA75H,GAAApC,IAEA6vC,GAAApgB,SAAAwsG,EAGAx/G,EAAAshC,WACA/9C,KAAAq7H,kBACA,SAAAx7H,EAAAy3B,GACAz3B,EAAA/V,KAAAsY,EAAAytC,EAAA,WAGAvY,EAAAuY,EAAArgB,cAA6C,SAG7C,WAGAqgB,EAAArgB,WACAptB,EAAA25H,QAAAlsF,IAGAA,EAAA9vC,KAAA,WAAAqC,EAAA25H,QAAA35H,GACAytC,EAAApe,WAYA68C,EAAAvjF,UAAAmxI,YAAA,WACAl8H,KAAAm7H,SAAA,EAEAn7H,KAAAiB,KAAA,WAAAjB,UAAA4xC,YAYA08B,EAAAvjF,UAAAgxI,QAAA,SAAAlsF,GACA,GAAAztC,GAAApC,IAGAyc,GAAAshC,WACA/9C,KAAAs7H,iBACA,SAAAz7H,EAAAy3B,GACAz3B,EAAA/V,KAAAsY,EAAAytC,EAAAvY,IAEA,WACAuY,EAAA5uC,KAAA,kBAAA4uC,GAEAztC,EAAAs5H,aAEAt5H,EAAA84H,UAAA94H,EAAAg5H,eACAh5H,EAAAnB,KAAA,WAAAmB,EAAAytC,GAEAA,EAAA3gB,MACA9sB,EAAAnB,KAAA,QAAA4uC,EAAA3gB,MAAA9sB,EAAAytC,GAGAztC,EAAAnB,KAAA,OAAAmB,EAAAytC,GAIA,IAAAztC,EAAAs5H,aACAt5H,EAAA84H,SAAA,IACA94H,EAAA85H,iBAMArsF,EAAApgB,YAGA6+C,EAAA38C,UAAAxV,EAAAwV,UACA28C,EAAAz7C,kBAAA1W,EAAA0W,mBrLmnpDM,SAASlpC,EAAQD,GAEvB,YsL7lqDAC,GAAAD,SAEAyyI,QAAA,oEAEAC,aAAA,SAAAv4F,GAQA,IAPA,GACAw4F,GADAv4F,EAAA,GAEAw4F,EAAA,GAAAn+H,OAAA,GACAo+H,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAF,EAAA14F,EAAAj4C,QAAA,CAIA,IAFAywI,EAAA,GAAAl+H,OAAA,GAEAq+H,EAAA,EAAyBA,EAAAH,EAAAzwI,OAAyB4wI,IAClDD,EAAA14F,EAAAj4C,OAGAywI,EAAAG,GAAA,IAAA34F,EAAA0iC,WAAAg2D,KAGAF,EAAAG,GAAA,CAgBA,QAVAF,EAAA,GAAAD,EAAA,MAEAC,EAAA,MAAAD,EAAA,OAAAA,EAAA,MAEAC,EAAA,OAAAD,EAAA,OAAAA,EAAA,MAEAC,EAAA,MAAAD,EAAA,GAGAI,EAAAF,GAAA14F,EAAAj4C,OAAA,IAEA,OAEA0wI,EAAA,MACAA,EAAA,KACA,MAEA,QAEAA,EAAA,MASA,IAAAE,EAAA,EAAyBA,EAAAF,EAAA1wI,OAAiC4wI,IAC1D14F,GAAA9jC,KAAAm8H,QAAAv+H,OAAA0+H,EAAAE,IAIA,MAAA14F,MtLwmqDM,SAASn6C,EAAQD,GAEvB,YuLxqqDA,IAAAo4F,KAEAn4F,GAAAD,QAAA,WACA,gBAAAmmD,EAAAvY,GAEAwqD,EAAAjyC,EAAAl6C,MACAk6C,EAAAt5C,KAAAurF,EAAAjyC,EAAAl6C,KACAk6C,EAAAhqC,YAIAgqC,EAAA9vC,KAAA,sBACA+hF,EAAA9hF,KAAArK,KAAAqK,KAAAzJ,OAIA+gC,OvLmrqDM,SAAS3tC,EAAQD,EAASH,GAEhC,YwLtsqDA,IAAA4yB,GAAA5yB,EAAA,IACAmzI,EAAAnzI,EAAA,KAEAozI,EAAAplI,OAAAqlI,KAAArlI,OAAAslI,SAIAlzI,GAAAD,QAAA,WACA,gBAAAmmD,EAAAvY,GACA,IAAAuY,EAAAt5C,KAGA,WAFA+gC,IAMA,IAAAuY,EAAA1gB,KAAA0gB,EAAA7gB,UAAA7S,EAAA0W,kBAAAoC,KAEA,GAAA19B,OAAAulI,MAAA,gBAAAjtF,GAAAt5C,MAsBA,OAAAs5C,EAAAt5C,KAAAW,KAAAG,QAAA,UACA,GAAAwL,GAAA85H,EAAAI,gBAAAltF,EAAAt5C,KAiBA,OAfAs5C,GAAArzB,KAAAqzB,EAAAt5C,KACAs5C,EAAAt5C,KAAA,GAAAyR,OACA6nC,EAAAt5C,KAAAsM,MAEAgtC,EAAAvgB,SAAA,OAGAugB,EAAAt5C,KAAAmP,OAAA,WACAi3H,EAAAK,gBAAAn6H,GACAgtC,EAAAt5C,KAAAmP,OAAA,KAEA4xB,WApCA,CACA,GAAApgC,GAAA24C,EAAA1gB,IAAA8tG,kBAAA,eAGA,IAAA/lI,GAAA,IAAAA,EAAAG,QAAA,SAcA,MAbAw4C,GAAAt5C,KAAA,GAAAyR,OACA6nC,EAAAt5C,KAAAsM,IAAA,QAAA3L,EAAA,WAA2DwlI,EAAAN,aAAAvsF,EAAA1gB,IAAAuE,cAE3Dmc,EAAAvgB,SAAA,OAGAugB,EAAAt5C,KAAAmP,OAAA,WACAmqC,EAAAt5C,KAAAmP,OAAA,KAEA4xB,MA8BAA,OxLgtqDM,SAAS3tC,EAAQD,EAASH,GAEhC,YyLjvqDA,SAAAozI,KACA38H,KAAAu0B,SAAA,KACAv0B,KAAAk9H,QAAA,KACAl9H,KAAAm9H,KAAA,KACAn9H,KAAAw0B,KAAA,KACAx0B,KAAAs0B,KAAA,KACAt0B,KAAAy0B,SAAA,KACAz0B,KAAAg/F,KAAA,KACAh/F,KAAAgkH,OAAA,KACAhkH,KAAAo9H,MAAA,KACAp9H,KAAAq9H,SAAA,KACAr9H,KAAAvC,KAAA,KACAuC,KAAAm0B,KAAA,KAwDA,QAAAmpG,GAAA3nI,EAAA4nI,EAAAC,GACA,GAAA7nI,GAAA27H,EAAA7uB,SAAA9sG,gBAAAgnI,GAAA,MAAAhnI,EAEA,IAAA8nI,GAAA,GAAAd,EAEA,OADAc,GAAA7pG,MAAAj+B,EAAA4nI,EAAAC,GACAC,EAyQA,QAAAC,GAAAtyI,GAMA,MADAkmI,GAAAtV,SAAA5wH,OAAAkyI,EAAAlyI,IACAA,YAAAuxI,GACAvxI,EAAAoqD,SADAmnF,EAAA5xI,UAAAyqD,OAAA1rD,KAAAsB,GA4DA,QAAAuyI,GAAA75H,EAAAzF,GACA,MAAAi/H,GAAAx5H,GAAA,MAAAxG,QAAAe,GAOA,QAAAu/H,GAAA95H,EAAAzF,GACA,MAAAyF,GACAw5H,EAAAx5H,GAAA,MAAA+5H,cAAAx/H,GADAA,EAvaA,GAAA87H,GAAA5wI,EAAA,KACA+nI,EAAA/nI,EAAA,IAEAG,GAAAkqC,MAAA0pG,EACA5zI,EAAA4T,QAAAqgI,EACAj0I,EAAAm0I,cAAAD,EACAl0I,EAAA8rD,OAAAkoF,EAEAh0I,EAAAizI,KAqBA,IAAAmB,GAAA,oBACAC,EAAA,WAGAC,EAAA,qCAIAC,GAAA,oCAGAC,GAAA,IAAgB,IAAK,kBAAAl/H,OAAAi/H,GAGrBE,GAAA,KAAAn/H,OAAAk/H,GAKAE,GAAA,gBAAqC,KAAAp/H,OAAAm/H,GACrCE,GAAA,aACAC,EAAA,IACAC,EAAA,yBACAC,EAAA,+BAEAC,GACA/I,YAAA,EACAgJ,eAAA,GAGAC,GACAjJ,YAAA,EACAgJ,eAAA,GAGAE,GACAC,MAAA,EACAC,OAAA,EACAC,KAAA,EACAC,QAAA,EACAC,MAAA,EACAC,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,WAAA,EACAC,SAAA,GAEAC,EAAAh2I,EAAA,IAUAozI,GAAA5xI,UAAA6oC,MAAA,SAAAj+B,EAAA4nI,EAAAC,GACA,IAAAlM,EAAAtV,SAAArmH,GACA,SAAAgI,WAAA,+CAAAhI,GAMA,IAAA6pI,GAAA7pI,EAAA0B,QAAA,KACAooI,EACAD,KAAA,GAAAA,EAAA7pI,EAAA0B,QAAA,aACAqoI,EAAA/pI,EAAAkI,MAAA4hI,GACAE,EAAA,KACAD,GAAA,GAAAA,EAAA,GAAAlvG,QAAAmvG,EAAA,KACAhqI,EAAA+pI,EAAA5hI,KAAA2hI,EAEA,IAAArhB,GAAAzoH,CAMA,IAFAyoH,IAAA5/G,QAEAg/H,GAAA,IAAA7nI,EAAAkI,MAAA,KAAAjS,OAAA,CAEA,GAAAg0I,GAAA5B,EAAAloI,KAAAsoH,EACA,IAAAwhB,EAeA,MAdA5/H,MAAAvC,KAAA2gH,EACAp+G,KAAAm0B,KAAAiqF,EACAp+G,KAAAq9H,SAAAuC,EAAA,GACAA,EAAA,IACA5/H,KAAAgkH,OAAA4b,EAAA,GACArC,EACAv9H,KAAAo9H,MAAAmC,EAAA3rG,MAAA5zB,KAAAgkH,OAAAzuH,OAAA,IAEAyK,KAAAo9H,MAAAp9H,KAAAgkH,OAAAzuH,OAAA,IAEOgoI,IACPv9H,KAAAgkH,OAAA,GACAhkH,KAAAo9H,UAEAp9H,KAIA,GAAAs3G,GAAAwmB,EAAAhoI,KAAAsoH,EACA,IAAA9G,EAAA,CACAA,IAAA,EACA,IAAAuoB,GAAAvoB,EAAAlhH,aACA4J,MAAAu0B,SAAAsrG,EACAzhB,IAAA7oH,OAAA+hH,EAAA1rH,QAOA,GAAA4xI,GAAAlmB,GAAA8G,EAAA3zG,MAAA,yBACA,GAAAyyH,GAAA,OAAA9e,EAAA7oH,OAAA,MACA2nI,GAAA5lB,GAAAqnB,EAAArnB,KACA8G,IAAA7oH,OAAA,GACAyK,KAAAk9H,SAAA,GAIA,IAAAyB,EAAArnB,KACA4lB,GAAA5lB,IAAAsnB,EAAAtnB,IAAA,CAmBA,OADAwoB,IAAA,EACAl2I,EAAA,EAAmBA,EAAAy0I,EAAAzyI,OAA4BhC,IAAA,CAC/C,GAAAm2I,GAAA3hB,EAAA/mH,QAAAgnI,EAAAz0I,GACAm2I,MAAA,IAAAD,KAAA,GAAAC,EAAAD,KACAA,EAAAC,GAKA,GAAA5C,GAAA6C,CAGAA,GAFAF,KAAA,EAEA1hB,EAAAhrF,YAAA,KAIAgrF,EAAAhrF,YAAA,IAAA0sG,GAKAE,KAAA,IACA7C,EAAA/e,EAAA/gH,MAAA,EAAA2iI,GACA5hB,IAAA/gH,MAAA2iI,EAAA,GACAhgI,KAAAm9H,KAAAvC,mBAAAuC,IAIA2C,GAAA,CACA,QAAAl2I,GAAA,EAAmBA,EAAAw0I,EAAAxyI,OAAyBhC,IAAA,CAC5C,GAAAm2I,GAAA3hB,EAAA/mH,QAAA+mI,EAAAx0I,GACAm2I,MAAA,IAAAD,KAAA,GAAAC,EAAAD,KACAA,EAAAC,GAGAD,KAAA,IACAA,EAAA1hB,EAAAxyH,QAEAoU,KAAAw0B,KAAA4pF,EAAA/gH,MAAA,EAAAyiI,GACA1hB,IAAA/gH,MAAAyiI,GAGA9/H,KAAAigI,YAIAjgI,KAAAy0B,SAAAz0B,KAAAy0B,UAAA,EAIA,IAAAyrG,GAAA,MAAAlgI,KAAAy0B,SAAA,IACA,MAAAz0B,KAAAy0B,SAAAz0B,KAAAy0B,SAAA7oC,OAAA,EAGA,KAAAs0I,EAEA,OADAC,GAAAngI,KAAAy0B,SAAA52B,MAAA,MACAjU,EAAA,EAAAC,EAAAs2I,EAAAv0I,OAA2ChC,EAAAC,EAAOD,IAAA,CAClD,GAAAw2I,GAAAD,EAAAv2I,EACA,IAAAw2I,IACAA,EAAA31H,MAAA8zH,GAAA,CAEA,OADA8B,GAAA,GACA7+H,EAAA,EAAAk/B,EAAA0/F,EAAAx0I,OAA0C4V,EAAAk/B,EAAOl/B,IAKjD6+H,GAJAD,EAAA75D,WAAA/kE,GAAA,IAIA,IAEA4+H,EAAA5+H,EAIA,KAAA6+H,EAAA51H,MAAA8zH,GAAA,CACA,GAAA+B,GAAAH,EAAA9iI,MAAA,EAAAzT,GACA22I,EAAAJ,EAAA9iI,MAAAzT,EAAA,GACA42I,EAAAJ,EAAA31H,MAAA+zH,EACAgC,KACAF,EAAArjI,KAAAujI,EAAA,IACAD,EAAA3jI,QAAA4jI,EAAA,KAEAD,EAAA30I,SACAwyH,EAAA,IAAAmiB,EAAAziI,KAAA,KAAAsgH,GAEAp+G,KAAAy0B,SAAA6rG,EAAAxiI,KAAA,IACA,SAMAkC,KAAAy0B,SAAA7oC,OAAA0yI,EACAt+H,KAAAy0B,SAAA,GAGAz0B,KAAAy0B,SAAAz0B,KAAAy0B,SAAAr+B,cAGA8pI,IAKAlgI,KAAAy0B,SAAA0lG,EAAAF,QAAAj6H,KAAAy0B,UAGA,IAAAxpC,GAAA+U,KAAAs0B,KAAA,IAAAt0B,KAAAs0B,KAAA,GACAge,EAAAtyC,KAAAy0B,UAAA,EACAz0B,MAAAw0B,KAAA8d,EAAArnD,EACA+U,KAAAm0B,MAAAn0B,KAAAw0B,KAIA0rG,IACAlgI,KAAAy0B,SAAAz0B,KAAAy0B,SAAAl/B,OAAA,EAAAyK,KAAAy0B,SAAA7oC,OAAA,GACA,MAAAwyH,EAAA,KACAA,EAAA,IAAAA,IAOA,IAAAqgB,EAAAoB,GAKA,OAAAj2I,GAAA,EAAAC,EAAAs0I,EAAAvyI,OAA0ChC,EAAAC,EAAOD,IAAA,CACjD,GAAA62I,GAAAtC,EAAAv0I,EACA,IAAAw0H,EAAA/mH,QAAAopI,MAAA,GAEA,GAAAC,GAAA1F,mBAAAyF,EACAC,KAAAD,IACAC,EAAA3e,OAAA0e,IAEAriB,IAAAvgH,MAAA4iI,GAAA3iI,KAAA4iI,IAMA,GAAA1hC,GAAAof,EAAA/mH,QAAA,IACA2nG,MAAA,IAEAh/F,KAAAg/F,KAAAof,EAAA7oH,OAAAypG,GACAof,IAAA/gH,MAAA,EAAA2hG,GAEA,IAAA2hC,GAAAviB,EAAA/mH,QAAA,IAoBA,IAnBAspI,KAAA,GACA3gI,KAAAgkH,OAAA5F,EAAA7oH,OAAAorI,GACA3gI,KAAAo9H,MAAAhf,EAAA7oH,OAAAorI,EAAA,GACApD,IACAv9H,KAAAo9H,MAAAmC,EAAA3rG,MAAA5zB,KAAAo9H,QAEAhf,IAAA/gH,MAAA,EAAAsjI,IACGpD,IAEHv9H,KAAAgkH,OAAA,GACAhkH,KAAAo9H,UAEAhf,IAAAp+G,KAAAq9H,SAAAjf,GACAwgB,EAAAiB,IACA7/H,KAAAy0B,WAAAz0B,KAAAq9H,WACAr9H,KAAAq9H,SAAA,KAIAr9H,KAAAq9H,UAAAr9H,KAAAgkH,OAAA,CACA,GAAA/4H,GAAA+U,KAAAq9H,UAAA,GACAnyI,EAAA8U,KAAAgkH,QAAA,EACAhkH,MAAAvC,KAAAxS,EAAAC,EAKA,MADA8U,MAAAm0B,KAAAn0B,KAAAw1C,SACAx1C,MAcA28H,EAAA5xI,UAAAyqD,OAAA,WACA,GAAA2nF,GAAAn9H,KAAAm9H,MAAA,EACAA,KACAA,EAAAnC,mBAAAmC,GACAA,IAAA3sG,QAAA,YACA2sG,GAAA,IAGA,IAAA5oG,GAAAv0B,KAAAu0B,UAAA,GACA8oG,EAAAr9H,KAAAq9H,UAAA,GACAr+B,EAAAh/F,KAAAg/F,MAAA,GACAxqE,GAAA,EACA4oG,EAAA,EAEAp9H,MAAAw0B,KACAA,EAAA2oG,EAAAn9H,KAAAw0B,KACGx0B,KAAAy0B,WACHD,EAAA2oG,GAAAn9H,KAAAy0B,SAAAp9B,QAAA,UACA2I,KAAAy0B,SACA,IAAAz0B,KAAAy0B,SAAA,KACAz0B,KAAAs0B,OACAE,GAAA,IAAAx0B,KAAAs0B,OAIAt0B,KAAAo9H,OACA9L,EAAA7uB,SAAAziG,KAAAo9H,QACA/yI,OAAAmE,KAAAwR,KAAAo9H,OAAAxxI,SACAwxI,EAAAmC,EAAAtM,UAAAjzH,KAAAo9H,OAGA,IAAApZ,GAAAhkH,KAAAgkH,QAAAoZ,GAAA,IAAAA,GAAA,EAsBA,OApBA7oG,IAAA,MAAAA,EAAAh/B,QAAA,KAAAg/B,GAAA,KAIAv0B,KAAAk9H,WACA3oG,GAAAqqG,EAAArqG,KAAAC,KAAA,GACAA,EAAA,MAAAA,GAAA,IACA6oG,GAAA,MAAAA,EAAAz/H,OAAA,KAAAy/H,EAAA,IAAAA,IACG7oG,IACHA,EAAA,IAGAwqE,GAAA,MAAAA,EAAAphG,OAAA,KAAAohG,EAAA,IAAAA,GACAglB,GAAA,MAAAA,EAAApmH,OAAA,KAAAomH,EAAA,IAAAA,GAEAqZ,IAAA7sG,QAAA,iBAAA/lB,GACA,MAAAuwH,oBAAAvwH,KAEAu5G,IAAAxzF,QAAA,WAEA+D,EAAAC,EAAA6oG,EAAArZ,EAAAhlB,GAOA29B,EAAA5xI,UAAAuS,QAAA,SAAAe,GACA,MAAA2B,MAAA69H,cAAAP,EAAAj/H,GAAA,OAAAm3C,UAQAmnF,EAAA5xI,UAAA8yI,cAAA,SAAAx/H,GACA,GAAAizH,EAAAtV,SAAA39G,GAAA,CACA,GAAAuiI,GAAA,GAAAjE,EACAiE,GAAAhtG,MAAAv1B,GAAA,MACAA,EAAAuiI,EAKA,OAFAxhI,GAAA,GAAAu9H,GACAkE,EAAAx2I,OAAAmE,KAAAwR,MACA8gI,EAAA,EAAkBA,EAAAD,EAAAj1I,OAAmBk1I,IAAA,CACrC,GAAAC,GAAAF,EAAAC,EACA1hI,GAAA2hI,GAAA/gI,KAAA+gI,GAQA,GAHA3hI,EAAA4/F,KAAA3gG,EAAA2gG,KAGA,KAAA3gG,EAAA81B,KAEA,MADA/0B,GAAA+0B,KAAA/0B,EAAAo2C,SACAp2C,CAIA,IAAAf,EAAA6+H,UAAA7+H,EAAAk2B,SAAA,CAGA,OADAysG,GAAA32I,OAAAmE,KAAA6P,GACA4iI,EAAA,EAAoBA,EAAAD,EAAAp1I,OAAmBq1I,IAAA,CACvC,GAAAC,GAAAF,EAAAC,EACA,cAAAC,IACA9hI,EAAA8hI,GAAA7iI,EAAA6iI,IAUA,MANAtC,GAAAx/H,EAAAm1B,WACAn1B,EAAAq1B,WAAAr1B,EAAAi+H,WACAj+H,EAAA3B,KAAA2B,EAAAi+H,SAAA,KAGAj+H,EAAA+0B,KAAA/0B,EAAAo2C,SACAp2C,EAGA,GAAAf,EAAAk2B,UAAAl2B,EAAAk2B,WAAAn1B,EAAAm1B,SAAA,CASA,IAAAqqG,EAAAvgI,EAAAk2B,UAAA,CAEA,OADA/lC,GAAAnE,OAAAmE,KAAA6P,GACA8H,EAAA,EAAqBA,EAAA3X,EAAA5C,OAAiBua,IAAA,CACtC,GAAAu6B,GAAAlyC,EAAA2X,EACA/G,GAAAshC,GAAAriC,EAAAqiC,GAGA,MADAthC,GAAA+0B,KAAA/0B,EAAAo2C,SACAp2C,EAIA,GADAA,EAAAm1B,SAAAl2B,EAAAk2B,SACAl2B,EAAAm2B,MAAAmqG,EAAAtgI,EAAAk2B,UASAn1B,EAAAi+H,SAAAh/H,EAAAg/H,aATA,CAEA,IADA,GAAA8D,IAAA9iI,EAAAg/H,UAAA,IAAAx/H,MAAA,KACAsjI,EAAAv1I,UAAAyS,EAAAm2B,KAAA2sG,EAAAnkH,WACA3e,EAAAm2B,OAAAn2B,EAAAm2B,KAAA,IACAn2B,EAAAo2B,WAAAp2B,EAAAo2B,SAAA,IACA,KAAA0sG,EAAA,IAAAA,EAAAvkI,QAAA,IACAukI,EAAAv1I,OAAA,GAAAu1I,EAAAvkI,QAAA,IACAwC,EAAAi+H,SAAA8D,EAAArjI,KAAA,KAWA,GAPAsB,EAAA4kH,OAAA3lH,EAAA2lH,OACA5kH,EAAAg+H,MAAA/+H,EAAA++H,MACAh+H,EAAAo1B,KAAAn2B,EAAAm2B,MAAA,GACAp1B,EAAA+9H,KAAA9+H,EAAA8+H,KACA/9H,EAAAq1B,SAAAp2B,EAAAo2B,UAAAp2B,EAAAm2B,KACAp1B,EAAAk1B,KAAAj2B,EAAAi2B,KAEAl1B,EAAAi+H,UAAAj+H,EAAA4kH,OAAA,CACA,GAAA/4H,GAAAmU,EAAAi+H,UAAA,GACAnyI,EAAAkU,EAAA4kH,QAAA,EACA5kH,GAAA3B,KAAAxS,EAAAC,EAIA,MAFAkU,GAAA89H,QAAA99H,EAAA89H,SAAA7+H,EAAA6+H,QACA99H,EAAA+0B,KAAA/0B,EAAAo2C,SACAp2C,EAGA,GAAAgiI,GAAAhiI,EAAAi+H,UAAA,MAAAj+H,EAAAi+H,SAAAz/H,OAAA,GACAyjI,EACAhjI,EAAAm2B,MACAn2B,EAAAg/H,UAAA,MAAAh/H,EAAAg/H,SAAAz/H,OAAA,GAEA0jI,EAAAD,GAAAD,GACAhiI,EAAAo1B,MAAAn2B,EAAAg/H,SACAkE,EAAAD,EACAE,EAAApiI,EAAAi+H,UAAAj+H,EAAAi+H,SAAAx/H,MAAA,SACAsjI,EAAA9iI,EAAAg/H,UAAAh/H,EAAAg/H,SAAAx/H,MAAA,SACA4jI,EAAAriI,EAAAm1B,WAAAqqG,EAAAx/H,EAAAm1B,SA2BA,IApBAktG,IACAriI,EAAAq1B,SAAA,GACAr1B,EAAAk1B,KAAA,KACAl1B,EAAAo1B,OACA,KAAAgtG,EAAA,GAAAA,EAAA,GAAApiI,EAAAo1B,KACAgtG,EAAA5kI,QAAAwC,EAAAo1B,OAEAp1B,EAAAo1B,KAAA,GACAn2B,EAAAk2B,WACAl2B,EAAAo2B,SAAA,KACAp2B,EAAAi2B,KAAA,KACAj2B,EAAAm2B,OACA,KAAA2sG,EAAA,GAAAA,EAAA,GAAA9iI,EAAAm2B,KACA2sG,EAAAvkI,QAAAyB,EAAAm2B,OAEAn2B,EAAAm2B,KAAA,MAEA8sG,MAAA,KAAAH,EAAA,SAAAK,EAAA,KAGAH,EAEAjiI,EAAAo1B,KAAAn2B,EAAAm2B,MAAA,KAAAn2B,EAAAm2B,KACAn2B,EAAAm2B,KAAAp1B,EAAAo1B,KACAp1B,EAAAq1B,SAAAp2B,EAAAo2B,UAAA,KAAAp2B,EAAAo2B,SACAp2B,EAAAo2B,SAAAr1B,EAAAq1B,SACAr1B,EAAA4kH,OAAA3lH,EAAA2lH,OACA5kH,EAAAg+H,MAAA/+H,EAAA++H,MACAoE,EAAAL,MAEG,IAAAA,EAAAv1I,OAGH41I,UACAA,EAAAjvH,MACAivH,IAAAxiI,OAAAmiI,GACA/hI,EAAA4kH,OAAA3lH,EAAA2lH,OACA5kH,EAAAg+H,MAAA/+H,EAAA++H,UACG,KAAA9L,EAAAoQ,kBAAArjI,EAAA2lH,QAAA,CAIH,GAAAyd,EAAA,CACAriI,EAAAq1B,SAAAr1B,EAAAo1B,KAAAgtG,EAAAxkH,OAIA,IAAA2kH,MAAAviI,EAAAo1B,MAAAp1B,EAAAo1B,KAAAn9B,QAAA,SACA+H,EAAAo1B,KAAA32B,MAAA,IACA8jI,KACAviI,EAAA+9H,KAAAwE,EAAA3kH,QACA5d,EAAAo1B,KAAAp1B,EAAAq1B,SAAAktG,EAAA3kH,SAWA,MARA5d,GAAA4kH,OAAA3lH,EAAA2lH,OACA5kH,EAAAg+H,MAAA/+H,EAAA++H,MAEA9L,EAAA1R,OAAAxgH,EAAAi+H,WAAA/L,EAAA1R,OAAAxgH,EAAA4kH,UACA5kH,EAAA3B,MAAA2B,EAAAi+H,SAAAj+H,EAAAi+H,SAAA,KACAj+H,EAAA4kH,OAAA5kH,EAAA4kH,OAAA,KAEA5kH,EAAA+0B,KAAA/0B,EAAAo2C,SACAp2C,EAGA,IAAAoiI,EAAA51I,OAWA,MARAwT,GAAAi+H,SAAA,KAEAj+H,EAAA4kH,OACA5kH,EAAA3B,KAAA,IAAA2B,EAAA4kH,OAEA5kH,EAAA3B,KAAA,KAEA2B,EAAA+0B,KAAA/0B,EAAAo2C,SACAp2C,CAcA,QARA1C,GAAA8kI,EAAAnkI,OAAA,MACAukI,GACAxiI,EAAAo1B,MAAAn2B,EAAAm2B,MAAAgtG,EAAA51I,OAAA,KACA,MAAA8Q,GAAA,OAAAA,IAAA,KAAAA,EAIAD,EAAA,EACA7S,EAAA43I,EAAA51I,OAA8BhC,GAAA,EAAQA,IACtC8S,EAAA8kI,EAAA53I,GACA,MAAA8S,EACA8kI,EAAA7kI,OAAA/S,EAAA,GACK,OAAA8S,GACL8kI,EAAA7kI,OAAA/S,EAAA,GACA6S,KACKA,IACL+kI,EAAA7kI,OAAA/S,EAAA,GACA6S,IAKA,KAAA6kI,IAAAC,EACA,KAAU9kI,IAAMA,EAChB+kI,EAAA5kI,QAAA,OAIA0kI,GAAA,KAAAE,EAAA,IACAA,EAAA,UAAAA,EAAA,GAAA5jI,OAAA,IACA4jI,EAAA5kI,QAAA,IAGAglI,GAAA,MAAAJ,EAAA1jI,KAAA,KAAAvI,QAAA,IACAisI,EAAAvkI,KAAA,GAGA,IAAAe,GAAA,KAAAwjI,EAAA,IACAA,EAAA,UAAAA,EAAA,GAAA5jI,OAAA,EAGA,IAAA6jI,EAAA,CACAriI,EAAAq1B,SAAAr1B,EAAAo1B,KAAAx2B,EAAA,GACAwjI,EAAA51I,OAAA41I,EAAAxkH,QAAA,EAIA,IAAA2kH,MAAAviI,EAAAo1B,MAAAp1B,EAAAo1B,KAAAn9B,QAAA,SACA+H,EAAAo1B,KAAA32B,MAAA,IACA8jI,KACAviI,EAAA+9H,KAAAwE,EAAA3kH,QACA5d,EAAAo1B,KAAAp1B,EAAAq1B,SAAAktG,EAAA3kH,SAyBA,MArBAskH,MAAAliI,EAAAo1B,MAAAgtG,EAAA51I,OAEA01I,IAAAtjI,GACAwjI,EAAA5kI,QAAA,IAGA4kI,EAAA51I,OAIAwT,EAAAi+H,SAAAmE,EAAA1jI,KAAA,MAHAsB,EAAAi+H,SAAA,KACAj+H,EAAA3B,KAAA,MAMA6zH,EAAA1R,OAAAxgH,EAAAi+H,WAAA/L,EAAA1R,OAAAxgH,EAAA4kH,UACA5kH,EAAA3B,MAAA2B,EAAAi+H,SAAAj+H,EAAAi+H,SAAA,KACAj+H,EAAA4kH,OAAA5kH,EAAA4kH,OAAA,KAEA5kH,EAAA+9H,KAAA9+H,EAAA8+H,MAAA/9H,EAAA+9H,KACA/9H,EAAA89H,QAAA99H,EAAA89H,SAAA7+H,EAAA6+H,QACA99H,EAAA+0B,KAAA/0B,EAAAo2C,SACAp2C,GAGAu9H,EAAA5xI,UAAAk1I,UAAA,WACA,GAAAzrG,GAAAx0B,KAAAw0B,KACAF,EAAAypG,EAAAjoI,KAAA0+B,EACAF,KACAA,IAAA,GACA,MAAAA,IACAt0B,KAAAs0B,OAAA/+B,OAAA,IAEAi/B,IAAAj/B,OAAA,EAAAi/B,EAAA5oC,OAAA0oC,EAAA1oC,SAEA4oC,IAAAx0B,KAAAy0B,SAAAD,KzLyxqDM,SAAS7qC,EAAQD,GAEvB,Y0Ln/rDAC,GAAAD,SACAsyH,SAAA,SAAAh5B,GACA,0BAEAyf,SAAA,SAAAzf,GACA,iCAAAA,GAEA48B,OAAA,SAAA58B,GACA,cAAAA,GAEA0+C,kBAAA,SAAA1+C,GACA,aAAAA,K1L4/rDS,CAEH,SAASr5F,EAAQD,EAASH,GAEhCI,EAAOD,QAAUH,EAAoB","file":"theme.53d80d38.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/get-slinky/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 188);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.Filter = exports.SpriteMaskFilter = exports.Quad = exports.RenderTarget = exports.ObjectRenderer = exports.WebGLManager = exports.Shader = exports.CanvasRenderTarget = exports.TextureUvs = exports.VideoBaseTexture = exports.BaseRenderTexture = exports.RenderTexture = exports.BaseTexture = exports.Texture = exports.CanvasGraphicsRenderer = exports.GraphicsRenderer = exports.GraphicsData = exports.Graphics = exports.TextStyle = exports.Text = exports.SpriteRenderer = exports.CanvasTinter = exports.CanvasSpriteRenderer = exports.Sprite = exports.TransformBase = exports.TransformStatic = exports.Transform = exports.Container = exports.DisplayObject = exports.glCore = exports.WebGLRenderer = exports.CanvasRenderer = exports.ticker = exports.utils = exports.settings = undefined;\n\nvar _const = __webpack_require__(1);\n\nObject.keys(_const).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _const[key];\n    }\n  });\n});\n\nvar _math = __webpack_require__(3);\n\nObject.keys(_math).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _math[key];\n    }\n  });\n});\n\nvar _pixiGlCore = __webpack_require__(5);\n\nObject.defineProperty(exports, 'glCore', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_pixiGlCore).default;\n  }\n});\n\nvar _DisplayObject = __webpack_require__(38);\n\nObject.defineProperty(exports, 'DisplayObject', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_DisplayObject).default;\n  }\n});\n\nvar _Container = __webpack_require__(14);\n\nObject.defineProperty(exports, 'Container', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Container).default;\n  }\n});\n\nvar _Transform = __webpack_require__(39);\n\nObject.defineProperty(exports, 'Transform', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Transform).default;\n  }\n});\n\nvar _TransformStatic = __webpack_require__(40);\n\nObject.defineProperty(exports, 'TransformStatic', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TransformStatic).default;\n  }\n});\n\nvar _TransformBase = __webpack_require__(22);\n\nObject.defineProperty(exports, 'TransformBase', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TransformBase).default;\n  }\n});\n\nvar _Sprite = __webpack_require__(27);\n\nObject.defineProperty(exports, 'Sprite', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Sprite).default;\n  }\n});\n\nvar _CanvasSpriteRenderer = __webpack_require__(118);\n\nObject.defineProperty(exports, 'CanvasSpriteRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasSpriteRenderer).default;\n  }\n});\n\nvar _CanvasTinter = __webpack_require__(28);\n\nObject.defineProperty(exports, 'CanvasTinter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasTinter).default;\n  }\n});\n\nvar _SpriteRenderer = __webpack_require__(120);\n\nObject.defineProperty(exports, 'SpriteRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SpriteRenderer).default;\n  }\n});\n\nvar _Text = __webpack_require__(122);\n\nObject.defineProperty(exports, 'Text', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Text).default;\n  }\n});\n\nvar _TextStyle = __webpack_require__(50);\n\nObject.defineProperty(exports, 'TextStyle', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TextStyle).default;\n  }\n});\n\nvar _Graphics = __webpack_require__(90);\n\nObject.defineProperty(exports, 'Graphics', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Graphics).default;\n  }\n});\n\nvar _GraphicsData = __webpack_require__(41);\n\nObject.defineProperty(exports, 'GraphicsData', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_GraphicsData).default;\n  }\n});\n\nvar _GraphicsRenderer = __webpack_require__(93);\n\nObject.defineProperty(exports, 'GraphicsRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_GraphicsRenderer).default;\n  }\n});\n\nvar _CanvasGraphicsRenderer = __webpack_require__(91);\n\nObject.defineProperty(exports, 'CanvasGraphicsRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasGraphicsRenderer).default;\n  }\n});\n\nvar _Texture = __webpack_require__(11);\n\nObject.defineProperty(exports, 'Texture', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Texture).default;\n  }\n});\n\nvar _BaseTexture = __webpack_require__(10);\n\nObject.defineProperty(exports, 'BaseTexture', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BaseTexture).default;\n  }\n});\n\nvar _RenderTexture = __webpack_require__(29);\n\nObject.defineProperty(exports, 'RenderTexture', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_RenderTexture).default;\n  }\n});\n\nvar _BaseRenderTexture = __webpack_require__(51);\n\nObject.defineProperty(exports, 'BaseRenderTexture', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BaseRenderTexture).default;\n  }\n});\n\nvar _VideoBaseTexture = __webpack_require__(53);\n\nObject.defineProperty(exports, 'VideoBaseTexture', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_VideoBaseTexture).default;\n  }\n});\n\nvar _TextureUvs = __webpack_require__(52);\n\nObject.defineProperty(exports, 'TextureUvs', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TextureUvs).default;\n  }\n});\n\nvar _CanvasRenderTarget = __webpack_require__(45);\n\nObject.defineProperty(exports, 'CanvasRenderTarget', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasRenderTarget).default;\n  }\n});\n\nvar _Shader = __webpack_require__(8);\n\nObject.defineProperty(exports, 'Shader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Shader).default;\n  }\n});\n\nvar _WebGLManager = __webpack_require__(9);\n\nObject.defineProperty(exports, 'WebGLManager', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_WebGLManager).default;\n  }\n});\n\nvar _ObjectRenderer = __webpack_require__(17);\n\nObject.defineProperty(exports, 'ObjectRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ObjectRenderer).default;\n  }\n});\n\nvar _RenderTarget = __webpack_require__(18);\n\nObject.defineProperty(exports, 'RenderTarget', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_RenderTarget).default;\n  }\n});\n\nvar _Quad = __webpack_require__(49);\n\nObject.defineProperty(exports, 'Quad', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Quad).default;\n  }\n});\n\nvar _SpriteMaskFilter = __webpack_require__(48);\n\nObject.defineProperty(exports, 'SpriteMaskFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SpriteMaskFilter).default;\n  }\n});\n\nvar _Filter = __webpack_require__(47);\n\nObject.defineProperty(exports, 'Filter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Filter).default;\n  }\n});\nexports.autoDetectRenderer = autoDetectRenderer;\n\nvar _utils = __webpack_require__(2);\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _ticker = __webpack_require__(54);\n\nvar ticker = _interopRequireWildcard(_ticker);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _CanvasRenderer = __webpack_require__(16);\n\nvar _CanvasRenderer2 = _interopRequireDefault(_CanvasRenderer);\n\nvar _WebGLRenderer = __webpack_require__(26);\n\nvar _WebGLRenderer2 = _interopRequireDefault(_WebGLRenderer);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.settings = _settings2.default;\nexports.utils = utils;\nexports.ticker = ticker;\nexports.CanvasRenderer = _CanvasRenderer2.default;\nexports.WebGLRenderer = _WebGLRenderer2.default; /**\n                                                  * @namespace PIXI\n                                                  */\n\n/**\n * This helper function will automatically detect which renderer you should be using.\n * WebGL is the preferred renderer as it is a lot faster. If webGL is not supported by\n * the browser then this function will return a canvas renderer\n *\n * @memberof PIXI\n * @function autoDetectRenderer\n * @param {number} [width=800] - the width of the renderers view\n * @param {number} [height=600] - the height of the renderers view\n * @param {object} [options] - The optional renderer parameters\n * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation, enable this if you\n *      need to call toDataUrl on the webgl context\n * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer, retina would be 2\n * @param {boolean} [noWebGL=false] - prevents selection of WebGL renderer, even if such is present\n * @return {PIXI.WebGLRenderer|PIXI.CanvasRenderer} Returns WebGL renderer if available, otherwise CanvasRenderer\n */\nfunction autoDetectRenderer() {\n  var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 800;\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 600;\n  var options = arguments[2];\n  var noWebGL = arguments[3];\n\n  if (!noWebGL && utils.isWebGLSupported()) {\n    return new _WebGLRenderer2.default(width, height, options);\n  }\n\n  return new _CanvasRenderer2.default(width, height, options);\n}\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n/**\n * String of the current PIXI version.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {string}\n */\nvar VERSION = exports.VERSION = '4.2.2';\n\n/**\n * Two Pi.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {number}\n */\nvar PI_2 = exports.PI_2 = Math.PI * 2;\n\n/**\n * Conversion factor for converting radians to degrees.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {number}\n */\nvar RAD_TO_DEG = exports.RAD_TO_DEG = 180 / Math.PI;\n\n/**\n * Conversion factor for converting degrees to radians.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {number}\n */\nvar DEG_TO_RAD = exports.DEG_TO_RAD = Math.PI / 180;\n\n/**\n * Constant to identify the Renderer Type.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} UNKNOWN - Unknown render type.\n * @property {number} WEBGL - WebGL render type.\n * @property {number} CANVAS - Canvas render type.\n */\nvar RENDERER_TYPE = exports.RENDERER_TYPE = {\n  UNKNOWN: 0,\n  WEBGL: 1,\n  CANVAS: 2\n};\n\n/**\n * Various blend modes supported by PIXI.\n *\n * IMPORTANT - The WebGL renderer only supports the NORMAL, ADD, MULTIPLY and SCREEN blend modes.\n * Anything else will silently act like NORMAL.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} NORMAL\n * @property {number} ADD\n * @property {number} MULTIPLY\n * @property {number} SCREEN\n * @property {number} OVERLAY\n * @property {number} DARKEN\n * @property {number} LIGHTEN\n * @property {number} COLOR_DODGE\n * @property {number} COLOR_BURN\n * @property {number} HARD_LIGHT\n * @property {number} SOFT_LIGHT\n * @property {number} DIFFERENCE\n * @property {number} EXCLUSION\n * @property {number} HUE\n * @property {number} SATURATION\n * @property {number} COLOR\n * @property {number} LUMINOSITY\n */\nvar BLEND_MODES = exports.BLEND_MODES = {\n  NORMAL: 0,\n  ADD: 1,\n  MULTIPLY: 2,\n  SCREEN: 3,\n  OVERLAY: 4,\n  DARKEN: 5,\n  LIGHTEN: 6,\n  COLOR_DODGE: 7,\n  COLOR_BURN: 8,\n  HARD_LIGHT: 9,\n  SOFT_LIGHT: 10,\n  DIFFERENCE: 11,\n  EXCLUSION: 12,\n  HUE: 13,\n  SATURATION: 14,\n  COLOR: 15,\n  LUMINOSITY: 16\n};\n\n/**\n * Various webgl draw modes. These can be used to specify which GL drawMode to use\n * under certain situations and renderers.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} POINTS\n * @property {number} LINES\n * @property {number} LINE_LOOP\n * @property {number} LINE_STRIP\n * @property {number} TRIANGLES\n * @property {number} TRIANGLE_STRIP\n * @property {number} TRIANGLE_FAN\n */\nvar DRAW_MODES = exports.DRAW_MODES = {\n  POINTS: 0,\n  LINES: 1,\n  LINE_LOOP: 2,\n  LINE_STRIP: 3,\n  TRIANGLES: 4,\n  TRIANGLE_STRIP: 5,\n  TRIANGLE_FAN: 6\n};\n\n/**\n * The scale modes that are supported by pixi.\n *\n * The PIXI.settings.SCALE_MODE scale mode affects the default scaling mode of future operations.\n * It can be re-assigned to either LINEAR or NEAREST, depending upon suitability.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} LINEAR Smooth scaling\n * @property {number} NEAREST Pixelating scaling\n */\nvar SCALE_MODES = exports.SCALE_MODES = {\n  LINEAR: 0,\n  NEAREST: 1\n};\n\n/**\n * The wrap modes that are supported by pixi.\n *\n * The PIXI.settings.WRAP_MODE wrap mode affects the default wraping mode of future operations.\n * It can be re-assigned to either CLAMP or REPEAT, depending upon suitability.\n * If the texture is non power of two then clamp will be used regardless as webGL can\n * only use REPEAT if the texture is po2.\n *\n * This property only affects WebGL.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} CLAMP - The textures uvs are clamped\n * @property {number} REPEAT - The texture uvs tile and repeat\n * @property {number} MIRRORED_REPEAT - The texture uvs tile and repeat with mirroring\n */\nvar WRAP_MODES = exports.WRAP_MODES = {\n  CLAMP: 0,\n  REPEAT: 1,\n  MIRRORED_REPEAT: 2\n};\n\n/**\n * The gc modes that are supported by pixi.\n *\n * The PIXI.settings.GC_MODE Garbage Collection mode for pixi textures is AUTO\n * If set to GC_MODE, the renderer will occasianally check textures usage. If they are not\n * used for a specified period of time they will be removed from the GPU. They will of course\n * be uploaded again when they are required. This is a silent behind the scenes process that\n * should ensure that the GPU does not  get filled up.\n *\n * Handy for mobile devices!\n * This property only affects WebGL.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} AUTO - Garbage collection will happen periodically automatically\n * @property {number} MANUAL - Garbage collection will need to be called manually\n */\nvar GC_MODES = exports.GC_MODES = {\n  AUTO: 0,\n  MANUAL: 1\n};\n\n/**\n * Regexp for image type by extension.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {RegExp|string}\n * @example `image.png`\n */\nvar URL_FILE_EXTENSION = exports.URL_FILE_EXTENSION = /\\.(\\w{3,4})(?:$|\\?|#)/i;\n\n/**\n * Regexp for data URI.\n * Based on: https://github.com/ragingwind/data-uri-regex\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {RegExp|string}\n * @example `data:image/png;base64`\n */\nvar DATA_URI = exports.DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;(charset=[\\w-]+|base64))?,(.*)/i;\n\n/**\n * Regexp for SVG size.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {RegExp|string}\n * @example `<svg width=\"100\" height=\"100\"></svg>`\n */\nvar SVG_SIZE = exports.SVG_SIZE = /<svg[^>]*(?:\\s(width|height)=('|\")(\\d*(?:\\.\\d+)?)(?:px)?('|\"))[^>]*(?:\\s(width|height)=('|\")(\\d*(?:\\.\\d+)?)(?:px)?('|\"))[^>]*>/i; // eslint-disable-line max-len\n\n/**\n * Constants that identify shapes, mainly to prevent `instanceof` calls.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} POLY\n * @property {number} RECT\n * @property {number} CIRC\n * @property {number} ELIP\n * @property {number} RREC\n */\nvar SHAPES = exports.SHAPES = {\n  POLY: 0,\n  RECT: 1,\n  CIRC: 2,\n  ELIP: 3,\n  RREC: 4\n};\n\n/**\n * Constants that specify float precision in shaders.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {string} LOW='lowp'\n * @property {string} MEDIUM='mediump'\n * @property {string} HIGH='highp'\n */\nvar PRECISION = exports.PRECISION = {\n  LOW: 'lowp',\n  MEDIUM: 'mediump',\n  HIGH: 'highp'\n};\n\n/**\n * Constants that specify the transform type.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} STATIC\n * @property {number} DYNAMIC\n */\nvar TRANSFORM_MODE = exports.TRANSFORM_MODE = {\n  STATIC: 0,\n  DYNAMIC: 1\n};\n\n/**\n * Constants that define the type of gradient on text.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} LINEAR_VERTICAL\n * @property {number} LINEAR_HORIZONTAL\n */\nvar TEXT_GRADIENT = exports.TEXT_GRADIENT = {\n  LINEAR_VERTICAL: 0,\n  LINEAR_HORIZONTAL: 1\n};\n//# sourceMappingURL=const.js.map\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.BaseTextureCache = exports.TextureCache = exports.pluginTarget = exports.EventEmitter = exports.isMobile = undefined;\nexports.uid = uid;\nexports.hex2rgb = hex2rgb;\nexports.hex2string = hex2string;\nexports.rgb2hex = rgb2hex;\nexports.getResolutionOfUrl = getResolutionOfUrl;\nexports.decomposeDataUri = decomposeDataUri;\nexports.getUrlFileExtension = getUrlFileExtension;\nexports.getSvgSize = getSvgSize;\nexports.skipHello = skipHello;\nexports.sayHello = sayHello;\nexports.isWebGLSupported = isWebGLSupported;\nexports.sign = sign;\nexports.removeItems = removeItems;\n\nvar _const = __webpack_require__(1);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _eventemitter = __webpack_require__(7);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _pluginTarget = __webpack_require__(127);\n\nvar _pluginTarget2 = _interopRequireDefault(_pluginTarget);\n\nvar _ismobilejs = __webpack_require__(19);\n\nvar isMobile = _interopRequireWildcard(_ismobilejs);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar nextUid = 0;\nvar saidHello = false;\n\n/**\n * @namespace PIXI.utils\n */\nexports.isMobile = isMobile;\nexports.EventEmitter = _eventemitter2.default;\nexports.pluginTarget = _pluginTarget2.default;\n\n/**\n * Gets the next unique identifier\n *\n * @memberof PIXI.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */\n\nfunction uid() {\n    return ++nextUid;\n}\n\n/**\n * Converts a hex color number to an [R, G, B] array\n *\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The number to convert\n * @param  {number[]} [out=[]] If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color.\n */\nfunction hex2rgb(hex, out) {\n    out = out || [];\n\n    out[0] = (hex >> 16 & 0xFF) / 255;\n    out[1] = (hex >> 8 & 0xFF) / 255;\n    out[2] = (hex & 0xFF) / 255;\n\n    return out;\n}\n\n/**\n * Converts a hex color number to a string.\n *\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex\n * @return {string} The string color.\n */\nfunction hex2string(hex) {\n    hex = hex.toString(16);\n    hex = '000000'.substr(0, 6 - hex.length) + hex;\n\n    return '#' + hex;\n}\n\n/**\n * Converts a color as an [R, G, B] array to a hex number\n *\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - rgb array\n * @return {number} The color number\n */\nfunction rgb2hex(rgb) {\n    return (rgb[0] * 255 << 16) + (rgb[1] * 255 << 8) + rgb[2] * 255;\n}\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @return {number} resolution / device pixel ratio of an asset\n */\nfunction getResolutionOfUrl(url) {\n    var resolution = _settings2.default.RETINA_PREFIX.exec(url);\n\n    if (resolution) {\n        return parseFloat(resolution[1]);\n    }\n\n    return 1;\n}\n\n/**\n * Typedef for decomposeDataUri return object.\n *\n * @typedef {object} DecomposedDataUri\n * @property {mediaType} Media type, eg. `image`\n * @property {subType} Sub type, eg. `png`\n * @property {encoding} Data encoding, eg. `base64`\n * @property {data} The actual data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nfunction decomposeDataUri(dataUri) {\n    var dataUriMatch = _const.DATA_URI.exec(dataUri);\n\n    if (dataUriMatch) {\n        return {\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n            encoding: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n            data: dataUriMatch[4]\n        };\n    }\n\n    return undefined;\n}\n\n/**\n * Get type of the image by regexp for extension. Returns undefined for unknown extensions.\n *\n * @memberof PIXI.utils\n * @function getUrlFileExtension\n * @param {string} url - the image path\n * @return {string|undefined} image extension\n */\nfunction getUrlFileExtension(url) {\n    var extension = _const.URL_FILE_EXTENSION.exec(url);\n\n    if (extension) {\n        return extension[1].toLowerCase();\n    }\n\n    return undefined;\n}\n\n/**\n * Typedef for Size object.\n *\n * @typedef {object} Size\n * @property {width} Width component\n * @property {height} Height component\n */\n\n/**\n * Get size from an svg string using regexp.\n *\n * @memberof PIXI.utils\n * @function getSvgSize\n * @param {string} svgString - a serialized svg element\n * @return {Size|undefined} image extension\n */\nfunction getSvgSize(svgString) {\n    var sizeMatch = _const.SVG_SIZE.exec(svgString);\n    var size = {};\n\n    if (sizeMatch) {\n        size[sizeMatch[1]] = Math.round(parseFloat(sizeMatch[3]));\n        size[sizeMatch[5]] = Math.round(parseFloat(sizeMatch[7]));\n    }\n\n    return size;\n}\n\n/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof PIXI.utils\n */\nfunction skipHello() {\n    saidHello = true;\n}\n\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever makes you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\nfunction sayHello(type) {\n    if (saidHello) {\n        return;\n    }\n\n    if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n        var args = ['\\n %c %c %c Pixi.js ' + _const.VERSION + ' - \\u2730 ' + type + ' \\u2730  %c  %c  http://www.pixijs.com/  %c %c \\u2665%c\\u2665%c\\u2665 \\n\\n', 'background: #ff66a5; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'color: #ff66a5; background: #030307; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'background: #ffc3dc; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;'];\n\n        window.console.log.apply(console, args);\n    } else if (window.console) {\n        window.console.log('Pixi.js ' + _const.VERSION + ' - ' + type + ' - http://www.pixijs.com/');\n    }\n\n    saidHello = true;\n}\n\n/**\n * Helper for checking for webgl support\n *\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @return {boolean} is webgl supported\n */\nfunction isWebGLSupported() {\n    var contextOptions = { stencil: true, failIfMajorPerformanceCaveat: true };\n\n    try {\n        if (!window.WebGLRenderingContext) {\n            return false;\n        }\n\n        var canvas = document.createElement('canvas');\n        var gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\n\n        var success = !!(gl && gl.getContextAttributes().stencil);\n\n        if (gl) {\n            var loseContext = gl.getExtension('WEBGL_lose_context');\n\n            if (loseContext) {\n                loseContext.loseContext();\n            }\n        }\n\n        gl = null;\n\n        return success;\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * Returns sign of number\n *\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nfunction sign(n) {\n    if (n === 0) return 0;\n\n    return n < 0 ? -1 : 1;\n}\n\n/**\n * Remove a range of items from an array\n *\n * @memberof PIXI.utils\n * @function removeItems\n * @param {Array<*>} arr The target array\n * @param {number} startIdx The index to begin removing from (inclusive)\n * @param {number} removeCount How many items to remove\n */\nfunction removeItems(arr, startIdx, removeCount) {\n    var length = arr.length;\n\n    if (startIdx >= length || removeCount === 0) {\n        return;\n    }\n\n    removeCount = startIdx + removeCount > length ? length - startIdx : removeCount;\n\n    var len = length - removeCount;\n\n    for (var i = startIdx; i < len; ++i) {\n        arr[i] = arr[i + removeCount];\n    }\n\n    arr.length = len;\n}\n\n/**\n * @todo Describe property usage\n *\n * @memberof PIXI.utils\n * @private\n */\nvar TextureCache = exports.TextureCache = {};\n\n/**\n * @todo Describe property usage\n *\n * @memberof PIXI.utils\n * @private\n */\nvar BaseTextureCache = exports.BaseTextureCache = {};\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Point = __webpack_require__(24);\n\nObject.defineProperty(exports, 'Point', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Point).default;\n  }\n});\n\nvar _ObservablePoint = __webpack_require__(43);\n\nObject.defineProperty(exports, 'ObservablePoint', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ObservablePoint).default;\n  }\n});\n\nvar _Matrix = __webpack_require__(23);\n\nObject.defineProperty(exports, 'Matrix', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Matrix).default;\n  }\n});\n\nvar _GroupD = __webpack_require__(42);\n\nObject.defineProperty(exports, 'GroupD8', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_GroupD).default;\n  }\n});\n\nvar _Circle = __webpack_require__(100);\n\nObject.defineProperty(exports, 'Circle', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Circle).default;\n  }\n});\n\nvar _Ellipse = __webpack_require__(101);\n\nObject.defineProperty(exports, 'Ellipse', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Ellipse).default;\n  }\n});\n\nvar _Polygon = __webpack_require__(102);\n\nObject.defineProperty(exports, 'Polygon', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Polygon).default;\n  }\n});\n\nvar _Rectangle = __webpack_require__(25);\n\nObject.defineProperty(exports, 'Rectangle', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Rectangle).default;\n  }\n});\n\nvar _RoundedRectangle = __webpack_require__(103);\n\nObject.defineProperty(exports, 'RoundedRectangle', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_RoundedRectangle).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _maxRecommendedTextures = __webpack_require__(126);\n\nvar _maxRecommendedTextures2 = _interopRequireDefault(_maxRecommendedTextures);\n\nvar _canUploadSameBuffer = __webpack_require__(124);\n\nvar _canUploadSameBuffer2 = _interopRequireDefault(_canUploadSameBuffer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @namespace PIXI.settings\n */\nexports.default = {\n\n  /**\n   * Target frames per millisecond.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 0.06\n   */\n  TARGET_FPMS: 0.06,\n\n  /**\n   * If set to true WebGL will attempt make textures mimpaped by default.\n   * Mipmapping will only succeed if the base texture uploaded has power of two dimensions.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {boolean}\n   * @default true\n   */\n  MIPMAP_TEXTURES: true,\n\n  /**\n   * Default resolution / device pixel ratio of the renderer.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 1\n   */\n  RESOLUTION: 1,\n\n  /**\n   * Default filter resolution.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 1\n   */\n  FILTER_RESOLUTION: 1,\n\n  /**\n   * The maximum textures that this device supports.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 32\n   */\n  SPRITE_MAX_TEXTURES: (0, _maxRecommendedTextures2.default)(32),\n\n  // TODO: maybe change to SPRITE.BATCH_SIZE: 2000\n  // TODO: maybe add PARTICLE.BATCH_SIZE: 15000\n\n  /**\n   * The default sprite batch size.\n   *\n   * The default aims to balance desktop and mobile devices.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 4096\n   */\n  SPRITE_BATCH_SIZE: 4096,\n\n  /**\n   * The prefix that denotes a URL is for a retina asset.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {RegExp|string}\n   * @example `@2x`\n   * @default /@(.+)x/\n   */\n  RETINA_PREFIX: /@(.+)x/,\n\n  /**\n   * The default render options if none are supplied to {@link PIXI.WebGLRenderer}\n   * or {@link PIXI.CanvasRenderer}.\n   *\n   * @static\n   * @constant\n   * @memberof PIXI.settings\n   * @type {object}\n   * @property {HTMLCanvasElement} view=null\n   * @property {number} resolution=1\n   * @property {boolean} antialias=false\n   * @property {boolean} forceFXAA=false\n   * @property {boolean} autoResize=false\n   * @property {boolean} transparent=false\n   * @property {number} backgroundColor=0x000000\n   * @property {boolean} clearBeforeRender=true\n   * @property {boolean} preserveDrawingBuffer=false\n   * @property {boolean} roundPixels=false\n   */\n  RENDER_OPTIONS: {\n    view: null,\n    antialias: false,\n    forceFXAA: false,\n    autoResize: false,\n    transparent: false,\n    backgroundColor: 0x000000,\n    clearBeforeRender: true,\n    preserveDrawingBuffer: false,\n    roundPixels: false\n  },\n\n  /**\n   * Default transform type.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default PIXI.TRANSFORM_MODE.STATIC\n   */\n  TRANSFORM_MODE: 0,\n\n  /**\n   * Default Garbage Collection mode.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default PIXI.GC_MODES.AUTO\n   */\n  GC_MODE: 0,\n\n  /**\n   * Default Garbage Collection max idle.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 3600\n   */\n  GC_MAX_IDLE: 60 * 60,\n\n  /**\n   * Default Garbage Collection maximum check count.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 600\n   */\n  GC_MAX_CHECK_COUNT: 60 * 10,\n\n  /**\n   * Default wrap modes that are supported by pixi.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default PIXI.WRAP_MODES.CLAMP\n   */\n  WRAP_MODE: 0,\n\n  /**\n   * The scale modes that are supported by pixi.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default PIXI.SCALE_MODES.LINEAR\n   */\n  SCALE_MODE: 0,\n\n  /**\n   * Default specify float precision in shaders.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {string}\n   * @default PIXI.PRECISION.MEDIUM\n   */\n  PRECISION: 'mediump',\n\n  /**\n   * Can we upload the same buffer in a single frame?\n   *\n   * @static\n   * @constant\n   * @memberof PIXI\n   * @type {boolean}\n   */\n  CAN_UPLOAD_SAME_BUFFER: (0, _canUploadSameBuffer2.default)()\n\n};\n//# sourceMappingURL=settings.js.map\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar gl = {\n    createContext:          __webpack_require__(172),\n    setVertexAttribArrays:  __webpack_require__(74),\n    GLBuffer:               __webpack_require__(168),\n    GLFramebuffer:          __webpack_require__(169),\n    GLShader:               __webpack_require__(170),\n    GLTexture:              __webpack_require__(73),\n    VertexArrayObject:      __webpack_require__(171),\n    shader:                 __webpack_require__(173)\n};\n\n// Export for Node-compatible environments\nif (typeof module !== 'undefined' && module.exports)\n{\n    // Export the module\n    module.exports = gl;\n}\n\n// Add to the browser window pixi.gl\nif (typeof window !== 'undefined')\n{\n    // add the window object\n    window.PIXI = window.PIXI || {};\n    window.PIXI.glCore = gl;\n}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(176)))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _pixiGlCore = __webpack_require__(5);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar PRECISION = _settings2.default.PRECISION;\n\n\nfunction checkPrecision(src) {\n    if (src instanceof Array) {\n        if (src[0].substring(0, 9) !== 'precision') {\n            var copy = src.slice(0);\n\n            copy.unshift('precision ' + PRECISION + ' float;');\n\n            return copy;\n        }\n    } else if (src.substring(0, 9) !== 'precision') {\n        return 'precision ' + PRECISION + ' float;\\n' + src;\n    }\n\n    return src;\n}\n\n/**\n * Wrapper class, webGL Shader for Pixi.\n * Adds precision string if vertexSrc or fragmentSrc have no mention of it.\n *\n * @class\n * @extends GLShader\n * @memberof PIXI\n */\n\nvar Shader = function (_GLShader) {\n    _inherits(Shader, _GLShader);\n\n    /**\n     *\n     * @param {WebGLRenderingContext} gl - The current WebGL rendering context\n     * @param {string|string[]} vertexSrc - The vertex shader source as an array of strings.\n     * @param {string|string[]} fragmentSrc - The fragment shader source as an array of strings.\n     */\n    function Shader(gl, vertexSrc, fragmentSrc) {\n        _classCallCheck(this, Shader);\n\n        return _possibleConstructorReturn(this, _GLShader.call(this, gl, checkPrecision(vertexSrc), checkPrecision(fragmentSrc)));\n    }\n\n    return Shader;\n}(_pixiGlCore.GLShader);\n\nexports.default = Shader;\n//# sourceMappingURL=Shader.js.map\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class\n * @memberof PIXI\n */\nvar WebGLManager = function () {\n  /**\n   * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n   */\n  function WebGLManager(renderer) {\n    _classCallCheck(this, WebGLManager);\n\n    /**\n     * The renderer this manager works for.\n     *\n     * @member {PIXI.WebGLRenderer}\n     */\n    this.renderer = renderer;\n\n    this.renderer.on('context', this.onContextChange, this);\n  }\n\n  /**\n   * Generic method called when there is a WebGL context change.\n   *\n   */\n\n\n  WebGLManager.prototype.onContextChange = function onContextChange() {}\n  // do some codes init!\n\n\n  /**\n   * Generic destroy methods to be overridden by the subclass\n   *\n   */\n  ;\n\n  WebGLManager.prototype.destroy = function destroy() {\n    this.renderer.off('context', this.onContextChange, this);\n\n    this.renderer = null;\n  };\n\n  return WebGLManager;\n}();\n\nexports.default = WebGLManager;\n//# sourceMappingURL=WebGLManager.js.map\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _utils = __webpack_require__(2);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _eventemitter = __webpack_require__(7);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _determineCrossOrigin = __webpack_require__(125);\n\nvar _determineCrossOrigin2 = _interopRequireDefault(_determineCrossOrigin);\n\nvar _bitTwiddle = __webpack_require__(21);\n\nvar _bitTwiddle2 = _interopRequireDefault(_bitTwiddle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RESOLUTION = _settings2.default.RESOLUTION,\n    MIPMAP_TEXTURES = _settings2.default.MIPMAP_TEXTURES,\n    SCALE_MODE = _settings2.default.SCALE_MODE,\n    WRAP_MODE = _settings2.default.WRAP_MODE;\n\n/**\n * A texture stores the information that represents an image. All textures have a base texture.\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n */\n\nvar BaseTexture = function (_EventEmitter) {\n    _inherits(BaseTexture, _EventEmitter);\n\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} [source] - the source object of the texture.\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture\n     */\n    function BaseTexture(source, scaleMode, resolution) {\n        _classCallCheck(this, BaseTexture);\n\n        var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n        _this.uid = (0, _utils.uid)();\n\n        _this.touched = 0;\n\n        /**\n         * The resolution / device pixel ratio of the texture\n         *\n         * @member {number}\n         * @default 1\n         */\n        _this.resolution = resolution || RESOLUTION;\n\n        /**\n         * The width of the base texture set when the image has loaded\n         *\n         * @readonly\n         * @member {number}\n         */\n        _this.width = 100;\n\n        /**\n         * The height of the base texture set when the image has loaded\n         *\n         * @readonly\n         * @member {number}\n         */\n        _this.height = 100;\n\n        // TODO docs\n        // used to store the actual dimensions of the source\n        /**\n         * Used to store the actual width of the source of this texture\n         *\n         * @readonly\n         * @member {number}\n         */\n        _this.realWidth = 100;\n        /**\n         * Used to store the actual height of the source of this texture\n         *\n         * @readonly\n         * @member {number}\n         */\n        _this.realHeight = 100;\n\n        /**\n         * The scale mode to apply when scaling this texture\n         *\n         * @member {number}\n         * @default PIXI.settings.SCALE_MODE\n         * @see PIXI.SCALE_MODES\n         */\n        _this.scaleMode = scaleMode || SCALE_MODE;\n\n        /**\n         * Set to true once the base texture has successfully loaded.\n         *\n         * This is never true if the underlying source fails to load or has no texture data.\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        _this.hasLoaded = false;\n\n        /**\n         * Set to true if the source is currently loading.\n         *\n         * If an Image source is loading the 'loaded' or 'error' event will be\n         * dispatched when the operation ends. An underyling source that is\n         * immediately-available bypasses loading entirely.\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        _this.isLoading = false;\n\n        /**\n         * The image source that is used to create the texture.\n         *\n         * TODO: Make this a setter that calls loadSource();\n         *\n         * @readonly\n         * @member {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.source = null; // set in loadSource, if at all\n\n        /**\n         * The image source that is used to create the texture. This is used to\n         * store the original Svg source when it is replaced with a canvas element.\n         *\n         * TODO: Currently not in use but could be used when re-scaling svg.\n         *\n         * @readonly\n         * @member {Image}\n         */\n        _this.origSource = null; // set in loadSvg, if at all\n\n        /**\n         * Type of image defined in source, eg. `png` or `svg`\n         *\n         * @readonly\n         * @member {string}\n         */\n        _this.imageType = null; // set in updateImageType\n\n        /**\n         * Scale for source image. Used with Svg images to scale them before rasterization.\n         *\n         * @readonly\n         * @member {number}\n         */\n        _this.sourceScale = 1.0;\n\n        /**\n         * Controls if RGB channels should be pre-multiplied by Alpha  (WebGL only)\n         * All blend modes, and shaders written for default value. Change it on your own risk.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        _this.premultipliedAlpha = true;\n\n        /**\n         * The image url of the texture\n         *\n         * @member {string}\n         */\n        _this.imageUrl = null;\n\n        /**\n         * Whether or not the texture is a power of two, try to use power of two textures as much\n         * as you can\n         *\n         * @private\n         * @member {boolean}\n         */\n        _this.isPowerOfTwo = false;\n\n        // used for webGL\n\n        /**\n         *\n         * Set this to true if a mipmap of this texture needs to be generated. This value needs\n         * to be set before the texture is used\n         * Also the texture must be a power of two size to work\n         *\n         * @member {boolean}\n         * @see PIXI.MIPMAP_TEXTURES\n         */\n        _this.mipmap = MIPMAP_TEXTURES;\n\n        /**\n         *\n         * WebGL Texture wrap mode\n         *\n         * @member {number}\n         * @see PIXI.WRAP_MODES\n         */\n        _this.wrapMode = WRAP_MODE;\n\n        /**\n         * A map of renderer IDs to webgl textures\n         *\n         * @private\n         * @member {object<number, WebGLTexture>}\n         */\n        _this._glTextures = {};\n\n        _this._enabled = 0;\n        _this._virtalBoundId = -1;\n\n        // if no source passed don't try to load\n        if (source) {\n            _this.loadSource(source);\n        }\n\n        /**\n         * Fired when a not-immediately-available source finishes loading.\n         *\n         * @protected\n         * @event loaded\n         * @memberof PIXI.BaseTexture#\n         */\n\n        /**\n         * Fired when a not-immediately-available source fails to load.\n         *\n         * @protected\n         * @event error\n         * @memberof PIXI.BaseTexture#\n         */\n        return _this;\n    }\n\n    /**\n     * Updates the texture on all the webgl renderers, this also assumes the src has changed.\n     *\n     * @fires update\n     */\n\n\n    BaseTexture.prototype.update = function update() {\n        // Svg size is handled during load\n        if (this.imageType !== 'svg') {\n            this.realWidth = this.source.naturalWidth || this.source.videoWidth || this.source.width;\n            this.realHeight = this.source.naturalHeight || this.source.videoHeight || this.source.height;\n\n            this.width = this.realWidth / this.resolution;\n            this.height = this.realHeight / this.resolution;\n\n            this.isPowerOfTwo = _bitTwiddle2.default.isPow2(this.realWidth) && _bitTwiddle2.default.isPow2(this.realHeight);\n        }\n\n        this.emit('update', this);\n    };\n\n    /**\n     * Load a source.\n     *\n     * If the source is not-immediately-available, such as an image that needs to be\n     * downloaded, then the 'loaded' or 'error' event will be dispatched in the future\n     * and `hasLoaded` will remain false after this call.\n     *\n     * The logic state after calling `loadSource` directly or indirectly (eg. `fromImage`, `new BaseTexture`) is:\n     *\n     *     if (texture.hasLoaded) {\n     *        // texture ready for use\n     *     } else if (texture.isLoading) {\n     *        // listen to 'loaded' and/or 'error' events on texture\n     *     } else {\n     *        // not loading, not going to load UNLESS the source is reloaded\n     *        // (it may still make sense to listen to the events)\n     *     }\n     *\n     * @protected\n     * @param {HTMLImageElement|HTMLCanvasElement} source - the source object of the texture.\n     */\n\n\n    BaseTexture.prototype.loadSource = function loadSource(source) {\n        var _this2 = this;\n\n        var wasLoading = this.isLoading;\n\n        this.hasLoaded = false;\n        this.isLoading = false;\n\n        if (wasLoading && this.source) {\n            this.source.onload = null;\n            this.source.onerror = null;\n        }\n\n        var firstSourceLoaded = !this.source;\n\n        this.source = source;\n\n        // Apply source if loaded. Otherwise setup appropriate loading monitors.\n        if ((source.src && source.complete || source.getContext) && source.width && source.height) {\n            this._updateImageType();\n\n            if (this.imageType === 'svg') {\n                this._loadSvgSource();\n            } else {\n                this._sourceLoaded();\n            }\n\n            if (firstSourceLoaded) {\n                // send loaded event if previous source was null and we have been passed a pre-loaded IMG element\n                this.emit('loaded', this);\n            }\n        } else if (!source.getContext) {\n            var _ret = function () {\n                // Image fail / not ready\n                _this2.isLoading = true;\n\n                var scope = _this2;\n\n                source.onload = function () {\n                    scope._updateImageType();\n                    source.onload = null;\n                    source.onerror = null;\n\n                    if (!scope.isLoading) {\n                        return;\n                    }\n\n                    scope.isLoading = false;\n                    scope._sourceLoaded();\n\n                    if (scope.imageType === 'svg') {\n                        scope._loadSvgSource();\n\n                        return;\n                    }\n\n                    scope.emit('loaded', scope);\n                };\n\n                source.onerror = function () {\n                    source.onload = null;\n                    source.onerror = null;\n\n                    if (!scope.isLoading) {\n                        return;\n                    }\n\n                    scope.isLoading = false;\n                    scope.emit('error', scope);\n                };\n\n                // Per http://www.w3.org/TR/html5/embedded-content-0.html#the-img-element\n                //   \"The value of `complete` can thus change while a script is executing.\"\n                // So complete needs to be re-checked after the callbacks have been added..\n                // NOTE: complete will be true if the image has no src so best to check if the src is set.\n                if (source.complete && source.src) {\n                    // ..and if we're complete now, no need for callbacks\n                    source.onload = null;\n                    source.onerror = null;\n\n                    if (scope.imageType === 'svg') {\n                        scope._loadSvgSource();\n\n                        return {\n                            v: void 0\n                        };\n                    }\n\n                    _this2.isLoading = false;\n\n                    if (source.width && source.height) {\n                        _this2._sourceLoaded();\n\n                        // If any previous subscribers possible\n                        if (wasLoading) {\n                            _this2.emit('loaded', _this2);\n                        }\n                    }\n                    // If any previous subscribers possible\n                    else if (wasLoading) {\n                            _this2.emit('error', _this2);\n                        }\n                }\n            }();\n\n            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n        }\n    };\n\n    /**\n     * Updates type of the source image.\n     */\n\n\n    BaseTexture.prototype._updateImageType = function _updateImageType() {\n        if (!this.imageUrl) {\n            return;\n        }\n\n        var dataUri = (0, _utils.decomposeDataUri)(this.imageUrl);\n        var imageType = void 0;\n\n        if (dataUri && dataUri.mediaType === 'image') {\n            // Check for subType validity\n            var firstSubType = dataUri.subType.split('+')[0];\n\n            imageType = (0, _utils.getUrlFileExtension)('.' + firstSubType);\n\n            if (!imageType) {\n                throw new Error('Invalid image type in data URI.');\n            }\n        } else {\n            imageType = (0, _utils.getUrlFileExtension)(this.imageUrl);\n\n            if (!imageType) {\n                imageType = 'png';\n            }\n        }\n\n        this.imageType = imageType;\n    };\n\n    /**\n     * Checks if `source` is an SVG image and whether it's loaded via a URL or a data URI. Then calls\n     * `_loadSvgSourceUsingDataUri` or `_loadSvgSourceUsingXhr`.\n     */\n\n\n    BaseTexture.prototype._loadSvgSource = function _loadSvgSource() {\n        if (this.imageType !== 'svg') {\n            // Do nothing if source is not svg\n            return;\n        }\n\n        var dataUri = (0, _utils.decomposeDataUri)(this.imageUrl);\n\n        if (dataUri) {\n            this._loadSvgSourceUsingDataUri(dataUri);\n        } else {\n            // We got an URL, so we need to do an XHR to check the svg size\n            this._loadSvgSourceUsingXhr();\n        }\n    };\n\n    /**\n     * Reads an SVG string from data URI and then calls `_loadSvgSourceUsingString`.\n     *\n     * @param {string} dataUri - The data uri to load from.\n     */\n\n\n    BaseTexture.prototype._loadSvgSourceUsingDataUri = function _loadSvgSourceUsingDataUri(dataUri) {\n        var svgString = void 0;\n\n        if (dataUri.encoding === 'base64') {\n            if (!atob) {\n                throw new Error('Your browser doesn\\'t support base64 conversions.');\n            }\n            svgString = atob(dataUri.data);\n        } else {\n            svgString = dataUri.data;\n        }\n\n        this._loadSvgSourceUsingString(svgString);\n    };\n\n    /**\n     * Loads an SVG string from `imageUrl` using XHR and then calls `_loadSvgSourceUsingString`.\n     */\n\n\n    BaseTexture.prototype._loadSvgSourceUsingXhr = function _loadSvgSourceUsingXhr() {\n        var _this3 = this;\n\n        var svgXhr = new XMLHttpRequest();\n\n        // This throws error on IE, so SVG Document can't be used\n        // svgXhr.responseType = 'document';\n\n        // This is not needed since we load the svg as string (breaks IE too)\n        // but overrideMimeType() can be used to force the response to be parsed as XML\n        // svgXhr.overrideMimeType('image/svg+xml');\n\n        svgXhr.onload = function () {\n            if (svgXhr.readyState !== svgXhr.DONE || svgXhr.status !== 200) {\n                throw new Error('Failed to load SVG using XHR.');\n            }\n\n            _this3._loadSvgSourceUsingString(svgXhr.response);\n        };\n\n        svgXhr.onerror = function () {\n            return _this3.emit('error', _this3);\n        };\n\n        svgXhr.open('GET', this.imageUrl, true);\n        svgXhr.send();\n    };\n\n    /**\n     * Loads texture using an SVG string. The original SVG Image is stored as `origSource` and the\n     * created canvas is the new `source`. The SVG is scaled using `sourceScale`. Called by\n     * `_loadSvgSourceUsingXhr` or `_loadSvgSourceUsingDataUri`.\n     *\n     * @param  {string} svgString SVG source as string\n     *\n     * @fires loaded\n     */\n\n\n    BaseTexture.prototype._loadSvgSourceUsingString = function _loadSvgSourceUsingString(svgString) {\n        var svgSize = (0, _utils.getSvgSize)(svgString);\n\n        var svgWidth = svgSize.width;\n        var svgHeight = svgSize.height;\n\n        if (!svgWidth || !svgHeight) {\n            throw new Error('The SVG image must have width and height defined (in pixels), canvas API needs them.');\n        }\n\n        // Scale realWidth and realHeight\n        this.realWidth = Math.round(svgWidth * this.sourceScale);\n        this.realHeight = Math.round(svgHeight * this.sourceScale);\n\n        this.width = this.realWidth / this.resolution;\n        this.height = this.realHeight / this.resolution;\n\n        // Check pow2 after scale\n        this.isPowerOfTwo = _bitTwiddle2.default.isPow2(this.realWidth) && _bitTwiddle2.default.isPow2(this.realHeight);\n\n        // Create a canvas element\n        var canvas = document.createElement('canvas');\n\n        canvas.width = this.realWidth;\n        canvas.height = this.realHeight;\n        canvas._pixiId = 'canvas_' + (0, _utils.uid)();\n\n        // Draw the Svg to the canvas\n        canvas.getContext('2d').drawImage(this.source, 0, 0, svgWidth, svgHeight, 0, 0, this.realWidth, this.realHeight);\n\n        // Replace the original source image with the canvas\n        this.origSource = this.source;\n        this.source = canvas;\n\n        // Add also the canvas in cache (destroy clears by `imageUrl` and `source._pixiId`)\n        _utils.BaseTextureCache[canvas._pixiId] = this;\n\n        this.isLoading = false;\n        this._sourceLoaded();\n        this.emit('loaded', this);\n    };\n\n    /**\n     * Used internally to update the width, height, and some other tracking vars once\n     * a source has successfully loaded.\n     *\n     * @private\n     */\n\n\n    BaseTexture.prototype._sourceLoaded = function _sourceLoaded() {\n        this.hasLoaded = true;\n        this.update();\n    };\n\n    /**\n     * Destroys this base texture\n     *\n     */\n\n\n    BaseTexture.prototype.destroy = function destroy() {\n        if (this.imageUrl) {\n            delete _utils.BaseTextureCache[this.imageUrl];\n            delete _utils.TextureCache[this.imageUrl];\n\n            this.imageUrl = null;\n\n            if (!navigator.isCocoonJS) {\n                this.source.src = '';\n            }\n        }\n        // An svg source has both `imageUrl` and `__pixiId`, so no `else if` here\n        if (this.source && this.source._pixiId) {\n            delete _utils.BaseTextureCache[this.source._pixiId];\n        }\n\n        this.source = null;\n\n        this.dispose();\n    };\n\n    /**\n     * Frees the texture from WebGL memory without destroying this texture object.\n     * This means you can still use the texture later which will upload it to GPU\n     * memory again.\n     *\n     */\n\n\n    BaseTexture.prototype.dispose = function dispose() {\n        this.emit('dispose', this);\n    };\n\n    /**\n     * Changes the source image of the texture.\n     * The original source must be an Image element.\n     *\n     * @param {string} newSrc - the path of the image\n     */\n\n\n    BaseTexture.prototype.updateSourceImage = function updateSourceImage(newSrc) {\n        this.source.src = newSrc;\n\n        this.loadSource(this.source);\n    };\n\n    /**\n     * Helper function that creates a base texture from the given image url.\n     * If the image is not in the base texture cache it will be created and loaded.\n     *\n     * @static\n     * @param {string} imageUrl - The image url of the texture\n     * @param {boolean} [crossorigin=(auto)] - Should use anonymous CORS? Defaults to true if the URL is not a data-URI.\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [sourceScale=(auto)] - Scale for the original image, used with Svg images.\n     * @return {PIXI.BaseTexture} The new base texture.\n     */\n\n\n    BaseTexture.fromImage = function fromImage(imageUrl, crossorigin, scaleMode, sourceScale) {\n        var baseTexture = _utils.BaseTextureCache[imageUrl];\n\n        if (!baseTexture) {\n            // new Image() breaks tex loading in some versions of Chrome.\n            // See https://code.google.com/p/chromium/issues/detail?id=238071\n            var image = new Image(); // document.createElement('img');\n\n            if (crossorigin === undefined && imageUrl.indexOf('data:') !== 0) {\n                image.crossOrigin = (0, _determineCrossOrigin2.default)(imageUrl);\n            }\n\n            baseTexture = new BaseTexture(image, scaleMode);\n            baseTexture.imageUrl = imageUrl;\n\n            if (sourceScale) {\n                baseTexture.sourceScale = sourceScale;\n            }\n\n            // if there is an @2x at the end of the url we are going to assume its a highres image\n            baseTexture.resolution = (0, _utils.getResolutionOfUrl)(imageUrl);\n\n            image.src = imageUrl; // Setting this triggers load\n\n            _utils.BaseTextureCache[imageUrl] = baseTexture;\n        }\n\n        return baseTexture;\n    };\n\n    /**\n     * Helper function that creates a base texture from the given canvas element.\n     *\n     * @static\n     * @param {HTMLCanvasElement} canvas - The canvas element source of the texture\n     * @param {number} scaleMode - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.BaseTexture} The new base texture.\n     */\n\n\n    BaseTexture.fromCanvas = function fromCanvas(canvas, scaleMode) {\n        if (!canvas._pixiId) {\n            canvas._pixiId = 'canvas_' + (0, _utils.uid)();\n        }\n\n        var baseTexture = _utils.BaseTextureCache[canvas._pixiId];\n\n        if (!baseTexture) {\n            baseTexture = new BaseTexture(canvas, scaleMode);\n            _utils.BaseTextureCache[canvas._pixiId] = baseTexture;\n        }\n\n        return baseTexture;\n    };\n\n    return BaseTexture;\n}(_eventemitter2.default);\n\nexports.default = BaseTexture;\n//# sourceMappingURL=BaseTexture.js.map\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTexture = __webpack_require__(10);\n\nvar _BaseTexture2 = _interopRequireDefault(_BaseTexture);\n\nvar _VideoBaseTexture = __webpack_require__(53);\n\nvar _VideoBaseTexture2 = _interopRequireDefault(_VideoBaseTexture);\n\nvar _TextureUvs = __webpack_require__(52);\n\nvar _TextureUvs2 = _interopRequireDefault(_TextureUvs);\n\nvar _eventemitter = __webpack_require__(7);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _math = __webpack_require__(3);\n\nvar _utils = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A texture stores the information that represents an image or part of an image. It cannot be added\n * to the display list directly. Instead use it as the texture for a Sprite. If no frame is provided\n * then the whole image is used.\n *\n * You can directly create a texture from an image and then reuse it multiple times like this :\n *\n * ```js\n * let texture = PIXI.Texture.fromImage('assets/image.png');\n * let sprite1 = new PIXI.Sprite(texture);\n * let sprite2 = new PIXI.Sprite(texture);\n * ```\n *\n * Textures made from SVGs, loaded or not, cannot be used before the file finishes processing.\n * You can check for this by checking the sprite's _textureID property.\n * ```js\n * var texture = PIXI.Texture.fromImage('assets/image.svg');\n * var sprite1 = new PIXI.Sprite(texture);\n * //sprite1._textureID should not be undefined if the texture has finished processing the SVG file\n * ```\n * You can use a ticker or rAF to ensure your sprites load the finished textures after processing. See issue #3068.\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n */\nvar Texture = function (_EventEmitter) {\n    _inherits(Texture, _EventEmitter);\n\n    /**\n     * @param {PIXI.BaseTexture} baseTexture - The base texture source to create the texture from\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     * @param {PIXI.Rectangle} [orig] - The area of original texture\n     * @param {PIXI.Rectangle} [trim] - Trimmed rectangle of original texture\n     * @param {number} [rotate] - indicates how the texture was rotated by texture packer. See {@link PIXI.GroupD8}\n     */\n    function Texture(baseTexture, frame, orig, trim, rotate) {\n        _classCallCheck(this, Texture);\n\n        /**\n         * Does this Texture have any frame data assigned to it?\n         *\n         * @member {boolean}\n         */\n        var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n        _this.noFrame = false;\n\n        if (!frame) {\n            _this.noFrame = true;\n            frame = new _math.Rectangle(0, 0, 1, 1);\n        }\n\n        if (baseTexture instanceof Texture) {\n            baseTexture = baseTexture.baseTexture;\n        }\n\n        /**\n         * The base texture that this texture uses.\n         *\n         * @member {PIXI.BaseTexture}\n         */\n        _this.baseTexture = baseTexture;\n\n        /**\n         * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n         * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this._frame = frame;\n\n        /**\n         * This is the trimmed area of original texture, before it was put in atlas\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this.trim = trim;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        _this.valid = false;\n\n        /**\n         * This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)\n         *\n         * @member {boolean}\n         */\n        _this.requiresUpdate = false;\n\n        /**\n         * The WebGL UV data cache.\n         *\n         * @member {PIXI.TextureUvs}\n         * @private\n         */\n        _this._uvs = null;\n\n        /**\n         * This is the area of original texture, before it was put in atlas\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this.orig = orig || frame; // new Rectangle(0, 0, 1, 1);\n\n        _this._rotate = Number(rotate || 0);\n\n        if (rotate === true) {\n            // this is old texturepacker legacy, some games/libraries are passing \"true\" for rotated textures\n            _this._rotate = 2;\n        } else if (_this._rotate % 2 !== 0) {\n            throw new Error('attempt to use diamond-shaped UVs. If you are sure, set rotation manually');\n        }\n\n        if (baseTexture.hasLoaded) {\n            if (_this.noFrame) {\n                frame = new _math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n\n                // if there is no frame we should monitor for any base texture changes..\n                baseTexture.on('update', _this.onBaseTextureUpdated, _this);\n            }\n            _this.frame = frame;\n        } else {\n            baseTexture.once('loaded', _this.onBaseTextureLoaded, _this);\n        }\n\n        /**\n         * Fired when the texture is updated. This happens if the frame or the baseTexture is updated.\n         *\n         * @event update\n         * @memberof PIXI.Texture#\n         * @protected\n         */\n\n        _this._updateID = 0;\n\n        /**\n         * Extra field for extra plugins. May contain clamp settings and some matrices\n         * @type {Object}\n         */\n        _this.transform = null;\n        return _this;\n    }\n\n    /**\n     * Updates this texture on the gpu.\n     *\n     */\n\n\n    Texture.prototype.update = function update() {\n        this.baseTexture.update();\n    };\n\n    /**\n     * Called when the base texture is loaded\n     *\n     * @private\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */\n\n\n    Texture.prototype.onBaseTextureLoaded = function onBaseTextureLoaded(baseTexture) {\n        this._updateID++;\n\n        // TODO this code looks confusing.. boo to abusing getters and setters!\n        if (this.noFrame) {\n            this.frame = new _math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n        } else {\n            this.frame = this._frame;\n        }\n\n        this.baseTexture.on('update', this.onBaseTextureUpdated, this);\n        this.emit('update', this);\n    };\n\n    /**\n     * Called when the base texture is updated\n     *\n     * @private\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */\n\n\n    Texture.prototype.onBaseTextureUpdated = function onBaseTextureUpdated(baseTexture) {\n        this._updateID++;\n\n        this._frame.width = baseTexture.width;\n        this._frame.height = baseTexture.height;\n\n        this.emit('update', this);\n    };\n\n    /**\n     * Destroys this texture\n     *\n     * @param {boolean} [destroyBase=false] Whether to destroy the base texture as well\n     */\n\n\n    Texture.prototype.destroy = function destroy(destroyBase) {\n        if (this.baseTexture) {\n            if (destroyBase) {\n                // delete the texture if it exists in the texture cache..\n                // this only needs to be removed if the base texture is actually destroyed too..\n                if (_utils.TextureCache[this.baseTexture.imageUrl]) {\n                    delete _utils.TextureCache[this.baseTexture.imageUrl];\n                }\n\n                this.baseTexture.destroy();\n            }\n\n            this.baseTexture.off('update', this.onBaseTextureUpdated, this);\n            this.baseTexture.off('loaded', this.onBaseTextureLoaded, this);\n\n            this.baseTexture = null;\n        }\n\n        this._frame = null;\n        this._uvs = null;\n        this.trim = null;\n        this.orig = null;\n\n        this.valid = false;\n\n        this.off('dispose', this.dispose, this);\n        this.off('update', this.update, this);\n    };\n\n    /**\n     * Creates a new texture object that acts the same as this one.\n     *\n     * @return {PIXI.Texture} The new texture\n     */\n\n\n    Texture.prototype.clone = function clone() {\n        return new Texture(this.baseTexture, this.frame, this.orig, this.trim, this.rotate);\n    };\n\n    /**\n     * Updates the internal WebGL UV cache.\n     *\n     * @protected\n     */\n\n\n    Texture.prototype._updateUvs = function _updateUvs() {\n        if (!this._uvs) {\n            this._uvs = new _TextureUvs2.default();\n        }\n\n        this._uvs.set(this._frame, this.baseTexture, this.rotate);\n\n        this._updateID++;\n    };\n\n    /**\n     * Helper function that creates a Texture object from the given image url.\n     * If the image is not in the texture cache it will be  created and loaded.\n     *\n     * @static\n     * @param {string} imageUrl - The image url of the texture\n     * @param {boolean} [crossorigin] - Whether requests should be treated as crossorigin\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [sourceScale=(auto)] - Scale for the original image, used with SVG images.\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromImage = function fromImage(imageUrl, crossorigin, scaleMode, sourceScale) {\n        var texture = _utils.TextureCache[imageUrl];\n\n        if (!texture) {\n            texture = new Texture(_BaseTexture2.default.fromImage(imageUrl, crossorigin, scaleMode, sourceScale));\n            _utils.TextureCache[imageUrl] = texture;\n        }\n\n        return texture;\n    };\n\n    /**\n     * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromFrame = function fromFrame(frameId) {\n        var texture = _utils.TextureCache[frameId];\n\n        if (!texture) {\n            throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache');\n        }\n\n        return texture;\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the given canvas element.\n     *\n     * @static\n     * @param {HTMLCanvasElement} canvas - The canvas element source of the texture\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromCanvas = function fromCanvas(canvas, scaleMode) {\n        return new Texture(_BaseTexture2.default.fromCanvas(canvas, scaleMode));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the given video element.\n     *\n     * @static\n     * @param {HTMLVideoElement|string} video - The URL or actual element of the video\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromVideo = function fromVideo(video, scaleMode) {\n        if (typeof video === 'string') {\n            return Texture.fromVideoUrl(video, scaleMode);\n        }\n\n        return new Texture(_VideoBaseTexture2.default.fromVideo(video, scaleMode));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the video url.\n     *\n     * @static\n     * @param {string} videoUrl - URL of the video\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromVideoUrl = function fromVideoUrl(videoUrl, scaleMode) {\n        return new Texture(_VideoBaseTexture2.default.fromUrl(videoUrl, scaleMode));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|PIXI.BaseTexture|HTMLCanvasElement|HTMLVideoElement} source - Source to create texture from\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.from = function from(source) {\n        // TODO auto detect cross origin..\n        // TODO pass in scale mode?\n        if (typeof source === 'string') {\n            var texture = _utils.TextureCache[source];\n\n            if (!texture) {\n                // check if its a video..\n                var isVideo = source.match(/\\.(mp4|webm|ogg|h264|avi|mov)$/) !== null;\n\n                if (isVideo) {\n                    return Texture.fromVideoUrl(source);\n                }\n\n                return Texture.fromImage(source);\n            }\n\n            return texture;\n        } else if (source instanceof HTMLImageElement) {\n            return new Texture(new _BaseTexture2.default(source));\n        } else if (source instanceof HTMLCanvasElement) {\n            return Texture.fromCanvas(source);\n        } else if (source instanceof HTMLVideoElement) {\n            return Texture.fromVideo(source);\n        } else if (source instanceof _BaseTexture2.default) {\n            return new Texture(source);\n        }\n\n        // lets assume its a texture!\n        return source;\n    };\n\n    /**\n     * Adds a texture to the global TextureCache. This cache is shared across the whole PIXI object.\n     *\n     * @static\n     * @param {PIXI.Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the texture will be stored against.\n     */\n\n\n    Texture.addTextureToCache = function addTextureToCache(texture, id) {\n        _utils.TextureCache[id] = texture;\n    };\n\n    /**\n     * Remove a texture from the global TextureCache.\n     *\n     * @static\n     * @param {string} id - The id of the texture to be removed\n     * @return {PIXI.Texture} The texture that was removed\n     */\n\n\n    Texture.removeTextureFromCache = function removeTextureFromCache(id) {\n        var texture = _utils.TextureCache[id];\n\n        delete _utils.TextureCache[id];\n        delete _utils.BaseTextureCache[id];\n\n        return texture;\n    };\n\n    /**\n     * The frame specifies the region of the base texture that this texture uses.\n     *\n     * @member {PIXI.Rectangle}\n     * @memberof PIXI.Texture#\n     */\n\n\n    _createClass(Texture, [{\n        key: 'frame',\n        get: function get() {\n            return this._frame;\n        }\n\n        /**\n         * Set the frame.\n         *\n         * @param {Rectangle} frame - The new frame to set.\n         */\n        ,\n        set: function set(frame) {\n            this._frame = frame;\n\n            this.noFrame = false;\n\n            if (frame.x + frame.width > this.baseTexture.width || frame.y + frame.height > this.baseTexture.height) {\n                throw new Error('Texture Error: frame does not fit inside the base Texture dimensions ' + this);\n            }\n\n            // this.valid = frame && frame.width && frame.height && this.baseTexture.source && this.baseTexture.hasLoaded;\n            this.valid = frame && frame.width && frame.height && this.baseTexture.hasLoaded;\n\n            if (!this.trim && !this.rotate) {\n                this.orig = frame;\n            }\n\n            if (this.valid) {\n                this._updateUvs();\n            }\n        }\n\n        /**\n         * Indicates whether the texture is rotated inside the atlas\n         * set to 2 to compensate for texture packer rotation\n         * set to 6 to compensate for spine packer rotation\n         * can be used to rotate or mirror sprites\n         * See {@link PIXI.GroupD8} for explanation\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'rotate',\n        get: function get() {\n            return this._rotate;\n        }\n\n        /**\n         * Set the rotation\n         *\n         * @param {number} rotate - The new rotation to set.\n         */\n        ,\n        set: function set(rotate) {\n            this._rotate = rotate;\n            if (this.valid) {\n                this._updateUvs();\n            }\n        }\n\n        /**\n         * The width of the Texture in pixels.\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'width',\n        get: function get() {\n            return this.orig ? this.orig.width : 0;\n        }\n\n        /**\n         * The height of the Texture in pixels.\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return this.orig ? this.orig.height : 0;\n        }\n    }]);\n\n    return Texture;\n}(_eventemitter2.default);\n\n/**\n * An empty texture, used often to not have to create multiple empty textures.\n * Can not be destroyed.\n *\n * @static\n * @constant\n */\n\n\nexports.default = Texture;\nTexture.EMPTY = new Texture(new _BaseTexture2.default());\nTexture.EMPTY.destroy = function _emptyDestroy() {/* empty */};\nTexture.EMPTY.on = function _emptyOn() {/* empty */};\nTexture.EMPTY.once = function _emptyOnce() {/* empty */};\nTexture.EMPTY.emit = function _emptyEmit() {/* empty */};\n//# sourceMappingURL=Texture.js.map\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tempPoint = new core.Point();\nvar tempPolygon = new core.Polygon();\n\n/**\n * Base mesh class\n * @class\n * @extends PIXI.Container\n * @memberof PIXI.mesh\n */\n\nvar Mesh = function (_core$Container) {\n  _inherits(Mesh, _core$Container);\n\n  /**\n   * @param {PIXI.Texture} texture - The texture to use\n   * @param {Float32Array} [vertices] - if you want to specify the vertices\n   * @param {Float32Array} [uvs] - if you want to specify the uvs\n   * @param {Uint16Array} [indices] - if you want to specify the indices\n   * @param {number} [drawMode] - the drawMode, can be any of the Mesh.DRAW_MODES consts\n   */\n  function Mesh(texture, vertices, uvs, indices, drawMode) {\n    _classCallCheck(this, Mesh);\n\n    /**\n     * The texture of the Mesh\n     *\n     * @member {PIXI.Texture}\n     * @private\n     */\n    var _this = _possibleConstructorReturn(this, _core$Container.call(this));\n\n    _this._texture = null;\n\n    /**\n     * The Uvs of the Mesh\n     *\n     * @member {Float32Array}\n     */\n    _this.uvs = uvs || new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n\n    /**\n     * An array of vertices\n     *\n     * @member {Float32Array}\n     */\n    _this.vertices = vertices || new Float32Array([0, 0, 100, 0, 100, 100, 0, 100]);\n\n    /*\n     * @member {Uint16Array} An array containing the indices of the vertices\n     */\n    //  TODO auto generate this based on draw mode!\n    _this.indices = indices || new Uint16Array([0, 1, 3, 2]);\n\n    /**\n     * Version of mesh uvs are dirty or not\n     *\n     * @member {number}\n     */\n    _this.dirty = 0;\n\n    /**\n     * Version of mesh indices\n     *\n     * @member {number}\n     */\n    _this.indexDirty = 0;\n\n    /**\n     * The blend mode to be applied to the sprite. Set to `PIXI.BLEND_MODES.NORMAL` to remove\n     * any blend mode.\n     *\n     * @member {number}\n     * @default PIXI.BLEND_MODES.NORMAL\n     * @see PIXI.BLEND_MODES\n     */\n    _this.blendMode = core.BLEND_MODES.NORMAL;\n\n    /**\n     * Triangles in canvas mode are automatically antialiased, use this value to force triangles\n     * to overlap a bit with each other.\n     *\n     * @member {number}\n     */\n    _this.canvasPadding = 0;\n\n    /**\n     * The way the Mesh should be drawn, can be any of the {@link PIXI.mesh.Mesh.DRAW_MODES} consts\n     *\n     * @member {number}\n     * @see PIXI.mesh.Mesh.DRAW_MODES\n     */\n    _this.drawMode = drawMode || Mesh.DRAW_MODES.TRIANGLE_MESH;\n\n    // run texture setter;\n    _this.texture = texture;\n\n    /**\n     * The default shader that is used if a mesh doesn't have a more specific one.\n     *\n     * @member {PIXI.Shader}\n     */\n    _this.shader = null;\n\n    /**\n     * The tint applied to the mesh. This is a [r,g,b] value. A value of [1,1,1] will remove any\n     * tint effect.\n     *\n     * @member {number}\n     * @memberof PIXI.mesh.Mesh#\n     */\n    _this.tintRgb = new Float32Array([1, 1, 1]);\n\n    /**\n     * A map of renderer IDs to webgl render data\n     *\n     * @private\n     * @member {object<number, object>}\n     */\n    _this._glDatas = {};\n    return _this;\n  }\n\n  /**\n   * Renders the object using the WebGL renderer\n   *\n   * @private\n   * @param {PIXI.WebGLRenderer} renderer - a reference to the WebGL renderer\n   */\n\n\n  Mesh.prototype._renderWebGL = function _renderWebGL(renderer) {\n    renderer.setObjectRenderer(renderer.plugins.mesh);\n    renderer.plugins.mesh.render(this);\n  };\n\n  /**\n   * Renders the object using the Canvas renderer\n   *\n   * @private\n   * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n   */\n\n\n  Mesh.prototype._renderCanvas = function _renderCanvas(renderer) {\n    renderer.plugins.mesh.render(this);\n  };\n\n  /**\n   * When the texture is updated, this event will fire to update the scale and frame\n   *\n   * @private\n   */\n\n\n  Mesh.prototype._onTextureUpdate = function _onTextureUpdate() {}\n  /* empty */\n\n\n  /**\n   * Returns the bounds of the mesh as a rectangle. The bounds calculation takes the worldTransform into account.\n   *\n   */\n  ;\n\n  Mesh.prototype._calculateBounds = function _calculateBounds() {\n    // TODO - we can cache local bounds and use them if they are dirty (like graphics)\n    this._bounds.addVertices(this.transform, this.vertices, 0, this.vertices.length);\n  };\n\n  /**\n   * Tests if a point is inside this mesh. Works only for TRIANGLE_MESH\n   *\n   * @param {PIXI.Point} point - the point to test\n   * @return {boolean} the result of the test\n   */\n\n\n  Mesh.prototype.containsPoint = function containsPoint(point) {\n    if (!this.getBounds().contains(point.x, point.y)) {\n      return false;\n    }\n\n    this.worldTransform.applyInverse(point, tempPoint);\n\n    var vertices = this.vertices;\n    var points = tempPolygon.points;\n    var indices = this.indices;\n    var len = this.indices.length;\n    var step = this.drawMode === Mesh.DRAW_MODES.TRIANGLES ? 3 : 1;\n\n    for (var i = 0; i + 2 < len; i += step) {\n      var ind0 = indices[i] * 2;\n      var ind1 = indices[i + 1] * 2;\n      var ind2 = indices[i + 2] * 2;\n\n      points[0] = vertices[ind0];\n      points[1] = vertices[ind0 + 1];\n      points[2] = vertices[ind1];\n      points[3] = vertices[ind1 + 1];\n      points[4] = vertices[ind2];\n      points[5] = vertices[ind2 + 1];\n\n      if (tempPolygon.contains(tempPoint.x, tempPoint.y)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * The texture that the mesh uses.\n   *\n   * @member {PIXI.Texture}\n   * @memberof PIXI.mesh.Mesh#\n   */\n\n\n  _createClass(Mesh, [{\n    key: 'texture',\n    get: function get() {\n      return this._texture;\n    }\n\n    /**\n     * Sets the texture the mesh uses.\n     *\n     * @param {Texture} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      if (this._texture === value) {\n        return;\n      }\n\n      this._texture = value;\n\n      if (value) {\n        // wait for the texture to load\n        if (value.baseTexture.hasLoaded) {\n          this._onTextureUpdate();\n        } else {\n          value.once('update', this._onTextureUpdate, this);\n        }\n      }\n    }\n\n    /**\n     * The tint applied to the mesh. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n     *\n     * @member {number}\n     * @memberof PIXI.mesh.Mesh#\n     * @default 0xFFFFFF\n     */\n\n  }, {\n    key: 'tint',\n    get: function get() {\n      return core.utils.rgb2hex(this.tintRgb);\n    }\n\n    /**\n     * Sets the tint the mesh uses.\n     *\n     * @param {number} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      this.tintRgb = core.utils.hex2rgb(value, this.tintRgb);\n    }\n  }]);\n\n  return Mesh;\n}(core.Container);\n\n/**\n * Different drawing buffer modes supported\n *\n * @static\n * @constant\n * @type {object}\n * @property {number} TRIANGLE_MESH\n * @property {number} TRIANGLES\n */\n\n\nexports.default = Mesh;\nMesh.DRAW_MODES = {\n  TRIANGLE_MESH: 0,\n  TRIANGLES: 1\n};\n//# sourceMappingURL=Mesh.js.map\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = __webpack_require__(2);\n\nvar _DisplayObject2 = __webpack_require__(38);\n\nvar _DisplayObject3 = _interopRequireDefault(_DisplayObject2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A Container represents a collection of display objects.\n * It is the base class of all display objects that act as a container for other objects.\n *\n *```js\n * let container = new PIXI.Container();\n * container.addChild(sprite);\n * ```\n *\n * @class\n * @extends PIXI.DisplayObject\n * @memberof PIXI\n */\nvar Container = function (_DisplayObject) {\n    _inherits(Container, _DisplayObject);\n\n    /**\n     *\n     */\n    function Container() {\n        _classCallCheck(this, Container);\n\n        /**\n         * The array of children of this container.\n         *\n         * @member {PIXI.DisplayObject[]}\n         * @readonly\n         */\n        var _this = _possibleConstructorReturn(this, _DisplayObject.call(this));\n\n        _this.children = [];\n        return _this;\n    }\n\n    /**\n     * Overridable method that can be used by Container subclasses whenever the children array is modified\n     *\n     * @private\n     */\n\n\n    Container.prototype.onChildrenChange = function onChildrenChange() {}\n    /* empty */\n\n\n    /**\n     * Adds one or more children to the container.\n     *\n     * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n     *\n     * @param {...PIXI.DisplayObject} child - The DisplayObject(s) to add to the container\n     * @return {PIXI.DisplayObject} The first child that was added.\n     */\n    ;\n\n    Container.prototype.addChild = function addChild(child) {\n        var argumentsLength = arguments.length;\n\n        // if there is only one argument we can bypass looping through the them\n        if (argumentsLength > 1) {\n            // loop through the arguments property and add all children\n            // use it the right way (.length and [i]) so that this function can still be optimised by JS runtimes\n            for (var i = 0; i < argumentsLength; i++) {\n                this.addChild(arguments[i]);\n            }\n        } else {\n            // if the child has a parent then lets remove it as Pixi objects can only exist in one place\n            if (child.parent) {\n                child.parent.removeChild(child);\n            }\n\n            child.parent = this;\n\n            // ensure a transform will be recalculated..\n            this.transform._parentID = -1;\n            this._boundsID++;\n\n            this.children.push(child);\n\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(this.children.length - 1);\n            child.emit('added', this);\n        }\n\n        return child;\n    };\n\n    /**\n     * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown\n     *\n     * @param {PIXI.DisplayObject} child - The child to add\n     * @param {number} index - The index to place the child in\n     * @return {PIXI.DisplayObject} The child that was added.\n     */\n\n\n    Container.prototype.addChildAt = function addChildAt(child, index) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error(child + 'addChildAt: The index ' + index + ' supplied is out of bounds ' + this.children.length);\n        }\n\n        if (child.parent) {\n            child.parent.removeChild(child);\n        }\n\n        child.parent = this;\n\n        this.children.splice(index, 0, child);\n\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('added', this);\n\n        return child;\n    };\n\n    /**\n     * Swaps the position of 2 Display Objects within this container.\n     *\n     * @param {PIXI.DisplayObject} child - First display object to swap\n     * @param {PIXI.DisplayObject} child2 - Second display object to swap\n     */\n\n\n    Container.prototype.swapChildren = function swapChildren(child, child2) {\n        if (child === child2) {\n            return;\n        }\n\n        var index1 = this.getChildIndex(child);\n        var index2 = this.getChildIndex(child2);\n\n        this.children[index1] = child2;\n        this.children[index2] = child;\n        this.onChildrenChange(index1 < index2 ? index1 : index2);\n    };\n\n    /**\n     * Returns the index position of a child DisplayObject instance\n     *\n     * @param {PIXI.DisplayObject} child - The DisplayObject instance to identify\n     * @return {number} The index position of the child display object to identify\n     */\n\n\n    Container.prototype.getChildIndex = function getChildIndex(child) {\n        var index = this.children.indexOf(child);\n\n        if (index === -1) {\n            throw new Error('The supplied DisplayObject must be a child of the caller');\n        }\n\n        return index;\n    };\n\n    /**\n     * Changes the position of an existing child in the display object container\n     *\n     * @param {PIXI.DisplayObject} child - The child DisplayObject instance for which you want to change the index number\n     * @param {number} index - The resulting index number for the child display object\n     */\n\n\n    Container.prototype.setChildIndex = function setChildIndex(child, index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('The supplied index is out of bounds');\n        }\n\n        var currentIndex = this.getChildIndex(child);\n\n        (0, _utils.removeItems)(this.children, currentIndex, 1); // remove from old position\n        this.children.splice(index, 0, child); // add at new position\n        this.onChildrenChange(index);\n    };\n\n    /**\n     * Returns the child at the specified index\n     *\n     * @param {number} index - The index to get the child at\n     * @return {PIXI.DisplayObject} The child at the given index, if any.\n     */\n\n\n    Container.prototype.getChildAt = function getChildAt(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('getChildAt: Index (' + index + ') does not exist.');\n        }\n\n        return this.children[index];\n    };\n\n    /**\n     * Removes one or more children from the container.\n     *\n     * @param {...PIXI.DisplayObject} child - The DisplayObject(s) to remove\n     * @return {PIXI.DisplayObject} The first child that was removed.\n     */\n\n\n    Container.prototype.removeChild = function removeChild(child) {\n        var argumentsLength = arguments.length;\n\n        // if there is only one argument we can bypass looping through the them\n        if (argumentsLength > 1) {\n            // loop through the arguments property and add all children\n            // use it the right way (.length and [i]) so that this function can still be optimised by JS runtimes\n            for (var i = 0; i < argumentsLength; i++) {\n                this.removeChild(arguments[i]);\n            }\n        } else {\n            var index = this.children.indexOf(child);\n\n            if (index === -1) return null;\n\n            child.parent = null;\n            (0, _utils.removeItems)(this.children, index, 1);\n\n            // ensure a transform will be recalculated..\n            this.transform._parentID = -1;\n            this._boundsID++;\n\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(index);\n            child.emit('removed', this);\n        }\n\n        return child;\n    };\n\n    /**\n     * Removes a child from the specified index position.\n     *\n     * @param {number} index - The index to get the child from\n     * @return {PIXI.DisplayObject} The child that was removed.\n     */\n\n\n    Container.prototype.removeChildAt = function removeChildAt(index) {\n        var child = this.getChildAt(index);\n\n        child.parent = null;\n        (0, _utils.removeItems)(this.children, index, 1);\n\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('removed', this);\n\n        return child;\n    };\n\n    /**\n     * Removes all children from this container that are within the begin and end indexes.\n     *\n     * @param {number} [beginIndex=0] - The beginning position.\n     * @param {number} [endIndex=this.children.length] - The ending position. Default value is size of the container.\n     * @returns {DisplayObject[]} List of removed children\n     */\n\n\n    Container.prototype.removeChildren = function removeChildren() {\n        var beginIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var endIndex = arguments[1];\n\n        var begin = beginIndex;\n        var end = typeof endIndex === 'number' ? endIndex : this.children.length;\n        var range = end - begin;\n        var removed = void 0;\n\n        if (range > 0 && range <= end) {\n            removed = this.children.splice(begin, range);\n\n            for (var i = 0; i < removed.length; ++i) {\n                removed[i].parent = null;\n            }\n\n            this.onChildrenChange(beginIndex);\n\n            for (var _i = 0; _i < removed.length; ++_i) {\n                removed[_i].emit('removed', this);\n            }\n\n            return removed;\n        } else if (range === 0 && this.children.length === 0) {\n            return [];\n        }\n\n        throw new RangeError('removeChildren: numeric values are outside the acceptable range.');\n    };\n\n    /**\n     * Updates the transform on all children of this container for rendering\n     *\n     * @private\n     */\n\n\n    Container.prototype.updateTransform = function updateTransform() {\n        this._boundsID++;\n\n        this.transform.updateTransform(this.parent.transform);\n\n        // TODO: check render flags, how to process stuff here\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n        for (var i = 0, j = this.children.length; i < j; ++i) {\n            var child = this.children[i];\n\n            if (child.visible) {\n                child.updateTransform();\n            }\n        }\n    };\n\n    /**\n     * Recalculates the bounds of the container.\n     *\n     */\n\n\n    Container.prototype.calculateBounds = function calculateBounds() {\n        this._bounds.clear();\n\n        this._calculateBounds();\n\n        for (var i = 0; i < this.children.length; i++) {\n            var child = this.children[i];\n\n            if (!child.visible || !child.renderable) {\n                continue;\n            }\n\n            child.calculateBounds();\n\n            // TODO: filter+mask, need to mask both somehow\n            if (child._mask) {\n                child._mask.calculateBounds();\n                this._bounds.addBoundsMask(child._bounds, child._mask._bounds);\n            } else if (child.filterArea) {\n                this._bounds.addBoundsArea(child._bounds, child.filterArea);\n            } else {\n                this._bounds.addBounds(child._bounds);\n            }\n        }\n\n        this._lastBoundsID = this._boundsID;\n    };\n\n    /**\n     * Recalculates the bounds of the object. Override this to\n     * calculate the bounds of the specific object (not including children).\n     *\n     */\n\n\n    Container.prototype._calculateBounds = function _calculateBounds() {}\n    // FILL IN//\n\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n    ;\n\n    Container.prototype.renderWebGL = function renderWebGL(renderer) {\n        // if the object is not visible or the alpha is 0 then no need to render this element\n        if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n            return;\n        }\n\n        // do a quick check to see if this element has a mask or a filter.\n        if (this._mask || this._filters) {\n            this.renderAdvancedWebGL(renderer);\n        } else {\n            this._renderWebGL(renderer);\n\n            // simple render children!\n            for (var i = 0, j = this.children.length; i < j; ++i) {\n                this.children[i].renderWebGL(renderer);\n            }\n        }\n    };\n\n    /**\n     * Render the object using the WebGL renderer and advanced features.\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    Container.prototype.renderAdvancedWebGL = function renderAdvancedWebGL(renderer) {\n        renderer.flush();\n\n        var filters = this._filters;\n        var mask = this._mask;\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (filters) {\n            if (!this._enabledFilters) {\n                this._enabledFilters = [];\n            }\n\n            this._enabledFilters.length = 0;\n\n            for (var i = 0; i < filters.length; i++) {\n                if (filters[i].enabled) {\n                    this._enabledFilters.push(filters[i]);\n                }\n            }\n\n            if (this._enabledFilters.length) {\n                renderer.filterManager.pushFilter(this, this._enabledFilters);\n            }\n        }\n\n        if (mask) {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // now loop through the children and make sure they get rendered\n        for (var _i2 = 0, j = this.children.length; _i2 < j; _i2++) {\n            this.children[_i2].renderWebGL(renderer);\n        }\n\n        renderer.flush();\n\n        if (mask) {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (filters && this._enabledFilters && this._enabledFilters.length) {\n            renderer.filterManager.popFilter();\n        }\n    };\n\n    /**\n     * To be overridden by the subclasses.\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    Container.prototype._renderWebGL = function _renderWebGL(renderer) // eslint-disable-line no-unused-vars\n    {}\n    // this is where content itself gets rendered...\n\n\n    /**\n     * To be overridden by the subclass\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n    ;\n\n    Container.prototype._renderCanvas = function _renderCanvas(renderer) // eslint-disable-line no-unused-vars\n    {}\n    // this is where content itself gets rendered...\n\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n    ;\n\n    Container.prototype.renderCanvas = function renderCanvas(renderer) {\n        // if not visible or the alpha is 0 then no need to render this\n        if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n            return;\n        }\n\n        if (this._mask) {\n            renderer.maskManager.pushMask(this._mask);\n        }\n\n        this._renderCanvas(renderer);\n        for (var i = 0, j = this.children.length; i < j; ++i) {\n            this.children[i].renderCanvas(renderer);\n        }\n\n        if (this._mask) {\n            renderer.maskManager.popMask(renderer);\n        }\n    };\n\n    /**\n     * Removes all internal references and listeners as well as removes children from the display list.\n     * Do not use a Container after calling `destroy`.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     */\n\n\n    Container.prototype.destroy = function destroy(options) {\n        _DisplayObject.prototype.destroy.call(this);\n\n        var destroyChildren = typeof options === 'boolean' ? options : options && options.children;\n\n        var oldChildren = this.removeChildren(0, this.children.length);\n\n        if (destroyChildren) {\n            for (var i = 0; i < oldChildren.length; ++i) {\n                oldChildren[i].destroy(options);\n            }\n        }\n    };\n\n    /**\n     * The width of the Container, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Container#\n     */\n\n\n    _createClass(Container, [{\n        key: 'width',\n        get: function get() {\n            return this.scale.x * this.getLocalBounds().width;\n        }\n\n        /**\n         * Sets the width of the container by modifying the scale.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            var width = this.getLocalBounds().width;\n\n            if (width !== 0) {\n                this.scale.x = value / width;\n            } else {\n                this.scale.x = 1;\n            }\n\n            this._width = value;\n        }\n\n        /**\n         * The height of the Container, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         * @memberof PIXI.Container#\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return this.scale.y * this.getLocalBounds().height;\n        }\n\n        /**\n         * Sets the height of the container by modifying the scale.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            var height = this.getLocalBounds().height;\n\n            if (height !== 0) {\n                this.scale.y = value / height;\n            } else {\n                this.scale.y = 1;\n            }\n\n            this._height = value;\n        }\n    }]);\n\n    return Container;\n}(_DisplayObject3.default);\n\n// performance increase to avoid using call.. (10x faster)\n\n\nexports.default = Container;\nContainer.prototype.containerUpdateTransform = Container.prototype.updateTransform;\n//# sourceMappingURL=Container.js.map\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = buildLine;\n\nvar _math = __webpack_require__(3);\n\nvar _utils = __webpack_require__(2);\n\n/**\n * Builds a line to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildLine(graphicsData, webGLData) {\n    // TODO OPTIMISE!\n    var points = graphicsData.points;\n\n    if (points.length === 0) {\n        return;\n    }\n    // if the line width is an odd number add 0.5 to align to a whole pixel\n    // commenting this out fixes #711 and #1620\n    // if (graphicsData.lineWidth%2)\n    // {\n    //     for (i = 0; i < points.length; i++)\n    //     {\n    //         points[i] += 0.5;\n    //     }\n    // }\n\n    // get first and last point.. figure out the middle!\n    var firstPoint = new _math.Point(points[0], points[1]);\n    var lastPoint = new _math.Point(points[points.length - 2], points[points.length - 1]);\n\n    // if the first point is the last point - gonna have issues :)\n    if (firstPoint.x === lastPoint.x && firstPoint.y === lastPoint.y) {\n        // need to clone as we are going to slightly modify the shape..\n        points = points.slice();\n\n        points.pop();\n        points.pop();\n\n        lastPoint = new _math.Point(points[points.length - 2], points[points.length - 1]);\n\n        var midPointX = lastPoint.x + (firstPoint.x - lastPoint.x) * 0.5;\n        var midPointY = lastPoint.y + (firstPoint.y - lastPoint.y) * 0.5;\n\n        points.unshift(midPointX, midPointY);\n        points.push(midPointX, midPointY);\n    }\n\n    var verts = webGLData.points;\n    var indices = webGLData.indices;\n    var length = points.length / 2;\n    var indexCount = points.length;\n    var indexStart = verts.length / 6;\n\n    // DRAW the Line\n    var width = graphicsData.lineWidth / 2;\n\n    // sort color\n    var color = (0, _utils.hex2rgb)(graphicsData.lineColor);\n    var alpha = graphicsData.lineAlpha;\n    var r = color[0] * alpha;\n    var g = color[1] * alpha;\n    var b = color[2] * alpha;\n\n    var p1x = points[0];\n    var p1y = points[1];\n    var p2x = points[2];\n    var p2y = points[3];\n    var p3x = 0;\n    var p3y = 0;\n\n    var perpx = -(p1y - p2y);\n    var perpy = p1x - p2x;\n    var perp2x = 0;\n    var perp2y = 0;\n    var perp3x = 0;\n    var perp3y = 0;\n\n    var dist = Math.sqrt(perpx * perpx + perpy * perpy);\n\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    // start\n    verts.push(p1x - perpx, p1y - perpy, r, g, b, alpha);\n\n    verts.push(p1x + perpx, p1y + perpy, r, g, b, alpha);\n\n    for (var i = 1; i < length - 1; ++i) {\n        p1x = points[(i - 1) * 2];\n        p1y = points[(i - 1) * 2 + 1];\n\n        p2x = points[i * 2];\n        p2y = points[i * 2 + 1];\n\n        p3x = points[(i + 1) * 2];\n        p3y = points[(i + 1) * 2 + 1];\n\n        perpx = -(p1y - p2y);\n        perpy = p1x - p2x;\n\n        dist = Math.sqrt(perpx * perpx + perpy * perpy);\n        perpx /= dist;\n        perpy /= dist;\n        perpx *= width;\n        perpy *= width;\n\n        perp2x = -(p2y - p3y);\n        perp2y = p2x - p3x;\n\n        dist = Math.sqrt(perp2x * perp2x + perp2y * perp2y);\n        perp2x /= dist;\n        perp2y /= dist;\n        perp2x *= width;\n        perp2y *= width;\n\n        var a1 = -perpy + p1y - (-perpy + p2y);\n        var b1 = -perpx + p2x - (-perpx + p1x);\n        var c1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);\n        var a2 = -perp2y + p3y - (-perp2y + p2y);\n        var b2 = -perp2x + p2x - (-perp2x + p3x);\n        var c2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);\n\n        var denom = a1 * b2 - a2 * b1;\n\n        if (Math.abs(denom) < 0.1) {\n            denom += 10.1;\n            verts.push(p2x - perpx, p2y - perpy, r, g, b, alpha);\n\n            verts.push(p2x + perpx, p2y + perpy, r, g, b, alpha);\n\n            continue;\n        }\n\n        var px = (b1 * c2 - b2 * c1) / denom;\n        var py = (a2 * c1 - a1 * c2) / denom;\n        var pdist = (px - p2x) * (px - p2x) + (py - p2y) * (py - p2y);\n\n        if (pdist > 196 * width * width) {\n            perp3x = perpx - perp2x;\n            perp3y = perpy - perp2y;\n\n            dist = Math.sqrt(perp3x * perp3x + perp3y * perp3y);\n            perp3x /= dist;\n            perp3y /= dist;\n            perp3x *= width;\n            perp3y *= width;\n\n            verts.push(p2x - perp3x, p2y - perp3y);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x + perp3x, p2y + perp3y);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - perp3x, p2y - perp3y);\n            verts.push(r, g, b, alpha);\n\n            indexCount++;\n        } else {\n            verts.push(px, py);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - (px - p2x), p2y - (py - p2y));\n            verts.push(r, g, b, alpha);\n        }\n    }\n\n    p1x = points[(length - 2) * 2];\n    p1y = points[(length - 2) * 2 + 1];\n\n    p2x = points[(length - 1) * 2];\n    p2y = points[(length - 1) * 2 + 1];\n\n    perpx = -(p1y - p2y);\n    perpy = p1x - p2x;\n\n    dist = Math.sqrt(perpx * perpx + perpy * perpy);\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    verts.push(p2x - perpx, p2y - perpy);\n    verts.push(r, g, b, alpha);\n\n    verts.push(p2x + perpx, p2y + perpy);\n    verts.push(r, g, b, alpha);\n\n    indices.push(indexStart);\n\n    for (var _i = 0; _i < indexCount; ++_i) {\n        indices.push(indexStart++);\n    }\n\n    indices.push(indexStart - 1);\n}\n//# sourceMappingURL=buildLine.js.map\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _SystemRenderer2 = __webpack_require__(44);\n\nvar _SystemRenderer3 = _interopRequireDefault(_SystemRenderer2);\n\nvar _CanvasMaskManager = __webpack_require__(104);\n\nvar _CanvasMaskManager2 = _interopRequireDefault(_CanvasMaskManager);\n\nvar _CanvasRenderTarget = __webpack_require__(45);\n\nvar _CanvasRenderTarget2 = _interopRequireDefault(_CanvasRenderTarget);\n\nvar _mapCanvasBlendModesToPixi = __webpack_require__(105);\n\nvar _mapCanvasBlendModesToPixi2 = _interopRequireDefault(_mapCanvasBlendModesToPixi);\n\nvar _utils = __webpack_require__(2);\n\nvar _const = __webpack_require__(1);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The CanvasRenderer draws the scene and all its content onto a 2d canvas. This renderer should\n * be used for browsers that do not support WebGL. Don't forget to add the CanvasRenderer.view to\n * your DOM or you will not see anything :)\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.SystemRenderer\n */\nvar CanvasRenderer = function (_SystemRenderer) {\n    _inherits(CanvasRenderer, _SystemRenderer);\n\n    /**\n     * @param {number} [width=800] - the width of the canvas view\n     * @param {number} [height=600] - the height of the canvas view\n     * @param {object} [options] - The optional renderer parameters\n     * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n     * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n     * @param {boolean} [options.autoResize=false] - If the render view is automatically resized, default false\n     * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer. The\n     *  resolution of the renderer retina would be 2.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the CanvasRenderer will clear the canvas or\n     *      not before the new render pass.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     * @param {boolean} [options.roundPixels=false] - If true Pixi will Math.floor() x/y values when rendering,\n     *  stopping pixel interpolation.\n     */\n    function CanvasRenderer(width, height) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        _classCallCheck(this, CanvasRenderer);\n\n        var _this = _possibleConstructorReturn(this, _SystemRenderer.call(this, 'Canvas', width, height, options));\n\n        _this.type = _const.RENDERER_TYPE.CANVAS;\n\n        /**\n         * The canvas 2d context that everything is drawn with.\n         *\n         * @member {CanvasRenderingContext2D}\n         */\n        _this.rootContext = _this.view.getContext('2d', { alpha: _this.transparent });\n\n        /**\n         * Boolean flag controlling canvas refresh.\n         *\n         * @member {boolean}\n         */\n        _this.refresh = true;\n\n        /**\n         * Instance of a CanvasMaskManager, handles masking when using the canvas renderer.\n         *\n         * @member {PIXI.CanvasMaskManager}\n         */\n        _this.maskManager = new _CanvasMaskManager2.default(_this);\n\n        /**\n         * The canvas property used to set the canvas smoothing property.\n         *\n         * @member {string}\n         */\n        _this.smoothProperty = 'imageSmoothingEnabled';\n\n        if (!_this.rootContext.imageSmoothingEnabled) {\n            if (_this.rootContext.webkitImageSmoothingEnabled) {\n                _this.smoothProperty = 'webkitImageSmoothingEnabled';\n            } else if (_this.rootContext.mozImageSmoothingEnabled) {\n                _this.smoothProperty = 'mozImageSmoothingEnabled';\n            } else if (_this.rootContext.oImageSmoothingEnabled) {\n                _this.smoothProperty = 'oImageSmoothingEnabled';\n            } else if (_this.rootContext.msImageSmoothingEnabled) {\n                _this.smoothProperty = 'msImageSmoothingEnabled';\n            }\n        }\n\n        _this.initPlugins();\n\n        _this.blendModes = (0, _mapCanvasBlendModesToPixi2.default)();\n        _this._activeBlendMode = null;\n\n        _this.context = null;\n        _this.renderingToScreen = false;\n\n        _this.resize(width, height);\n        return _this;\n    }\n\n    /**\n     * Renders the object to this canvas view\n     *\n     * @param {PIXI.DisplayObject} displayObject - The object to be rendered\n     * @param {PIXI.RenderTexture} [renderTexture] - A render texture to be rendered to.\n     *  If unset, it will render to the root context.\n     * @param {boolean} [clear=false] - Whether to clear the canvas before drawing\n     * @param {PIXI.Transform} [transform] - A transformation to be applied\n     * @param {boolean} [skipUpdateTransform=false] - Whether to skip the update transform\n     */\n\n\n    CanvasRenderer.prototype.render = function render(displayObject, renderTexture, clear, transform, skipUpdateTransform) {\n        if (!this.view) {\n            return;\n        }\n\n        // can be handy to know!\n        this.renderingToScreen = !renderTexture;\n\n        this.emit('prerender');\n\n        if (renderTexture) {\n            renderTexture = renderTexture.baseTexture || renderTexture;\n\n            if (!renderTexture._canvasRenderTarget) {\n                renderTexture._canvasRenderTarget = new _CanvasRenderTarget2.default(renderTexture.width, renderTexture.height, renderTexture.resolution);\n                renderTexture.source = renderTexture._canvasRenderTarget.canvas;\n                renderTexture.valid = true;\n            }\n\n            this.context = renderTexture._canvasRenderTarget.context;\n            this.resolution = renderTexture._canvasRenderTarget.resolution;\n        } else {\n            this.context = this.rootContext;\n        }\n\n        var context = this.context;\n\n        if (!renderTexture) {\n            this._lastObjectRendered = displayObject;\n        }\n\n        if (!skipUpdateTransform) {\n            // update the scene graph\n            var cacheParent = displayObject.parent;\n            var tempWt = this._tempDisplayObjectParent.transform.worldTransform;\n\n            if (transform) {\n                transform.copy(tempWt);\n            } else {\n                tempWt.identity();\n            }\n\n            displayObject.parent = this._tempDisplayObjectParent;\n            displayObject.updateTransform();\n            displayObject.parent = cacheParent;\n            // displayObject.hitArea = //TODO add a temp hit area\n        }\n\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.globalAlpha = 1;\n        context.globalCompositeOperation = this.blendModes[_const.BLEND_MODES.NORMAL];\n\n        if (navigator.isCocoonJS && this.view.screencanvas) {\n            context.fillStyle = 'black';\n            context.clear();\n        }\n\n        if (clear !== undefined ? clear : this.clearBeforeRender) {\n            if (this.renderingToScreen) {\n                if (this.transparent) {\n                    context.clearRect(0, 0, this.width, this.height);\n                } else {\n                    context.fillStyle = this._backgroundColorString;\n                    context.fillRect(0, 0, this.width, this.height);\n                }\n            } // else {\n            // TODO: implement background for CanvasRenderTarget or RenderTexture?\n            // }\n        }\n\n        // TODO RENDER TARGET STUFF HERE..\n        var tempContext = this.context;\n\n        this.context = context;\n        displayObject.renderCanvas(this);\n        this.context = tempContext;\n\n        this.emit('postrender');\n    };\n\n    /**\n     * Sets the blend mode of the renderer.\n     *\n     * @param {number} blendMode - See {@link PIXI.BLEND_MODES} for valid values.\n     */\n\n\n    CanvasRenderer.prototype.setBlendMode = function setBlendMode(blendMode) {\n        if (this._activeBlendMode === blendMode) {\n            return;\n        }\n\n        this._activeBlendMode = blendMode;\n        this.context.globalCompositeOperation = this.blendModes[blendMode];\n    };\n\n    /**\n     * Removes everything from the renderer and optionally removes the Canvas DOM element.\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     */\n\n\n    CanvasRenderer.prototype.destroy = function destroy(removeView) {\n        this.destroyPlugins();\n\n        // call the base destroy\n        _SystemRenderer.prototype.destroy.call(this, removeView);\n\n        this.context = null;\n\n        this.refresh = true;\n\n        this.maskManager.destroy();\n        this.maskManager = null;\n\n        this.smoothProperty = null;\n    };\n\n    /**\n     * Resizes the canvas view to the specified width and height.\n     *\n     * @extends PIXI.SystemRenderer#resize\n     *\n     * @param {number} width - The new width of the canvas view\n     * @param {number} height - The new height of the canvas view\n     */\n\n\n    CanvasRenderer.prototype.resize = function resize(width, height) {\n        _SystemRenderer.prototype.resize.call(this, width, height);\n\n        // reset the scale mode.. oddly this seems to be reset when the canvas is resized.\n        // surely a browser bug?? Let pixi fix that for you..\n        if (this.smoothProperty) {\n            this.rootContext[this.smoothProperty] = _settings2.default.SCALE_MODE === _const.SCALE_MODES.LINEAR;\n        }\n    };\n\n    return CanvasRenderer;\n}(_SystemRenderer3.default);\n\nexports.default = CanvasRenderer;\n\n\n_utils.pluginTarget.mixin(CanvasRenderer);\n//# sourceMappingURL=CanvasRenderer.js.map\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLManager2 = __webpack_require__(9);\n\nvar _WebGLManager3 = _interopRequireDefault(_WebGLManager2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Base for a common object renderer that can be used as a system renderer plugin.\n *\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nvar ObjectRenderer = function (_WebGLManager) {\n  _inherits(ObjectRenderer, _WebGLManager);\n\n  function ObjectRenderer() {\n    _classCallCheck(this, ObjectRenderer);\n\n    return _possibleConstructorReturn(this, _WebGLManager.apply(this, arguments));\n  }\n\n  /**\n   * Starts the renderer and sets the shader\n   *\n   */\n  ObjectRenderer.prototype.start = function start() {}\n  // set the shader..\n\n\n  /**\n   * Stops the renderer\n   *\n   */\n  ;\n\n  ObjectRenderer.prototype.stop = function stop() {\n    this.flush();\n  };\n\n  /**\n   * Stub method for rendering content and emptying the current batch.\n   *\n   */\n\n\n  ObjectRenderer.prototype.flush = function flush() {}\n  // flush!\n\n\n  /**\n   * Renders an object\n   *\n   * @param {PIXI.DisplayObject} object - The object to render.\n   */\n  ;\n\n  ObjectRenderer.prototype.render = function render(object) // eslint-disable-line no-unused-vars\n  {\n    // render the object\n  };\n\n  return ObjectRenderer;\n}(_WebGLManager3.default);\n\nexports.default = ObjectRenderer;\n//# sourceMappingURL=ObjectRenderer.js.map\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _math = __webpack_require__(3);\n\nvar _const = __webpack_require__(1);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _pixiGlCore = __webpack_require__(5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RESOLUTION = _settings2.default.RESOLUTION,\n    SCALE_MODE = _settings2.default.SCALE_MODE;\n\n/**\n * @class\n * @memberof PIXI\n */\n\nvar RenderTarget = function () {\n  /**\n   * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n   * @param {number} [width=0] - the horizontal range of the filter\n   * @param {number} [height=0] - the vertical range of the filter\n   * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n   * @param {number} [resolution=1] - The current resolution / device pixel ratio\n   * @param {boolean} [root=false] - Whether this object is the root element or not\n   */\n  function RenderTarget(gl, width, height, scaleMode, resolution, root) {\n    _classCallCheck(this, RenderTarget);\n\n    // TODO Resolution could go here ( eg low res blurs )\n\n    /**\n     * The current WebGL drawing context.\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    // next time to create a frame buffer and texture\n\n    /**\n     * A frame buffer\n     *\n     * @member {PIXI.glCore.GLFramebuffer}\n     */\n    this.frameBuffer = null;\n\n    /**\n     * The texture\n     *\n     * @member {PIXI.glCore.GLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * The background colour of this render target, as an array of [r,g,b,a] values\n     *\n     * @member {number[]}\n     */\n    this.clearColor = [0, 0, 0, 0];\n\n    /**\n     * The size of the object as a rectangle\n     *\n     * @member {PIXI.Rectangle}\n     */\n    this.size = new _math.Rectangle(0, 0, 1, 1);\n\n    /**\n     * The current resolution / device pixel ratio\n     *\n     * @member {number}\n     * @default 1\n     */\n    this.resolution = resolution || RESOLUTION;\n\n    /**\n     * The projection matrix\n     *\n     * @member {PIXI.Matrix}\n     */\n    this.projectionMatrix = new _math.Matrix();\n\n    /**\n     * The object's transform\n     *\n     * @member {PIXI.Matrix}\n     */\n    this.transform = null;\n\n    /**\n     * The frame.\n     *\n     * @member {PIXI.Rectangle}\n     */\n    this.frame = null;\n\n    /**\n     * The stencil buffer stores masking data for the render target\n     *\n     * @member {glCore.GLBuffer}\n     */\n    this.defaultFrame = new _math.Rectangle();\n    this.destinationFrame = null;\n    this.sourceFrame = null;\n\n    /**\n     * The stencil buffer stores masking data for the render target\n     *\n     * @member {glCore.GLBuffer}\n     */\n    this.stencilBuffer = null;\n\n    /**\n     * The data structure for the stencil masks\n     *\n     * @member {PIXI.Graphics[]}\n     */\n    this.stencilMaskStack = [];\n\n    /**\n     * Stores filter data for the render target\n     *\n     * @member {object[]}\n     */\n    this.filterData = null;\n\n    /**\n     * The scale mode.\n     *\n     * @member {number}\n     * @default PIXI.settings.SCALE_MODE\n     * @see PIXI.SCALE_MODES\n     */\n    this.scaleMode = scaleMode || SCALE_MODE;\n\n    /**\n     * Whether this object is the root element or not\n     *\n     * @member {boolean}\n     */\n    this.root = root;\n\n    if (!this.root) {\n      this.frameBuffer = _pixiGlCore.GLFramebuffer.createRGBA(gl, 100, 100);\n\n      if (this.scaleMode === _const.SCALE_MODES.NEAREST) {\n        this.frameBuffer.texture.enableNearestScaling();\n      } else {\n        this.frameBuffer.texture.enableLinearScaling();\n      }\n      /*\n          A frame buffer needs a target to render to..\n          create a texture and bind it attach it to the framebuffer..\n       */\n\n      // this is used by the base texture\n      this.texture = this.frameBuffer.texture;\n    } else {\n      // make it a null framebuffer..\n      this.frameBuffer = new _pixiGlCore.GLFramebuffer(gl, 100, 100);\n      this.frameBuffer.framebuffer = null;\n    }\n\n    this.setFrame();\n\n    this.resize(width, height);\n  }\n\n  /**\n   * Clears the filter texture.\n   *\n   * @param {number[]} [clearColor=this.clearColor] - Array of [r,g,b,a] to clear the framebuffer\n   */\n\n\n  RenderTarget.prototype.clear = function clear(clearColor) {\n    var cc = clearColor || this.clearColor;\n\n    this.frameBuffer.clear(cc[0], cc[1], cc[2], cc[3]); // r,g,b,a);\n  };\n\n  /**\n   * Binds the stencil buffer.\n   *\n   */\n\n\n  RenderTarget.prototype.attachStencilBuffer = function attachStencilBuffer() {\n    // TODO check if stencil is done?\n    /**\n     * The stencil buffer is used for masking in pixi\n     * lets create one and then add attach it to the framebuffer..\n     */\n    if (!this.root) {\n      this.frameBuffer.enableStencil();\n    }\n  };\n\n  /**\n   * Sets the frame of the render target.\n   *\n   * @param {Rectangle} destinationFrame - The destination frame.\n   * @param {Rectangle} sourceFrame - The source frame.\n   */\n\n\n  RenderTarget.prototype.setFrame = function setFrame(destinationFrame, sourceFrame) {\n    this.destinationFrame = destinationFrame || this.destinationFrame || this.defaultFrame;\n    this.sourceFrame = sourceFrame || this.sourceFrame || destinationFrame;\n  };\n\n  /**\n   * Binds the buffers and initialises the viewport.\n   *\n   */\n\n\n  RenderTarget.prototype.activate = function activate() {\n    // TOOD refactor usage of frame..\n    var gl = this.gl;\n\n    // make sure the texture is unbound!\n    this.frameBuffer.bind();\n\n    this.calculateProjection(this.destinationFrame, this.sourceFrame);\n\n    if (this.transform) {\n      this.projectionMatrix.append(this.transform);\n    }\n\n    // TODO add a check as them may be the same!\n    if (this.destinationFrame !== this.sourceFrame) {\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(this.destinationFrame.x | 0, this.destinationFrame.y | 0, this.destinationFrame.width * this.resolution | 0, this.destinationFrame.height * this.resolution | 0);\n    } else {\n      gl.disable(gl.SCISSOR_TEST);\n    }\n\n    // TODO - does not need to be updated all the time??\n    gl.viewport(this.destinationFrame.x | 0, this.destinationFrame.y | 0, this.destinationFrame.width * this.resolution | 0, this.destinationFrame.height * this.resolution | 0);\n  };\n\n  /**\n   * Updates the projection matrix based on a projection frame (which is a rectangle)\n   *\n   * @param {Rectangle} destinationFrame - The destination frame.\n   * @param {Rectangle} sourceFrame - The source frame.\n   */\n\n\n  RenderTarget.prototype.calculateProjection = function calculateProjection(destinationFrame, sourceFrame) {\n    var pm = this.projectionMatrix;\n\n    sourceFrame = sourceFrame || destinationFrame;\n\n    pm.identity();\n\n    // TODO: make dest scale source\n    if (!this.root) {\n      pm.a = 1 / destinationFrame.width * 2;\n      pm.d = 1 / destinationFrame.height * 2;\n\n      pm.tx = -1 - sourceFrame.x * pm.a;\n      pm.ty = -1 - sourceFrame.y * pm.d;\n    } else {\n      pm.a = 1 / destinationFrame.width * 2;\n      pm.d = -1 / destinationFrame.height * 2;\n\n      pm.tx = -1 - sourceFrame.x * pm.a;\n      pm.ty = 1 - sourceFrame.y * pm.d;\n    }\n  };\n\n  /**\n   * Resizes the texture to the specified width and height\n   *\n   * @param {number} width - the new width of the texture\n   * @param {number} height - the new height of the texture\n   */\n\n\n  RenderTarget.prototype.resize = function resize(width, height) {\n    width = width | 0;\n    height = height | 0;\n\n    if (this.size.width === width && this.size.height === height) {\n      return;\n    }\n\n    this.size.width = width;\n    this.size.height = height;\n\n    this.defaultFrame.width = width;\n    this.defaultFrame.height = height;\n\n    this.frameBuffer.resize(width * this.resolution, height * this.resolution);\n\n    var projectionFrame = this.frame || this.size;\n\n    this.calculateProjection(projectionFrame);\n  };\n\n  /**\n   * Destroys the render target.\n   *\n   */\n\n\n  RenderTarget.prototype.destroy = function destroy() {\n    this.frameBuffer.destroy();\n\n    this.frameBuffer = null;\n    this.texture = null;\n  };\n\n  return RenderTarget;\n}();\n\nexports.default = RenderTarget;\n//# sourceMappingURL=RenderTarget.js.map\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * isMobile.js v0.4.0\n *\n * A simple library to detect Apple phones and tablets,\n * Android phones and tablets, other mobile devices (like blackberry, mini-opera and windows phone),\n * and any kind of seven inch device, via user agent sniffing.\n *\n * @author: Kai Mallea (kmallea@gmail.com)\n *\n * @license: http://creativecommons.org/publicdomain/zero/1.0/\n */\n(function (global) {\n\n    var apple_phone         = /iPhone/i,\n        apple_ipod          = /iPod/i,\n        apple_tablet        = /iPad/i,\n        android_phone       = /(?=.*\\bAndroid\\b)(?=.*\\bMobile\\b)/i, // Match 'Android' AND 'Mobile'\n        android_tablet      = /Android/i,\n        amazon_phone        = /(?=.*\\bAndroid\\b)(?=.*\\bSD4930UR\\b)/i,\n        amazon_tablet       = /(?=.*\\bAndroid\\b)(?=.*\\b(?:KFOT|KFTT|KFJWI|KFJWA|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|KFARWI|KFASWI|KFSAWI|KFSAWA)\\b)/i,\n        windows_phone       = /IEMobile/i,\n        windows_tablet      = /(?=.*\\bWindows\\b)(?=.*\\bARM\\b)/i, // Match 'Windows' AND 'ARM'\n        other_blackberry    = /BlackBerry/i,\n        other_blackberry_10 = /BB10/i,\n        other_opera         = /Opera Mini/i,\n        other_chrome        = /(CriOS|Chrome)(?=.*\\bMobile\\b)/i,\n        other_firefox       = /(?=.*\\bFirefox\\b)(?=.*\\bMobile\\b)/i, // Match 'Firefox' AND 'Mobile'\n        seven_inch = new RegExp(\n            '(?:' +         // Non-capturing group\n\n            'Nexus 7' +     // Nexus 7\n\n            '|' +           // OR\n\n            'BNTV250' +     // B&N Nook Tablet 7 inch\n\n            '|' +           // OR\n\n            'Kindle Fire' + // Kindle Fire\n\n            '|' +           // OR\n\n            'Silk' +        // Kindle Fire, Silk Accelerated\n\n            '|' +           // OR\n\n            'GT-P1000' +    // Galaxy Tab 7 inch\n\n            ')',            // End non-capturing group\n\n            'i');           // Case-insensitive matching\n\n    var match = function(regex, userAgent) {\n        return regex.test(userAgent);\n    };\n\n    var IsMobileClass = function(userAgent) {\n        var ua = userAgent || navigator.userAgent;\n\n        // Facebook mobile app's integrated browser adds a bunch of strings that\n        // match everything. Strip it out if it exists.\n        var tmp = ua.split('[FBAN');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n        // iPhone\" string. Same probable happens on other tablet platforms.\n        // This will confuse detection so strip it out if it exists.\n        tmp = ua.split('Twitter');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        this.apple = {\n            phone:  match(apple_phone, ua),\n            ipod:   match(apple_ipod, ua),\n            tablet: !match(apple_phone, ua) && match(apple_tablet, ua),\n            device: match(apple_phone, ua) || match(apple_ipod, ua) || match(apple_tablet, ua)\n        };\n        this.amazon = {\n            phone:  match(amazon_phone, ua),\n            tablet: !match(amazon_phone, ua) && match(amazon_tablet, ua),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua)\n        };\n        this.android = {\n            phone:  match(amazon_phone, ua) || match(android_phone, ua),\n            tablet: !match(amazon_phone, ua) && !match(android_phone, ua) && (match(amazon_tablet, ua) || match(android_tablet, ua)),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua) || match(android_phone, ua) || match(android_tablet, ua)\n        };\n        this.windows = {\n            phone:  match(windows_phone, ua),\n            tablet: match(windows_tablet, ua),\n            device: match(windows_phone, ua) || match(windows_tablet, ua)\n        };\n        this.other = {\n            blackberry:   match(other_blackberry, ua),\n            blackberry10: match(other_blackberry_10, ua),\n            opera:        match(other_opera, ua),\n            firefox:      match(other_firefox, ua),\n            chrome:       match(other_chrome, ua),\n            device:       match(other_blackberry, ua) || match(other_blackberry_10, ua) || match(other_opera, ua) || match(other_firefox, ua) || match(other_chrome, ua)\n        };\n        this.seven_inch = match(seven_inch, ua);\n        this.any = this.apple.device || this.android.device || this.windows.device || this.other.device || this.seven_inch;\n\n        // excludes 'other' devices and ipods, targeting touchscreen phones\n        this.phone = this.apple.phone || this.android.phone || this.windows.phone;\n\n        // excludes 7 inch devices, classifying as phone or tablet is left to the user\n        this.tablet = this.apple.tablet || this.android.tablet || this.windows.tablet;\n\n        if (typeof window === 'undefined') {\n            return this;\n        }\n    };\n\n    var instantiate = function() {\n        var IM = new IsMobileClass();\n        IM.Class = IsMobileClass;\n        return IM;\n    };\n\n    if (typeof module !== 'undefined' && module.exports && typeof window === 'undefined') {\n        //node\n        module.exports = IsMobileClass;\n    } else if (typeof module !== 'undefined' && module.exports && typeof window !== 'undefined') {\n        //browserify\n        module.exports = instantiate();\n    } else if (true) {\n        //AMD\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (global.isMobile = instantiate()), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {\n        global.isMobile = instantiate();\n    }\n\n})(this);\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* eslint global-require: 0 */\n'use strict';\n\nmodule.exports = __webpack_require__(181);\nmodule.exports.Resource = __webpack_require__(34);\nmodule.exports.middleware = {\n    caching: {\n        memory: __webpack_require__(183)\n    },\n    parsing: {\n        blob: __webpack_require__(184)\n    }\n};\n\nmodule.exports.async = __webpack_require__(81);\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\"use strict\";\n/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _math = __webpack_require__(3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Generic class to deal with traditional 2D matrix transforms\n *\n * @class\n * @memberof PIXI\n */\nvar TransformBase = function () {\n  /**\n   *\n   */\n  function TransformBase() {\n    _classCallCheck(this, TransformBase);\n\n    /**\n     * The global matrix transform. It can be swapped temporarily by some functions like getLocalBounds()\n     *\n     * @member {PIXI.Matrix}\n     */\n    this.worldTransform = new _math.Matrix();\n\n    /**\n     * The local matrix transform\n     *\n     * @member {PIXI.Matrix}\n     */\n    this.localTransform = new _math.Matrix();\n\n    this._worldID = 0;\n    this._parentID = 0;\n  }\n\n  /**\n   * TransformBase does not have decomposition, so this function wont do anything\n   */\n\n\n  TransformBase.prototype.updateLocalTransform = function updateLocalTransform() {}\n  // empty\n\n\n  /**\n   * Updates the values of the object and applies the parent's transform.\n   *\n   * @param {PIXI.TransformBase} parentTransform - The transform of the parent of this object\n   */\n  ;\n\n  TransformBase.prototype.updateTransform = function updateTransform(parentTransform) {\n    var pt = parentTransform.worldTransform;\n    var wt = this.worldTransform;\n    var lt = this.localTransform;\n\n    // concat the parent matrix with the objects transform.\n    wt.a = lt.a * pt.a + lt.b * pt.c;\n    wt.b = lt.a * pt.b + lt.b * pt.d;\n    wt.c = lt.c * pt.a + lt.d * pt.c;\n    wt.d = lt.c * pt.b + lt.d * pt.d;\n    wt.tx = lt.tx * pt.a + lt.ty * pt.c + pt.tx;\n    wt.ty = lt.tx * pt.b + lt.ty * pt.d + pt.ty;\n\n    this._worldID++;\n  };\n\n  return TransformBase;\n}();\n\n/**\n * Updates the values of the object and applies the parent's transform.\n * @param  parentTransform {PIXI.Transform} The transform of the parent of this object\n *\n */\n\n\nexports.default = TransformBase;\nTransformBase.prototype.updateWorldTransform = TransformBase.prototype.updateTransform;\n\nTransformBase.IDENTITY = new TransformBase();\n//# sourceMappingURL=TransformBase.js.map\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Point = __webpack_require__(24);\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The pixi Matrix class as an object, which makes it a lot faster,\n * here is a representation of it :\n * | a | b | tx|\n * | c | d | ty|\n * | 0 | 0 | 1 |\n *\n * @class\n * @memberof PIXI\n */\nvar Matrix = function () {\n    /**\n     *\n     */\n    function Matrix() {\n        _classCallCheck(this, Matrix);\n\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.a = 1;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.b = 0;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.c = 0;\n\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.d = 1;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.tx = 0;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.ty = 0;\n\n        this.array = null;\n    }\n\n    /**\n     * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n     *\n     * a = array[0]\n     * b = array[1]\n     * c = array[3]\n     * d = array[4]\n     * tx = array[2]\n     * ty = array[5]\n     *\n     * @param {number[]} array - The array that the matrix will be populated from.\n     */\n\n\n    Matrix.prototype.fromArray = function fromArray(array) {\n        this.a = array[0];\n        this.b = array[1];\n        this.c = array[3];\n        this.d = array[4];\n        this.tx = array[2];\n        this.ty = array[5];\n    };\n\n    /**\n     * sets the matrix properties\n     *\n     * @param {number} a - Matrix component\n     * @param {number} b - Matrix component\n     * @param {number} c - Matrix component\n     * @param {number} d - Matrix component\n     * @param {number} tx - Matrix component\n     * @param {number} ty - Matrix component\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.set = function set(a, b, c, d, tx, ty) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n\n        return this;\n    };\n\n    /**\n     * Creates an array from the current Matrix object.\n     *\n     * @param {boolean} transpose - Whether we need to transpose the matrix or not\n     * @param {Float32Array} [out=new Float32Array(9)] - If provided the array will be assigned to out\n     * @return {number[]} the newly created array which contains the matrix\n     */\n\n\n    Matrix.prototype.toArray = function toArray(transpose, out) {\n        if (!this.array) {\n            this.array = new Float32Array(9);\n        }\n\n        var array = out || this.array;\n\n        if (transpose) {\n            array[0] = this.a;\n            array[1] = this.b;\n            array[2] = 0;\n            array[3] = this.c;\n            array[4] = this.d;\n            array[5] = 0;\n            array[6] = this.tx;\n            array[7] = this.ty;\n            array[8] = 1;\n        } else {\n            array[0] = this.a;\n            array[1] = this.c;\n            array[2] = this.tx;\n            array[3] = this.b;\n            array[4] = this.d;\n            array[5] = this.ty;\n            array[6] = 0;\n            array[7] = 0;\n            array[8] = 1;\n        }\n\n        return array;\n    };\n\n    /**\n     * Get a new position with the current transformation applied.\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n     *\n     * @param {PIXI.Point} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, transformed through this matrix\n     */\n\n\n    Matrix.prototype.apply = function apply(pos, newPos) {\n        newPos = newPos || new _Point2.default();\n\n        var x = pos.x;\n        var y = pos.y;\n\n        newPos.x = this.a * x + this.c * y + this.tx;\n        newPos.y = this.b * x + this.d * y + this.ty;\n\n        return newPos;\n    };\n\n    /**\n     * Get a new position with the inverse of the current transformation applied.\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n     *\n     * @param {PIXI.Point} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, inverse-transformed through this matrix\n     */\n\n\n    Matrix.prototype.applyInverse = function applyInverse(pos, newPos) {\n        newPos = newPos || new _Point2.default();\n\n        var id = 1 / (this.a * this.d + this.c * -this.b);\n\n        var x = pos.x;\n        var y = pos.y;\n\n        newPos.x = this.d * id * x + -this.c * id * y + (this.ty * this.c - this.tx * this.d) * id;\n        newPos.y = this.a * id * y + -this.b * id * x + (-this.ty * this.a + this.tx * this.b) * id;\n\n        return newPos;\n    };\n\n    /**\n     * Translates the matrix on the x and y.\n     *\n     * @param {number} x How much to translate x by\n     * @param {number} y How much to translate y by\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.translate = function translate(x, y) {\n        this.tx += x;\n        this.ty += y;\n\n        return this;\n    };\n\n    /**\n     * Applies a scale transformation to the matrix.\n     *\n     * @param {number} x The amount to scale horizontally\n     * @param {number} y The amount to scale vertically\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.scale = function scale(x, y) {\n        this.a *= x;\n        this.d *= y;\n        this.c *= x;\n        this.b *= y;\n        this.tx *= x;\n        this.ty *= y;\n\n        return this;\n    };\n\n    /**\n     * Applies a rotation transformation to the matrix.\n     *\n     * @param {number} angle - The angle in radians.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.rotate = function rotate(angle) {\n        var cos = Math.cos(angle);\n        var sin = Math.sin(angle);\n\n        var a1 = this.a;\n        var c1 = this.c;\n        var tx1 = this.tx;\n\n        this.a = a1 * cos - this.b * sin;\n        this.b = a1 * sin + this.b * cos;\n        this.c = c1 * cos - this.d * sin;\n        this.d = c1 * sin + this.d * cos;\n        this.tx = tx1 * cos - this.ty * sin;\n        this.ty = tx1 * sin + this.ty * cos;\n\n        return this;\n    };\n\n    /**\n     * Appends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to append.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.append = function append(matrix) {\n        var a1 = this.a;\n        var b1 = this.b;\n        var c1 = this.c;\n        var d1 = this.d;\n\n        this.a = matrix.a * a1 + matrix.b * c1;\n        this.b = matrix.a * b1 + matrix.b * d1;\n        this.c = matrix.c * a1 + matrix.d * c1;\n        this.d = matrix.c * b1 + matrix.d * d1;\n\n        this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n        this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n\n        return this;\n    };\n\n    /**\n     * Sets the matrix based on all the available properties\n     *\n     * @param {number} x - Position on the x axis\n     * @param {number} y - Position on the y axis\n     * @param {number} pivotX - Pivot on the x axis\n     * @param {number} pivotY - Pivot on the y axis\n     * @param {number} scaleX - Scale on the x axis\n     * @param {number} scaleY - Scale on the y axis\n     * @param {number} rotation - Rotation in radians\n     * @param {number} skewX - Skew on the x axis\n     * @param {number} skewY - Skew on the y axis\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.setTransform = function setTransform(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY) {\n        var sr = Math.sin(rotation);\n        var cr = Math.cos(rotation);\n        var cy = Math.cos(skewY);\n        var sy = Math.sin(skewY);\n        var nsx = -Math.sin(skewX);\n        var cx = Math.cos(skewX);\n\n        var a = cr * scaleX;\n        var b = sr * scaleX;\n        var c = -sr * scaleY;\n        var d = cr * scaleY;\n\n        this.a = cy * a + sy * c;\n        this.b = cy * b + sy * d;\n        this.c = nsx * a + cx * c;\n        this.d = nsx * b + cx * d;\n\n        this.tx = x + (pivotX * a + pivotY * c);\n        this.ty = y + (pivotX * b + pivotY * d);\n\n        return this;\n    };\n\n    /**\n     * Prepends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to prepend\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.prepend = function prepend(matrix) {\n        var tx1 = this.tx;\n\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n            var a1 = this.a;\n            var c1 = this.c;\n\n            this.a = a1 * matrix.a + this.b * matrix.c;\n            this.b = a1 * matrix.b + this.b * matrix.d;\n            this.c = c1 * matrix.a + this.d * matrix.c;\n            this.d = c1 * matrix.b + this.d * matrix.d;\n        }\n\n        this.tx = tx1 * matrix.a + this.ty * matrix.c + matrix.tx;\n        this.ty = tx1 * matrix.b + this.ty * matrix.d + matrix.ty;\n\n        return this;\n    };\n\n    /**\n     * Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.\n     *\n     * @param {PIXI.Transform|PIXI.TransformStatic} transform - The transform to apply the properties to.\n     * @return {PIXI.Transform|PIXI.TransformStatic} The transform with the newly applied properties\n     */\n\n\n    Matrix.prototype.decompose = function decompose(transform) {\n        // sort out rotation / skew..\n        var a = this.a;\n        var b = this.b;\n        var c = this.c;\n        var d = this.d;\n\n        var skewX = Math.atan2(-c, d);\n        var skewY = Math.atan2(b, a);\n\n        var delta = Math.abs(1 - skewX / skewY);\n\n        if (delta < 0.00001) {\n            transform.rotation = skewY;\n\n            if (a < 0 && d >= 0) {\n                transform.rotation += transform.rotation <= 0 ? Math.PI : -Math.PI;\n            }\n\n            transform.skew.x = transform.skew.y = 0;\n        } else {\n            transform.skew.x = skewX;\n            transform.skew.y = skewY;\n        }\n\n        // next set scale\n        transform.scale.x = Math.sqrt(a * a + b * b);\n        transform.scale.y = Math.sqrt(c * c + d * d);\n\n        // next set position\n        transform.position.x = this.tx;\n        transform.position.y = this.ty;\n\n        return transform;\n    };\n\n    /**\n     * Inverts this matrix\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.invert = function invert() {\n        var a1 = this.a;\n        var b1 = this.b;\n        var c1 = this.c;\n        var d1 = this.d;\n        var tx1 = this.tx;\n        var n = a1 * d1 - b1 * c1;\n\n        this.a = d1 / n;\n        this.b = -b1 / n;\n        this.c = -c1 / n;\n        this.d = a1 / n;\n        this.tx = (c1 * this.ty - d1 * tx1) / n;\n        this.ty = -(a1 * this.ty - b1 * tx1) / n;\n\n        return this;\n    };\n\n    /**\n     * Resets this Matix to an identity (default) matrix.\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.identity = function identity() {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n\n        return this;\n    };\n\n    /**\n     * Creates a new Matrix object with the same values as this one.\n     *\n     * @return {PIXI.Matrix} A copy of this matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.clone = function clone() {\n        var matrix = new Matrix();\n\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    };\n\n    /**\n     * Changes the values of the given matrix to be the same as the ones in this matrix\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to copy from.\n     * @return {PIXI.Matrix} The matrix given in parameter with its values updated.\n     */\n\n\n    Matrix.prototype.copy = function copy(matrix) {\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    };\n\n    /**\n     * A default (identity) matrix\n     *\n     * @static\n     * @const\n     */\n\n\n    _createClass(Matrix, null, [{\n        key: 'IDENTITY',\n        get: function get() {\n            return new Matrix();\n        }\n\n        /**\n         * A temp matrix\n         *\n         * @static\n         * @const\n         */\n\n    }, {\n        key: 'TEMP_MATRIX',\n        get: function get() {\n            return new Matrix();\n        }\n    }]);\n\n    return Matrix;\n}();\n\nexports.default = Matrix;\n//# sourceMappingURL=Matrix.js.map\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n *\n * @class\n * @memberof PIXI\n */\nvar Point = function () {\n  /**\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=0] - position of the point on the y axis\n   */\n  function Point() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, Point);\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.x = x;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.y = y;\n  }\n\n  /**\n   * Creates a clone of this point\n   *\n   * @return {PIXI.Point} a copy of the point\n   */\n\n\n  Point.prototype.clone = function clone() {\n    return new Point(this.x, this.y);\n  };\n\n  /**\n   * Copies x and y from the given point\n   *\n   * @param {PIXI.Point} p - The point to copy.\n   */\n\n\n  Point.prototype.copy = function copy(p) {\n    this.set(p.x, p.y);\n  };\n\n  /**\n   * Returns true if the given point is equal to this point\n   *\n   * @param {PIXI.Point} p - The point to check\n   * @returns {boolean} Whether the given point equal to this point\n   */\n\n\n  Point.prototype.equals = function equals(p) {\n    return p.x === this.x && p.y === this.y;\n  };\n\n  /**\n   * Sets the point to a new x and y position.\n   * If y is omitted, both x and y will be set to x.\n   *\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=0] - position of the point on the y axis\n   */\n\n\n  Point.prototype.set = function set(x, y) {\n    this.x = x || 0;\n    this.y = y || (y !== 0 ? this.x : 0);\n  };\n\n  return Point;\n}();\n\nexports.default = Point;\n//# sourceMappingURL=Point.js.map\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _const = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Rectangle object is an area defined by its position, as indicated by its top-left corner\n * point (x, y) and by its width and its height.\n *\n * @class\n * @memberof PIXI\n */\nvar Rectangle = function () {\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rectangle\n     * @param {number} [width=0] - The overall width of this rectangle\n     * @param {number} [height=0] - The overall height of this rectangle\n     */\n    function Rectangle() {\n        var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n        _classCallCheck(this, Rectangle);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = width;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = height;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.RECT\n         * @see PIXI.SHAPES\n         */\n        this.type = _const.SHAPES.RECT;\n    }\n\n    /**\n     * returns the left edge of the rectangle\n     *\n     * @member {number}\n     * @memberof PIXI.Rectangle#\n     */\n\n\n    /**\n     * Creates a clone of this Rectangle\n     *\n     * @return {PIXI.Rectangle} a copy of the rectangle\n     */\n    Rectangle.prototype.clone = function clone() {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    };\n\n    /**\n     * Copies another rectangle to this one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to copy.\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n\n\n    Rectangle.prototype.copy = function copy(rectangle) {\n        this.x = rectangle.x;\n        this.y = rectangle.y;\n        this.width = rectangle.width;\n        this.height = rectangle.height;\n\n        return this;\n    };\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rectangle\n     */\n\n\n    Rectangle.prototype.contains = function contains(x, y) {\n        if (this.width <= 0 || this.height <= 0) {\n            return false;\n        }\n\n        if (x >= this.x && x < this.x + this.width) {\n            if (y >= this.y && y < this.y + this.height) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * Pads the rectangle making it grow in all directions.\n     *\n     * @param {number} paddingX - The horizontal padding amount.\n     * @param {number} paddingY - The vertical padding amount.\n     */\n\n\n    Rectangle.prototype.pad = function pad(paddingX, paddingY) {\n        paddingX = paddingX || 0;\n        paddingY = paddingY || (paddingY !== 0 ? paddingX : 0);\n\n        this.x -= paddingX;\n        this.y -= paddingY;\n\n        this.width += paddingX * 2;\n        this.height += paddingY * 2;\n    };\n\n    /**\n     * Fits this rectangle around the passed one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to fit.\n     */\n\n\n    Rectangle.prototype.fit = function fit(rectangle) {\n        if (this.x < rectangle.x) {\n            this.width += this.x;\n            if (this.width < 0) {\n                this.width = 0;\n            }\n\n            this.x = rectangle.x;\n        }\n\n        if (this.y < rectangle.y) {\n            this.height += this.y;\n            if (this.height < 0) {\n                this.height = 0;\n            }\n            this.y = rectangle.y;\n        }\n\n        if (this.x + this.width > rectangle.x + rectangle.width) {\n            this.width = rectangle.width - this.x;\n            if (this.width < 0) {\n                this.width = 0;\n            }\n        }\n\n        if (this.y + this.height > rectangle.y + rectangle.height) {\n            this.height = rectangle.height - this.y;\n            if (this.height < 0) {\n                this.height = 0;\n            }\n        }\n    };\n\n    /**\n     * Enlarges this rectangle to include the passed rectangle.\n     *\n     * @param {PIXI.Rectangle} rect - The rectangle to include.\n     */\n\n\n    Rectangle.prototype.enlarge = function enlarge(rect) {\n        if (rect === Rectangle.EMPTY) {\n            return;\n        }\n\n        var x1 = Math.min(this.x, rect.x);\n        var x2 = Math.max(this.x + this.width, rect.x + rect.width);\n        var y1 = Math.min(this.y, rect.y);\n        var y2 = Math.max(this.y + this.height, rect.y + rect.height);\n\n        this.x = x1;\n        this.width = x2 - x1;\n        this.y = y1;\n        this.height = y2 - y1;\n    };\n\n    _createClass(Rectangle, [{\n        key: 'left',\n        get: function get() {\n            return this.x;\n        }\n\n        /**\n         * returns the right edge of the rectangle\n         *\n         * @member {number}\n         * @memberof PIXI.Rectangle\n         */\n\n    }, {\n        key: 'right',\n        get: function get() {\n            return this.x + this.width;\n        }\n\n        /**\n         * returns the top edge of the rectangle\n         *\n         * @member {number}\n         * @memberof PIXI.Rectangle\n         */\n\n    }, {\n        key: 'top',\n        get: function get() {\n            return this.y;\n        }\n\n        /**\n         * returns the bottom edge of the rectangle\n         *\n         * @member {number}\n         * @memberof PIXI.Rectangle\n         */\n\n    }, {\n        key: 'bottom',\n        get: function get() {\n            return this.y + this.height;\n        }\n\n        /**\n         * A constant empty rectangle.\n         *\n         * @static\n         * @constant\n         */\n\n    }], [{\n        key: 'EMPTY',\n        get: function get() {\n            return new Rectangle(0, 0, 0, 0);\n        }\n    }]);\n\n    return Rectangle;\n}();\n\nexports.default = Rectangle;\n//# sourceMappingURL=Rectangle.js.map\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _SystemRenderer2 = __webpack_require__(44);\n\nvar _SystemRenderer3 = _interopRequireDefault(_SystemRenderer2);\n\nvar _MaskManager = __webpack_require__(112);\n\nvar _MaskManager2 = _interopRequireDefault(_MaskManager);\n\nvar _StencilManager = __webpack_require__(113);\n\nvar _StencilManager2 = _interopRequireDefault(_StencilManager);\n\nvar _FilterManager = __webpack_require__(111);\n\nvar _FilterManager2 = _interopRequireDefault(_FilterManager);\n\nvar _RenderTarget = __webpack_require__(18);\n\nvar _RenderTarget2 = _interopRequireDefault(_RenderTarget);\n\nvar _ObjectRenderer = __webpack_require__(17);\n\nvar _ObjectRenderer2 = _interopRequireDefault(_ObjectRenderer);\n\nvar _TextureManager = __webpack_require__(107);\n\nvar _TextureManager2 = _interopRequireDefault(_TextureManager);\n\nvar _BaseTexture = __webpack_require__(10);\n\nvar _BaseTexture2 = _interopRequireDefault(_BaseTexture);\n\nvar _TextureGarbageCollector = __webpack_require__(106);\n\nvar _TextureGarbageCollector2 = _interopRequireDefault(_TextureGarbageCollector);\n\nvar _WebGLState = __webpack_require__(108);\n\nvar _WebGLState2 = _interopRequireDefault(_WebGLState);\n\nvar _mapWebGLDrawModesToPixi = __webpack_require__(116);\n\nvar _mapWebGLDrawModesToPixi2 = _interopRequireDefault(_mapWebGLDrawModesToPixi);\n\nvar _validateContext = __webpack_require__(117);\n\nvar _validateContext2 = _interopRequireDefault(_validateContext);\n\nvar _utils = __webpack_require__(2);\n\nvar _pixiGlCore = __webpack_require__(5);\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nvar _const = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CONTEXT_UID = 0;\n\n/**\n * The WebGLRenderer draws the scene and all its content onto a webGL enabled canvas. This renderer\n * should be used for browsers that support webGL. This Render works by automatically managing webGLBatchs.\n * So no need for Sprite Batches or Sprite Clouds.\n * Don't forget to add the view to your DOM or you will not see anything :)\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.SystemRenderer\n */\n\nvar WebGLRenderer = function (_SystemRenderer) {\n    _inherits(WebGLRenderer, _SystemRenderer);\n\n    /**\n     *\n     * @param {number} [width=0] - the width of the canvas view\n     * @param {number} [height=0] - the height of the canvas view\n     * @param {object} [options] - The optional renderer parameters\n     * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n     * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n     * @param {boolean} [options.autoResize=false] - If the render view is automatically resized, default false\n     * @param {boolean} [options.antialias=false] - sets antialias. If not available natively then FXAA\n     *  antialiasing is used\n     * @param {boolean} [options.forceFXAA=false] - forces FXAA antialiasing to be used over native.\n     *  FXAA is faster, but may not always look as great\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer.\n     *  The resolution of the renderer retina would be 2.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the CanvasRenderer will clear\n     *  the canvas or not before the new render pass. If you wish to set this to false, you *must* set\n     *  preserveDrawingBuffer to `true`.\n     * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation,\n     *  enable this if you need to call toDataUrl on the webgl context.\n     * @param {boolean} [options.roundPixels=false] - If true Pixi will Math.floor() x/y values when\n     *  rendering, stopping pixel interpolation.\n     */\n    function WebGLRenderer(width, height) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        _classCallCheck(this, WebGLRenderer);\n\n        /**\n         * The type of this renderer as a standardised const\n         *\n         * @member {number}\n         * @see PIXI.RENDERER_TYPE\n         */\n        var _this = _possibleConstructorReturn(this, _SystemRenderer.call(this, 'WebGL', width, height, options));\n\n        _this.type = _const.RENDERER_TYPE.WEBGL;\n\n        _this.handleContextLost = _this.handleContextLost.bind(_this);\n        _this.handleContextRestored = _this.handleContextRestored.bind(_this);\n\n        _this.view.addEventListener('webglcontextlost', _this.handleContextLost, false);\n        _this.view.addEventListener('webglcontextrestored', _this.handleContextRestored, false);\n\n        /**\n         * The options passed in to create a new webgl context.\n         *\n         * @member {object}\n         * @private\n         */\n        _this._contextOptions = {\n            alpha: _this.transparent,\n            antialias: options.antialias,\n            premultipliedAlpha: _this.transparent && _this.transparent !== 'notMultiplied',\n            stencil: true,\n            preserveDrawingBuffer: options.preserveDrawingBuffer\n        };\n\n        _this._backgroundColorRgba[3] = _this.transparent ? 0 : 1;\n\n        /**\n         * Manages the masks using the stencil buffer.\n         *\n         * @member {PIXI.MaskManager}\n         */\n        _this.maskManager = new _MaskManager2.default(_this);\n\n        /**\n         * Manages the stencil buffer.\n         *\n         * @member {PIXI.StencilManager}\n         */\n        _this.stencilManager = new _StencilManager2.default(_this);\n\n        /**\n         * An empty renderer.\n         *\n         * @member {PIXI.ObjectRenderer}\n         */\n        _this.emptyRenderer = new _ObjectRenderer2.default(_this);\n\n        /**\n         * The currently active ObjectRenderer.\n         *\n         * @member {PIXI.ObjectRenderer}\n         */\n        _this.currentRenderer = _this.emptyRenderer;\n\n        _this.initPlugins();\n\n        /**\n         * The current WebGL rendering context, it is created here\n         *\n         * @member {WebGLRenderingContext}\n         */\n        // initialize the context so it is ready for the managers.\n        if (options.context) {\n            // checks to see if a context is valid..\n            (0, _validateContext2.default)(options.context);\n        }\n\n        _this.gl = options.context || _pixiGlCore2.default.createContext(_this.view, _this._contextOptions);\n\n        _this.CONTEXT_UID = CONTEXT_UID++;\n\n        /**\n         * The currently active ObjectRenderer.\n         *\n         * @member {PIXI.WebGLState}\n         */\n        _this.state = new _WebGLState2.default(_this.gl);\n\n        _this.renderingToScreen = true;\n\n        /**\n         * Holds the current state of textures bound to the GPU.\n         * @type {Array}\n         */\n        _this.boundTextures = null;\n\n        _this._initContext();\n        /**\n         * Manages the filters.\n         *\n         * @member {PIXI.FilterManager}\n         */\n        _this.filterManager = new _FilterManager2.default(_this);\n        // map some webGL blend and drawmodes..\n        _this.drawModes = (0, _mapWebGLDrawModesToPixi2.default)(_this.gl);\n\n        /**\n         * Holds the current shader\n         *\n         * @member {PIXI.Shader}\n         */\n        _this._activeShader = null;\n\n        _this._activeVao = null;\n\n        /**\n         * Holds the current render target\n         *\n         * @member {PIXI.RenderTarget}\n         */\n        _this._activeRenderTarget = null;\n\n        _this._nextTextureLocation = 0;\n\n        _this.setBlendMode(0);\n        return _this;\n    }\n\n    /**\n     * Creates the WebGL context\n     *\n     * @private\n     */\n\n\n    WebGLRenderer.prototype._initContext = function _initContext() {\n        var gl = this.gl;\n\n        // restore a context if it was previously lost\n        if (gl.isContextLost() && gl.getExtension('WEBGL_lose_context')) {\n            gl.getExtension('WEBGL_lose_context').restoreContext();\n        }\n\n        var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n        this.boundTextures = new Array(maxTextures);\n        this.emptyTextures = new Array(maxTextures);\n\n        // create a texture manager...\n        this.textureManager = new _TextureManager2.default(this);\n        this.textureGC = new _TextureGarbageCollector2.default(this);\n\n        this.state.resetToDefault();\n\n        this.rootRenderTarget = new _RenderTarget2.default(gl, this.width, this.height, null, this.resolution, true);\n        this.rootRenderTarget.clearColor = this._backgroundColorRgba;\n\n        this.bindRenderTarget(this.rootRenderTarget);\n\n        // now lets fill up the textures with empty ones!\n        var emptyGLTexture = new _pixiGlCore2.default.GLTexture.fromData(gl, null, 1, 1);\n\n        var tempObj = { _glTextures: {} };\n\n        tempObj._glTextures[this.CONTEXT_UID] = {};\n\n        for (var i = 0; i < maxTextures; i++) {\n            var empty = new _BaseTexture2.default();\n\n            empty._glTextures[this.CONTEXT_UID] = emptyGLTexture;\n\n            this.boundTextures[i] = tempObj;\n            this.emptyTextures[i] = empty;\n            this.bindTexture(null, i);\n        }\n\n        this.emit('context', gl);\n\n        // setup the width/height properties and gl viewport\n        this.resize(this.width, this.height);\n    };\n\n    /**\n     * Renders the object to its webGL view\n     *\n     * @param {PIXI.DisplayObject} displayObject - the object to be rendered\n     * @param {PIXI.RenderTexture} renderTexture - The render texture to render to.\n     * @param {boolean} [clear] - Should the canvas be cleared before the new render\n     * @param {PIXI.Transform} [transform] - A transform to apply to the render texture before rendering.\n     * @param {boolean} [skipUpdateTransform] - Should we skip the update transform pass?\n     */\n\n\n    WebGLRenderer.prototype.render = function render(displayObject, renderTexture, clear, transform, skipUpdateTransform) {\n        // can be handy to know!\n        this.renderingToScreen = !renderTexture;\n\n        this.emit('prerender');\n\n        // no point rendering if our context has been blown up!\n        if (!this.gl || this.gl.isContextLost()) {\n            return;\n        }\n\n        this._nextTextureLocation = 0;\n\n        if (!renderTexture) {\n            this._lastObjectRendered = displayObject;\n        }\n\n        if (!skipUpdateTransform) {\n            // update the scene graph\n            var cacheParent = displayObject.parent;\n\n            displayObject.parent = this._tempDisplayObjectParent;\n            displayObject.updateTransform();\n            displayObject.parent = cacheParent;\n            // displayObject.hitArea = //TODO add a temp hit area\n        }\n\n        this.bindRenderTexture(renderTexture, transform);\n\n        this.currentRenderer.start();\n\n        if (clear !== undefined ? clear : this.clearBeforeRender) {\n            this._activeRenderTarget.clear();\n        }\n\n        displayObject.renderWebGL(this);\n\n        // apply transform..\n        this.currentRenderer.flush();\n\n        // this.setObjectRenderer(this.emptyRenderer);\n\n        this.textureGC.update();\n\n        this.emit('postrender');\n    };\n\n    /**\n     * Changes the current renderer to the one given in parameter\n     *\n     * @param {PIXI.ObjectRenderer} objectRenderer - The object renderer to use.\n     */\n\n\n    WebGLRenderer.prototype.setObjectRenderer = function setObjectRenderer(objectRenderer) {\n        if (this.currentRenderer === objectRenderer) {\n            return;\n        }\n\n        this.currentRenderer.stop();\n        this.currentRenderer = objectRenderer;\n        this.currentRenderer.start();\n    };\n\n    /**\n     * This should be called if you wish to do some custom rendering\n     * It will basically render anything that may be batched up such as sprites\n     *\n     */\n\n\n    WebGLRenderer.prototype.flush = function flush() {\n        this.setObjectRenderer(this.emptyRenderer);\n    };\n\n    /**\n     * Resizes the webGL view to the specified width and height.\n     *\n     * @param {number} width - the new width of the webGL view\n     * @param {number} height - the new height of the webGL view\n     */\n\n\n    WebGLRenderer.prototype.resize = function resize(width, height) {\n        //  if(width * this.resolution === this.width && height * this.resolution === this.height)return;\n\n        _SystemRenderer3.default.prototype.resize.call(this, width, height);\n\n        this.rootRenderTarget.resize(width, height);\n\n        if (this._activeRenderTarget === this.rootRenderTarget) {\n            this.rootRenderTarget.activate();\n\n            if (this._activeShader) {\n                this._activeShader.uniforms.projectionMatrix = this.rootRenderTarget.projectionMatrix.toArray(true);\n            }\n        }\n    };\n\n    /**\n     * Resizes the webGL view to the specified width and height.\n     *\n     * @param {number} blendMode - the desired blend mode\n     */\n\n\n    WebGLRenderer.prototype.setBlendMode = function setBlendMode(blendMode) {\n        this.state.setBlendMode(blendMode);\n    };\n\n    /**\n     * Erases the active render target and fills the drawing area with a colour\n     *\n     * @param {number} [clearColor] - The colour\n     */\n\n\n    WebGLRenderer.prototype.clear = function clear(clearColor) {\n        this._activeRenderTarget.clear(clearColor);\n    };\n\n    /**\n     * Sets the transform of the active render target to the given matrix\n     *\n     * @param {PIXI.Matrix} matrix - The transformation matrix\n     */\n\n\n    WebGLRenderer.prototype.setTransform = function setTransform(matrix) {\n        this._activeRenderTarget.transform = matrix;\n    };\n\n    /**\n     * Binds a render texture for rendering\n     *\n     * @param {PIXI.RenderTexture} renderTexture - The render texture to render\n     * @param {PIXI.Transform} transform - The transform to be applied to the render texture\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.bindRenderTexture = function bindRenderTexture(renderTexture, transform) {\n        var renderTarget = void 0;\n\n        if (renderTexture) {\n            var baseTexture = renderTexture.baseTexture;\n\n            if (!baseTexture._glRenderTargets[this.CONTEXT_UID]) {\n                // bind the current texture\n                this.textureManager.updateTexture(baseTexture, 0);\n            }\n\n            this.unbindTexture(baseTexture);\n\n            renderTarget = baseTexture._glRenderTargets[this.CONTEXT_UID];\n            renderTarget.setFrame(renderTexture.frame);\n        } else {\n            renderTarget = this.rootRenderTarget;\n        }\n\n        renderTarget.transform = transform;\n        this.bindRenderTarget(renderTarget);\n\n        return this;\n    };\n\n    /**\n     * Changes the current render target to the one given in parameter\n     *\n     * @param {PIXI.RenderTarget} renderTarget - the new render target\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.bindRenderTarget = function bindRenderTarget(renderTarget) {\n        if (renderTarget !== this._activeRenderTarget) {\n            this._activeRenderTarget = renderTarget;\n            renderTarget.activate();\n\n            if (this._activeShader) {\n                this._activeShader.uniforms.projectionMatrix = renderTarget.projectionMatrix.toArray(true);\n            }\n\n            this.stencilManager.setMaskStack(renderTarget.stencilMaskStack);\n        }\n\n        return this;\n    };\n\n    /**\n     * Changes the current shader to the one given in parameter\n     *\n     * @param {PIXI.Shader} shader - the new shader\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.bindShader = function bindShader(shader) {\n        // TODO cache\n        if (this._activeShader !== shader) {\n            this._activeShader = shader;\n            shader.bind();\n\n            // automatically set the projection matrix\n            shader.uniforms.projectionMatrix = this._activeRenderTarget.projectionMatrix.toArray(true);\n        }\n\n        return this;\n    };\n\n    /**\n     * Binds the texture. This will return the location of the bound texture.\n     * It may not be the same as the one you pass in. This is due to optimisation that prevents\n     * needless binding of textures. For example if the texture is already bound it will return the\n     * current location of the texture instead of the one provided. To bypass this use force location\n     *\n     * @param {PIXI.Texture} texture - the new texture\n     * @param {number} location - the suggested texture location\n     * @param {boolean} forceLocation - force the location\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.bindTexture = function bindTexture(texture, location, forceLocation) {\n        texture = texture || this.emptyTextures[location];\n        texture = texture.baseTexture || texture;\n        texture.touched = this.textureGC.count;\n\n        if (!forceLocation) {\n            // TODO - maybe look into adding boundIds.. save us the loop?\n            for (var i = 0; i < this.boundTextures.length; i++) {\n                if (this.boundTextures[i] === texture) {\n                    return i;\n                }\n            }\n\n            if (location === undefined) {\n                this._nextTextureLocation++;\n                this._nextTextureLocation %= this.boundTextures.length;\n                location = this.boundTextures.length - this._nextTextureLocation - 1;\n            }\n        } else {\n            location = location || 0;\n        }\n\n        var gl = this.gl;\n        var glTexture = texture._glTextures[this.CONTEXT_UID];\n\n        if (!glTexture) {\n            // this will also bind the texture..\n            this.textureManager.updateTexture(texture, location);\n        } else {\n            // bind the current texture\n            this.boundTextures[location] = texture;\n            gl.activeTexture(gl.TEXTURE0 + location);\n            gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n        }\n\n        return location;\n    };\n\n    /**\n    * unbinds the texture ...\n    *\n    * @param {PIXI.Texture} texture - the texture to unbind\n    * @return {PIXI.WebGLRenderer} Returns itself.\n    */\n\n\n    WebGLRenderer.prototype.unbindTexture = function unbindTexture(texture) {\n        var gl = this.gl;\n\n        texture = texture.baseTexture || texture;\n\n        for (var i = 0; i < this.boundTextures.length; i++) {\n            if (this.boundTextures[i] === texture) {\n                this.boundTextures[i] = this.emptyTextures[i];\n\n                gl.activeTexture(gl.TEXTURE0 + i);\n                gl.bindTexture(gl.TEXTURE_2D, this.emptyTextures[i]._glTextures[this.CONTEXT_UID].texture);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Creates a new VAO from this renderer's context and state.\n     *\n     * @return {VertexArrayObject} The new VAO.\n     */\n\n\n    WebGLRenderer.prototype.createVao = function createVao() {\n        return new _pixiGlCore2.default.VertexArrayObject(this.gl, this.state.attribState);\n    };\n\n    /**\n     * Changes the current Vao to the one given in parameter\n     *\n     * @param {PIXI.VertexArrayObject} vao - the new Vao\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.bindVao = function bindVao(vao) {\n        if (this._activeVao === vao) {\n            return this;\n        }\n\n        if (vao) {\n            vao.bind();\n        } else if (this._activeVao) {\n            // TODO this should always be true i think?\n            this._activeVao.unbind();\n        }\n\n        this._activeVao = vao;\n\n        return this;\n    };\n\n    /**\n     * Resets the WebGL state so you can render things however you fancy!\n     *\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.reset = function reset() {\n        this.setObjectRenderer(this.emptyRenderer);\n\n        this._activeShader = null;\n        this._activeRenderTarget = this.rootRenderTarget;\n\n        // bind the main frame buffer (the screen);\n        this.rootRenderTarget.activate();\n\n        this.state.resetToDefault();\n\n        return this;\n    };\n\n    /**\n     * Handles a lost webgl context\n     *\n     * @private\n     * @param {WebGLContextEvent} event - The context lost event.\n     */\n\n\n    WebGLRenderer.prototype.handleContextLost = function handleContextLost(event) {\n        event.preventDefault();\n    };\n\n    /**\n     * Handles a restored webgl context\n     *\n     * @private\n     */\n\n\n    WebGLRenderer.prototype.handleContextRestored = function handleContextRestored() {\n        this._initContext();\n        this.textureManager.removeAll();\n    };\n\n    /**\n     * Removes everything from the renderer (event listeners, spritebatch, etc...)\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     *  See: https://github.com/pixijs/pixi.js/issues/2233\n     */\n\n\n    WebGLRenderer.prototype.destroy = function destroy(removeView) {\n        this.destroyPlugins();\n\n        // remove listeners\n        this.view.removeEventListener('webglcontextlost', this.handleContextLost);\n        this.view.removeEventListener('webglcontextrestored', this.handleContextRestored);\n\n        this.textureManager.destroy();\n\n        // call base destroy\n        _SystemRenderer.prototype.destroy.call(this, removeView);\n\n        this.uid = 0;\n\n        // destroy the managers\n        this.maskManager.destroy();\n        this.stencilManager.destroy();\n        this.filterManager.destroy();\n\n        this.maskManager = null;\n        this.filterManager = null;\n        this.textureManager = null;\n        this.currentRenderer = null;\n\n        this.handleContextLost = null;\n        this.handleContextRestored = null;\n\n        this._contextOptions = null;\n        this.gl.useProgram(null);\n\n        if (this.gl.getExtension('WEBGL_lose_context')) {\n            this.gl.getExtension('WEBGL_lose_context').loseContext();\n        }\n\n        this.gl = null;\n\n        // this = null;\n    };\n\n    return WebGLRenderer;\n}(_SystemRenderer3.default);\n\nexports.default = WebGLRenderer;\n\n\n_utils.pluginTarget.mixin(WebGLRenderer);\n//# sourceMappingURL=WebGLRenderer.js.map\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _math = __webpack_require__(3);\n\nvar _utils = __webpack_require__(2);\n\nvar _const = __webpack_require__(1);\n\nvar _Texture = __webpack_require__(11);\n\nvar _Texture2 = _interopRequireDefault(_Texture);\n\nvar _Container2 = __webpack_require__(14);\n\nvar _Container3 = _interopRequireDefault(_Container2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tempPoint = new _math.Point();\n\n/**\n * The Sprite object is the base for all textured objects that are rendered to the screen\n *\n * A sprite can be created directly from an image like this:\n *\n * ```js\n * let sprite = new PIXI.Sprite.fromImage('assets/image.png');\n * ```\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\n\nvar Sprite = function (_Container) {\n    _inherits(Sprite, _Container);\n\n    /**\n     * @param {PIXI.Texture} texture - The texture for this sprite\n     */\n    function Sprite(texture) {\n        _classCallCheck(this, Sprite);\n\n        /**\n         * The anchor sets the origin point of the texture.\n         * The default is 0,0 this means the texture's origin is the top left\n         * Setting the anchor to 0.5,0.5 means the texture's origin is centered\n         * Setting the anchor to 1,1 would mean the texture's origin point will be the bottom right corner\n         *\n         * @member {PIXI.ObservablePoint}\n         * @private\n         */\n        var _this = _possibleConstructorReturn(this, _Container.call(this));\n\n        _this._anchor = new _math.ObservablePoint(_this._onAnchorUpdate, _this);\n\n        /**\n         * The texture that the sprite is using\n         *\n         * @private\n         * @member {PIXI.Texture}\n         */\n        _this._texture = null;\n\n        /**\n         * The width of the sprite (this is initially set by the texture)\n         *\n         * @private\n         * @member {number}\n         */\n        _this._width = 0;\n\n        /**\n         * The height of the sprite (this is initially set by the texture)\n         *\n         * @private\n         * @member {number}\n         */\n        _this._height = 0;\n\n        /**\n         * The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n         *\n         * @private\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        _this._tint = null;\n        _this._tintRGB = null;\n        _this.tint = 0xFFFFFF;\n\n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         * @see PIXI.BLEND_MODES\n         */\n        _this.blendMode = _const.BLEND_MODES.NORMAL;\n\n        /**\n         * The shader that will be used to render the sprite. Set to null to remove a current shader.\n         *\n         * @member {PIXI.Filter|PIXI.Shader}\n         */\n        _this.shader = null;\n\n        /**\n         * An internal cached value of the tint.\n         *\n         * @private\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        _this.cachedTint = 0xFFFFFF;\n\n        // call texture setter\n        _this.texture = texture || _Texture2.default.EMPTY;\n\n        /**\n         * this is used to store the vertex data of the sprite (basically a quad)\n         *\n         * @private\n         * @member {Float32Array}\n         */\n        _this.vertexData = new Float32Array(8);\n\n        /**\n         * This is used to calculate the bounds of the object IF it is a trimmed sprite\n         *\n         * @private\n         * @member {Float32Array}\n         */\n        _this.vertexTrimmedData = null;\n\n        _this._transformID = -1;\n        _this._textureID = -1;\n        return _this;\n    }\n\n    /**\n     * When the texture is updated, this event will fire to update the scale and frame\n     *\n     * @private\n     */\n\n\n    Sprite.prototype._onTextureUpdate = function _onTextureUpdate() {\n        this._textureID = -1;\n\n        // so if _width is 0 then width was not set..\n        if (this._width) {\n            this.scale.x = (0, _utils.sign)(this.scale.x) * this._width / this.texture.orig.width;\n        }\n\n        if (this._height) {\n            this.scale.y = (0, _utils.sign)(this.scale.y) * this._height / this.texture.orig.height;\n        }\n    };\n\n    /**\n     * Called when the anchor position updates.\n     *\n     * @private\n     */\n\n\n    Sprite.prototype._onAnchorUpdate = function _onAnchorUpdate() {\n        this._transformID = -1;\n    };\n\n    /**\n     * calculates worldTransform * vertices, store it in vertexData\n     */\n\n\n    Sprite.prototype.calculateVertices = function calculateVertices() {\n        if (this._transformID === this.transform._worldID && this._textureID === this._texture._updateID) {\n            return;\n        }\n\n        this._transformID = this.transform._worldID;\n        this._textureID = this._texture._updateID;\n\n        // set the vertex data\n\n        var texture = this._texture;\n        var wt = this.transform.worldTransform;\n        var a = wt.a;\n        var b = wt.b;\n        var c = wt.c;\n        var d = wt.d;\n        var tx = wt.tx;\n        var ty = wt.ty;\n        var vertexData = this.vertexData;\n        var trim = texture.trim;\n        var orig = texture.orig;\n        var anchor = this._anchor;\n\n        var w0 = 0;\n        var w1 = 0;\n        var h0 = 0;\n        var h1 = 0;\n\n        if (trim) {\n            // if the sprite is trimmed and is not a tilingsprite then we need to add the extra\n            // space before transforming the sprite coords.\n            w1 = trim.x - anchor._x * orig.width;\n            w0 = w1 + trim.width;\n\n            h1 = trim.y - anchor._y * orig.height;\n            h0 = h1 + trim.height;\n        } else {\n            w0 = orig.width * (1 - anchor._x);\n            w1 = orig.width * -anchor._x;\n\n            h0 = orig.height * (1 - anchor._y);\n            h1 = orig.height * -anchor._y;\n        }\n\n        // xy\n        vertexData[0] = a * w1 + c * h1 + tx;\n        vertexData[1] = d * h1 + b * w1 + ty;\n\n        // xy\n        vertexData[2] = a * w0 + c * h1 + tx;\n        vertexData[3] = d * h1 + b * w0 + ty;\n\n        // xy\n        vertexData[4] = a * w0 + c * h0 + tx;\n        vertexData[5] = d * h0 + b * w0 + ty;\n\n        // xy\n        vertexData[6] = a * w1 + c * h0 + tx;\n        vertexData[7] = d * h0 + b * w1 + ty;\n    };\n\n    /**\n     * calculates worldTransform * vertices for a non texture with a trim. store it in vertexTrimmedData\n     * This is used to ensure that the true width and height of a trimmed texture is respected\n     */\n\n\n    Sprite.prototype.calculateTrimmedVertices = function calculateTrimmedVertices() {\n        if (!this.vertexTrimmedData) {\n            this.vertexTrimmedData = new Float32Array(8);\n        }\n\n        // lets do some special trim code!\n        var texture = this._texture;\n        var vertexData = this.vertexTrimmedData;\n        var orig = texture.orig;\n        var anchor = this._anchor;\n\n        // lets calculate the new untrimmed bounds..\n        var wt = this.transform.worldTransform;\n        var a = wt.a;\n        var b = wt.b;\n        var c = wt.c;\n        var d = wt.d;\n        var tx = wt.tx;\n        var ty = wt.ty;\n\n        var w0 = orig.width * (1 - anchor._x);\n        var w1 = orig.width * -anchor._x;\n\n        var h0 = orig.height * (1 - anchor._y);\n        var h1 = orig.height * -anchor._y;\n\n        // xy\n        vertexData[0] = a * w1 + c * h1 + tx;\n        vertexData[1] = d * h1 + b * w1 + ty;\n\n        // xy\n        vertexData[2] = a * w0 + c * h1 + tx;\n        vertexData[3] = d * h1 + b * w0 + ty;\n\n        // xy\n        vertexData[4] = a * w0 + c * h0 + tx;\n        vertexData[5] = d * h0 + b * w0 + ty;\n\n        // xy\n        vertexData[6] = a * w1 + c * h0 + tx;\n        vertexData[7] = d * h0 + b * w1 + ty;\n    };\n\n    /**\n    *\n    * Renders the object using the WebGL renderer\n    *\n    * @private\n    * @param {PIXI.WebGLRenderer} renderer - The webgl renderer to use.\n    */\n\n\n    Sprite.prototype._renderWebGL = function _renderWebGL(renderer) {\n        this.calculateVertices();\n\n        renderer.setObjectRenderer(renderer.plugins.sprite);\n        renderer.plugins.sprite.render(this);\n    };\n\n    /**\n    * Renders the object using the Canvas renderer\n    *\n    * @private\n    * @param {PIXI.CanvasRenderer} renderer - The renderer\n    */\n\n\n    Sprite.prototype._renderCanvas = function _renderCanvas(renderer) {\n        renderer.plugins.sprite.render(this);\n    };\n\n    /**\n     * Updates the bounds of the sprite.\n     *\n     * @private\n     */\n\n\n    Sprite.prototype._calculateBounds = function _calculateBounds() {\n        var trim = this._texture.trim;\n        var orig = this._texture.orig;\n\n        // First lets check to see if the current texture has a trim..\n        if (!trim || trim.width === orig.width && trim.height === orig.height) {\n            // no trim! lets use the usual calculations..\n            this.calculateVertices();\n            this._bounds.addQuad(this.vertexData);\n        } else {\n            // lets calculate a special trimmed bounds...\n            this.calculateTrimmedVertices();\n            this._bounds.addQuad(this.vertexTrimmedData);\n        }\n    };\n\n    /**\n     * Gets the local bounds of the sprite object.\n     *\n     * @param {Rectangle} rect - The output rectangle.\n     * @return {Rectangle} The bounds.\n     */\n\n\n    Sprite.prototype.getLocalBounds = function getLocalBounds(rect) {\n        // we can do a fast local bounds if the sprite has no children!\n        if (this.children.length === 0) {\n            this._bounds.minX = this._texture.orig.width * -this._anchor._x;\n            this._bounds.minY = this._texture.orig.height * -this._anchor._y;\n            this._bounds.maxX = this._texture.orig.width * (1 - this._anchor._x);\n            this._bounds.maxY = this._texture.orig.height * (1 - this._anchor._x);\n\n            if (!rect) {\n                if (!this._localBoundsRect) {\n                    this._localBoundsRect = new _math.Rectangle();\n                }\n\n                rect = this._localBoundsRect;\n            }\n\n            return this._bounds.getRectangle(rect);\n        }\n\n        return _Container.prototype.getLocalBounds.call(this, rect);\n    };\n\n    /**\n     * Tests if a point is inside this sprite\n     *\n     * @param {PIXI.Point} point - the point to test\n     * @return {boolean} the result of the test\n     */\n\n\n    Sprite.prototype.containsPoint = function containsPoint(point) {\n        this.worldTransform.applyInverse(point, tempPoint);\n\n        var width = this._texture.orig.width;\n        var height = this._texture.orig.height;\n        var x1 = -width * this.anchor.x;\n        var y1 = 0;\n\n        if (tempPoint.x > x1 && tempPoint.x < x1 + width) {\n            y1 = -height * this.anchor.y;\n\n            if (tempPoint.y > y1 && tempPoint.y < y1 + height) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * Destroys this sprite and optionally its texture and children\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *      method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Should it destroy the current texture of the sprite as well\n     * @param {boolean} [options.baseTexture=false] - Should it destroy the base texture of the sprite as well\n     */\n\n\n    Sprite.prototype.destroy = function destroy(options) {\n        _Container.prototype.destroy.call(this, options);\n\n        this._anchor = null;\n\n        var destroyTexture = typeof options === 'boolean' ? options : options && options.texture;\n\n        if (destroyTexture) {\n            var destroyBaseTexture = typeof options === 'boolean' ? options : options && options.baseTexture;\n\n            this._texture.destroy(!!destroyBaseTexture);\n        }\n\n        this._texture = null;\n        this.shader = null;\n    };\n\n    // some helper functions..\n\n    /**\n     * Helper function that creates a new sprite based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|PIXI.BaseTexture|HTMLCanvasElement|HTMLVideoElement} source Source to create texture from\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Sprite.from = function from(source) {\n        return new Sprite(_Texture2.default.from(source));\n    };\n\n    /**\n     * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @return {PIXI.Sprite} A new Sprite using a texture from the texture cache matching the frameId\n     */\n\n\n    Sprite.fromFrame = function fromFrame(frameId) {\n        var texture = _utils.TextureCache[frameId];\n\n        if (!texture) {\n            throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache');\n        }\n\n        return new Sprite(texture);\n    };\n\n    /**\n     * Helper function that creates a sprite that will contain a texture based on an image url\n     * If the image is not in the texture cache it will be loaded\n     *\n     * @static\n     * @param {string} imageId - The image url of the texture\n     * @param {boolean} [crossorigin=(auto)] - if you want to specify the cross-origin parameter\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - if you want to specify the scale mode,\n     *  see {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Sprite} A new Sprite using a texture from the texture cache matching the image id\n     */\n\n\n    Sprite.fromImage = function fromImage(imageId, crossorigin, scaleMode) {\n        return new Sprite(_Texture2.default.fromImage(imageId, crossorigin, scaleMode));\n    };\n\n    /**\n     * The width of the sprite, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Sprite#\n     */\n\n\n    _createClass(Sprite, [{\n        key: 'width',\n        get: function get() {\n            return Math.abs(this.scale.x) * this.texture.orig.width;\n        }\n\n        /**\n         * Sets the width of the sprite by modifying the scale.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            var s = (0, _utils.sign)(this.scale.x) || 1;\n\n            this.scale.x = s * value / this.texture.orig.width;\n            this._width = value;\n        }\n\n        /**\n         * The height of the sprite, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         * @memberof PIXI.Sprite#\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return Math.abs(this.scale.y) * this.texture.orig.height;\n        }\n\n        /**\n         * Sets the height of the sprite by modifying the scale.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            var s = (0, _utils.sign)(this.scale.y) || 1;\n\n            this.scale.y = s * value / this.texture.orig.height;\n            this._height = value;\n        }\n\n        /**\n         * The anchor sets the origin point of the texture.\n         * The default is 0,0 this means the texture's origin is the top left\n         * Setting the anchor to 0.5,0.5 means the texture's origin is centered\n         * Setting the anchor to 1,1 would mean the texture's origin point will be the bottom right corner\n         *\n         * @member {PIXI.ObservablePoint}\n         * @memberof PIXI.Sprite#\n         */\n\n    }, {\n        key: 'anchor',\n        get: function get() {\n            return this._anchor;\n        }\n\n        /**\n         * Copies the anchor to the sprite.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._anchor.copy(value);\n        }\n\n        /**\n         * The tint applied to the sprite. This is a hex value. A value of\n         * 0xFFFFFF will remove any tint effect.\n         *\n         * @member {number}\n         * @memberof PIXI.Sprite#\n         * @default 0xFFFFFF\n         */\n\n    }, {\n        key: 'tint',\n        get: function get() {\n            return this._tint;\n        }\n\n        /**\n         * Sets the tint of the sprite.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._tint = value;\n            this._tintRGB = (value >> 16) + (value & 0xff00) + ((value & 0xff) << 16);\n        }\n\n        /**\n         * The texture that the sprite is using\n         *\n         * @member {PIXI.Texture}\n         * @memberof PIXI.Sprite#\n         */\n\n    }, {\n        key: 'texture',\n        get: function get() {\n            return this._texture;\n        }\n\n        /**\n         * Sets the texture of the sprite.\n         *\n         * @param {PIXI.Texture} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (this._texture === value) {\n                return;\n            }\n\n            this._texture = value;\n            this.cachedTint = 0xFFFFFF;\n\n            this._textureID = -1;\n\n            if (value) {\n                // wait for the texture to load\n                if (value.baseTexture.hasLoaded) {\n                    this._onTextureUpdate();\n                } else {\n                    value.once('update', this._onTextureUpdate, this);\n                }\n            }\n        }\n    }]);\n\n    return Sprite;\n}(_Container3.default);\n\nexports.default = Sprite;\n//# sourceMappingURL=Sprite.js.map\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _utils = __webpack_require__(2);\n\nvar _canUseNewCanvasBlendModes = __webpack_require__(46);\n\nvar _canUseNewCanvasBlendModes2 = _interopRequireDefault(_canUseNewCanvasBlendModes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Utility methods for Sprite/Texture tinting.\n *\n * @namespace PIXI.CanvasTinter\n */\nvar CanvasTinter = {\n    /**\n     * Basically this method just needs a sprite and a color and tints the sprite with the given color.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Sprite} sprite - the sprite to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @return {HTMLCanvasElement} The tinted canvas\n     */\n    getTintedTexture: function getTintedTexture(sprite, color) {\n        var texture = sprite.texture;\n\n        color = CanvasTinter.roundColor(color);\n\n        var stringColor = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\n\n        texture.tintCache = texture.tintCache || {};\n\n        if (texture.tintCache[stringColor]) {\n            return texture.tintCache[stringColor];\n        }\n\n        // clone texture..\n        var canvas = CanvasTinter.canvas || document.createElement('canvas');\n\n        // CanvasTinter.tintWithPerPixel(texture, stringColor, canvas);\n        CanvasTinter.tintMethod(texture, color, canvas);\n\n        if (CanvasTinter.convertTintToImage) {\n            // is this better?\n            var tintImage = new Image();\n\n            tintImage.src = canvas.toDataURL();\n\n            texture.tintCache[stringColor] = tintImage;\n        } else {\n            texture.tintCache[stringColor] = canvas;\n            // if we are not converting the texture to an image then we need to lose the reference to the canvas\n            CanvasTinter.canvas = null;\n        }\n\n        return canvas;\n    },\n\n    /**\n     * Tint a texture using the 'multiply' operation.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithMultiply: function tintWithMultiply(texture, color, canvas) {\n        var context = canvas.getContext('2d');\n        var crop = texture._frame.clone();\n        var resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n\n        context.fillStyle = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\n\n        context.fillRect(0, 0, crop.width, crop.height);\n\n        context.globalCompositeOperation = 'multiply';\n\n        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);\n\n        context.globalCompositeOperation = 'destination-atop';\n\n        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);\n    },\n\n    /**\n     * Tint a texture using the 'overlay' operation.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithOverlay: function tintWithOverlay(texture, color, canvas) {\n        var context = canvas.getContext('2d');\n        var crop = texture._frame.clone();\n        var resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n\n        context.globalCompositeOperation = 'copy';\n        context.fillStyle = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\n        context.fillRect(0, 0, crop.width, crop.height);\n\n        context.globalCompositeOperation = 'destination-atop';\n        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);\n\n        // context.globalCompositeOperation = 'copy';\n    },\n\n\n    /**\n     * Tint a texture pixel per pixel.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithPerPixel: function tintWithPerPixel(texture, color, canvas) {\n        var context = canvas.getContext('2d');\n        var crop = texture._frame.clone();\n        var resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n\n        context.globalCompositeOperation = 'copy';\n        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);\n\n        var rgbValues = (0, _utils.hex2rgb)(color);\n        var r = rgbValues[0];\n        var g = rgbValues[1];\n        var b = rgbValues[2];\n\n        var pixelData = context.getImageData(0, 0, crop.width, crop.height);\n\n        var pixels = pixelData.data;\n\n        for (var i = 0; i < pixels.length; i += 4) {\n            pixels[i + 0] *= r;\n            pixels[i + 1] *= g;\n            pixels[i + 2] *= b;\n        }\n\n        context.putImageData(pixelData, 0, 0);\n    },\n\n    /**\n     * Rounds the specified color according to the CanvasTinter.cacheStepsPerColorChannel.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {number} color - the color to round, should be a hex color\n     * @return {number} The rounded color.\n     */\n    roundColor: function roundColor(color) {\n        var step = CanvasTinter.cacheStepsPerColorChannel;\n\n        var rgbValues = (0, _utils.hex2rgb)(color);\n\n        rgbValues[0] = Math.min(255, rgbValues[0] / step * step);\n        rgbValues[1] = Math.min(255, rgbValues[1] / step * step);\n        rgbValues[2] = Math.min(255, rgbValues[2] / step * step);\n\n        return (0, _utils.rgb2hex)(rgbValues);\n    },\n\n    /**\n     * Number of steps which will be used as a cap when rounding colors.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {number}\n     */\n    cacheStepsPerColorChannel: 8,\n\n    /**\n     * Tint cache boolean flag.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {boolean}\n     */\n    convertTintToImage: false,\n\n    /**\n     * Whether or not the Canvas BlendModes are supported, consequently the ability to tint using the multiply method.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {boolean}\n     */\n    canUseMultiply: (0, _canUseNewCanvasBlendModes2.default)(),\n\n    /**\n     * The tinting method that will be used.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {tintMethodFunctionType}\n     */\n    tintMethod: 0\n};\n\nCanvasTinter.tintMethod = CanvasTinter.canUseMultiply ? CanvasTinter.tintWithMultiply : CanvasTinter.tintWithPerPixel;\n\n/**\n * The tintMethod type.\n *\n * @memberof PIXI.CanvasTinter\n * @callback tintMethodFunctionType\n * @param texture {PIXI.Texture} the texture to tint\n * @param color {number} the color to use to tint the sprite with\n * @param canvas {HTMLCanvasElement} the current canvas\n */\n\nexports.default = CanvasTinter;\n//# sourceMappingURL=CanvasTinter.js.map\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _BaseRenderTexture = __webpack_require__(51);\n\nvar _BaseRenderTexture2 = _interopRequireDefault(_BaseRenderTexture);\n\nvar _Texture2 = __webpack_require__(11);\n\nvar _Texture3 = _interopRequireDefault(_Texture2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A RenderTexture is a special texture that allows any Pixi display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A RenderTexture takes a snapshot of any Display Object given to its render method. The position\n * and rotation of the given Display Objects is ignored. For example:\n *\n * ```js\n * let renderer = PIXI.autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let renderTexture = PIXI.RenderTexture.create(800, 600);\n * let sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * renderer.render(sprite, renderTexture);\n * ```\n *\n * The Sprite in this case will be rendered to a position of 0,0. To render this sprite at its actual\n * position a Container should be used:\n *\n * ```js\n * let doc = new PIXI.Container();\n *\n * doc.addChild(sprite);\n *\n * renderer.render(doc, renderTexture);  // Renders to center of renderTexture\n * ```\n *\n * @class\n * @extends PIXI.Texture\n * @memberof PIXI\n */\nvar RenderTexture = function (_Texture) {\n    _inherits(RenderTexture, _Texture);\n\n    /**\n     * @param {PIXI.BaseRenderTexture} baseRenderTexture - The renderer used for this RenderTexture\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     */\n    function RenderTexture(baseRenderTexture, frame) {\n        _classCallCheck(this, RenderTexture);\n\n        // support for legacy..\n        var _legacyRenderer = null;\n\n        if (!(baseRenderTexture instanceof _BaseRenderTexture2.default)) {\n            /* eslint-disable prefer-rest-params, no-console */\n            var width = arguments[1];\n            var height = arguments[2];\n            var scaleMode = arguments[3] || 0;\n            var resolution = arguments[4] || 1;\n\n            // we have an old render texture..\n            console.warn('Please use RenderTexture.create(' + width + ', ' + height + ') instead of the ctor directly.');\n            _legacyRenderer = arguments[0];\n            /* eslint-enable prefer-rest-params, no-console */\n\n            frame = null;\n            baseRenderTexture = new _BaseRenderTexture2.default(width, height, scaleMode, resolution);\n        }\n\n        /**\n         * The base texture object that this texture uses\n         *\n         * @member {BaseTexture}\n         */\n\n        var _this = _possibleConstructorReturn(this, _Texture.call(this, baseRenderTexture, frame));\n\n        _this.legacyRenderer = _legacyRenderer;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        _this.valid = true;\n\n        _this._updateUvs();\n        return _this;\n    }\n\n    /**\n     * Resizes the RenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     * @param {boolean} doNotResizeBaseTexture - Should the baseTexture.width and height values be resized as well?\n     */\n\n\n    RenderTexture.prototype.resize = function resize(width, height, doNotResizeBaseTexture) {\n        // TODO - could be not required..\n        this.valid = width > 0 && height > 0;\n\n        this._frame.width = this.orig.width = width;\n        this._frame.height = this.orig.height = height;\n\n        if (!doNotResizeBaseTexture) {\n            this.baseTexture.resize(width, height);\n        }\n\n        this._updateUvs();\n    };\n\n    /**\n     * A short hand way of creating a render texture.\n     *\n     * @param {number} [width=100] - The width of the render texture\n     * @param {number} [height=100] - The height of the render texture\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture being generated\n     * @return {PIXI.RenderTexture} The new render texture\n     */\n\n\n    RenderTexture.create = function create(width, height, scaleMode, resolution) {\n        return new RenderTexture(new _BaseRenderTexture2.default(width, height, scaleMode, resolution));\n    };\n\n    return RenderTexture;\n}(_Texture3.default);\n\nexports.default = RenderTexture;\n//# sourceMappingURL=RenderTexture.js.map\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = createIndicesForQuads;\n/**\n * Generic Mask Stack data structure\n *\n * @memberof PIXI\n * @function createIndicesForQuads\n * @private\n * @param {number} size - Number of quads\n * @return {Uint16Array} indices\n */\nfunction createIndicesForQuads(size) {\n    // the total number of indices in our array, there are 6 points per quad.\n\n    var totalIndices = size * 6;\n\n    var indices = new Uint16Array(totalIndices);\n\n    // fill the indices with the quads to draw\n    for (var i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n        indices[i + 0] = j + 0;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 0;\n        indices[i + 4] = j + 2;\n        indices[i + 5] = j + 3;\n    }\n\n    return indices;\n}\n//# sourceMappingURL=createIndicesForQuads.js.map\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.BitmapText = exports.TilingSpriteRenderer = exports.TilingSprite = exports.AnimatedSprite = exports.TextureTransform = undefined;\n\nvar _TextureTransform = __webpack_require__(55);\n\nObject.defineProperty(exports, 'TextureTransform', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TextureTransform).default;\n  }\n});\n\nvar _AnimatedSprite = __webpack_require__(132);\n\nObject.defineProperty(exports, 'AnimatedSprite', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_AnimatedSprite).default;\n  }\n});\n\nvar _TilingSprite = __webpack_require__(134);\n\nObject.defineProperty(exports, 'TilingSprite', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TilingSprite).default;\n  }\n});\n\nvar _TilingSpriteRenderer = __webpack_require__(138);\n\nObject.defineProperty(exports, 'TilingSpriteRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TilingSpriteRenderer).default;\n  }\n});\n\nvar _BitmapText = __webpack_require__(133);\n\nObject.defineProperty(exports, 'BitmapText', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BitmapText).default;\n  }\n});\n\n__webpack_require__(135);\n\n__webpack_require__(136);\n\n__webpack_require__(137);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// imported for side effect of extending the prototype only, contains no exports\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _CountLimiter = __webpack_require__(71);\n\nvar _CountLimiter2 = _interopRequireDefault(_CountLimiter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SharedTicker = core.ticker.shared;\n\n/**\n * Default number of uploads per frame using prepare plugin.\n *\n * @static\n * @memberof PIXI.settings\n * @name UPLOADS_PER_FRAME\n * @type {number}\n * @default 4\n */\ncore.settings.UPLOADS_PER_FRAME = 4;\n\n/**\n * The prepare manager provides functionality to upload content to the GPU. BasePrepare handles\n * basic queuing functionality and is extended by {@link PIXI.prepare.WebGLPrepare} and {@link PIXI.prepare.CanvasPrepare}\n * to provide preparation capabilities specific to their respective renderers.\n *\n * @abstract\n * @class\n * @memberof PIXI\n */\n\nvar BasePrepare = function () {\n    /**\n     * @param {PIXI.SystemRenderer} renderer - A reference to the current renderer\n     */\n    function BasePrepare(renderer) {\n        var _this = this;\n\n        _classCallCheck(this, BasePrepare);\n\n        /**\n         * The limiter to be used to control how quickly items are prepared.\n         * @type {PIXI.prepare.CountLimiter|PIXI.prepare.TimeLimiter}\n         */\n        this.limiter = new _CountLimiter2.default(core.settings.UPLOADS_PER_FRAME);\n\n        /**\n         * Reference to the renderer.\n         * @type {PIXI.SystemRenderer}\n         * @protected\n         */\n        this.renderer = renderer;\n\n        /**\n         * The only real difference between CanvasPrepare and WebGLPrepare is what they pass\n         * to upload hooks. That different parameter is stored here.\n         * @type {PIXI.prepare.CanvasPrepare|PIXI.WebGLRenderer}\n         * @protected\n         */\n        this.uploadHookHelper = null;\n\n        /**\n         * Collection of items to uploads at once.\n         * @type {Array<*>}\n         * @private\n         */\n        this.queue = [];\n\n        /**\n         * Collection of additional hooks for finding assets.\n         * @type {Array<Function>}\n         * @private\n         */\n        this.addHooks = [];\n\n        /**\n         * Collection of additional hooks for processing assets.\n         * @type {Array<Function>}\n         * @private\n         */\n        this.uploadHooks = [];\n\n        /**\n         * Callback to call after completed.\n         * @type {Array<Function>}\n         * @private\n         */\n        this.completes = [];\n\n        /**\n         * If prepare is ticking (running).\n         * @type {boolean}\n         * @private\n         */\n        this.ticking = false;\n\n        /**\n         * 'bound' call for prepareItems().\n         * @type {Function}\n         * @private\n         */\n        this.delayedTick = function () {\n            // unlikely, but in case we were destroyed between tick() and delayedTick()\n            if (!_this.queue) {\n                return;\n            }\n            _this.prepareItems();\n        };\n\n        this.register(findText, drawText);\n        this.register(findTextStyle, calculateTextStyle);\n    }\n\n    /**\n     * Upload all the textures and graphics to the GPU.\n     *\n     * @param {Function|PIXI.DisplayObject|PIXI.Container} item - Either\n     *        the container or display object to search for items to upload or\n     *        the callback function, if items have been added using `prepare.add`.\n     * @param {Function} [done] - Optional callback when all queued uploads have completed\n     */\n\n\n    BasePrepare.prototype.upload = function upload(item, done) {\n        if (typeof item === 'function') {\n            done = item;\n            item = null;\n        }\n\n        // If a display object, search for items\n        // that we could upload\n        if (item) {\n            this.add(item);\n        }\n\n        // Get the items for upload from the display\n        if (this.queue.length) {\n            if (done) {\n                this.completes.push(done);\n            }\n\n            if (!this.ticking) {\n                this.ticking = true;\n                SharedTicker.addOnce(this.tick, this);\n            }\n        } else if (done) {\n            done();\n        }\n    };\n\n    /**\n     * Handle tick update\n     *\n     * @private\n     */\n\n\n    BasePrepare.prototype.tick = function tick() {\n        setTimeout(this.delayedTick, 0);\n    };\n\n    /**\n     * Actually prepare items. This is handled outside of the tick because it will take a while\n     * and we do NOT want to block the current animation frame from rendering.\n     *\n     * @private\n     */\n\n\n    BasePrepare.prototype.prepareItems = function prepareItems() {\n        this.limiter.beginFrame();\n        // Upload the graphics\n        while (this.queue.length && this.limiter.allowedToUpload()) {\n            var item = this.queue[0];\n            var uploaded = false;\n\n            for (var i = 0, len = this.uploadHooks.length; i < len; i++) {\n                if (this.uploadHooks[i](this.uploadHookHelper, item)) {\n                    this.queue.shift();\n                    uploaded = true;\n                    break;\n                }\n            }\n\n            if (!uploaded) {\n                this.queue.shift();\n            }\n        }\n\n        // We're finished\n        if (!this.queue.length) {\n            this.ticking = false;\n\n            var completes = this.completes.slice(0);\n\n            this.completes.length = 0;\n\n            for (var _i = 0, _len = completes.length; _i < _len; _i++) {\n                completes[_i]();\n            }\n        } else {\n            // if we are not finished, on the next rAF do this again\n            SharedTicker.addOnce(this.tick, this);\n        }\n    };\n\n    /**\n     * Adds hooks for finding and uploading items.\n     *\n     * @param {Function} [addHook] - Function call that takes two parameters: `item:*, queue:Array`\n              function must return `true` if it was able to add item to the queue.\n     * @param {Function} [uploadHook] - Function call that takes two parameters: `prepare:CanvasPrepare, item:*` and\n     *        function must return `true` if it was able to handle upload of item.\n     * @return {PIXI.CanvasPrepare} Instance of plugin for chaining.\n     */\n\n\n    BasePrepare.prototype.register = function register(addHook, uploadHook) {\n        if (addHook) {\n            this.addHooks.push(addHook);\n        }\n\n        if (uploadHook) {\n            this.uploadHooks.push(uploadHook);\n        }\n\n        return this;\n    };\n\n    /**\n     * Manually add an item to the uploading queue.\n     *\n     * @param {PIXI.DisplayObject|PIXI.Container|*} item - Object to add to the queue\n     * @return {PIXI.CanvasPrepare} Instance of plugin for chaining.\n     */\n\n\n    BasePrepare.prototype.add = function add(item) {\n        // Add additional hooks for finding elements on special\n        // types of objects that\n        for (var i = 0, len = this.addHooks.length; i < len; i++) {\n            if (this.addHooks[i](item, this.queue)) {\n                break;\n            }\n        }\n\n        // Get childen recursively\n        if (item instanceof core.Container) {\n            for (var _i2 = item.children.length - 1; _i2 >= 0; _i2--) {\n                this.add(item.children[_i2]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Destroys the plugin, don't use after this.\n     *\n     */\n\n\n    BasePrepare.prototype.destroy = function destroy() {\n        if (this.ticking) {\n            SharedTicker.remove(this.tick, this);\n        }\n        this.ticking = false;\n        this.addHooks = null;\n        this.uploadHooks = null;\n        this.renderer = null;\n        this.completes = null;\n        this.queue = null;\n        this.limiter = null;\n        this.uploadHookHelper = null;\n    };\n\n    return BasePrepare;\n}();\n\n/**\n * Built-in hook to draw PIXI.Text to its texture.\n *\n * @private\n * @param {PIXI.WebGLRenderer|PIXI.CanvasPrepare} helper - Not used by this upload handler\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\n\n\nexports.default = BasePrepare;\nfunction drawText(helper, item) {\n    if (item instanceof core.Text) {\n        // updating text will return early if it is not dirty\n        item.updateText(true);\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to calculate a text style for a PIXI.Text object.\n *\n * @private\n * @param {PIXI.WebGLRenderer|PIXI.CanvasPrepare} helper - Not used by this upload handler\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\nfunction calculateTextStyle(helper, item) {\n    if (item instanceof core.TextStyle) {\n        var font = core.Text.getFontStyle(item);\n\n        if (!core.Text.fontPropertiesCache[font]) {\n            core.Text.calculateFontProperties(font);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find Text objects.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Text object was found.\n */\nfunction findText(item, queue) {\n    if (item instanceof core.Text) {\n        // push the text style to prepare it - this can be really expensive\n        if (queue.indexOf(item.style) === -1) {\n            queue.push(item.style);\n        }\n        // also push the text object so that we can render it (to canvas/texture) if needed\n        if (queue.indexOf(item) === -1) {\n            queue.push(item);\n        }\n        // also push the Text's texture for upload to GPU\n        var texture = item._texture.baseTexture;\n\n        if (queue.indexOf(texture) === -1) {\n            queue.push(texture);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find TextStyle objects.\n *\n * @private\n * @param {PIXI.TextStyle} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.TextStyle object was found.\n */\nfunction findTextStyle(item, queue) {\n    if (item instanceof core.TextStyle) {\n        if (queue.indexOf(item) === -1) {\n            queue.push(item);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n//# sourceMappingURL=BasePrepare.js.map\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\n\nvar mapSize = function(gl, type) \n{\n    if(!GL_TABLE) \n    {\n        var typeNames = Object.keys(GL_TO_GLSL_TYPES);\n\n        GL_TABLE = {};\n\n        for(var i = 0; i < typeNames.length; ++i) \n        {\n            var tn = typeNames[i];\n            GL_TABLE[ gl[tn] ] = GL_TO_GLSL_TYPES[tn];\n        }\n    }\n\n  return GL_TABLE[type];\n};\n\nvar GL_TABLE = null;\n\nvar GL_TO_GLSL_TYPES = {\n  'FLOAT':       'float',\n  'FLOAT_VEC2':  'vec2',\n  'FLOAT_VEC3':  'vec3',\n  'FLOAT_VEC4':  'vec4',\n\n  'INT':         'int',\n  'INT_VEC2':    'ivec2',\n  'INT_VEC3':    'ivec3',\n  'INT_VEC4':    'ivec4',\n  \n  'BOOL':        'bool',\n  'BOOL_VEC2':   'bvec2',\n  'BOOL_VEC3':   'bvec3',\n  'BOOL_VEC4':   'bvec4',\n  \n  'FLOAT_MAT2':  'mat2',\n  'FLOAT_MAT3':  'mat3',\n  'FLOAT_MAT4':  'mat4',\n  \n  'SAMPLER_2D':  'sampler2D'  \n};\n\nmodule.exports = mapSize;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar EventEmitter    = __webpack_require__(7);\nvar parseUri        = __webpack_require__(72);\n\n// tests is CORS is supported in XHR, if not we need to use XDR\nvar useXdr = !!(window.XDomainRequest && !('withCredentials' in (new XMLHttpRequest())));\nvar tempAnchor = null;\n\n// some status constants\nvar STATUS_NONE = 0;\nvar STATUS_OK = 200;\nvar STATUS_EMPTY = 204;\n\n/**\n * Manages the state and loading of a single resource represented by\n * a single URL.\n *\n * @class\n * @param {string} name - The name of the resource to load.\n * @param {string|string[]} url - The url for this resource, for audio/video loads you can pass an array of sources.\n * @param {object} [options] - The options for the load.\n * @param {string|boolean} [options.crossOrigin] - Is this request cross-origin? Default is to determine automatically.\n * @param {Resource.LOAD_TYPE} [options.loadType=Resource.LOAD_TYPE.XHR] - How should this resource be loaded?\n * @param {Resource.XHR_RESPONSE_TYPE} [options.xhrType=Resource.XHR_RESPONSE_TYPE.DEFAULT] - How should the data being\n *      loaded be interpreted when using XHR?\n * @param {object} [options.metadata] - Extra info for middleware.\n */\nfunction Resource(name, url, options) {\n    EventEmitter.call(this);\n\n    options = options || {};\n\n    if (typeof name !== 'string' || typeof url !== 'string') {\n        throw new Error('Both name and url are required for constructing a resource.');\n    }\n\n    /**\n     * The name of this resource.\n     *\n     * @member {string}\n     * @readonly\n     */\n    this.name = name;\n\n    /**\n     * The url used to load this resource.\n     *\n     * @member {string}\n     * @readonly\n     */\n    this.url = url;\n\n    /**\n     * Stores whether or not this url is a data url.\n     *\n     * @member {boolean}\n     * @readonly\n     */\n    this.isDataUrl = this.url.indexOf('data:') === 0;\n\n    /**\n     * The data that was loaded by the resource.\n     *\n     * @member {any}\n     */\n    this.data = null;\n\n    /**\n     * Is this request cross-origin? If unset, determined automatically.\n     *\n     * @member {string}\n     */\n    this.crossOrigin = options.crossOrigin === true ? 'anonymous' : options.crossOrigin;\n\n    /**\n     * The method of loading to use for this resource.\n     *\n     * @member {Resource.LOAD_TYPE}\n     */\n    this.loadType = options.loadType || this._determineLoadType();\n\n    /**\n     * The type used to load the resource via XHR. If unset, determined automatically.\n     *\n     * @member {string}\n     */\n    this.xhrType = options.xhrType;\n\n    /**\n     * Extra info for middleware, and controlling specifics about how the resource loads.\n     *\n     * Note that if you pass in a `loadElement`, the Resource class takes ownership of it.\n     * Meaning it will modify it as it sees fit.\n     *\n     * @member {object}\n     * @property {HTMLImageElement|HTMLAudioElement|HTMLVideoElement} [loadElement=null] - The\n     *  element to use for loading, instead of creating one.\n     * @property {boolean} [skipSource=false] - Skips adding source(s) to the load element. This\n     *  is useful if you want to pass in a `loadElement` that you already added load sources\n     *  to.\n     */\n    this.metadata = options.metadata || {};\n\n    /**\n     * The error that occurred while loading (if any).\n     *\n     * @member {Error}\n     * @readonly\n     */\n    this.error = null;\n\n    /**\n     * The XHR object that was used to load this resource. This is only set\n     * when `loadType` is `Resource.LOAD_TYPE.XHR`.\n     *\n     * @member {XMLHttpRequest}\n     */\n    this.xhr = null;\n\n    /**\n     * Describes if this resource was loaded as json. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isJson = false;\n\n    /**\n     * Describes if this resource was loaded as xml. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isXml = false;\n\n    /**\n     * Describes if this resource was loaded as an image tag. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isImage = false;\n\n    /**\n     * Describes if this resource was loaded as an audio tag. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isAudio = false;\n\n    /**\n     * Describes if this resource was loaded as a video tag. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isVideo = false;\n\n    /**\n     * Describes if this resource has finished loading. Is true when the resource has completely\n     * loaded.\n     *\n     * @member {boolean}\n     */\n    this.isComplete = false;\n\n    /**\n     * Describes if this resource is currently loading. Is true when the resource starts loading,\n     * and is false again when complete.\n     *\n     * @member {boolean}\n     */\n    this.isLoading = false;\n\n    /**\n     * The `dequeue` method that will be used a storage place for the async queue dequeue method\n     * used privately by the loader.\n     *\n     * @private\n     * @member {function}\n     */\n    this._dequeue = null;\n\n    /**\n     * The `complete` function bound to this resource's context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundComplete = this.complete.bind(this);\n\n    /**\n     * The `_onError` function bound to this resource's context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundOnError = this._onError.bind(this);\n\n    /**\n     * The `_onProgress` function bound to this resource's context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundOnProgress = this._onProgress.bind(this);\n\n    // xhr callbacks\n    this._boundXhrOnError = this._xhrOnError.bind(this);\n    this._boundXhrOnAbort = this._xhrOnAbort.bind(this);\n    this._boundXhrOnLoad = this._xhrOnLoad.bind(this);\n    this._boundXdrOnTimeout = this._xdrOnTimeout.bind(this);\n\n    /**\n     * Emitted when the resource beings to load.\n     *\n     * @event start\n     * @memberof Resource#\n     */\n\n    /**\n     * Emitted each time progress of this resource load updates.\n     * Not all resources types and loader systems can support this event\n     * so sometimes it may not be available. If the resource\n     * is being loaded on a modern browser, using XHR, and the remote server\n     * properly sets Content-Length headers, then this will be available.\n     *\n     * @event progress\n     * @memberof Resource#\n     */\n\n    /**\n     * Emitted once this resource has loaded, if there was an error it will\n     * be in the `error` property.\n     *\n     * @event complete\n     * @memberof Resource#\n     */\n}\n\nResource.prototype = Object.create(EventEmitter.prototype);\nResource.prototype.constructor = Resource;\nmodule.exports = Resource;\n\n/**\n * Marks the resource as complete.\n *\n * @fires complete\n */\nResource.prototype.complete = function () {\n    // TODO: Clean this up in a wrapper or something...gross....\n    if (this.data && this.data.removeEventListener) {\n        this.data.removeEventListener('error', this._boundOnError, false);\n        this.data.removeEventListener('load', this._boundComplete, false);\n        this.data.removeEventListener('progress', this._boundOnProgress, false);\n        this.data.removeEventListener('canplaythrough', this._boundComplete, false);\n    }\n\n    if (this.xhr) {\n        if (this.xhr.removeEventListener) {\n            this.xhr.removeEventListener('error', this._boundXhrOnError, false);\n            this.xhr.removeEventListener('abort', this._boundXhrOnAbort, false);\n            this.xhr.removeEventListener('progress', this._boundOnProgress, false);\n            this.xhr.removeEventListener('load', this._boundXhrOnLoad, false);\n        }\n        else {\n            this.xhr.onerror = null;\n            this.xhr.ontimeout = null;\n            this.xhr.onprogress = null;\n            this.xhr.onload = null;\n        }\n    }\n\n    if (this.isComplete) {\n        throw new Error('Complete called again for an already completed resource.');\n    }\n\n    this.isComplete = true;\n    this.isLoading = false;\n\n    this.emit('complete', this);\n};\n\n/**\n * Aborts the loading of this resource, with an optional message.\n *\n * @param {string} message - The message to use for the error\n */\nResource.prototype.abort = function (message) {\n    // abort can be called multiple times, ignore subsequent calls.\n    if (this.error) {\n        return;\n    }\n\n    // store error\n    this.error = new Error(message);\n\n    // abort the actual loading\n    if (this.xhr) {\n        this.xhr.abort();\n    }\n    else if (this.xdr) {\n        this.xdr.abort();\n    }\n    else if (this.data) {\n        // single source\n        if (typeof this.data.src !== 'undefined') {\n            this.data.src = '';\n        }\n        // multi-source\n        else {\n            while (this.data.firstChild) {\n                this.data.removeChild(this.data.firstChild);\n            }\n        }\n    }\n\n    // done now.\n    this.complete();\n};\n\n/**\n * Kicks off loading of this resource. This method is asynchronous.\n *\n * @fires start\n * @param {function} [cb] - Optional callback to call once the resource is loaded.\n */\nResource.prototype.load = function (cb) {\n    if (this.isLoading) {\n        return;\n    }\n\n    if (this.isComplete) {\n        if (cb) {\n            var self = this;\n\n            setTimeout(function () {\n                cb(self);\n            }, 1);\n        }\n\n        return;\n    }\n    else if (cb) {\n        this.once('complete', cb);\n    }\n\n    this.isLoading = true;\n\n    this.emit('start', this);\n\n    // if unset, determine the value\n    if (this.crossOrigin === false || typeof this.crossOrigin !== 'string') {\n        this.crossOrigin = this._determineCrossOrigin(this.url);\n    }\n\n    switch (this.loadType) {\n        case Resource.LOAD_TYPE.IMAGE:\n            this._loadElement('image');\n            break;\n\n        case Resource.LOAD_TYPE.AUDIO:\n            this._loadSourceElement('audio');\n            break;\n\n        case Resource.LOAD_TYPE.VIDEO:\n            this._loadSourceElement('video');\n            break;\n\n        case Resource.LOAD_TYPE.XHR:\n            /* falls through */\n        default:\n            if (useXdr && this.crossOrigin) {\n                this._loadXdr();\n            }\n            else {\n                this._loadXhr();\n            }\n            break;\n    }\n};\n\n/**\n * Loads this resources using an element that has a single source,\n * like an HTMLImageElement.\n *\n * @private\n * @param {string} type - The type of element to use.\n */\nResource.prototype._loadElement = function (type) {\n    if (this.metadata.loadElement) {\n        this.data = this.metadata.loadElement;\n    }\n    else if (type === 'image' && typeof window.Image !== 'undefined') {\n        this.data = new Image();\n    }\n    else {\n        this.data = document.createElement(type);\n    }\n\n    if (this.crossOrigin) {\n        this.data.crossOrigin = this.crossOrigin;\n    }\n\n    if (!this.metadata.skipSource) {\n        this.data.src = this.url;\n    }\n\n    var typeName = 'is' + type[0].toUpperCase() + type.substring(1);\n\n    if (this[typeName] === false) {\n        this[typeName] = true;\n    }\n\n    this.data.addEventListener('error', this._boundOnError, false);\n    this.data.addEventListener('load', this._boundComplete, false);\n    this.data.addEventListener('progress', this._boundOnProgress, false);\n};\n\n/**\n * Loads this resources using an element that has multiple sources,\n * like an HTMLAudioElement or HTMLVideoElement.\n *\n * @private\n * @param {string} type - The type of element to use.\n */\nResource.prototype._loadSourceElement = function (type) {\n    if (this.metadata.loadElement) {\n        this.data = this.metadata.loadElement;\n    }\n    else if (type === 'audio' && typeof window.Audio !== 'undefined') {\n        this.data = new Audio();\n    }\n    else {\n        this.data = document.createElement(type);\n    }\n\n    if (this.data === null) {\n        this.abort('Unsupported element ' + type);\n\n        return;\n    }\n\n    if (!this.metadata.skipSource) {\n        // support for CocoonJS Canvas+ runtime, lacks document.createElement('source')\n        if (navigator.isCocoonJS) {\n            this.data.src = Array.isArray(this.url) ? this.url[0] : this.url;\n        }\n        else if (Array.isArray(this.url)) {\n            for (var i = 0; i < this.url.length; ++i) {\n                this.data.appendChild(this._createSource(type, this.url[i]));\n            }\n        }\n        else {\n            this.data.appendChild(this._createSource(type, this.url));\n        }\n    }\n\n    this['is' + type[0].toUpperCase() + type.substring(1)] = true;\n\n    this.data.addEventListener('error', this._boundOnError, false);\n    this.data.addEventListener('load', this._boundComplete, false);\n    this.data.addEventListener('progress', this._boundOnProgress, false);\n    this.data.addEventListener('canplaythrough', this._boundComplete, false);\n\n    this.data.load();\n};\n\n/**\n * Loads this resources using an XMLHttpRequest.\n *\n * @private\n */\nResource.prototype._loadXhr = function () {\n    // if unset, determine the value\n    if (typeof this.xhrType !== 'string') {\n        this.xhrType = this._determineXhrType();\n    }\n\n    var xhr = this.xhr = new XMLHttpRequest();\n\n    // set the request type and url\n    xhr.open('GET', this.url, true);\n\n    // load json as text and parse it ourselves. We do this because some browsers\n    // *cough* safari *cough* can't deal with it.\n    if (this.xhrType === Resource.XHR_RESPONSE_TYPE.JSON || this.xhrType === Resource.XHR_RESPONSE_TYPE.DOCUMENT) {\n        xhr.responseType = Resource.XHR_RESPONSE_TYPE.TEXT;\n    }\n    else {\n        xhr.responseType = this.xhrType;\n    }\n\n    xhr.addEventListener('error', this._boundXhrOnError, false);\n    xhr.addEventListener('abort', this._boundXhrOnAbort, false);\n    xhr.addEventListener('progress', this._boundOnProgress, false);\n    xhr.addEventListener('load', this._boundXhrOnLoad, false);\n\n    xhr.send();\n};\n\n/**\n * Loads this resources using an XDomainRequest. This is here because we need to support IE9 (gross).\n *\n * @private\n */\nResource.prototype._loadXdr = function () {\n    // if unset, determine the value\n    if (typeof this.xhrType !== 'string') {\n        this.xhrType = this._determineXhrType();\n    }\n\n    var xdr = this.xhr = new XDomainRequest();\n\n    // XDomainRequest has a few quirks. Occasionally it will abort requests\n    // A way to avoid this is to make sure ALL callbacks are set even if not used\n    // More info here: http://stackoverflow.com/questions/15786966/xdomainrequest-aborts-post-on-ie-9\n    xdr.timeout = 5000;\n\n    xdr.onerror = this._boundXhrOnError;\n    xdr.ontimeout = this._boundXdrOnTimeout;\n    xdr.onprogress = this._boundOnProgress;\n    xdr.onload = this._boundXhrOnLoad;\n\n    xdr.open('GET', this.url, true);\n\n    // Note: The xdr.send() call is wrapped in a timeout to prevent an\n    // issue with the interface where some requests are lost if multiple\n    // XDomainRequests are being sent at the same time.\n    // Some info here: https://github.com/photonstorm/phaser/issues/1248\n    setTimeout(function () {\n        xdr.send();\n    }, 0);\n};\n\n/**\n * Creates a source used in loading via an element.\n *\n * @private\n * @param {string} type - The element type (video or audio).\n * @param {string} url - The source URL to load from.\n * @param {string} [mime] - The mime type of the video\n * @return {HTMLSourceElement} The source element.\n */\nResource.prototype._createSource = function (type, url, mime) {\n    if (!mime) {\n        mime = type + '/' + url.substr(url.lastIndexOf('.') + 1);\n    }\n\n    var source = document.createElement('source');\n\n    source.src = url;\n    source.type = mime;\n\n    return source;\n};\n\n/**\n * Called if a load errors out.\n *\n * @param {Event} event - The error event from the element that emits it.\n * @private\n */\nResource.prototype._onError = function (event) {\n    this.abort('Failed to load element using ' + event.target.nodeName);\n};\n\n/**\n * Called if a load progress event fires for xhr/xdr.\n *\n * @fires progress\n * @private\n * @param {XMLHttpRequestProgressEvent|Event} event - Progress event.\n */\nResource.prototype._onProgress = function (event) {\n    if (event && event.lengthComputable) {\n        this.emit('progress', this, event.loaded / event.total);\n    }\n};\n\n/**\n * Called if an error event fires for xhr/xdr.\n *\n * @private\n * @param {XMLHttpRequestErrorEvent|Event} event - Error event.\n */\nResource.prototype._xhrOnError = function () {\n    var xhr = this.xhr;\n\n    this.abort(reqType(xhr) + ' Request failed. Status: ' + xhr.status + ', text: \"' + xhr.statusText + '\"');\n};\n\n/**\n * Called if an abort event fires for xhr.\n *\n * @private\n * @param {XMLHttpRequestAbortEvent} event - Abort Event\n */\nResource.prototype._xhrOnAbort = function () {\n    this.abort(reqType(this.xhr) + ' Request was aborted by the user.');\n};\n\n/**\n * Called if a timeout event fires for xdr.\n *\n * @private\n * @param {Event} event - Timeout event.\n */\nResource.prototype._xdrOnTimeout = function () {\n    this.abort(reqType(this.xhr) + ' Request timed out.');\n};\n\n/**\n * Called when data successfully loads from an xhr/xdr request.\n *\n * @private\n * @param {XMLHttpRequestLoadEvent|Event} event - Load event\n */\nResource.prototype._xhrOnLoad = function () {\n    var xhr = this.xhr;\n    var status = typeof xhr.status === 'undefined' ? xhr.status : STATUS_OK; // XDR has no `.status`, assume 200.\n\n    // status can be 0 when using the file:// protocol, also check if a response was found\n    if (status === STATUS_OK || status === STATUS_EMPTY || (status === STATUS_NONE && xhr.responseText.length > 0)) {\n        // if text, just return it\n        if (this.xhrType === Resource.XHR_RESPONSE_TYPE.TEXT) {\n            this.data = xhr.responseText;\n        }\n        // if json, parse into json object\n        else if (this.xhrType === Resource.XHR_RESPONSE_TYPE.JSON) {\n            try {\n                this.data = JSON.parse(xhr.responseText);\n                this.isJson = true;\n            }\n            catch (e) {\n                this.abort('Error trying to parse loaded json:', e);\n\n                return;\n            }\n        }\n        // if xml, parse into an xml document or div element\n        else if (this.xhrType === Resource.XHR_RESPONSE_TYPE.DOCUMENT) {\n            try {\n                if (window.DOMParser) {\n                    var domparser = new DOMParser();\n\n                    this.data = domparser.parseFromString(xhr.responseText, 'text/xml');\n                }\n                else {\n                    var div = document.createElement('div');\n\n                    div.innerHTML = xhr.responseText;\n                    this.data = div;\n                }\n                this.isXml = true;\n            }\n            catch (e) {\n                this.abort('Error trying to parse loaded xml:', e);\n\n                return;\n            }\n        }\n        // other types just return the response\n        else {\n            this.data = xhr.response || xhr.responseText;\n        }\n    }\n    else {\n        this.abort('[' + xhr.status + ']' + xhr.statusText + ':' + xhr.responseURL);\n\n        return;\n    }\n\n    this.complete();\n};\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n *\n * @private\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nResource.prototype._determineCrossOrigin = function (url, loc) {\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0) {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || window.location;\n\n    if (!tempAnchor) {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    url = parseUri(tempAnchor.href, { strictMode: true });\n\n    var samePort = (!url.port && loc.port === '') || (url.port === loc.port);\n    var protocol = url.protocol ? url.protocol + ':' : '';\n\n    // if cross origin\n    if (url.host !== loc.hostname || !samePort || protocol !== loc.protocol) {\n        return 'anonymous';\n    }\n\n    return '';\n};\n\n/**\n * Determines the responseType of an XHR request based on the extension of the\n * resource being loaded.\n *\n * @private\n * @return {Resource.XHR_RESPONSE_TYPE} The responseType to use.\n */\nResource.prototype._determineXhrType = function () {\n    return Resource._xhrTypeMap[this._getExtension()] || Resource.XHR_RESPONSE_TYPE.TEXT;\n};\n\nResource.prototype._determineLoadType = function () {\n    return Resource._loadTypeMap[this._getExtension()] || Resource.LOAD_TYPE.XHR;\n};\n\nResource.prototype._getExtension = function () {\n    var url = this.url;\n    var ext = '';\n\n    if (this.isDataUrl) {\n        var slashIndex = url.indexOf('/');\n\n        ext = url.substring(slashIndex + 1, url.indexOf(';', slashIndex));\n    }\n    else {\n        var queryStart = url.indexOf('?');\n\n        if (queryStart !== -1) {\n            url = url.substring(0, queryStart);\n        }\n\n        ext = url.substring(url.lastIndexOf('.') + 1);\n    }\n\n    return ext.toLowerCase();\n};\n\n/**\n * Determines the mime type of an XHR request based on the responseType of\n * resource being loaded.\n *\n * @private\n * @param {Resource.XHR_RESPONSE_TYPE} type - The type to get a mime type for.\n * @return {string} The mime type to use.\n */\nResource.prototype._getMimeFromXhrType = function (type) {\n    switch (type) {\n        case Resource.XHR_RESPONSE_TYPE.BUFFER:\n            return 'application/octet-binary';\n\n        case Resource.XHR_RESPONSE_TYPE.BLOB:\n            return 'application/blob';\n\n        case Resource.XHR_RESPONSE_TYPE.DOCUMENT:\n            return 'application/xml';\n\n        case Resource.XHR_RESPONSE_TYPE.JSON:\n            return 'application/json';\n\n        case Resource.XHR_RESPONSE_TYPE.DEFAULT:\n        case Resource.XHR_RESPONSE_TYPE.TEXT:\n            /* falls through */\n        default:\n            return 'text/plain';\n\n    }\n};\n\n/**\n * Quick helper to get string xhr type.\n *\n * @ignore\n * @param {XMLHttpRequest|XDomainRequest} xhr - The request to check.\n * @return {string} The type.\n */\nfunction reqType(xhr) {\n    return xhr.toString().replace('object ', '');\n}\n\n/**\n * The types of loading a resource can use.\n *\n * @static\n * @readonly\n * @enum {number}\n */\nResource.LOAD_TYPE = {\n    /** Uses XMLHttpRequest to load the resource. */\n    XHR:    1,\n    /** Uses an `Image` object to load the resource. */\n    IMAGE:  2,\n    /** Uses an `Audio` object to load the resource. */\n    AUDIO:  3,\n    /** Uses a `Video` object to load the resource. */\n    VIDEO:  4\n};\n\n/**\n * The XHR ready states, used internally.\n *\n * @static\n * @readonly\n * @enum {string}\n */\nResource.XHR_RESPONSE_TYPE = {\n    /** defaults to text */\n    DEFAULT:    'text',\n    /** ArrayBuffer */\n    BUFFER:     'arraybuffer',\n    /** Blob */\n    BLOB:       'blob',\n    /** Document */\n    DOCUMENT:   'document',\n    /** Object */\n    JSON:       'json',\n    /** String */\n    TEXT:       'text'\n};\n\nResource._loadTypeMap = {\n    gif:      Resource.LOAD_TYPE.IMAGE,\n    png:      Resource.LOAD_TYPE.IMAGE,\n    bmp:      Resource.LOAD_TYPE.IMAGE,\n    jpg:      Resource.LOAD_TYPE.IMAGE,\n    jpeg:     Resource.LOAD_TYPE.IMAGE,\n    tif:      Resource.LOAD_TYPE.IMAGE,\n    tiff:     Resource.LOAD_TYPE.IMAGE,\n    webp:     Resource.LOAD_TYPE.IMAGE,\n    tga:      Resource.LOAD_TYPE.IMAGE,\n    'svg+xml':  Resource.LOAD_TYPE.IMAGE\n};\n\nResource._xhrTypeMap = {\n    // xml\n    xhtml:    Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    html:     Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    htm:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    xml:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    tmx:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    tsx:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    svg:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n\n    // images\n    gif:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    png:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    bmp:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    jpg:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    jpeg:     Resource.XHR_RESPONSE_TYPE.BLOB,\n    tif:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    tiff:     Resource.XHR_RESPONSE_TYPE.BLOB,\n    webp:     Resource.XHR_RESPONSE_TYPE.BLOB,\n    tga:      Resource.XHR_RESPONSE_TYPE.BLOB,\n\n    // json\n    json:     Resource.XHR_RESPONSE_TYPE.JSON,\n\n    // text\n    text:     Resource.XHR_RESPONSE_TYPE.TEXT,\n    txt:      Resource.XHR_RESPONSE_TYPE.TEXT\n};\n\n/**\n * Sets the load type to be used for a specific extension.\n *\n * @static\n * @param {string} extname - The extension to set the type for, e.g. \"png\" or \"fnt\"\n * @param {Resource.LOAD_TYPE} loadType - The load type to set it to.\n */\nResource.setExtensionLoadType = function (extname, loadType) {\n    setExtMap(Resource._loadTypeMap, extname, loadType);\n};\n\n/**\n * Sets the load type to be used for a specific extension.\n *\n * @static\n * @param {string} extname - The extension to set the type for, e.g. \"png\" or \"fnt\"\n * @param {Resource.XHR_RESPONSE_TYPE} xhrType - The xhr type to set it to.\n */\nResource.setExtensionXhrType = function (extname, xhrType) {\n    setExtMap(Resource._xhrTypeMap, extname, xhrType);\n};\n\nfunction setExtMap(map, extname, val) {\n    if (extname && extname.indexOf('.') === 0) {\n        extname = extname.substring(1);\n    }\n\n    if (!extname) {\n        return;\n    }\n\n    map[extname] = val;\n}\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nmodule.exports = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, size;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and size are later used to transform coords into integers for z-order calculation\n        size = Math.max(maxX - minX, maxY - minY);\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, size);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) return null;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, size, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && size) indexCurve(ear, minX, minY, size);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (size ? isEarHashed(ear, minX, minY, size) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, size, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, size, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, size);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, size) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, size),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, size);\n\n    // first look for points inside the triangle in increasing z-order\n    var p = ear.nextZ;\n\n    while (p && p.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.nextZ;\n    }\n\n    // then look for points in decreasing z-order\n    p = ear.prevZ;\n\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, size) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, size);\n                earcutLinked(c, triangles, dim, minX, minY, size);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, size) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, size);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize === 0) {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                } else if (qSize === 0 || !q) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else if (p.z <= q.z) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and size of the data bounding box\nfunction zOrder(x, y, minX, minY, size) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) / size;\n    y = 32767 * (y - minY) / size;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\n/**\n * Default property values of accessible objects\n * used by {@link PIXI.accessibility.AccessibilityManager}.\n *\n * @mixin\n * @name accessibleTarget\n * @memberof PIXI\n * @example\n *      function MyObject() {}\n *\n *      Object.assign(\n *          MyObject.prototype,\n *          PIXI.accessibility.accessibleTarget\n *      );\n */\nexports.default = {\n  /**\n   *  Flag for if the object is accessible. If true AccessibilityManager will overlay a\n   *   shadow div with attributes set\n   *\n   * @member {boolean}\n   */\n  accessible: false,\n\n  /**\n   * Sets the title attribute of the shadow div\n   * If accessibleTitle AND accessibleHint has not been this will default to 'displayObject [tabIndex]'\n   *\n   * @member {string}\n   */\n  accessibleTitle: null,\n\n  /**\n   * Sets the aria-label attribute of the shadow div\n   *\n   * @member {string}\n   */\n  accessibleHint: null,\n\n  /**\n   * @todo Needs docs.\n   */\n  tabIndex: 0,\n\n  /**\n   * @todo Needs docs.\n   */\n  _accessibleActive: false,\n\n  /**\n   * @todo Needs docs.\n   */\n  _accessibleDiv: false\n};\n//# sourceMappingURL=accessibleTarget.js.map\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _math = __webpack_require__(3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 'Builder' pattern for bounds rectangles\n * Axis-Aligned Bounding Box\n * It is not a shape! Its mutable thing, no 'EMPTY' or that kind of problems\n *\n * @class\n * @memberof PIXI\n */\nvar Bounds = function () {\n    /**\n     *\n     */\n    function Bounds() {\n        _classCallCheck(this, Bounds);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minX = Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minY = Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxX = -Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxY = -Infinity;\n\n        this.rect = null;\n    }\n\n    /**\n     * Checks if bounds are empty.\n     *\n     * @return {boolean} True if empty.\n     */\n\n\n    Bounds.prototype.isEmpty = function isEmpty() {\n        return this.minX > this.maxX || this.minY > this.maxY;\n    };\n\n    /**\n     * Clears the bounds and resets.\n     *\n     */\n\n\n    Bounds.prototype.clear = function clear() {\n        this.updateID++;\n\n        this.minX = Infinity;\n        this.minY = Infinity;\n        this.maxX = -Infinity;\n        this.maxY = -Infinity;\n    };\n\n    /**\n     * Can return Rectangle.EMPTY constant, either construct new rectangle, either use your rectangle\n     * It is not guaranteed that it will return tempRect\n     *\n     * @param {PIXI.Rectangle} rect - temporary object will be used if AABB is not empty\n     * @returns {PIXI.Rectangle} A rectangle of the bounds\n     */\n\n\n    Bounds.prototype.getRectangle = function getRectangle(rect) {\n        if (this.minX > this.maxX || this.minY > this.maxY) {\n            return _math.Rectangle.EMPTY;\n        }\n\n        rect = rect || new _math.Rectangle(0, 0, 1, 1);\n\n        rect.x = this.minX;\n        rect.y = this.minY;\n        rect.width = this.maxX - this.minX;\n        rect.height = this.maxY - this.minY;\n\n        return rect;\n    };\n\n    /**\n     * This function should be inlined when its possible.\n     *\n     * @param {PIXI.Point} point - The point to add.\n     */\n\n\n    Bounds.prototype.addPoint = function addPoint(point) {\n        this.minX = Math.min(this.minX, point.x);\n        this.maxX = Math.max(this.maxX, point.x);\n        this.minY = Math.min(this.minY, point.y);\n        this.maxY = Math.max(this.maxY, point.y);\n    };\n\n    /**\n     * Adds a quad, not transformed\n     *\n     * @param {Float32Array} vertices - The verts to add.\n     */\n\n\n    Bounds.prototype.addQuad = function addQuad(vertices) {\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n\n        var x = vertices[0];\n        var y = vertices[1];\n\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[2];\n        y = vertices[3];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[4];\n        y = vertices[5];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[6];\n        y = vertices[7];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    };\n\n    /**\n     * Adds sprite frame, transformed.\n     *\n     * @param {PIXI.TransformBase} transform - TODO\n     * @param {number} x0 - TODO\n     * @param {number} y0 - TODO\n     * @param {number} x1 - TODO\n     * @param {number} y1 - TODO\n     */\n\n\n    Bounds.prototype.addFrame = function addFrame(transform, x0, y0, x1, y1) {\n        var matrix = transform.worldTransform;\n        var a = matrix.a;\n        var b = matrix.b;\n        var c = matrix.c;\n        var d = matrix.d;\n        var tx = matrix.tx;\n        var ty = matrix.ty;\n\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n\n        var x = a * x0 + c * y0 + tx;\n        var y = b * x0 + d * y0 + ty;\n\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = a * x1 + c * y0 + tx;\n        y = b * x1 + d * y0 + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = a * x0 + c * y1 + tx;\n        y = b * x0 + d * y1 + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = a * x1 + c * y1 + tx;\n        y = b * x1 + d * y1 + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    };\n\n    /**\n     * Add an array of vertices\n     *\n     * @param {PIXI.TransformBase} transform - TODO\n     * @param {Float32Array} vertices - TODO\n     * @param {number} beginOffset - TODO\n     * @param {number} endOffset - TODO\n     */\n\n\n    Bounds.prototype.addVertices = function addVertices(transform, vertices, beginOffset, endOffset) {\n        var matrix = transform.worldTransform;\n        var a = matrix.a;\n        var b = matrix.b;\n        var c = matrix.c;\n        var d = matrix.d;\n        var tx = matrix.tx;\n        var ty = matrix.ty;\n\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n\n        for (var i = beginOffset; i < endOffset; i += 2) {\n            var rawX = vertices[i];\n            var rawY = vertices[i + 1];\n            var x = a * rawX + c * rawY + tx;\n            var y = d * rawY + b * rawX + ty;\n\n            minX = x < minX ? x : minX;\n            minY = y < minY ? y : minY;\n            maxX = x > maxX ? x : maxX;\n            maxY = y > maxY ? y : maxY;\n        }\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    };\n\n    /**\n     * Adds other Bounds\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     */\n\n\n    Bounds.prototype.addBounds = function addBounds(bounds) {\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n\n        this.minX = bounds.minX < minX ? bounds.minX : minX;\n        this.minY = bounds.minY < minY ? bounds.minY : minY;\n        this.maxX = bounds.maxX > maxX ? bounds.maxX : maxX;\n        this.maxY = bounds.maxY > maxY ? bounds.maxY : maxY;\n    };\n\n    /**\n     * Adds other Bounds, masked with Bounds\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     * @param {PIXI.Bounds} mask - TODO\n     */\n\n\n    Bounds.prototype.addBoundsMask = function addBoundsMask(bounds, mask) {\n        var _minX = bounds.minX > mask.minX ? bounds.minX : mask.minX;\n        var _minY = bounds.minY > mask.minY ? bounds.minY : mask.minY;\n        var _maxX = bounds.maxX < mask.maxX ? bounds.maxX : mask.maxX;\n        var _maxY = bounds.maxY < mask.maxY ? bounds.maxY : mask.maxY;\n\n        if (_minX <= _maxX && _minY <= _maxY) {\n            var minX = this.minX;\n            var minY = this.minY;\n            var maxX = this.maxX;\n            var maxY = this.maxY;\n\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    };\n\n    /**\n     * Adds other Bounds, masked with Rectangle\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     * @param {PIXI.Rectangle} area - TODO\n     */\n\n\n    Bounds.prototype.addBoundsArea = function addBoundsArea(bounds, area) {\n        var _minX = bounds.minX > area.x ? bounds.minX : area.x;\n        var _minY = bounds.minY > area.y ? bounds.minY : area.y;\n        var _maxX = bounds.maxX < area.x + area.width ? bounds.maxX : area.x + area.width;\n        var _maxY = bounds.maxY < area.y + area.height ? bounds.maxY : area.y + area.height;\n\n        if (_minX <= _maxX && _minY <= _maxY) {\n            var minX = this.minX;\n            var minY = this.minY;\n            var maxX = this.maxX;\n            var maxY = this.maxY;\n\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    };\n\n    return Bounds;\n}();\n\nexports.default = Bounds;\n//# sourceMappingURL=Bounds.js.map\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _eventemitter = __webpack_require__(7);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _const = __webpack_require__(1);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _TransformStatic = __webpack_require__(40);\n\nvar _TransformStatic2 = _interopRequireDefault(_TransformStatic);\n\nvar _Transform = __webpack_require__(39);\n\nvar _Transform2 = _interopRequireDefault(_Transform);\n\nvar _Bounds = __webpack_require__(37);\n\nvar _Bounds2 = _interopRequireDefault(_Bounds);\n\nvar _math = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// _tempDisplayObjectParent = new DisplayObject();\n\n/**\n * The base class for all objects that are rendered on the screen.\n * This is an abstract class and should not be used on its own rather it should be extended.\n *\n * @class\n * @extends EventEmitter\n * @mixes PIXI.interaction.interactiveTarget\n * @memberof PIXI\n */\nvar DisplayObject = function (_EventEmitter) {\n    _inherits(DisplayObject, _EventEmitter);\n\n    /**\n     *\n     */\n    function DisplayObject() {\n        _classCallCheck(this, DisplayObject);\n\n        var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n        var TransformClass = _settings2.default.TRANSFORM_MODE === _const.TRANSFORM_MODE.STATIC ? _TransformStatic2.default : _Transform2.default;\n\n        _this.tempDisplayObjectParent = null;\n\n        // TODO: need to create Transform from factory\n        /**\n         * World transform and local transform of this object.\n         * This will become read-only later, please do not assign anything there unless you know what are you doing\n         *\n         * @member {PIXI.TransformBase}\n         */\n        _this.transform = new TransformClass();\n\n        /**\n         * The opacity of the object.\n         *\n         * @member {number}\n         */\n        _this.alpha = 1;\n\n        /**\n         * The visibility of the object. If false the object will not be drawn, and\n         * the updateTransform function will not be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds or call updateTransform manually\n         *\n         * @member {boolean}\n         */\n        _this.visible = true;\n\n        /**\n         * Can this object be rendered, if false the object will not be drawn but the updateTransform\n         * methods will still be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds manually\n         *\n         * @member {boolean}\n         */\n        _this.renderable = true;\n\n        /**\n         * The display object container that contains this display object.\n         *\n         * @member {PIXI.Container}\n         * @readonly\n         */\n        _this.parent = null;\n\n        /**\n         * The multiplied alpha of the displayObject\n         *\n         * @member {number}\n         * @readonly\n         */\n        _this.worldAlpha = 1;\n\n        /**\n         * The area the filter is applied to. This is used as more of an optimisation\n         * rather than figuring out the dimensions of the displayObject each frame you can set this rectangle\n         *\n         * Also works as an interaction mask\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this.filterArea = null;\n\n        _this._filters = null;\n        _this._enabledFilters = null;\n\n        /**\n         * The bounds object, this is used to calculate and store the bounds of the displayObject\n         *\n         * @member {PIXI.Rectangle}\n         * @private\n         */\n        _this._bounds = new _Bounds2.default();\n        _this._boundsID = 0;\n        _this._lastBoundsID = -1;\n        _this._boundsRect = null;\n        _this._localBoundsRect = null;\n\n        /**\n         * The original, cached mask of the object\n         *\n         * @member {PIXI.Rectangle}\n         * @private\n         */\n        _this._mask = null;\n        return _this;\n    }\n\n    /**\n     * @private\n     * @member {PIXI.DisplayObject}\n     */\n\n\n    /**\n     * Updates the object transform for rendering\n     *\n     * TODO - Optimization pass!\n     */\n    DisplayObject.prototype.updateTransform = function updateTransform() {\n        this.transform.updateTransform(this.parent.transform);\n        // multiply the alphas..\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n        this._bounds.updateID++;\n    };\n\n    /**\n     * recursively updates transform of all objects from the root to this one\n     * internal function for toLocal()\n     */\n\n\n    DisplayObject.prototype._recursivePostUpdateTransform = function _recursivePostUpdateTransform() {\n        if (this.parent) {\n            this.parent._recursivePostUpdateTransform();\n            this.transform.updateTransform(this.parent.transform);\n        } else {\n            this.transform.updateTransform(this._tempDisplayObjectParent.transform);\n        }\n    };\n\n    /**\n     * Retrieves the bounds of the displayObject as a rectangle object.\n     *\n     * @param {boolean} skipUpdate - setting to true will stop the transforms of the scene graph from\n     *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n     *  nice performance boost\n     * @param {PIXI.Rectangle} rect - Optional rectangle to store the result of the bounds calculation\n     * @return {PIXI.Rectangle} the rectangular bounding area\n     */\n\n\n    DisplayObject.prototype.getBounds = function getBounds(skipUpdate, rect) {\n        if (!skipUpdate) {\n            if (!this.parent) {\n                this.parent = this._tempDisplayObjectParent;\n                this.updateTransform();\n                this.parent = null;\n            } else {\n                this._recursivePostUpdateTransform();\n                this.updateTransform();\n            }\n        }\n\n        if (this._boundsID !== this._lastBoundsID) {\n            this.calculateBounds();\n        }\n\n        if (!rect) {\n            if (!this._boundsRect) {\n                this._boundsRect = new _math.Rectangle();\n            }\n\n            rect = this._boundsRect;\n        }\n\n        return this._bounds.getRectangle(rect);\n    };\n\n    /**\n     * Retrieves the local bounds of the displayObject as a rectangle object\n     *\n     * @param {PIXI.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation\n     * @return {PIXI.Rectangle} the rectangular bounding area\n     */\n\n\n    DisplayObject.prototype.getLocalBounds = function getLocalBounds(rect) {\n        var transformRef = this.transform;\n        var parentRef = this.parent;\n\n        this.parent = null;\n        this.transform = this._tempDisplayObjectParent.transform;\n\n        if (!rect) {\n            if (!this._localBoundsRect) {\n                this._localBoundsRect = new _math.Rectangle();\n            }\n\n            rect = this._localBoundsRect;\n        }\n\n        var bounds = this.getBounds(false, rect);\n\n        this.parent = parentRef;\n        this.transform = transformRef;\n\n        return bounds;\n    };\n\n    /**\n     * Calculates the global position of the display object\n     *\n     * @param {PIXI.Point} position - The world origin to calculate from\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point)\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform.\n     * @return {PIXI.Point} A point object representing the position of this object\n     */\n\n\n    DisplayObject.prototype.toGlobal = function toGlobal(position, point) {\n        var skipUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (!skipUpdate) {\n            this._recursivePostUpdateTransform();\n\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent) {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            } else {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        // don't need to update the lot\n        return this.worldTransform.apply(position, point);\n    };\n\n    /**\n     * Calculates the local position of the display object relative to another point\n     *\n     * @param {PIXI.Point} position - The world origin to calculate from\n     * @param {PIXI.DisplayObject} [from] - The DisplayObject to calculate the global position from\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point)\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform\n     * @return {PIXI.Point} A point object representing the position of this object\n     */\n\n\n    DisplayObject.prototype.toLocal = function toLocal(position, from, point, skipUpdate) {\n        if (from) {\n            position = from.toGlobal(position, point, skipUpdate);\n        }\n\n        if (!skipUpdate) {\n            this._recursivePostUpdateTransform();\n\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent) {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            } else {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        // simply apply the matrix..\n        return this.worldTransform.applyInverse(position, point);\n    };\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    DisplayObject.prototype.renderWebGL = function renderWebGL(renderer) // eslint-disable-line no-unused-vars\n    {}\n    // OVERWRITE;\n\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n    ;\n\n    DisplayObject.prototype.renderCanvas = function renderCanvas(renderer) // eslint-disable-line no-unused-vars\n    {}\n    // OVERWRITE;\n\n\n    /**\n     * Set the parent Container of this DisplayObject\n     *\n     * @param {PIXI.Container} container - The Container to add this DisplayObject to\n     * @return {PIXI.Container} The Container that this DisplayObject was added to\n     */\n    ;\n\n    DisplayObject.prototype.setParent = function setParent(container) {\n        if (!container || !container.addChild) {\n            throw new Error('setParent: Argument must be a Container');\n        }\n\n        container.addChild(this);\n\n        return container;\n    };\n\n    /**\n     * Convenience function to set the position, scale, skew and pivot at once.\n     *\n     * @param {number} [x=0] - The X position\n     * @param {number} [y=0] - The Y position\n     * @param {number} [scaleX=1] - The X scale value\n     * @param {number} [scaleY=1] - The Y scale value\n     * @param {number} [rotation=0] - The rotation\n     * @param {number} [skewX=0] - The X skew value\n     * @param {number} [skewY=0] - The Y skew value\n     * @param {number} [pivotX=0] - The X pivot value\n     * @param {number} [pivotY=0] - The Y pivot value\n     * @return {PIXI.DisplayObject} The DisplayObject instance\n     */\n\n\n    DisplayObject.prototype.setTransform = function setTransform() {\n        var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var scaleX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var scaleY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var rotation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n        var skewX = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n        var skewY = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n        var pivotX = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n        var pivotY = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;\n\n        this.position.x = x;\n        this.position.y = y;\n        this.scale.x = !scaleX ? 1 : scaleX;\n        this.scale.y = !scaleY ? 1 : scaleY;\n        this.rotation = rotation;\n        this.skew.x = skewX;\n        this.skew.y = skewY;\n        this.pivot.x = pivotX;\n        this.pivot.y = pivotY;\n\n        return this;\n    };\n\n    /**\n     * Base destroy method for generic display objects. This will automatically\n     * remove the display object from its parent Container as well as remove\n     * all current event listeners and internal references. Do not use a DisplayObject\n     * after calling `destroy`.\n     *\n     */\n\n\n    DisplayObject.prototype.destroy = function destroy() {\n        this.removeAllListeners();\n        if (this.parent) {\n            this.parent.removeChild(this);\n        }\n        this.transform = null;\n\n        this.parent = null;\n\n        this._bounds = null;\n        this._currentBounds = null;\n        this._mask = null;\n\n        this.filterArea = null;\n\n        this.interactive = false;\n        this.interactiveChildren = false;\n    };\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     * An alias to position.x\n     *\n     * @member {number}\n     * @memberof PIXI.DisplayObject#\n     */\n\n\n    _createClass(DisplayObject, [{\n        key: '_tempDisplayObjectParent',\n        get: function get() {\n            if (this.tempDisplayObjectParent === null) {\n                this.tempDisplayObjectParent = new DisplayObject();\n            }\n\n            return this.tempDisplayObjectParent;\n        }\n    }, {\n        key: 'x',\n        get: function get() {\n            return this.position.x;\n        }\n\n        /**\n         * Sets the X position of the object.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.position.x = value;\n        }\n\n        /**\n         * The position of the displayObject on the y axis relative to the local coordinates of the parent.\n         * An alias to position.y\n         *\n         * @member {number}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'y',\n        get: function get() {\n            return this.position.y;\n        }\n\n        /**\n         * Sets the Y position of the object.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.position.y = value;\n        }\n\n        /**\n         * Current transform of the object based on world (parent) factors\n         *\n         * @member {PIXI.Matrix}\n         * @memberof PIXI.DisplayObject#\n         * @readonly\n         */\n\n    }, {\n        key: 'worldTransform',\n        get: function get() {\n            return this.transform.worldTransform;\n        }\n\n        /**\n         * Current transform of the object based on local factors: position, scale, other stuff\n         *\n         * @member {PIXI.Matrix}\n         * @memberof PIXI.DisplayObject#\n         * @readonly\n         */\n\n    }, {\n        key: 'localTransform',\n        get: function get() {\n            return this.transform.localTransform;\n        }\n\n        /**\n         * The coordinate of the object relative to the local coordinates of the parent.\n         * Assignment by value since pixi-v4.\n         *\n         * @member {PIXI.Point|PIXI.ObservablePoint}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'position',\n        get: function get() {\n            return this.transform.position;\n        }\n\n        /**\n         * Copies the point to the position of the object.\n         *\n         * @param {PIXI.Point} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.position.copy(value);\n        }\n\n        /**\n         * The scale factor of the object.\n         * Assignment by value since pixi-v4.\n         *\n         * @member {PIXI.Point|PIXI.ObservablePoint}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'scale',\n        get: function get() {\n            return this.transform.scale;\n        }\n\n        /**\n         * Copies the point to the scale of the object.\n         *\n         * @param {PIXI.Point} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.scale.copy(value);\n        }\n\n        /**\n         * The pivot point of the displayObject that it rotates around\n         * Assignment by value since pixi-v4.\n         *\n         * @member {PIXI.Point|PIXI.ObservablePoint}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'pivot',\n        get: function get() {\n            return this.transform.pivot;\n        }\n\n        /**\n         * Copies the point to the pivot of the object.\n         *\n         * @param {PIXI.Point} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.pivot.copy(value);\n        }\n\n        /**\n         * The skew factor for the object in radians.\n         * Assignment by value since pixi-v4.\n         *\n         * @member {PIXI.ObservablePoint}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'skew',\n        get: function get() {\n            return this.transform.skew;\n        }\n\n        /**\n         * Copies the point to the skew of the object.\n         *\n         * @param {PIXI.Point} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.skew.copy(value);\n        }\n\n        /**\n         * The rotation of the object in radians.\n         *\n         * @member {number}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'rotation',\n        get: function get() {\n            return this.transform.rotation;\n        }\n\n        /**\n         * Sets the rotation of the object.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.rotation = value;\n        }\n\n        /**\n         * Indicates if the object is globally visible.\n         *\n         * @member {boolean}\n         * @memberof PIXI.DisplayObject#\n         * @readonly\n         */\n\n    }, {\n        key: 'worldVisible',\n        get: function get() {\n            var item = this;\n\n            do {\n                if (!item.visible) {\n                    return false;\n                }\n\n                item = item.parent;\n            } while (item);\n\n            return true;\n        }\n\n        /**\n         * Sets a mask for the displayObject. A mask is an object that limits the visibility of an\n         * object to the shape of the mask applied to it. In PIXI a regular mask must be a\n         * PIXI.Graphics or a PIXI.Sprite object. This allows for much faster masking in canvas as it\n         * utilises shape clipping. To remove a mask, set this property to null.\n         *\n         * @todo For the moment, PIXI.CanvasRenderer doesn't support PIXI.Sprite as mask.\n         *\n         * @member {PIXI.Graphics|PIXI.Sprite}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'mask',\n        get: function get() {\n            return this._mask;\n        }\n\n        /**\n         * Sets the mask.\n         *\n         * @param {PIXI.Graphics|PIXI.Sprite} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (this._mask) {\n                this._mask.renderable = true;\n            }\n\n            this._mask = value;\n\n            if (this._mask) {\n                this._mask.renderable = false;\n            }\n        }\n\n        /**\n         * Sets the filters for the displayObject.\n         * * IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\n         * To remove filters simply set this property to 'null'\n         *\n         * @member {PIXI.Filter[]}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'filters',\n        get: function get() {\n            return this._filters && this._filters.slice();\n        }\n\n        /**\n         * Shallow copies the array to the filters of the object.\n         *\n         * @param {PIXI.Filter[]} value - The filters to set.\n         */\n        ,\n        set: function set(value) {\n            this._filters = value && value.slice();\n        }\n    }]);\n\n    return DisplayObject;\n}(_eventemitter2.default);\n\n// performance increase to avoid using call.. (10x faster)\n\n\nexports.default = DisplayObject;\nDisplayObject.prototype.displayObjectUpdateTransform = DisplayObject.prototype.updateTransform;\n//# sourceMappingURL=DisplayObject.js.map\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _math = __webpack_require__(3);\n\nvar _TransformBase2 = __webpack_require__(22);\n\nvar _TransformBase3 = _interopRequireDefault(_TransformBase2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Generic class to deal with traditional 2D matrix transforms\n * local transformation is calculated from position,scale,skew and rotation\n *\n * @class\n * @extends PIXI.TransformBase\n * @memberof PIXI\n */\nvar Transform = function (_TransformBase) {\n  _inherits(Transform, _TransformBase);\n\n  /**\n   *\n   */\n  function Transform() {\n    _classCallCheck(this, Transform);\n\n    /**\n    * The coordinate of the object relative to the local coordinates of the parent.\n    *\n    * @member {PIXI.Point}\n    */\n    var _this = _possibleConstructorReturn(this, _TransformBase.call(this));\n\n    _this.position = new _math.Point(0, 0);\n\n    /**\n     * The scale factor of the object.\n     *\n     * @member {PIXI.Point}\n     */\n    _this.scale = new _math.Point(1, 1);\n\n    /**\n     * The skew amount, on the x and y axis.\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    _this.skew = new _math.ObservablePoint(_this.updateSkew, _this, 0, 0);\n\n    /**\n     * The pivot point of the displayObject that it rotates around\n     *\n     * @member {PIXI.Point}\n     */\n    _this.pivot = new _math.Point(0, 0);\n\n    /**\n     * The rotation value of the object, in radians\n     *\n     * @member {Number}\n     * @private\n     */\n    _this._rotation = 0;\n\n    _this._sr = Math.sin(0);\n    _this._cr = Math.cos(0);\n    _this._cy = Math.cos(0); // skewY);\n    _this._sy = Math.sin(0); // skewY);\n    _this._nsx = Math.sin(0); // skewX);\n    _this._cx = Math.cos(0); // skewX);\n    return _this;\n  }\n\n  /**\n   * Updates the skew values when the skew changes.\n   *\n   * @private\n   */\n\n\n  Transform.prototype.updateSkew = function updateSkew() {\n    this._cy = Math.cos(this.skew.y);\n    this._sy = Math.sin(this.skew.y);\n    this._nsx = Math.sin(this.skew.x);\n    this._cx = Math.cos(this.skew.x);\n  };\n\n  /**\n   * Updates only local matrix\n   */\n\n\n  Transform.prototype.updateLocalTransform = function updateLocalTransform() {\n    var lt = this.localTransform;\n    var a = this._cr * this.scale.x;\n    var b = this._sr * this.scale.x;\n    var c = -this._sr * this.scale.y;\n    var d = this._cr * this.scale.y;\n\n    lt.a = this._cy * a + this._sy * c;\n    lt.b = this._cy * b + this._sy * d;\n    lt.c = this._nsx * a + this._cx * c;\n    lt.d = this._nsx * b + this._cx * d;\n  };\n\n  /**\n   * Updates the values of the object and applies the parent's transform.\n   *\n   * @param {PIXI.Transform} parentTransform - The transform of the parent of this object\n   */\n\n\n  Transform.prototype.updateTransform = function updateTransform(parentTransform) {\n    var pt = parentTransform.worldTransform;\n    var wt = this.worldTransform;\n    var lt = this.localTransform;\n\n    var a = this._cr * this.scale.x;\n    var b = this._sr * this.scale.x;\n    var c = -this._sr * this.scale.y;\n    var d = this._cr * this.scale.y;\n\n    lt.a = this._cy * a + this._sy * c;\n    lt.b = this._cy * b + this._sy * d;\n    lt.c = this._nsx * a + this._cx * c;\n    lt.d = this._nsx * b + this._cx * d;\n\n    lt.tx = this.position.x - (this.pivot.x * lt.a + this.pivot.y * lt.c);\n    lt.ty = this.position.y - (this.pivot.x * lt.b + this.pivot.y * lt.d);\n\n    // concat the parent matrix with the objects transform.\n    wt.a = lt.a * pt.a + lt.b * pt.c;\n    wt.b = lt.a * pt.b + lt.b * pt.d;\n    wt.c = lt.c * pt.a + lt.d * pt.c;\n    wt.d = lt.c * pt.b + lt.d * pt.d;\n    wt.tx = lt.tx * pt.a + lt.ty * pt.c + pt.tx;\n    wt.ty = lt.tx * pt.b + lt.ty * pt.d + pt.ty;\n\n    this._worldID++;\n  };\n\n  /**\n   * Decomposes a matrix and sets the transforms properties based on it.\n   *\n   * @param {PIXI.Matrix} matrix - The matrix to decompose\n   */\n\n\n  Transform.prototype.setFromMatrix = function setFromMatrix(matrix) {\n    matrix.decompose(this);\n  };\n\n  /**\n   * The rotation of the object in radians.\n   *\n   * @member {number}\n   * @memberof PIXI.Transform#\n   */\n\n\n  _createClass(Transform, [{\n    key: 'rotation',\n    get: function get() {\n      return this._rotation;\n    }\n\n    /**\n     * Set the rotation of the transform.\n     *\n     * @param {number} value - The value to set to.\n     */\n    ,\n    set: function set(value) {\n      this._rotation = value;\n      this._sr = Math.sin(value);\n      this._cr = Math.cos(value);\n    }\n  }]);\n\n  return Transform;\n}(_TransformBase3.default);\n\nexports.default = Transform;\n//# sourceMappingURL=Transform.js.map\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _math = __webpack_require__(3);\n\nvar _TransformBase2 = __webpack_require__(22);\n\nvar _TransformBase3 = _interopRequireDefault(_TransformBase2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Transform that takes care about its versions\n *\n * @class\n * @extends PIXI.TransformBase\n * @memberof PIXI\n */\nvar TransformStatic = function (_TransformBase) {\n  _inherits(TransformStatic, _TransformBase);\n\n  /**\n   *\n   */\n  function TransformStatic() {\n    _classCallCheck(this, TransformStatic);\n\n    /**\n    * The coordinate of the object relative to the local coordinates of the parent.\n    *\n    * @member {PIXI.ObservablePoint}\n    */\n    var _this = _possibleConstructorReturn(this, _TransformBase.call(this));\n\n    _this.position = new _math.ObservablePoint(_this.onChange, _this, 0, 0);\n\n    /**\n     * The scale factor of the object.\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    _this.scale = new _math.ObservablePoint(_this.onChange, _this, 1, 1);\n\n    /**\n     * The pivot point of the displayObject that it rotates around\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    _this.pivot = new _math.ObservablePoint(_this.onChange, _this, 0, 0);\n\n    /**\n     * The skew amount, on the x and y axis.\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    _this.skew = new _math.ObservablePoint(_this.updateSkew, _this, 0, 0);\n\n    _this._rotation = 0;\n\n    _this._sr = Math.sin(0);\n    _this._cr = Math.cos(0);\n    _this._cy = Math.cos(0); // skewY);\n    _this._sy = Math.sin(0); // skewY);\n    _this._nsx = Math.sin(0); // skewX);\n    _this._cx = Math.cos(0); // skewX);\n\n    _this._localID = 0;\n    _this._currentLocalID = 0;\n    return _this;\n  }\n\n  /**\n   * Called when a value changes.\n   *\n   * @private\n   */\n\n\n  TransformStatic.prototype.onChange = function onChange() {\n    this._localID++;\n  };\n\n  /**\n   * Called when skew changes\n   *\n   * @private\n   */\n\n\n  TransformStatic.prototype.updateSkew = function updateSkew() {\n    this._cy = Math.cos(this.skew._y);\n    this._sy = Math.sin(this.skew._y);\n    this._nsx = Math.sin(this.skew._x);\n    this._cx = Math.cos(this.skew._x);\n\n    this._localID++;\n  };\n\n  /**\n   * Updates only local matrix\n   */\n\n\n  TransformStatic.prototype.updateLocalTransform = function updateLocalTransform() {\n    var lt = this.localTransform;\n\n    if (this._localID !== this._currentLocalID) {\n      // get the matrix values of the displayobject based on its transform properties..\n      var a = this._cr * this.scale._x;\n      var b = this._sr * this.scale._x;\n      var c = -this._sr * this.scale._y;\n      var d = this._cr * this.scale._y;\n\n      lt.a = this._cy * a + this._sy * c;\n      lt.b = this._cy * b + this._sy * d;\n      lt.c = this._nsx * a + this._cx * c;\n      lt.d = this._nsx * b + this._cx * d;\n\n      lt.tx = this.position._x - (this.pivot._x * lt.a + this.pivot._y * lt.c);\n      lt.ty = this.position._y - (this.pivot._x * lt.b + this.pivot._y * lt.d);\n      this._currentLocalID = this._localID;\n\n      // force an update..\n      this._parentID = -1;\n    }\n  };\n\n  /**\n   * Updates the values of the object and applies the parent's transform.\n   *\n   * @param {PIXI.Transform} parentTransform - The transform of the parent of this object\n   */\n\n\n  TransformStatic.prototype.updateTransform = function updateTransform(parentTransform) {\n    var pt = parentTransform.worldTransform;\n    var wt = this.worldTransform;\n    var lt = this.localTransform;\n\n    if (this._localID !== this._currentLocalID) {\n      // get the matrix values of the displayobject based on its transform properties..\n      var a = this._cr * this.scale._x;\n      var b = this._sr * this.scale._x;\n      var c = -this._sr * this.scale._y;\n      var d = this._cr * this.scale._y;\n\n      lt.a = this._cy * a + this._sy * c;\n      lt.b = this._cy * b + this._sy * d;\n      lt.c = this._nsx * a + this._cx * c;\n      lt.d = this._nsx * b + this._cx * d;\n\n      lt.tx = this.position._x - (this.pivot._x * lt.a + this.pivot._y * lt.c);\n      lt.ty = this.position._y - (this.pivot._x * lt.b + this.pivot._y * lt.d);\n      this._currentLocalID = this._localID;\n\n      // force an update..\n      this._parentID = -1;\n    }\n\n    if (this._parentID !== parentTransform._worldID) {\n      // concat the parent matrix with the objects transform.\n      wt.a = lt.a * pt.a + lt.b * pt.c;\n      wt.b = lt.a * pt.b + lt.b * pt.d;\n      wt.c = lt.c * pt.a + lt.d * pt.c;\n      wt.d = lt.c * pt.b + lt.d * pt.d;\n      wt.tx = lt.tx * pt.a + lt.ty * pt.c + pt.tx;\n      wt.ty = lt.tx * pt.b + lt.ty * pt.d + pt.ty;\n\n      this._parentID = parentTransform._worldID;\n\n      // update the id of the transform..\n      this._worldID++;\n    }\n  };\n\n  /**\n   * Decomposes a matrix and sets the transforms properties based on it.\n   *\n   * @param {PIXI.Matrix} matrix - The matrix to decompose\n   */\n\n\n  TransformStatic.prototype.setFromMatrix = function setFromMatrix(matrix) {\n    matrix.decompose(this);\n    this._localID++;\n  };\n\n  /**\n   * The rotation of the object in radians.\n   *\n   * @member {number}\n   * @memberof PIXI.TransformStatic#\n   */\n\n\n  _createClass(TransformStatic, [{\n    key: 'rotation',\n    get: function get() {\n      return this._rotation;\n    }\n\n    /**\n     * Sets the rotation of the transform.\n     *\n     * @param {number} value - The value to set to.\n     */\n    ,\n    set: function set(value) {\n      this._rotation = value;\n      this._sr = Math.sin(value);\n      this._cr = Math.cos(value);\n      this._localID++;\n    }\n  }]);\n\n  return TransformStatic;\n}(_TransformBase3.default);\n\nexports.default = TransformStatic;\n//# sourceMappingURL=TransformStatic.js.map\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A GraphicsData object.\n *\n * @class\n * @memberof PIXI\n */\nvar GraphicsData = function () {\n  /**\n   *\n   * @param {number} lineWidth - the width of the line to draw\n   * @param {number} lineColor - the color of the line to draw\n   * @param {number} lineAlpha - the alpha of the line to draw\n   * @param {number} fillColor - the color of the fill\n   * @param {number} fillAlpha - the alpha of the fill\n   * @param {boolean} fill - whether or not the shape is filled with a colour\n   * @param {PIXI.Circle|PIXI.Rectangle|PIXI.Ellipse|PIXI.Polygon} shape - The shape object to draw.\n   */\n  function GraphicsData(lineWidth, lineColor, lineAlpha, fillColor, fillAlpha, fill, shape) {\n    _classCallCheck(this, GraphicsData);\n\n    /**\n     * @member {number} the width of the line to draw\n     */\n    this.lineWidth = lineWidth;\n\n    /**\n     * @member {number} the color of the line to draw\n     */\n    this.lineColor = lineColor;\n\n    /**\n     * @member {number} the alpha of the line to draw\n     */\n    this.lineAlpha = lineAlpha;\n\n    /**\n     * @member {number} cached tint of the line to draw\n     */\n    this._lineTint = lineColor;\n\n    /**\n     * @member {number} the color of the fill\n     */\n    this.fillColor = fillColor;\n\n    /**\n     * @member {number} the alpha of the fill\n     */\n    this.fillAlpha = fillAlpha;\n\n    /**\n     * @member {number} cached tint of the fill\n     */\n    this._fillTint = fillColor;\n\n    /**\n     * @member {boolean} whether or not the shape is filled with a colour\n     */\n    this.fill = fill;\n\n    this.holes = [];\n\n    /**\n     * @member {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} The shape object to draw.\n     */\n    this.shape = shape;\n\n    /**\n     * @member {number} The type of the shape, see the Const.Shapes file for all the existing types,\n     */\n    this.type = shape.type;\n  }\n\n  /**\n   * Creates a new GraphicsData object with the same values as this one.\n   *\n   * @return {PIXI.GraphicsData} Cloned GraphicsData object\n   */\n\n\n  GraphicsData.prototype.clone = function clone() {\n    return new GraphicsData(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.fill, this.shape);\n  };\n\n  /**\n   * Adds a hole to the shape.\n   *\n   * @param {PIXI.Rectangle|PIXI.Circle} shape - The shape of the hole.\n   */\n\n\n  GraphicsData.prototype.addHole = function addHole(shape) {\n    this.holes.push(shape);\n  };\n\n  /**\n   * Destroys the Graphics data.\n   */\n\n\n  GraphicsData.prototype.destroy = function destroy() {\n    this.shape = null;\n    this.holes = null;\n  };\n\n  return GraphicsData;\n}();\n\nexports.default = GraphicsData;\n//# sourceMappingURL=GraphicsData.js.map\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Matrix = __webpack_require__(23);\n\nvar _Matrix2 = _interopRequireDefault(_Matrix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1]; // Your friendly neighbour https://en.wikipedia.org/wiki/Dihedral_group of order 16\n\nvar uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1];\nvar vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1];\nvar vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1];\nvar tempMatrices = [];\n\nvar mul = [];\n\nfunction signum(x) {\n    if (x < 0) {\n        return -1;\n    }\n    if (x > 0) {\n        return 1;\n    }\n\n    return 0;\n}\n\nfunction init() {\n    for (var i = 0; i < 16; i++) {\n        var row = [];\n\n        mul.push(row);\n\n        for (var j = 0; j < 16; j++) {\n            var _ux = signum(ux[i] * ux[j] + vx[i] * uy[j]);\n            var _uy = signum(uy[i] * ux[j] + vy[i] * uy[j]);\n            var _vx = signum(ux[i] * vx[j] + vx[i] * vy[j]);\n            var _vy = signum(uy[i] * vx[j] + vy[i] * vy[j]);\n\n            for (var k = 0; k < 16; k++) {\n                if (ux[k] === _ux && uy[k] === _uy && vx[k] === _vx && vy[k] === _vy) {\n                    row.push(k);\n                    break;\n                }\n            }\n        }\n    }\n\n    for (var _i = 0; _i < 16; _i++) {\n        var mat = new _Matrix2.default();\n\n        mat.set(ux[_i], uy[_i], vx[_i], vy[_i], 0, 0);\n        tempMatrices.push(mat);\n    }\n}\n\ninit();\n\n/**\n * Implements Dihedral Group D_8, see [group D4]{@link http://mathworld.wolfram.com/DihedralGroupD4.html},\n * D8 is the same but with diagonals. Used for texture rotations.\n *\n * Vector xX(i), xY(i) is U-axis of sprite with rotation i\n * Vector yY(i), yY(i) is V-axis of sprite with rotation i\n * Rotations: 0 grad (0), 90 grad (2), 180 grad (4), 270 grad (6)\n * Mirrors: vertical (8), main diagonal (10), horizontal (12), reverse diagonal (14)\n * This is the small part of gameofbombs.com portal system. It works.\n *\n * @author Ivan @ivanpopelyshev\n *\n * @namespace PIXI.GroupD8\n */\nvar GroupD8 = {\n    E: 0,\n    SE: 1,\n    S: 2,\n    SW: 3,\n    W: 4,\n    NW: 5,\n    N: 6,\n    NE: 7,\n    MIRROR_VERTICAL: 8,\n    MIRROR_HORIZONTAL: 12,\n    uX: function uX(ind) {\n        return ux[ind];\n    },\n    uY: function uY(ind) {\n        return uy[ind];\n    },\n    vX: function vX(ind) {\n        return vx[ind];\n    },\n    vY: function vY(ind) {\n        return vy[ind];\n    },\n    inv: function inv(rotation) {\n        if (rotation & 8) {\n            return rotation & 15;\n        }\n\n        return -rotation & 7;\n    },\n    add: function add(rotationSecond, rotationFirst) {\n        return mul[rotationSecond][rotationFirst];\n    },\n    sub: function sub(rotationSecond, rotationFirst) {\n        return mul[rotationSecond][GroupD8.inv(rotationFirst)];\n    },\n\n    /**\n     * Adds 180 degrees to rotation. Commutative operation.\n     *\n     * @method\n     * @param {number} rotation - The number to rotate.\n     * @returns {number} rotated number\n     */\n    rotate180: function rotate180(rotation) {\n        return rotation ^ 4;\n    },\n\n    /**\n     * I dont know why sometimes width and heights needs to be swapped. We'll fix it later.\n     *\n     * @param {number} rotation - The number to check.\n     * @returns {boolean} Whether or not the width/height should be swapped.\n     */\n    isSwapWidthHeight: function isSwapWidthHeight(rotation) {\n        return (rotation & 3) === 2;\n    },\n\n    /**\n     * @param {number} dx - TODO\n     * @param {number} dy - TODO\n     *\n     * @return {number} TODO\n     */\n    byDirection: function byDirection(dx, dy) {\n        if (Math.abs(dx) * 2 <= Math.abs(dy)) {\n            if (dy >= 0) {\n                return GroupD8.S;\n            }\n\n            return GroupD8.N;\n        } else if (Math.abs(dy) * 2 <= Math.abs(dx)) {\n            if (dx > 0) {\n                return GroupD8.E;\n            }\n\n            return GroupD8.W;\n        } else if (dy > 0) {\n            if (dx > 0) {\n                return GroupD8.SE;\n            }\n\n            return GroupD8.SW;\n        } else if (dx > 0) {\n            return GroupD8.NE;\n        }\n\n        return GroupD8.NW;\n    },\n\n    /**\n     * Helps sprite to compensate texture packer rotation.\n     *\n     * @param {PIXI.Matrix} matrix - sprite world matrix\n     * @param {number} rotation - The rotation factor to use.\n     * @param {number} tx - sprite anchoring\n     * @param {number} ty - sprite anchoring\n     */\n    matrixAppendRotationInv: function matrixAppendRotationInv(matrix, rotation) {\n        var tx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var ty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n        // Packer used \"rotation\", we use \"inv(rotation)\"\n        var mat = tempMatrices[GroupD8.inv(rotation)];\n\n        mat.tx = tx;\n        mat.ty = ty;\n        matrix.append(mat);\n    }\n};\n\nexports.default = GroupD8;\n//# sourceMappingURL=GroupD8.js.map\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n * An observable point is a point that triggers a callback when the point's position is changed.\n *\n * @class\n * @memberof PIXI\n */\nvar ObservablePoint = function () {\n    /**\n     * @param {Function} cb - callback when changed\n     * @param {object} scope - owner of callback\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    function ObservablePoint(cb, scope) {\n        var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n        _classCallCheck(this, ObservablePoint);\n\n        this._x = x;\n        this._y = y;\n\n        this.cb = cb;\n        this.scope = scope;\n    }\n\n    /**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n\n\n    ObservablePoint.prototype.set = function set(x, y) {\n        var _x = x || 0;\n        var _y = y || (y !== 0 ? _x : 0);\n\n        if (this._x !== _x || this._y !== _y) {\n            this._x = _x;\n            this._y = _y;\n            this.cb.call(this.scope);\n        }\n    };\n\n    /**\n     * Copies the data from another point\n     *\n     * @param {PIXI.Point|PIXI.ObservablePoint} point - point to copy from\n     */\n\n\n    ObservablePoint.prototype.copy = function copy(point) {\n        if (this._x !== point.x || this._y !== point.y) {\n            this._x = point.x;\n            this._y = point.y;\n            this.cb.call(this.scope);\n        }\n    };\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     * @memberof PIXI.ObservablePoint#\n     */\n\n\n    _createClass(ObservablePoint, [{\n        key: \"x\",\n        get: function get() {\n            return this._x;\n        }\n\n        /**\n         * Sets the X component.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (this._x !== value) {\n                this._x = value;\n                this.cb.call(this.scope);\n            }\n        }\n\n        /**\n         * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n         *\n         * @member {number}\n         * @memberof PIXI.ObservablePoint#\n         */\n\n    }, {\n        key: \"y\",\n        get: function get() {\n            return this._y;\n        }\n\n        /**\n         * Sets the Y component.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (this._y !== value) {\n                this._y = value;\n                this.cb.call(this.scope);\n            }\n        }\n    }]);\n\n    return ObservablePoint;\n}();\n\nexports.default = ObservablePoint;\n//# sourceMappingURL=ObservablePoint.js.map\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = __webpack_require__(2);\n\nvar _math = __webpack_require__(3);\n\nvar _const = __webpack_require__(1);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _Container = __webpack_require__(14);\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _RenderTexture = __webpack_require__(29);\n\nvar _RenderTexture2 = _interopRequireDefault(_RenderTexture);\n\nvar _eventemitter = __webpack_require__(7);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tempMatrix = new _math.Matrix();\nvar RESOLUTION = _settings2.default.RESOLUTION,\n    RENDER_OPTIONS = _settings2.default.RENDER_OPTIONS;\n\n/**\n * The SystemRenderer is the base for a Pixi Renderer. It is extended by the {@link PIXI.CanvasRenderer}\n * and {@link PIXI.WebGLRenderer} which can be used for rendering a Pixi scene.\n *\n * @abstract\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n */\n\nvar SystemRenderer = function (_EventEmitter) {\n  _inherits(SystemRenderer, _EventEmitter);\n\n  /**\n   * @param {string} system - The name of the system this renderer is for.\n   * @param {number} [width=800] - the width of the canvas view\n   * @param {number} [height=600] - the height of the canvas view\n   * @param {object} [options] - The optional renderer parameters\n   * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n   * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n   * @param {boolean} [options.autoResize=false] - If the render view is automatically resized, default false\n   * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n   * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer. The\n   *  resolution of the renderer retina would be 2.\n   * @param {boolean} [options.clearBeforeRender=true] - This sets if the CanvasRenderer will clear the canvas or\n   *      not before the new render pass.\n   * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n   *  (shown if not transparent).\n   * @param {boolean} [options.roundPixels=false] - If true Pixi will Math.floor() x/y values when rendering,\n   *  stopping pixel interpolation.\n   */\n  function SystemRenderer(system, width, height, options) {\n    _classCallCheck(this, SystemRenderer);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    (0, _utils.sayHello)(system);\n\n    // prepare options\n    if (options) {\n      for (var i in RENDER_OPTIONS) {\n        if (typeof options[i] === 'undefined') {\n          options[i] = RENDER_OPTIONS[i];\n        }\n      }\n    } else {\n      options = RENDER_OPTIONS;\n    }\n\n    /**\n     * The type of the renderer.\n     *\n     * @member {number}\n     * @default PIXI.RENDERER_TYPE.UNKNOWN\n     * @see PIXI.RENDERER_TYPE\n     */\n    _this.type = _const.RENDERER_TYPE.UNKNOWN;\n\n    /**\n     * The width of the canvas view\n     *\n     * @member {number}\n     * @default 800\n     */\n    _this.width = width || 800;\n\n    /**\n     * The height of the canvas view\n     *\n     * @member {number}\n     * @default 600\n     */\n    _this.height = height || 600;\n\n    /**\n     * The canvas element that everything is drawn to\n     *\n     * @member {HTMLCanvasElement}\n     */\n    _this.view = options.view || document.createElement('canvas');\n\n    /**\n     * The resolution / device pixel ratio of the renderer\n     *\n     * @member {number}\n     * @default 1\n     */\n    _this.resolution = options.resolution || RESOLUTION;\n\n    /**\n     * Whether the render view is transparent\n     *\n     * @member {boolean}\n     */\n    _this.transparent = options.transparent;\n\n    /**\n     * Whether the render view should be resized automatically\n     *\n     * @member {boolean}\n     */\n    _this.autoResize = options.autoResize || false;\n\n    /**\n     * Tracks the blend modes useful for this renderer.\n     *\n     * @member {object<string, mixed>}\n     */\n    _this.blendModes = null;\n\n    /**\n     * The value of the preserveDrawingBuffer flag affects whether or not the contents of\n     * the stencil buffer is retained after rendering.\n     *\n     * @member {boolean}\n     */\n    _this.preserveDrawingBuffer = options.preserveDrawingBuffer;\n\n    /**\n     * This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\n     * If the scene is NOT transparent Pixi will use a canvas sized fillRect operation every\n     * frame to set the canvas background color. If the scene is transparent Pixi will use clearRect\n     * to clear the canvas every frame. Disable this by setting this to false. For example if\n     * your game has a canvas filling background image you often don't need this set.\n     *\n     * @member {boolean}\n     * @default\n     */\n    _this.clearBeforeRender = options.clearBeforeRender;\n\n    /**\n     * If true Pixi will Math.floor() x/y values when rendering, stopping pixel interpolation.\n     * Handy for crisp pixel art and speed on legacy devices.\n     *\n     * @member {boolean}\n     */\n    _this.roundPixels = options.roundPixels;\n\n    /**\n     * The background color as a number.\n     *\n     * @member {number}\n     * @private\n     */\n    _this._backgroundColor = 0x000000;\n\n    /**\n     * The background color as an [R, G, B] array.\n     *\n     * @member {number[]}\n     * @private\n     */\n    _this._backgroundColorRgba = [0, 0, 0, 0];\n\n    /**\n     * The background color as a string.\n     *\n     * @member {string}\n     * @private\n     */\n    _this._backgroundColorString = '#000000';\n\n    _this.backgroundColor = options.backgroundColor || _this._backgroundColor; // run bg color setter\n\n    /**\n     * This temporary display object used as the parent of the currently being rendered item\n     *\n     * @member {PIXI.DisplayObject}\n     * @private\n     */\n    _this._tempDisplayObjectParent = new _Container2.default();\n\n    /**\n     * The last root object that the renderer tried to render.\n     *\n     * @member {PIXI.DisplayObject}\n     * @private\n     */\n    _this._lastObjectRendered = _this._tempDisplayObjectParent;\n    return _this;\n  }\n\n  /**\n   * Resizes the canvas view to the specified width and height\n   *\n   * @param {number} width - the new width of the canvas view\n   * @param {number} height - the new height of the canvas view\n   */\n\n\n  SystemRenderer.prototype.resize = function resize(width, height) {\n    this.width = width * this.resolution;\n    this.height = height * this.resolution;\n\n    this.view.width = this.width;\n    this.view.height = this.height;\n\n    if (this.autoResize) {\n      this.view.style.width = this.width / this.resolution + 'px';\n      this.view.style.height = this.height / this.resolution + 'px';\n    }\n  };\n\n  /**\n   * Useful function that returns a texture of the display object that can then be used to create sprites\n   * This can be quite useful if your displayObject is complicated and needs to be reused multiple times.\n   *\n   * @param {PIXI.DisplayObject} displayObject - The displayObject the object will be generated from\n   * @param {number} scaleMode - Should be one of the scaleMode consts\n   * @param {number} resolution - The resolution / device pixel ratio of the texture being generated\n   * @return {PIXI.Texture} a texture of the graphics object\n   */\n\n\n  SystemRenderer.prototype.generateTexture = function generateTexture(displayObject, scaleMode, resolution) {\n    var bounds = displayObject.getLocalBounds();\n\n    var renderTexture = _RenderTexture2.default.create(bounds.width | 0, bounds.height | 0, scaleMode, resolution);\n\n    tempMatrix.tx = -bounds.x;\n    tempMatrix.ty = -bounds.y;\n\n    this.render(displayObject, renderTexture, false, tempMatrix, true);\n\n    return renderTexture;\n  };\n\n  /**\n   * Removes everything from the renderer and optionally removes the Canvas DOM element.\n   *\n   * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n   */\n\n\n  SystemRenderer.prototype.destroy = function destroy(removeView) {\n    if (removeView && this.view.parentNode) {\n      this.view.parentNode.removeChild(this.view);\n    }\n\n    this.type = _const.RENDERER_TYPE.UNKNOWN;\n\n    this.width = 0;\n    this.height = 0;\n\n    this.view = null;\n\n    this.resolution = 0;\n\n    this.transparent = false;\n\n    this.autoResize = false;\n\n    this.blendModes = null;\n\n    this.preserveDrawingBuffer = false;\n    this.clearBeforeRender = false;\n\n    this.roundPixels = false;\n\n    this._backgroundColor = 0;\n    this._backgroundColorRgba = null;\n    this._backgroundColorString = null;\n\n    this.backgroundColor = 0;\n    this._tempDisplayObjectParent = null;\n    this._lastObjectRendered = null;\n  };\n\n  /**\n   * The background color to fill if not transparent\n   *\n   * @member {number}\n   * @memberof PIXI.SystemRenderer#\n   */\n\n\n  _createClass(SystemRenderer, [{\n    key: 'backgroundColor',\n    get: function get() {\n      return this._backgroundColor;\n    }\n\n    /**\n     * Sets the background color.\n     *\n     * @param {number} value - The value to set to.\n     */\n    ,\n    set: function set(value) {\n      this._backgroundColor = value;\n      this._backgroundColorString = (0, _utils.hex2string)(value);\n      (0, _utils.hex2rgb)(value, this._backgroundColorRgba);\n    }\n  }]);\n\n  return SystemRenderer;\n}(_eventemitter2.default);\n\nexports.default = SystemRenderer;\n//# sourceMappingURL=SystemRenderer.js.map\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RESOLUTION = _settings2.default.RESOLUTION;\n\n/**\n * Creates a Canvas element of the given size.\n *\n * @class\n * @memberof PIXI\n */\n\nvar CanvasRenderTarget = function () {\n  /**\n   * @param {number} width - the width for the newly created canvas\n   * @param {number} height - the height for the newly created canvas\n   * @param {number} [resolution=1] - The resolution / device pixel ratio of the canvas\n   */\n  function CanvasRenderTarget(width, height, resolution) {\n    _classCallCheck(this, CanvasRenderTarget);\n\n    /**\n     * The Canvas object that belongs to this CanvasRenderTarget.\n     *\n     * @member {HTMLCanvasElement}\n     */\n    this.canvas = document.createElement('canvas');\n\n    /**\n     * A CanvasRenderingContext2D object representing a two-dimensional rendering context.\n     *\n     * @member {CanvasRenderingContext2D}\n     */\n    this.context = this.canvas.getContext('2d');\n\n    this.resolution = resolution || RESOLUTION;\n\n    this.resize(width, height);\n  }\n\n  /**\n   * Clears the canvas that was created by the CanvasRenderTarget class.\n   *\n   * @private\n   */\n\n\n  CanvasRenderTarget.prototype.clear = function clear() {\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n\n  /**\n   * Resizes the canvas to the specified width and height.\n   *\n   * @param {number} width - the new width of the canvas\n   * @param {number} height - the new height of the canvas\n   */\n\n\n  CanvasRenderTarget.prototype.resize = function resize(width, height) {\n    this.canvas.width = width * this.resolution;\n    this.canvas.height = height * this.resolution;\n  };\n\n  /**\n   * Destroys this canvas.\n   *\n   */\n\n\n  CanvasRenderTarget.prototype.destroy = function destroy() {\n    this.context = null;\n    this.canvas = null;\n  };\n\n  /**\n   * The width of the canvas buffer in pixels.\n   *\n   * @member {number}\n   * @memberof PIXI.CanvasRenderTarget#\n   */\n\n\n  _createClass(CanvasRenderTarget, [{\n    key: 'width',\n    get: function get() {\n      return this.canvas.width;\n    }\n\n    /**\n     * Sets the width.\n     *\n     * @param {number} val - The value to set.\n     */\n    ,\n    set: function set(val) {\n      this.canvas.width = val;\n    }\n\n    /**\n     * The height of the canvas buffer in pixels.\n     *\n     * @member {number}\n     * @memberof PIXI.CanvasRenderTarget#\n     */\n\n  }, {\n    key: 'height',\n    get: function get() {\n      return this.canvas.height;\n    }\n\n    /**\n     * Sets the height.\n     *\n     * @param {number} val - The value to set.\n     */\n    ,\n    set: function set(val) {\n      this.canvas.height = val;\n    }\n  }]);\n\n  return CanvasRenderTarget;\n}();\n\nexports.default = CanvasRenderTarget;\n//# sourceMappingURL=CanvasRenderTarget.js.map\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = canUseNewCanvasBlendModes;\n/**\n * Creates a little colored canvas\n *\n * @ignore\n * @param {number} color - The color to make the canvas\n * @return {canvas} a small canvas element\n */\nfunction createColoredCanvas(color) {\n    var canvas = document.createElement('canvas');\n\n    canvas.width = 6;\n    canvas.height = 1;\n\n    var context = canvas.getContext('2d');\n\n    context.fillStyle = color;\n    context.fillRect(0, 0, 6, 1);\n\n    return canvas;\n}\n\n/**\n * Checks whether the Canvas BlendModes are supported by the current browser\n *\n * @return {boolean} whether they are supported\n */\nfunction canUseNewCanvasBlendModes() {\n    if (typeof document === 'undefined') {\n        return false;\n    }\n\n    var magenta = createColoredCanvas('#ff00ff');\n    var yellow = createColoredCanvas('#ffff00');\n\n    var canvas = document.createElement('canvas');\n\n    canvas.width = 6;\n    canvas.height = 1;\n\n    var context = canvas.getContext('2d');\n\n    context.globalCompositeOperation = 'multiply';\n    context.drawImage(magenta, 0, 0);\n    context.drawImage(yellow, 2, 0);\n\n    var imageData = context.getImageData(2, 0, 1, 1);\n\n    if (!imageData) {\n        return false;\n    }\n\n    var data = imageData.data;\n\n    return data[0] === 255 && data[1] === 0 && data[2] === 0;\n}\n//# sourceMappingURL=canUseNewCanvasBlendModes.js.map\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extractUniformsFromSrc = __webpack_require__(109);\n\nvar _extractUniformsFromSrc2 = _interopRequireDefault(_extractUniformsFromSrc);\n\nvar _utils = __webpack_require__(2);\n\nvar _const = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SOURCE_KEY_MAP = {};\n\n// let math = require('../../../math');\n/**\n * @class\n * @memberof PIXI\n * @extends PIXI.Shader\n */\n\nvar Filter = function () {\n  /**\n   * @param {string} [vertexSrc] - The source of the vertex shader.\n   * @param {string} [fragmentSrc] - The source of the fragment shader.\n   * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n   */\n  function Filter(vertexSrc, fragmentSrc, uniforms) {\n    _classCallCheck(this, Filter);\n\n    /**\n     * The vertex shader.\n     *\n     * @member {string}\n     */\n    this.vertexSrc = vertexSrc || Filter.defaultVertexSrc;\n\n    /**\n     * The fragment shader.\n     *\n     * @member {string}\n     */\n    this.fragmentSrc = fragmentSrc || Filter.defaultFragmentSrc;\n\n    this.blendMode = _const.BLEND_MODES.NORMAL;\n\n    // pull out the vertex and shader uniforms if they are not specified..\n    // currently this does not extract structs only default types\n    this.uniformData = uniforms || (0, _extractUniformsFromSrc2.default)(this.vertexSrc, this.fragmentSrc, 'projectionMatrix|uSampler');\n\n    /**\n     * An object containing the current values of custom uniforms.\n     * @example <caption>Updating the value of a custom uniform</caption>\n     * filter.uniforms.time = performance.now();\n     *\n     * @member {object}\n     */\n    this.uniforms = {};\n\n    for (var i in this.uniformData) {\n      this.uniforms[i] = this.uniformData[i].value;\n    }\n\n    // this is where we store shader references..\n    // TODO we could cache this!\n    this.glShaders = {};\n\n    // used for cacheing.. sure there is a better way!\n    if (!SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc]) {\n      SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc] = (0, _utils.uid)();\n    }\n\n    this.glShaderKey = SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc];\n\n    /**\n     * The padding of the filter. Some filters require extra space to breath such as a blur.\n     * Increasing this will add extra width and height to the bounds of the object that the\n     * filter is applied to.\n     *\n     * @member {number}\n     */\n    this.padding = 4;\n\n    /**\n     * The resolution of the filter. Setting this to be lower will lower the quality but\n     * increase the performance of the filter.\n     *\n     * @member {number}\n     */\n    this.resolution = 1;\n\n    /**\n     * If enabled is true the filter is applied, if false it will not.\n     *\n     * @member {boolean}\n     */\n    this.enabled = true;\n  }\n\n  /**\n   * Applies the filter\n   *\n   * @param {PIXI.FilterManager} filterManager - The renderer to retrieve the filter from\n   * @param {PIXI.RenderTarget} input - The input render target.\n   * @param {PIXI.RenderTarget} output - The target to output to.\n   * @param {boolean} clear - Should the output be cleared before rendering to it\n   */\n\n\n  Filter.prototype.apply = function apply(filterManager, input, output, clear) {\n    // --- //\n    //  this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(tempMatrix, window.panda );\n\n    // do as you please!\n\n    filterManager.applyFilter(this, input, output, clear);\n\n    // or just do a regular render..\n  };\n\n  /**\n   * The default vertex shader source\n   *\n   * @static\n   * @constant\n   */\n\n\n  _createClass(Filter, null, [{\n    key: 'defaultVertexSrc',\n    get: function get() {\n      return ['attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform mat3 projectionMatrix;', 'uniform mat3 filterMatrix;', 'varying vec2 vTextureCoord;', 'varying vec2 vFilterCoord;', 'void main(void){', '   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);', '   vFilterCoord = ( filterMatrix * vec3( aTextureCoord, 1.0)  ).xy;', '   vTextureCoord = aTextureCoord ;', '}'].join('\\n');\n    }\n\n    /**\n     * The default fragment shader source\n     *\n     * @static\n     * @constant\n     */\n\n  }, {\n    key: 'defaultFragmentSrc',\n    get: function get() {\n      return ['varying vec2 vTextureCoord;', 'varying vec2 vFilterCoord;', 'uniform sampler2D uSampler;', 'uniform sampler2D filterSampler;', 'void main(void){', '   vec4 masky = texture2D(filterSampler, vFilterCoord);', '   vec4 sample = texture2D(uSampler, vTextureCoord);', '   vec4 color;', '   if(mod(vFilterCoord.x, 1.0) > 0.5)', '   {', '     color = vec4(1.0, 0.0, 0.0, 1.0);', '   }', '   else', '   {', '     color = vec4(0.0, 1.0, 0.0, 1.0);', '   }',\n      // '   gl_FragColor = vec4(mod(vFilterCoord.x, 1.5), vFilterCoord.y,0.0,1.0);',\n      '   gl_FragColor = mix(sample, masky, 0.5);', '   gl_FragColor *= sample.a;', '}'].join('\\n');\n    }\n  }]);\n\n  return Filter;\n}();\n\nexports.default = Filter;\n//# sourceMappingURL=Filter.js.map\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Filter2 = __webpack_require__(47);\n\nvar _Filter3 = _interopRequireDefault(_Filter2);\n\nvar _math = __webpack_require__(3);\n\nvar _path = __webpack_require__(6);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The SpriteMaskFilter class\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI\n */\nvar SpriteMaskFilter = function (_Filter) {\n    _inherits(SpriteMaskFilter, _Filter);\n\n    /**\n     * @param {PIXI.Sprite} sprite - the target sprite\n     */\n    function SpriteMaskFilter(sprite) {\n        _classCallCheck(this, SpriteMaskFilter);\n\n        var maskMatrix = new _math.Matrix();\n\n        var _this = _possibleConstructorReturn(this, _Filter.call(this, 'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 otherMatrix;\\n\\nvarying vec2 vMaskCoord;\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = aTextureCoord;\\n    vMaskCoord = ( otherMatrix * vec3( aTextureCoord, 1.0)  ).xy;\\n}\\n', 'varying vec2 vMaskCoord;\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float alpha;\\nuniform sampler2D mask;\\n\\nvoid main(void)\\n{\\n    // check clip! this will stop the mask bleeding out from the edges\\n    vec2 text = abs( vMaskCoord - 0.5 );\\n    text = step(0.5, text);\\n\\n    float clip = 1.0 - max(text.y, text.x);\\n    vec4 original = texture2D(uSampler, vTextureCoord);\\n    vec4 masky = texture2D(mask, vMaskCoord);\\n\\n    original *= (masky.r * masky.a * alpha * clip);\\n\\n    gl_FragColor = original;\\n}\\n'));\n\n        sprite.renderable = false;\n\n        _this.maskSprite = sprite;\n        _this.maskMatrix = maskMatrix;\n        return _this;\n    }\n\n    /**\n     * Applies the filter\n     *\n     * @param {PIXI.FilterManager} filterManager - The renderer to retrieve the filter from\n     * @param {PIXI.RenderTarget} input - The input render target.\n     * @param {PIXI.RenderTarget} output - The target to output to.\n     */\n\n\n    SpriteMaskFilter.prototype.apply = function apply(filterManager, input, output) {\n        var maskSprite = this.maskSprite;\n\n        this.uniforms.mask = maskSprite._texture;\n        this.uniforms.otherMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, maskSprite);\n        this.uniforms.alpha = maskSprite.worldAlpha;\n\n        filterManager.applyFilter(this, input, output);\n    };\n\n    return SpriteMaskFilter;\n}(_Filter3.default);\n\nexports.default = SpriteMaskFilter;\n//# sourceMappingURL=SpriteMaskFilter.js.map\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _pixiGlCore = __webpack_require__(5);\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nvar _createIndicesForQuads = __webpack_require__(30);\n\nvar _createIndicesForQuads2 = _interopRequireDefault(_createIndicesForQuads);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Helper class to create a quad\n *\n * @class\n * @memberof PIXI\n */\nvar Quad = function () {\n  /**\n   * @param {WebGLRenderingContext} gl - The gl context for this quad to use.\n   * @param {object} state - TODO: Description\n   */\n  function Quad(gl, state) {\n    _classCallCheck(this, Quad);\n\n    /*\n     * the current WebGL drawing context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    /**\n     * An array of vertices\n     *\n     * @member {Float32Array}\n     */\n    this.vertices = new Float32Array([-1, -1, 1, -1, 1, 1, -1, 1]);\n\n    /**\n     * The Uvs of the quad\n     *\n     * @member {Float32Array}\n     */\n    this.uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n\n    this.interleaved = new Float32Array(8 * 2);\n\n    for (var i = 0; i < 4; i++) {\n      this.interleaved[i * 4] = this.vertices[i * 2];\n      this.interleaved[i * 4 + 1] = this.vertices[i * 2 + 1];\n      this.interleaved[i * 4 + 2] = this.uvs[i * 2];\n      this.interleaved[i * 4 + 3] = this.uvs[i * 2 + 1];\n    }\n\n    /*\n     * @member {Uint16Array} An array containing the indices of the vertices\n     */\n    this.indices = (0, _createIndicesForQuads2.default)(1);\n\n    /*\n     * @member {glCore.GLBuffer} The vertex buffer\n     */\n    this.vertexBuffer = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, this.interleaved, gl.STATIC_DRAW);\n\n    /*\n     * @member {glCore.GLBuffer} The index buffer\n     */\n    this.indexBuffer = _pixiGlCore2.default.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n    /*\n     * @member {glCore.VertexArrayObject} The index buffer\n     */\n    this.vao = new _pixiGlCore2.default.VertexArrayObject(gl, state);\n  }\n\n  /**\n   * Initialises the vaos and uses the shader.\n   *\n   * @param {PIXI.Shader} shader - the shader to use\n   */\n\n\n  Quad.prototype.initVao = function initVao(shader) {\n    this.vao.clear().addIndex(this.indexBuffer).addAttribute(this.vertexBuffer, shader.attributes.aVertexPosition, this.gl.FLOAT, false, 4 * 4, 0).addAttribute(this.vertexBuffer, shader.attributes.aTextureCoord, this.gl.FLOAT, false, 4 * 4, 2 * 4);\n  };\n\n  /**\n   * Maps two Rectangle to the quad.\n   *\n   * @param {PIXI.Rectangle} targetTextureFrame - the first rectangle\n   * @param {PIXI.Rectangle} destinationFrame - the second rectangle\n   * @return {PIXI.Quad} Returns itself.\n   */\n\n\n  Quad.prototype.map = function map(targetTextureFrame, destinationFrame) {\n    var x = 0; // destinationFrame.x / targetTextureFrame.width;\n    var y = 0; // destinationFrame.y / targetTextureFrame.height;\n\n    this.uvs[0] = x;\n    this.uvs[1] = y;\n\n    this.uvs[2] = x + destinationFrame.width / targetTextureFrame.width;\n    this.uvs[3] = y;\n\n    this.uvs[4] = x + destinationFrame.width / targetTextureFrame.width;\n    this.uvs[5] = y + destinationFrame.height / targetTextureFrame.height;\n\n    this.uvs[6] = x;\n    this.uvs[7] = y + destinationFrame.height / targetTextureFrame.height;\n\n    x = destinationFrame.x;\n    y = destinationFrame.y;\n\n    this.vertices[0] = x;\n    this.vertices[1] = y;\n\n    this.vertices[2] = x + destinationFrame.width;\n    this.vertices[3] = y;\n\n    this.vertices[4] = x + destinationFrame.width;\n    this.vertices[5] = y + destinationFrame.height;\n\n    this.vertices[6] = x;\n    this.vertices[7] = y + destinationFrame.height;\n\n    return this;\n  };\n\n  /**\n   * Binds the buffer and uploads the data\n   *\n   * @return {PIXI.Quad} Returns itself.\n   */\n\n\n  Quad.prototype.upload = function upload() {\n    for (var i = 0; i < 4; i++) {\n      this.interleaved[i * 4] = this.vertices[i * 2];\n      this.interleaved[i * 4 + 1] = this.vertices[i * 2 + 1];\n      this.interleaved[i * 4 + 2] = this.uvs[i * 2];\n      this.interleaved[i * 4 + 3] = this.uvs[i * 2 + 1];\n    }\n\n    this.vertexBuffer.upload(this.interleaved);\n\n    return this;\n  };\n\n  /**\n   * Removes this quad from WebGL\n   */\n\n\n  Quad.prototype.destroy = function destroy() {\n    var gl = this.gl;\n\n    gl.deleteBuffer(this.vertexBuffer);\n    gl.deleteBuffer(this.indexBuffer);\n  };\n\n  return Quad;\n}();\n\nexports.default = Quad;\n//# sourceMappingURL=Quad.js.map\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // disabling eslint for now, going to rewrite this in v5\n/* eslint-disable */\n\nvar _const = __webpack_require__(1);\n\nvar _utils = __webpack_require__(2);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultStyle = {\n    align: 'left',\n    breakWords: false,\n    dropShadow: false,\n    dropShadowAngle: Math.PI / 6,\n    dropShadowBlur: 0,\n    dropShadowColor: '#000000',\n    dropShadowDistance: 5,\n    fill: 'black',\n    fillGradientType: _const.TEXT_GRADIENT.LINEAR_VERTICAL,\n    fontFamily: 'Arial',\n    fontSize: 26,\n    fontStyle: 'normal',\n    fontVariant: 'normal',\n    fontWeight: 'normal',\n    letterSpacing: 0,\n    lineHeight: 0,\n    lineJoin: 'miter',\n    miterLimit: 10,\n    padding: 0,\n    stroke: 'black',\n    strokeThickness: 0,\n    textBaseline: 'alphabetic',\n    wordWrap: false,\n    wordWrapWidth: 100\n};\n\n/**\n * A TextStyle Object decorates a Text Object. It can be shared between\n * multiple Text objects. Changing the style will update all text objects using it.\n *\n * @class\n * @memberof PIXI\n */\n\nvar TextStyle = function () {\n    /**\n     * @param {object} [style] - The style parameters\n     * @param {string} [style.align='left'] - Alignment for multiline text ('left', 'center' or 'right'),\n     *  does not affect single line text\n     * @param {boolean} [style.breakWords=false] - Indicates if lines can be wrapped within words, it\n     *  needs wordWrap to be set to true\n     * @param {boolean} [style.dropShadow=false] - Set a drop shadow for the text\n     * @param {number} [style.dropShadowAngle=Math.PI/6] - Set a angle of the drop shadow\n     * @param {number} [style.dropShadowBlur=0] - Set a shadow blur radius\n     * @param {string} [style.dropShadowColor='#000000'] - A fill style to be used on the dropshadow e.g 'red', '#00FF00'\n     * @param {number} [style.dropShadowDistance=5] - Set a distance of the drop shadow\n     * @param {string|string[]|number|number[]|CanvasGradient|CanvasPattern} [style.fill='black'] - A canvas\n     *  fillstyle that will be used on the text e.g 'red', '#00FF00'. Can be an array to create a gradient\n     *  eg ['#000000','#FFFFFF']\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle|MDN}\n     * @param {number} [style.fillGradientType=PIXI.TEXT_GRADIENT.LINEAR_VERTICAL] - If fills styles are\n     *  supplied, this can change the type/direction of the gradient. See {@link PIXI.TEXT_GRADIENT} for possible values\n     * @param {string} [style.fontFamily='Arial'] - The font family\n     * @param {number|string} [style.fontSize=26] - The font size (as a number it converts to px, but as a string,\n     *  equivalents are '26px','20pt','160%' or '1.6em')\n     * @param {string} [style.fontStyle='normal'] - The font style ('normal', 'italic' or 'oblique')\n     * @param {string} [style.fontVariant='normal'] - The font variant ('normal' or 'small-caps')\n     * @param {string} [style.fontWeight='normal'] - The font weight ('normal', 'bold', 'bolder', 'lighter' and '100',\n     *  '200', '300', '400', '500', '600', '700', 800' or '900')\n     * @param {number} [style.letterSpacing=0] - The amount of spacing between letters, default is 0\n     * @param {number} [style.lineHeight] - The line height, a number that represents the vertical space that a letter uses\n     * @param {string} [style.lineJoin='miter'] - The lineJoin property sets the type of corner created, it can resolve\n     *      spiked text issues. Default is 'miter' (creates a sharp corner).\n     * @param {number} [style.miterLimit=10] - The miter limit to use when using the 'miter' lineJoin mode. This can reduce\n     *      or increase the spikiness of rendered text.\n     * @param {number} [style.padding=0] - Occasionally some fonts are cropped. Adding some padding will prevent this from\n     *     happening by adding padding to all sides of the text.\n     * @param {string|number} [style.stroke='black'] - A canvas fillstyle that will be used on the text stroke\n     *  e.g 'blue', '#FCFF00'\n     * @param {number} [style.strokeThickness=0] - A number that represents the thickness of the stroke.\n     *  Default is 0 (no stroke)\n     * @param {string} [style.textBaseline='alphabetic'] - The baseline of the text that is rendered.\n     * @param {boolean} [style.wordWrap=false] - Indicates if word wrap should be used\n     * @param {number} [style.wordWrapWidth=100] - The width at which text will wrap, it needs wordWrap to be set to true\n     */\n    function TextStyle(style) {\n        _classCallCheck(this, TextStyle);\n\n        this.styleID = 0;\n\n        Object.assign(this, defaultStyle, style);\n    }\n\n    /**\n     * Creates a new TextStyle object with the same values as this one.\n     * Note that the only the properties of the object are cloned.\n     *\n     * @return {PIXI.TextStyle} New cloned TextStyle object\n     */\n\n\n    TextStyle.prototype.clone = function clone() {\n        var clonedProperties = {};\n\n        for (var key in this._defaults) {\n            clonedProperties[key] = this[key];\n        }\n\n        return new TextStyle(clonedProperties);\n    };\n\n    /**\n     * Resets all properties to the defaults specified in TextStyle.prototype._default\n     */\n\n\n    TextStyle.prototype.reset = function reset() {\n        Object.assign(this, this._defaults);\n    };\n\n    _createClass(TextStyle, [{\n        key: 'align',\n        get: function get() {\n            return this._align;\n        },\n        set: function set(align) {\n            if (this._align !== align) {\n                this._align = align;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'breakWords',\n        get: function get() {\n            return this._breakWords;\n        },\n        set: function set(breakWords) {\n            if (this._breakWords !== breakWords) {\n                this._breakWords = breakWords;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'dropShadow',\n        get: function get() {\n            return this._dropShadow;\n        },\n        set: function set(dropShadow) {\n            if (this._dropShadow !== dropShadow) {\n                this._dropShadow = dropShadow;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'dropShadowAngle',\n        get: function get() {\n            return this._dropShadowAngle;\n        },\n        set: function set(dropShadowAngle) {\n            if (this._dropShadowAngle !== dropShadowAngle) {\n                this._dropShadowAngle = dropShadowAngle;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'dropShadowBlur',\n        get: function get() {\n            return this._dropShadowBlur;\n        },\n        set: function set(dropShadowBlur) {\n            if (this._dropShadowBlur !== dropShadowBlur) {\n                this._dropShadowBlur = dropShadowBlur;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'dropShadowColor',\n        get: function get() {\n            return this._dropShadowColor;\n        },\n        set: function set(dropShadowColor) {\n            var outputColor = getColor(dropShadowColor);\n            if (this._dropShadowColor !== outputColor) {\n                this._dropShadowColor = outputColor;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'dropShadowDistance',\n        get: function get() {\n            return this._dropShadowDistance;\n        },\n        set: function set(dropShadowDistance) {\n            if (this._dropShadowDistance !== dropShadowDistance) {\n                this._dropShadowDistance = dropShadowDistance;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fill',\n        get: function get() {\n            return this._fill;\n        },\n        set: function set(fill) {\n            var outputColor = getColor(fill);\n            if (this._fill !== outputColor) {\n                this._fill = outputColor;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fillGradientType',\n        get: function get() {\n            return this._fillGradientType;\n        },\n        set: function set(fillGradientType) {\n            if (this._fillGradientType !== fillGradientType) {\n                this._fillGradientType = fillGradientType;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fontFamily',\n        get: function get() {\n            return this._fontFamily;\n        },\n        set: function set(fontFamily) {\n            if (this.fontFamily !== fontFamily) {\n                this._fontFamily = fontFamily;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fontSize',\n        get: function get() {\n            return this._fontSize;\n        },\n        set: function set(fontSize) {\n            if (this._fontSize !== fontSize) {\n                this._fontSize = fontSize;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fontStyle',\n        get: function get() {\n            return this._fontStyle;\n        },\n        set: function set(fontStyle) {\n            if (this._fontStyle !== fontStyle) {\n                this._fontStyle = fontStyle;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fontVariant',\n        get: function get() {\n            return this._fontVariant;\n        },\n        set: function set(fontVariant) {\n            if (this._fontVariant !== fontVariant) {\n                this._fontVariant = fontVariant;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fontWeight',\n        get: function get() {\n            return this._fontWeight;\n        },\n        set: function set(fontWeight) {\n            if (this._fontWeight !== fontWeight) {\n                this._fontWeight = fontWeight;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'letterSpacing',\n        get: function get() {\n            return this._letterSpacing;\n        },\n        set: function set(letterSpacing) {\n            if (this._letterSpacing !== letterSpacing) {\n                this._letterSpacing = letterSpacing;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'lineHeight',\n        get: function get() {\n            return this._lineHeight;\n        },\n        set: function set(lineHeight) {\n            if (this._lineHeight !== lineHeight) {\n                this._lineHeight = lineHeight;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'lineJoin',\n        get: function get() {\n            return this._lineJoin;\n        },\n        set: function set(lineJoin) {\n            if (this._lineJoin !== lineJoin) {\n                this._lineJoin = lineJoin;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'miterLimit',\n        get: function get() {\n            return this._miterLimit;\n        },\n        set: function set(miterLimit) {\n            if (this._miterLimit !== miterLimit) {\n                this._miterLimit = miterLimit;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'padding',\n        get: function get() {\n            return this._padding;\n        },\n        set: function set(padding) {\n            if (this._padding !== padding) {\n                this._padding = padding;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'stroke',\n        get: function get() {\n            return this._stroke;\n        },\n        set: function set(stroke) {\n            var outputColor = getColor(stroke);\n            if (this._stroke !== outputColor) {\n                this._stroke = outputColor;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'strokeThickness',\n        get: function get() {\n            return this._strokeThickness;\n        },\n        set: function set(strokeThickness) {\n            if (this._strokeThickness !== strokeThickness) {\n                this._strokeThickness = strokeThickness;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'textBaseline',\n        get: function get() {\n            return this._textBaseline;\n        },\n        set: function set(textBaseline) {\n            if (this._textBaseline !== textBaseline) {\n                this._textBaseline = textBaseline;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'wordWrap',\n        get: function get() {\n            return this._wordWrap;\n        },\n        set: function set(wordWrap) {\n            if (this._wordWrap !== wordWrap) {\n                this._wordWrap = wordWrap;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'wordWrapWidth',\n        get: function get() {\n            return this._wordWrapWidth;\n        },\n        set: function set(wordWrapWidth) {\n            if (this._wordWrapWidth !== wordWrapWidth) {\n                this._wordWrapWidth = wordWrapWidth;\n                this.styleID++;\n            }\n        }\n    }]);\n\n    return TextStyle;\n}();\n\n/**\n * Utility function to convert hexadecimal colors to strings, and simply return the color if it's a string.\n *\n * @param {number|number[]} color\n * @return {string} The color as a string.\n */\n\n\nexports.default = TextStyle;\nfunction getColor(color) {\n    if (typeof color === 'number') {\n        return (0, _utils.hex2string)(color);\n    } else if (Array.isArray(color)) {\n        for (var i = 0; i < color.length; ++i) {\n            if (typeof color[i] === 'number') {\n                color[i] = (0, _utils.hex2string)(color[i]);\n            }\n        }\n    }\n\n    return color;\n}\n//# sourceMappingURL=TextStyle.js.map\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _BaseTexture2 = __webpack_require__(10);\n\nvar _BaseTexture3 = _interopRequireDefault(_BaseTexture2);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RESOLUTION = _settings2.default.RESOLUTION,\n    SCALE_MODE = _settings2.default.SCALE_MODE;\n\n/**\n * A BaseRenderTexture is a special texture that allows any Pixi display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a BaseRenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A BaseRenderTexture takes a snapshot of any Display Object given to its render method. The position\n * and rotation of the given Display Objects is ignored. For example:\n *\n * ```js\n * let renderer = PIXI.autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let baseRenderTexture = new PIXI.BaseRenderTexture(renderer, 800, 600);\n * let sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * baseRenderTexture.render(sprite);\n * ```\n *\n * The Sprite in this case will be rendered to a position of 0,0. To render this sprite at its actual\n * position a Container should be used:\n *\n * ```js\n * let doc = new PIXI.Container();\n *\n * doc.addChild(sprite);\n *\n * let baseRenderTexture = new PIXI.BaseRenderTexture(100, 100);\n * let renderTexture = new PIXI.RenderTexture(baseRenderTexture);\n *\n * renderer.render(doc, renderTexture);  // Renders to center of RenderTexture\n * ```\n *\n * @class\n * @extends PIXI.BaseTexture\n * @memberof PIXI\n */\n\nvar BaseRenderTexture = function (_BaseTexture) {\n  _inherits(BaseRenderTexture, _BaseTexture);\n\n  /**\n   * @param {number} [width=100] - The width of the base render texture\n   * @param {number} [height=100] - The height of the base render texture\n   * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n   * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture being generated\n   */\n  function BaseRenderTexture() {\n    var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n    var scaleMode = arguments[2];\n    var resolution = arguments[3];\n\n    _classCallCheck(this, BaseRenderTexture);\n\n    var _this = _possibleConstructorReturn(this, _BaseTexture.call(this, null, scaleMode));\n\n    _this.resolution = resolution || RESOLUTION;\n\n    _this.width = width;\n    _this.height = height;\n\n    _this.realWidth = _this.width * _this.resolution;\n    _this.realHeight = _this.height * _this.resolution;\n\n    _this.scaleMode = scaleMode || SCALE_MODE;\n    _this.hasLoaded = true;\n\n    /**\n     * A map of renderer IDs to webgl renderTargets\n     *\n     * @private\n     * @member {object<number, WebGLTexture>}\n     */\n    _this._glRenderTargets = {};\n\n    /**\n     * A reference to the canvas render target (we only need one as this can be shared across renderers)\n     *\n     * @private\n     * @member {object<number, WebGLTexture>}\n     */\n    _this._canvasRenderTarget = null;\n\n    /**\n     * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n     *\n     * @member {boolean}\n     */\n    _this.valid = false;\n    return _this;\n  }\n\n  /**\n   * Resizes the BaseRenderTexture.\n   *\n   * @param {number} width - The width to resize to.\n   * @param {number} height - The height to resize to.\n   */\n\n\n  BaseRenderTexture.prototype.resize = function resize(width, height) {\n    if (width === this.width && height === this.height) {\n      return;\n    }\n\n    this.valid = width > 0 && height > 0;\n\n    this.width = width;\n    this.height = height;\n\n    this.realWidth = this.width * this.resolution;\n    this.realHeight = this.height * this.resolution;\n\n    if (!this.valid) {\n      return;\n    }\n\n    this.emit('update', this);\n  };\n\n  /**\n   * Destroys this texture\n   *\n   */\n\n\n  BaseRenderTexture.prototype.destroy = function destroy() {\n    _BaseTexture.prototype.destroy.call(this, true);\n    this.renderer = null;\n  };\n\n  return BaseRenderTexture;\n}(_BaseTexture3.default);\n\nexports.default = BaseRenderTexture;\n//# sourceMappingURL=BaseRenderTexture.js.map\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _GroupD = __webpack_require__(42);\n\nvar _GroupD2 = _interopRequireDefault(_GroupD);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A standard object to store the Uvs of a texture\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar TextureUvs = function () {\n    /**\n     *\n     */\n    function TextureUvs() {\n        _classCallCheck(this, TextureUvs);\n\n        this.x0 = 0;\n        this.y0 = 0;\n\n        this.x1 = 1;\n        this.y1 = 0;\n\n        this.x2 = 1;\n        this.y2 = 1;\n\n        this.x3 = 0;\n        this.y3 = 1;\n\n        this.uvsUint32 = new Uint32Array(4);\n    }\n\n    /**\n     * Sets the texture Uvs based on the given frame information.\n     *\n     * @private\n     * @param {PIXI.Rectangle} frame - The frame of the texture\n     * @param {PIXI.Rectangle} baseFrame - The base frame of the texture\n     * @param {number} rotate - Rotation of frame, see {@link PIXI.GroupD8}\n     */\n\n\n    TextureUvs.prototype.set = function set(frame, baseFrame, rotate) {\n        var tw = baseFrame.width;\n        var th = baseFrame.height;\n\n        if (rotate) {\n            // width and height div 2 div baseFrame size\n            var w2 = frame.width / 2 / tw;\n            var h2 = frame.height / 2 / th;\n\n            // coordinates of center\n            var cX = frame.x / tw + w2;\n            var cY = frame.y / th + h2;\n\n            rotate = _GroupD2.default.add(rotate, _GroupD2.default.NW); // NW is top-left corner\n            this.x0 = cX + w2 * _GroupD2.default.uX(rotate);\n            this.y0 = cY + h2 * _GroupD2.default.uY(rotate);\n\n            rotate = _GroupD2.default.add(rotate, 2); // rotate 90 degrees clockwise\n            this.x1 = cX + w2 * _GroupD2.default.uX(rotate);\n            this.y1 = cY + h2 * _GroupD2.default.uY(rotate);\n\n            rotate = _GroupD2.default.add(rotate, 2);\n            this.x2 = cX + w2 * _GroupD2.default.uX(rotate);\n            this.y2 = cY + h2 * _GroupD2.default.uY(rotate);\n\n            rotate = _GroupD2.default.add(rotate, 2);\n            this.x3 = cX + w2 * _GroupD2.default.uX(rotate);\n            this.y3 = cY + h2 * _GroupD2.default.uY(rotate);\n        } else {\n            this.x0 = frame.x / tw;\n            this.y0 = frame.y / th;\n\n            this.x1 = (frame.x + frame.width) / tw;\n            this.y1 = frame.y / th;\n\n            this.x2 = (frame.x + frame.width) / tw;\n            this.y2 = (frame.y + frame.height) / th;\n\n            this.x3 = frame.x / tw;\n            this.y3 = (frame.y + frame.height) / th;\n        }\n\n        this.uvsUint32[0] = (this.y0 * 65535 & 0xFFFF) << 16 | this.x0 * 65535 & 0xFFFF;\n        this.uvsUint32[1] = (this.y1 * 65535 & 0xFFFF) << 16 | this.x1 * 65535 & 0xFFFF;\n        this.uvsUint32[2] = (this.y2 * 65535 & 0xFFFF) << 16 | this.x2 * 65535 & 0xFFFF;\n        this.uvsUint32[3] = (this.y3 * 65535 & 0xFFFF) << 16 | this.x3 * 65535 & 0xFFFF;\n    };\n\n    return TextureUvs;\n}();\n\nexports.default = TextureUvs;\n//# sourceMappingURL=TextureUvs.js.map\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTexture2 = __webpack_require__(10);\n\nvar _BaseTexture3 = _interopRequireDefault(_BaseTexture2);\n\nvar _utils = __webpack_require__(2);\n\nvar _ticker = __webpack_require__(54);\n\nvar ticker = _interopRequireWildcard(_ticker);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A texture of a [playing] Video.\n *\n * Video base textures mimic Pixi BaseTexture.from.... method in their creation process.\n *\n * This can be used in several ways, such as:\n *\n * ```js\n * let texture = PIXI.VideoBaseTexture.fromUrl('http://mydomain.com/video.mp4');\n *\n * let texture = PIXI.VideoBaseTexture.fromUrl({ src: 'http://mydomain.com/video.mp4', mime: 'video/mp4' });\n *\n * let texture = PIXI.VideoBaseTexture.fromUrls(['/video.webm', '/video.mp4']);\n *\n * let texture = PIXI.VideoBaseTexture.fromUrls([\n *     { src: '/video.webm', mime: 'video/webm' },\n *     { src: '/video.mp4', mime: 'video/mp4' }\n * ]);\n * ```\n *\n * See the [\"deus\" demo](http://www.goodboydigital.com/pixijs/examples/deus/).\n *\n * @class\n * @extends PIXI.BaseTexture\n * @memberof PIXI\n */\nvar VideoBaseTexture = function (_BaseTexture) {\n    _inherits(VideoBaseTexture, _BaseTexture);\n\n    /**\n     * @param {HTMLVideoElement} source - Video source\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     */\n    function VideoBaseTexture(source, scaleMode) {\n        _classCallCheck(this, VideoBaseTexture);\n\n        if (!source) {\n            throw new Error('No video source element specified.');\n        }\n\n        // hook in here to check if video is already available.\n        // BaseTexture looks for a source.complete boolean, plus width & height.\n\n        if ((source.readyState === source.HAVE_ENOUGH_DATA || source.readyState === source.HAVE_FUTURE_DATA) && source.width && source.height) {\n            source.complete = true;\n        }\n\n        var _this = _possibleConstructorReturn(this, _BaseTexture.call(this, source, scaleMode));\n\n        _this.width = source.videoWidth;\n        _this.height = source.videoHeight;\n\n        _this._autoUpdate = true;\n        _this._isAutoUpdating = false;\n\n        /**\n         * When set to true will automatically play videos used by this texture once\n         * they are loaded. If false, it will not modify the playing state.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        _this.autoPlay = true;\n\n        _this.update = _this.update.bind(_this);\n        _this._onCanPlay = _this._onCanPlay.bind(_this);\n\n        source.addEventListener('play', _this._onPlayStart.bind(_this));\n        source.addEventListener('pause', _this._onPlayStop.bind(_this));\n        _this.hasLoaded = false;\n        _this.__loaded = false;\n\n        if (!_this._isSourceReady()) {\n            source.addEventListener('canplay', _this._onCanPlay);\n            source.addEventListener('canplaythrough', _this._onCanPlay);\n        } else {\n            _this._onCanPlay();\n        }\n        return _this;\n    }\n\n    /**\n     * Returns true if the underlying source is playing.\n     *\n     * @private\n     * @return {boolean} True if playing.\n     */\n\n\n    VideoBaseTexture.prototype._isSourcePlaying = function _isSourcePlaying() {\n        var source = this.source;\n\n        return source.currentTime > 0 && source.paused === false && source.ended === false && source.readyState > 2;\n    };\n\n    /**\n     * Returns true if the underlying source is ready for playing.\n     *\n     * @private\n     * @return {boolean} True if ready.\n     */\n\n\n    VideoBaseTexture.prototype._isSourceReady = function _isSourceReady() {\n        return this.source.readyState === 3 || this.source.readyState === 4;\n    };\n\n    /**\n     * Runs the update loop when the video is ready to play\n     *\n     * @private\n     */\n\n\n    VideoBaseTexture.prototype._onPlayStart = function _onPlayStart() {\n        // Just in case the video has not received its can play even yet..\n        if (!this.hasLoaded) {\n            this._onCanPlay();\n        }\n\n        if (!this._isAutoUpdating && this.autoUpdate) {\n            ticker.shared.add(this.update, this);\n            this._isAutoUpdating = true;\n        }\n    };\n\n    /**\n     * Fired when a pause event is triggered, stops the update loop\n     *\n     * @private\n     */\n\n\n    VideoBaseTexture.prototype._onPlayStop = function _onPlayStop() {\n        if (this._isAutoUpdating) {\n            ticker.shared.remove(this.update, this);\n            this._isAutoUpdating = false;\n        }\n    };\n\n    /**\n     * Fired when the video is loaded and ready to play\n     *\n     * @private\n     */\n\n\n    VideoBaseTexture.prototype._onCanPlay = function _onCanPlay() {\n        this.hasLoaded = true;\n\n        if (this.source) {\n            this.source.removeEventListener('canplay', this._onCanPlay);\n            this.source.removeEventListener('canplaythrough', this._onCanPlay);\n\n            this.width = this.source.videoWidth;\n            this.height = this.source.videoHeight;\n\n            // prevent multiple loaded dispatches..\n            if (!this.__loaded) {\n                this.__loaded = true;\n                this.emit('loaded', this);\n            }\n\n            if (this._isSourcePlaying()) {\n                this._onPlayStart();\n            } else if (this.autoPlay) {\n                this.source.play();\n            }\n        }\n    };\n\n    /**\n     * Destroys this texture\n     *\n     */\n\n\n    VideoBaseTexture.prototype.destroy = function destroy() {\n        if (this._isAutoUpdating) {\n            ticker.shared.remove(this.update, this);\n        }\n\n        if (this.source && this.source._pixiId) {\n            delete _utils.BaseTextureCache[this.source._pixiId];\n            delete this.source._pixiId;\n        }\n\n        _BaseTexture.prototype.destroy.call(this);\n    };\n\n    /**\n     * Mimic Pixi BaseTexture.from.... method.\n     *\n     * @static\n     * @param {HTMLVideoElement} video - Video to create texture from\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.VideoBaseTexture} Newly created VideoBaseTexture\n     */\n\n\n    VideoBaseTexture.fromVideo = function fromVideo(video, scaleMode) {\n        if (!video._pixiId) {\n            video._pixiId = 'video_' + (0, _utils.uid)();\n        }\n\n        var baseTexture = _utils.BaseTextureCache[video._pixiId];\n\n        if (!baseTexture) {\n            baseTexture = new VideoBaseTexture(video, scaleMode);\n            _utils.BaseTextureCache[video._pixiId] = baseTexture;\n        }\n\n        return baseTexture;\n    };\n\n    /**\n     * Helper function that creates a new BaseTexture based on the given video element.\n     * This BaseTexture can then be used to create a texture\n     *\n     * @static\n     * @param {string|object|string[]|object[]} videoSrc - The URL(s) for the video.\n     * @param {string} [videoSrc.src] - One of the source urls for the video\n     * @param {string} [videoSrc.mime] - The mimetype of the video (e.g. 'video/mp4'). If not specified\n     *  the url's extension will be used as the second part of the mime type.\n     * @param {number} scaleMode - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.VideoBaseTexture} Newly created VideoBaseTexture\n     */\n\n\n    VideoBaseTexture.fromUrl = function fromUrl(videoSrc, scaleMode) {\n        var video = document.createElement('video');\n\n        video.setAttribute('webkit-playsinline', '');\n        video.setAttribute('playsinline', '');\n\n        // array of objects or strings\n        if (Array.isArray(videoSrc)) {\n            for (var i = 0; i < videoSrc.length; ++i) {\n                video.appendChild(createSource(videoSrc[i].src || videoSrc[i], videoSrc[i].mime));\n            }\n        }\n        // single object or string\n        else {\n                video.appendChild(createSource(videoSrc.src || videoSrc, videoSrc.mime));\n            }\n\n        video.load();\n\n        return VideoBaseTexture.fromVideo(video, scaleMode);\n    };\n\n    /**\n     * Should the base texture automatically update itself, set to true by default\n     *\n     * @member {boolean}\n     * @memberof PIXI.VideoBaseTexture#\n     */\n\n\n    _createClass(VideoBaseTexture, [{\n        key: 'autoUpdate',\n        get: function get() {\n            return this._autoUpdate;\n        }\n\n        /**\n         * Sets autoUpdate property.\n         *\n         * @param {number} value - enable auto update or not\n         */\n        ,\n        set: function set(value) {\n            if (value !== this._autoUpdate) {\n                this._autoUpdate = value;\n\n                if (!this._autoUpdate && this._isAutoUpdating) {\n                    ticker.shared.remove(this.update, this);\n                    this._isAutoUpdating = false;\n                } else if (this._autoUpdate && !this._isAutoUpdating) {\n                    ticker.shared.add(this.update, this);\n                    this._isAutoUpdating = true;\n                }\n            }\n        }\n    }]);\n\n    return VideoBaseTexture;\n}(_BaseTexture3.default);\n\nexports.default = VideoBaseTexture;\n\n\nVideoBaseTexture.fromUrls = VideoBaseTexture.fromUrl;\n\nfunction createSource(path, type) {\n    if (!type) {\n        type = 'video/' + path.substr(path.lastIndexOf('.') + 1);\n    }\n\n    var source = document.createElement('source');\n\n    source.src = path;\n    source.type = type;\n\n    return source;\n}\n//# sourceMappingURL=VideoBaseTexture.js.map\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.Ticker = exports.shared = undefined;\n\nvar _Ticker = __webpack_require__(123);\n\nvar _Ticker2 = _interopRequireDefault(_Ticker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The shared ticker instance used by {@link PIXI.extras.AnimatedSprite}.\n * and by {@link PIXI.interaction.InteractionManager}.\n * The property {@link PIXI.ticker.Ticker#autoStart} is set to `true`\n * for this instance. Please follow the examples for usage, including\n * how to opt-out of auto-starting the shared ticker.\n *\n * @example\n * let ticker = PIXI.ticker.shared;\n * // Set this to prevent starting this ticker when listeners are added.\n * // By default this is true only for the PIXI.ticker.shared instance.\n * ticker.autoStart = false;\n * // FYI, call this to ensure the ticker is stopped. It should be stopped\n * // if you have not attempted to render anything yet.\n * ticker.stop();\n * // Call this when you are ready for a running shared ticker.\n * ticker.start();\n *\n * @example\n * // You may use the shared ticker to render...\n * let renderer = PIXI.autoDetectRenderer(800, 600);\n * let stage = new PIXI.Container();\n * let interactionManager = PIXI.interaction.InteractionManager(renderer);\n * document.body.appendChild(renderer.view);\n * ticker.add(function (time) {\n *     renderer.render(stage);\n * });\n *\n * @example\n * // Or you can just update it manually.\n * ticker.autoStart = false;\n * ticker.stop();\n * function animate(time) {\n *     ticker.update(time);\n *     renderer.render(stage);\n *     requestAnimationFrame(animate);\n * }\n * animate(performance.now());\n *\n * @type {PIXI.ticker.Ticker}\n * @memberof PIXI.ticker\n */\nvar shared = new _Ticker2.default();\n\nshared.autoStart = true;\n\n/**\n * @namespace PIXI.ticker\n */\nexports.shared = shared;\nexports.Ticker = _Ticker2.default;\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Matrix = __webpack_require__(23);\n\nvar _Matrix2 = _interopRequireDefault(_Matrix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar tempMat = new _Matrix2.default();\n\n/**\n * class controls uv transform and frame clamp for texture\n */\n\nvar TextureTransform = function () {\n    /**\n     *\n     * @param {PIXI.Texture} texture observed texture\n     * @param {number} [clampMargin] Changes frame clamping, 0.5 by default. Use -0.5 for extra border.\n     * @constructor\n     */\n    function TextureTransform(texture, clampMargin) {\n        _classCallCheck(this, TextureTransform);\n\n        this._texture = texture;\n\n        this.mapCoord = new _Matrix2.default();\n\n        this.uClampFrame = new Float32Array(4);\n\n        this.uClampOffset = new Float32Array(2);\n\n        this._lastTextureID = -1;\n\n        /**\n         * Changes frame clamping\n         * Works with TilingSprite and Mesh\n         * Change to 1.5 if you tex ture has repeated right and bottom lines, that leads to smoother borders\n         *\n         * @default 0\n         * @member {number}\n         */\n        this.clampOffset = 0;\n\n        /**\n         * Changes frame clamping\n         * Works with TilingSprite and Mesh\n         * Change to -0.5 to add a pixel to the edge, recommended for transparent trimmed textures in atlas\n         *\n         * @default 0.5\n         * @member {number}\n         */\n        this.clampMargin = typeof clampMargin === 'undefined' ? 0.5 : clampMargin;\n    }\n\n    /**\n     * texture property\n     * @member {PIXI.Texture}\n     * @memberof PIXI.TextureTransform\n     */\n\n\n    /**\n     * updates matrices if texture was changed\n     * @param {boolean} forceUpdate if true, matrices will be updated any case\n     */\n    TextureTransform.prototype.update = function update(forceUpdate) {\n        var tex = this.texture;\n\n        if (!tex || !tex.valid) {\n            return;\n        }\n\n        if (!forceUpdate && this._lastTextureID === this.texture._updateID) {\n            return;\n        }\n\n        this._lastTextureID = this.texture._updateID;\n\n        var uvs = this.texture._uvs;\n\n        this.mapCoord.set(uvs.x1 - uvs.x0, uvs.y1 - uvs.y0, uvs.x3 - uvs.x0, uvs.y3 - uvs.y0, uvs.x0, uvs.y0);\n\n        var orig = tex.orig;\n        var trim = tex.trim;\n\n        if (trim) {\n            tempMat.set(orig.width / trim.width, 0, 0, orig.height / trim.height, -trim.x / trim.width, -trim.y / trim.height);\n            this.mapCoord.append(tempMat);\n        }\n\n        var texBase = tex.baseTexture;\n        var frame = this.uClampFrame;\n        var margin = this.clampMargin / texBase.resolution;\n        var offset = this.clampOffset;\n\n        frame[0] = (tex._frame.x + margin + offset) / texBase.width;\n        frame[1] = (tex._frame.y + margin + offset) / texBase.height;\n        frame[2] = (tex._frame.x + tex._frame.width - margin + offset) / texBase.width;\n        frame[3] = (tex._frame.y + tex._frame.height - margin + offset) / texBase.height;\n        this.uClampOffset[0] = offset / texBase.realWidth;\n        this.uClampOffset[1] = offset / texBase.realHeight;\n    };\n\n    _createClass(TextureTransform, [{\n        key: 'texture',\n        get: function get() {\n            return this._texture;\n        }\n\n        /**\n         * sets texture value\n         * @param {PIXI.Texture} value texture to be set\n         */\n        ,\n        set: function set(value) {\n            this._texture = value;\n            this._lastTextureID = -1;\n        }\n    }]);\n\n    return TextureTransform;\n}();\n\nexports.default = TextureTransform;\n//# sourceMappingURL=TextureTransform.js.map\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _generateBlurVertSource = __webpack_require__(59);\n\nvar _generateBlurVertSource2 = _interopRequireDefault(_generateBlurVertSource);\n\nvar _generateBlurFragSource = __webpack_require__(58);\n\nvar _generateBlurFragSource2 = _interopRequireDefault(_generateBlurFragSource);\n\nvar _getMaxBlurKernelSize = __webpack_require__(60);\n\nvar _getMaxBlurKernelSize2 = _interopRequireDefault(_getMaxBlurKernelSize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The BlurXFilter applies a horizontal Gaussian blur to an object.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar BlurXFilter = function (_core$Filter) {\n    _inherits(BlurXFilter, _core$Filter);\n\n    /**\n     * @param {number} strength - The strength of the blur filter.\n     * @param {number} quality - The quality of the blur filter.\n     * @param {number} resolution - The reoslution of the blur filter.\n     */\n    function BlurXFilter(strength, quality, resolution) {\n        _classCallCheck(this, BlurXFilter);\n\n        var vertSrc = (0, _generateBlurVertSource2.default)(5, true);\n        var fragSrc = (0, _generateBlurFragSource2.default)(5);\n\n        var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        vertSrc,\n        // fragment shader\n        fragSrc));\n\n        _this.resolution = resolution || 1;\n\n        _this._quality = 0;\n\n        _this.quality = quality || 4;\n        _this.strength = strength || 8;\n\n        _this.firstRun = true;\n        return _this;\n    }\n\n    /**\n     * Applies the filter.\n     *\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     * @param {boolean} clear - Should the output be cleared before rendering?\n     */\n\n\n    BlurXFilter.prototype.apply = function apply(filterManager, input, output, clear) {\n        if (this.firstRun) {\n            var gl = filterManager.renderer.gl;\n            var kernelSize = (0, _getMaxBlurKernelSize2.default)(gl);\n\n            this.vertexSrc = (0, _generateBlurVertSource2.default)(kernelSize, true);\n            this.fragmentSrc = (0, _generateBlurFragSource2.default)(kernelSize);\n\n            this.firstRun = false;\n        }\n\n        this.uniforms.strength = 1 / output.size.width * (output.size.width / input.size.width);\n\n        // screen space!\n        this.uniforms.strength *= this.strength;\n        this.uniforms.strength /= this.passes; // / this.passes//Math.pow(1, this.passes);\n\n        if (this.passes === 1) {\n            filterManager.applyFilter(this, input, output, clear);\n        } else {\n            var renderTarget = filterManager.getRenderTarget(true);\n            var flip = input;\n            var flop = renderTarget;\n\n            for (var i = 0; i < this.passes - 1; i++) {\n                filterManager.applyFilter(this, flip, flop, true);\n\n                var temp = flop;\n\n                flop = flip;\n                flip = temp;\n            }\n\n            filterManager.applyFilter(this, flip, output, clear);\n\n            filterManager.returnRenderTarget(renderTarget);\n        }\n    };\n\n    /**\n     * Sets the strength of both the blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.BlurXFilter#\n     * @default 16\n     */\n\n\n    _createClass(BlurXFilter, [{\n        key: 'blur',\n        get: function get() {\n            return this.strength;\n        }\n\n        /**\n         * Sets the strength of the blur.\n         *\n         * @param {number} value - The value to set.\n         */\n        ,\n        set: function set(value) {\n            this.padding = Math.abs(value) * 2;\n            this.strength = value;\n        }\n\n        /**\n        * Sets the quality of the blur by modifying the number of passes. More passes means higher\n        * quaility bluring but the lower the performance.\n        *\n        * @member {number}\n        * @memberof PIXI.filters.BlurXFilter#\n        * @default 4\n        */\n\n    }, {\n        key: 'quality',\n        get: function get() {\n            return this._quality;\n        }\n\n        /**\n         * Sets the quality of the blur.\n         *\n         * @param {number} value - The value to set.\n         */\n        ,\n        set: function set(value) {\n            this._quality = value;\n            this.passes = value;\n        }\n    }]);\n\n    return BlurXFilter;\n}(core.Filter);\n\nexports.default = BlurXFilter;\n//# sourceMappingURL=BlurXFilter.js.map\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _generateBlurVertSource = __webpack_require__(59);\n\nvar _generateBlurVertSource2 = _interopRequireDefault(_generateBlurVertSource);\n\nvar _generateBlurFragSource = __webpack_require__(58);\n\nvar _generateBlurFragSource2 = _interopRequireDefault(_generateBlurFragSource);\n\nvar _getMaxBlurKernelSize = __webpack_require__(60);\n\nvar _getMaxBlurKernelSize2 = _interopRequireDefault(_getMaxBlurKernelSize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The BlurYFilter applies a horizontal Gaussian blur to an object.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar BlurYFilter = function (_core$Filter) {\n    _inherits(BlurYFilter, _core$Filter);\n\n    /**\n     * @param {number} strength - The strength of the blur filter.\n     * @param {number} quality - The quality of the blur filter.\n     * @param {number} resolution - The reoslution of the blur filter.\n     */\n    function BlurYFilter(strength, quality, resolution) {\n        _classCallCheck(this, BlurYFilter);\n\n        var vertSrc = (0, _generateBlurVertSource2.default)(5, false);\n        var fragSrc = (0, _generateBlurFragSource2.default)(5);\n\n        var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        vertSrc,\n        // fragment shader\n        fragSrc));\n\n        _this.resolution = resolution || 1;\n\n        _this._quality = 0;\n\n        _this.quality = quality || 4;\n        _this.strength = strength || 8;\n\n        _this.firstRun = true;\n        return _this;\n    }\n\n    /**\n     * Applies the filter.\n     *\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     * @param {boolean} clear - Should the output be cleared before rendering?\n     */\n\n\n    BlurYFilter.prototype.apply = function apply(filterManager, input, output, clear) {\n        if (this.firstRun) {\n            var gl = filterManager.renderer.gl;\n            var kernelSize = (0, _getMaxBlurKernelSize2.default)(gl);\n\n            this.vertexSrc = (0, _generateBlurVertSource2.default)(kernelSize, false);\n            this.fragmentSrc = (0, _generateBlurFragSource2.default)(kernelSize);\n\n            this.firstRun = false;\n        }\n\n        this.uniforms.strength = 1 / output.size.height * (output.size.height / input.size.height);\n\n        this.uniforms.strength *= this.strength;\n        this.uniforms.strength /= this.passes;\n\n        if (this.passes === 1) {\n            filterManager.applyFilter(this, input, output, clear);\n        } else {\n            var renderTarget = filterManager.getRenderTarget(true);\n            var flip = input;\n            var flop = renderTarget;\n\n            for (var i = 0; i < this.passes - 1; i++) {\n                filterManager.applyFilter(this, flip, flop, true);\n\n                var temp = flop;\n\n                flop = flip;\n                flip = temp;\n            }\n\n            filterManager.applyFilter(this, flip, output, clear);\n\n            filterManager.returnRenderTarget(renderTarget);\n        }\n    };\n\n    /**\n     * Sets the strength of both the blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.BlurYFilter#\n     * @default 2\n     */\n\n\n    _createClass(BlurYFilter, [{\n        key: 'blur',\n        get: function get() {\n            return this.strength;\n        }\n\n        /**\n         * Sets the strength of the blur.\n         *\n         * @param {number} value - The value to set.\n         */\n        ,\n        set: function set(value) {\n            this.padding = Math.abs(value) * 2;\n            this.strength = value;\n        }\n\n        /**\n         * Sets the quality of the blur by modifying the number of passes. More passes means higher\n         * quaility bluring but the lower the performance.\n         *\n         * @member {number}\n         * @memberof PIXI.filters.BlurXFilter#\n         * @default 4\n         */\n\n    }, {\n        key: 'quality',\n        get: function get() {\n            return this._quality;\n        }\n\n        /**\n         * Sets the quality of the blur.\n         *\n         * @param {number} value - The value to set.\n         */\n        ,\n        set: function set(value) {\n            this._quality = value;\n            this.passes = value;\n        }\n    }]);\n\n    return BlurYFilter;\n}(core.Filter);\n\nexports.default = BlurYFilter;\n//# sourceMappingURL=BlurYFilter.js.map\n\n/***/ },\n/* 58 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = generateFragBlurSource;\nvar GAUSSIAN_VALUES = {\n    5: [0.153388, 0.221461, 0.250301],\n    7: [0.071303, 0.131514, 0.189879, 0.214607],\n    9: [0.028532, 0.067234, 0.124009, 0.179044, 0.20236],\n    11: [0.0093, 0.028002, 0.065984, 0.121703, 0.175713, 0.198596],\n    13: [0.002406, 0.009255, 0.027867, 0.065666, 0.121117, 0.174868, 0.197641],\n    15: [0.000489, 0.002403, 0.009246, 0.02784, 0.065602, 0.120999, 0.174697, 0.197448]\n};\n\nvar fragTemplate = ['varying vec2 vBlurTexCoords[%size%];', 'uniform sampler2D uSampler;', 'void main(void)', '{', '    gl_FragColor = vec4(0.0);', '    %blur%', '}'].join('\\n');\n\nfunction generateFragBlurSource(kernelSize) {\n    var kernel = GAUSSIAN_VALUES[kernelSize];\n    var halfLength = kernel.length;\n\n    var fragSource = fragTemplate;\n\n    var blurLoop = '';\n    var template = 'gl_FragColor += texture2D(uSampler, vBlurTexCoords[%index%]) * %value%;';\n    var value = void 0;\n\n    for (var i = 0; i < kernelSize; i++) {\n        var blur = template.replace('%index%', i);\n\n        value = i;\n\n        if (i >= halfLength) {\n            value = kernelSize - i - 1;\n        }\n\n        blur = blur.replace('%value%', kernel[value]);\n\n        blurLoop += blur;\n        blurLoop += '\\n';\n    }\n\n    fragSource = fragSource.replace('%blur%', blurLoop);\n    fragSource = fragSource.replace('%size%', kernelSize);\n\n    return fragSource;\n}\n//# sourceMappingURL=generateBlurFragSource.js.map\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = generateVertBlurSource;\nvar vertTemplate = ['attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform float strength;', 'uniform mat3 projectionMatrix;', 'varying vec2 vBlurTexCoords[%size%];', 'void main(void)', '{', 'gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);', '%blur%', '}'].join('\\n');\n\nfunction generateVertBlurSource(kernelSize, x) {\n    var halfLength = Math.ceil(kernelSize / 2);\n\n    var vertSource = vertTemplate;\n\n    var blurLoop = '';\n    var template = void 0;\n    // let value;\n\n    if (x) {\n        template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(%sampleIndex% * strength, 0.0);';\n    } else {\n        template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(0.0, %sampleIndex% * strength);';\n    }\n\n    for (var i = 0; i < kernelSize; i++) {\n        var blur = template.replace('%index%', i);\n\n        // value = i;\n\n        // if(i >= halfLength)\n        // {\n        //     value = kernelSize - i - 1;\n        // }\n\n        blur = blur.replace('%sampleIndex%', i - (halfLength - 1) + '.0');\n\n        blurLoop += blur;\n        blurLoop += '\\n';\n    }\n\n    vertSource = vertSource.replace('%blur%', blurLoop);\n    vertSource = vertSource.replace('%size%', kernelSize);\n\n    return vertSource;\n}\n//# sourceMappingURL=generateBlurVertSource.js.map\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = getMaxKernelSize;\nfunction getMaxKernelSize(gl) {\n    var maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n    var kernelSize = 15;\n\n    while (kernelSize > maxVaryings) {\n        kernelSize -= 2;\n    }\n\n    return kernelSize;\n}\n//# sourceMappingURL=getMaxBlurKernelSize.js.map\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _FXAAFilter = __webpack_require__(142);\n\nObject.defineProperty(exports, 'FXAAFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FXAAFilter).default;\n  }\n});\n\nvar _NoiseFilter = __webpack_require__(143);\n\nObject.defineProperty(exports, 'NoiseFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_NoiseFilter).default;\n  }\n});\n\nvar _DisplacementFilter = __webpack_require__(141);\n\nObject.defineProperty(exports, 'DisplacementFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_DisplacementFilter).default;\n  }\n});\n\nvar _BlurFilter = __webpack_require__(139);\n\nObject.defineProperty(exports, 'BlurFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BlurFilter).default;\n  }\n});\n\nvar _BlurXFilter = __webpack_require__(56);\n\nObject.defineProperty(exports, 'BlurXFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BlurXFilter).default;\n  }\n});\n\nvar _BlurYFilter = __webpack_require__(57);\n\nObject.defineProperty(exports, 'BlurYFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BlurYFilter).default;\n  }\n});\n\nvar _ColorMatrixFilter = __webpack_require__(140);\n\nObject.defineProperty(exports, 'ColorMatrixFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ColorMatrixFilter).default;\n  }\n});\n\nvar _VoidFilter = __webpack_require__(144);\n\nObject.defineProperty(exports, 'VoidFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_VoidFilter).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Holds all information related to an Interaction event\n *\n * @class\n * @memberof PIXI.interaction\n */\nvar InteractionData = function () {\n  /**\n   *\n   */\n  function InteractionData() {\n    _classCallCheck(this, InteractionData);\n\n    /**\n     * This point stores the global coords of where the touch/mouse event happened\n     *\n     * @member {PIXI.Point}\n     */\n    this.global = new core.Point();\n\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @member {PIXI.Sprite}\n     */\n    this.target = null;\n\n    /**\n     * When passed to an event handler, this will be the original DOM Event that was captured\n     *\n     * @member {Event}\n     */\n    this.originalEvent = null;\n  }\n\n  /**\n   * This will return the local coordinates of the specified displayObject for this InteractionData\n   *\n   * @param {PIXI.DisplayObject} displayObject - The DisplayObject that you would like the local\n   *  coords off\n   * @param {PIXI.Point} [point] - A Point object in which to store the value, optional (otherwise\n   *  will create a new point)\n   * @param {PIXI.Point} [globalPos] - A Point object containing your custom global coords, optional\n   *  (otherwise will use the current global coords)\n   * @return {PIXI.Point} A point containing the coordinates of the InteractionData position relative\n   *  to the DisplayObject\n   */\n\n\n  InteractionData.prototype.getLocalPosition = function getLocalPosition(displayObject, point, globalPos) {\n    return displayObject.worldTransform.applyInverse(globalPos || this.global, point);\n  };\n\n  return InteractionData;\n}();\n\nexports.default = InteractionData;\n//# sourceMappingURL=InteractionData.js.map\n\n/***/ },\n/* 63 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n/**\n * Default property values of interactive objects\n * Used by {@link PIXI.interaction.InteractionManager} to automatically give all DisplayObjects these properties\n *\n * @mixin\n * @name interactiveTarget\n * @memberof PIXI.interaction\n * @example\n *      function MyObject() {}\n *\n *      Object.assign(\n *          MyObject.prototype,\n *          PIXI.interaction.interactiveTarget\n *      );\n */\nexports.default = {\n  /**\n   * Determines if the displayObject be clicked/touched\n   *\n   * @inner {boolean}\n   */\n  interactive: false,\n\n  /**\n   * Determines if the children to the displayObject can be clicked/touched\n   * Setting this to false allows pixi to bypass a recursive hitTest function\n   *\n   * @inner {boolean}\n   */\n  interactiveChildren: true,\n\n  /**\n   * Interaction shape. Children will be hit first, then this shape will be checked.\n   * Setting this will cause this shape to be checked in hit tests rather than the displayObject's bounds.\n   *\n   * @inner {PIXI.Rectangle|PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.RoundedRectangle}\n   */\n  hitArea: null,\n\n  /**\n   * If enabled, the mouse cursor will change when hovered over the displayObject if it is interactive\n   *\n   * @inner {boolean}\n   */\n  buttonMode: false,\n\n  /**\n   * If buttonMode is enabled, this defines what CSS cursor property is used when the mouse cursor\n   * is hovered over the displayObject\n   *\n   * @see https://developer.mozilla.org/en/docs/Web/CSS/cursor\n   *\n   * @inner {string}\n   */\n  defaultCursor: 'pointer',\n\n  // some internal checks..\n  /**\n   * Internal check to detect if the mouse cursor is hovered over the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _over: false,\n\n  /**\n   * Internal check to detect if the left mouse button is pressed on the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _isLeftDown: false,\n\n  /**\n   * Internal check to detect if the right mouse button is pressed on the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _isRightDown: false,\n\n  /**\n   * Internal check to detect if the pointer cursor is hovered over the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _pointerOver: false,\n\n  /**\n   * Internal check to detect if the pointer is down on the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _pointerDown: false,\n\n  /**\n   * Internal check to detect if a user has touched the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _touchDown: false\n};\n//# sourceMappingURL=interactiveTarget.js.map\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.parse = parse;\n\nexports.default = function () {\n    return function bitmapFontParser(resource, next) {\n        // skip if no data or not xml data\n        if (!resource.data || !resource.isXml) {\n            next();\n\n            return;\n        }\n\n        // skip if not bitmap font data, using some silly duck-typing\n        if (resource.data.getElementsByTagName('page').length === 0 || resource.data.getElementsByTagName('info').length === 0 || resource.data.getElementsByTagName('info')[0].getAttribute('face') === null) {\n            next();\n\n            return;\n        }\n\n        var xmlUrl = !resource.isDataUrl ? path.dirname(resource.url) : '';\n\n        if (resource.isDataUrl) {\n            if (xmlUrl === '.') {\n                xmlUrl = '';\n            }\n\n            if (this.baseUrl && xmlUrl) {\n                // if baseurl has a trailing slash then add one to xmlUrl so the replace works below\n                if (this.baseUrl.charAt(this.baseUrl.length - 1) === '/') {\n                    xmlUrl += '/';\n                }\n\n                // remove baseUrl from xmlUrl\n                xmlUrl = xmlUrl.replace(this.baseUrl, '');\n            }\n        }\n\n        // if there is an xmlUrl now, it needs a trailing slash. Ensure that it does if the string isn't empty.\n        if (xmlUrl && xmlUrl.charAt(xmlUrl.length - 1) !== '/') {\n            xmlUrl += '/';\n        }\n\n        var textureUrl = xmlUrl + resource.data.getElementsByTagName('page')[0].getAttribute('file');\n\n        if (_core.utils.TextureCache[textureUrl]) {\n            // reuse existing texture\n            parse(resource, _core.utils.TextureCache[textureUrl]);\n            next();\n        } else {\n            var loadOptions = {\n                crossOrigin: resource.crossOrigin,\n                loadType: _resourceLoader.Resource.LOAD_TYPE.IMAGE,\n                metadata: resource.metadata.imageMetadata\n            };\n\n            // load the texture for the font\n            this.add(resource.name + '_image', textureUrl, loadOptions, function (res) {\n                parse(resource, res.texture);\n                next();\n            });\n        }\n    };\n};\n\nvar _path = __webpack_require__(6);\n\nvar path = _interopRequireWildcard(_path);\n\nvar _core = __webpack_require__(0);\n\nvar _resourceLoader = __webpack_require__(20);\n\nvar _extras = __webpack_require__(31);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction parse(resource, texture) {\n    var data = {};\n    var info = resource.data.getElementsByTagName('info')[0];\n    var common = resource.data.getElementsByTagName('common')[0];\n\n    data.font = info.getAttribute('face');\n    data.size = parseInt(info.getAttribute('size'), 10);\n    data.lineHeight = parseInt(common.getAttribute('lineHeight'), 10);\n    data.chars = {};\n\n    // parse letters\n    var letters = resource.data.getElementsByTagName('char');\n\n    for (var i = 0; i < letters.length; i++) {\n        var charCode = parseInt(letters[i].getAttribute('id'), 10);\n\n        var textureRect = new _core.Rectangle(parseInt(letters[i].getAttribute('x'), 10) + texture.frame.x, parseInt(letters[i].getAttribute('y'), 10) + texture.frame.y, parseInt(letters[i].getAttribute('width'), 10), parseInt(letters[i].getAttribute('height'), 10));\n\n        data.chars[charCode] = {\n            xOffset: parseInt(letters[i].getAttribute('xoffset'), 10),\n            yOffset: parseInt(letters[i].getAttribute('yoffset'), 10),\n            xAdvance: parseInt(letters[i].getAttribute('xadvance'), 10),\n            kerning: {},\n            texture: new _core.Texture(texture.baseTexture, textureRect)\n\n        };\n    }\n\n    // parse kernings\n    var kernings = resource.data.getElementsByTagName('kerning');\n\n    for (var _i = 0; _i < kernings.length; _i++) {\n        var first = parseInt(kernings[_i].getAttribute('first'), 10);\n        var second = parseInt(kernings[_i].getAttribute('second'), 10);\n        var amount = parseInt(kernings[_i].getAttribute('amount'), 10);\n\n        if (data.chars[second]) {\n            data.chars[second].kerning[first] = amount;\n        }\n    }\n\n    resource.bitmapFont = data;\n\n    // I'm leaving this as a temporary fix so we can test the bitmap fonts in v3\n    // but it's very likely to change\n    _extras.BitmapText.fonts[data.font] = data;\n}\n//# sourceMappingURL=bitmapFontParser.js.map\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nexports.default = function () {\n    return function spritesheetParser(resource, next) {\n        var resourcePath = void 0;\n        var imageResourceName = resource.name + '_image';\n\n        // skip if no data, its not json, it isn't spritesheet data, or the image resource already exists\n        if (!resource.data || !resource.isJson || !resource.data.frames || this.resources[imageResourceName]) {\n            next();\n\n            return;\n        }\n\n        var loadOptions = {\n            crossOrigin: resource.crossOrigin,\n            loadType: _resourceLoader.Resource.LOAD_TYPE.IMAGE,\n            metadata: resource.metadata.imageMetadata\n        };\n\n        // Prepend url path unless the resource image is a data url\n        if (resource.isDataUrl) {\n            resourcePath = resource.data.meta.image;\n        } else {\n            resourcePath = _path2.default.dirname(resource.url.replace(this.baseUrl, '')) + '/' + resource.data.meta.image;\n        }\n\n        // load the image for this sheet\n        this.add(imageResourceName, resourcePath, loadOptions, function onImageLoad(res) {\n            resource.textures = {};\n\n            var frames = resource.data.frames;\n            var frameKeys = Object.keys(frames);\n            var baseTexture = res.texture.baseTexture;\n            var resolution = core.utils.getResolutionOfUrl(resource.url);\n            var scale = resource.data.meta.scale;\n\n            // for now (to keep things compatible) resolution overrides scale\n            // Support scale field on spritesheet\n            if (resolution === 1 && scale !== undefined && scale !== 1) {\n                baseTexture.resolution = resolution = scale;\n                baseTexture.update();\n            }\n\n            var batchIndex = 0;\n\n            function processFrames(initialFrameIndex, maxFrames) {\n                var frameIndex = initialFrameIndex;\n\n                while (frameIndex - initialFrameIndex < maxFrames && frameIndex < frameKeys.length) {\n                    var i = frameKeys[frameIndex];\n                    var rect = frames[i].frame;\n\n                    if (rect) {\n                        var frame = null;\n                        var trim = null;\n                        var orig = new core.Rectangle(0, 0, frames[i].sourceSize.w / resolution, frames[i].sourceSize.h / resolution);\n\n                        if (frames[i].rotated) {\n                            frame = new core.Rectangle(rect.x / resolution, rect.y / resolution, rect.h / resolution, rect.w / resolution);\n                        } else {\n                            frame = new core.Rectangle(rect.x / resolution, rect.y / resolution, rect.w / resolution, rect.h / resolution);\n                        }\n\n                        //  Check to see if the sprite is trimmed\n                        if (frames[i].trimmed) {\n                            trim = new core.Rectangle(frames[i].spriteSourceSize.x / resolution, frames[i].spriteSourceSize.y / resolution, rect.w / resolution, rect.h / resolution);\n                        }\n\n                        resource.textures[i] = new core.Texture(baseTexture, frame, orig, trim, frames[i].rotated ? 2 : 0);\n\n                        // lets also add the frame to pixi's global cache for fromFrame and fromImage functions\n                        core.utils.TextureCache[i] = resource.textures[i];\n                    }\n\n                    frameIndex++;\n                }\n            }\n\n            function shouldProcessNextBatch() {\n                return batchIndex * BATCH_SIZE < frameKeys.length;\n            }\n\n            function processNextBatch(done) {\n                processFrames(batchIndex * BATCH_SIZE, BATCH_SIZE);\n                batchIndex++;\n                setTimeout(done, 0);\n            }\n\n            function iteration() {\n                processNextBatch(function () {\n                    if (shouldProcessNextBatch()) {\n                        iteration();\n                    } else {\n                        next();\n                    }\n                });\n            }\n\n            if (frameKeys.length <= BATCH_SIZE) {\n                processFrames(0, BATCH_SIZE);\n                next();\n            } else {\n                iteration();\n            }\n        });\n    };\n};\n\nvar _resourceLoader = __webpack_require__(20);\n\nvar _path = __webpack_require__(6);\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BATCH_SIZE = 1000;\n//# sourceMappingURL=spritesheetParser.js.map\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nexports.default = function () {\n    return function textureParser(resource, next) {\n        // create a new texture if the data is an Image object\n        if (resource.data && resource.isImage) {\n            var baseTexture = new core.BaseTexture(resource.data, null, core.utils.getResolutionOfUrl(resource.url));\n\n            baseTexture.imageUrl = resource.url;\n            resource.texture = new core.Texture(baseTexture);\n\n            // lets also add the frame to pixi's global cache for fromFrame and fromImage fucntions\n            core.utils.BaseTextureCache[resource.name] = baseTexture;\n            core.utils.TextureCache[resource.name] = resource.texture;\n\n            // also add references by url if they are different.\n            if (resource.name !== resource.url) {\n                core.utils.BaseTextureCache[resource.url] = baseTexture;\n                core.utils.TextureCache[resource.url] = resource.texture;\n            }\n        }\n\n        next();\n    };\n};\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n//# sourceMappingURL=textureParser.js.map\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Mesh2 = __webpack_require__(12);\n\nvar _Mesh3 = _interopRequireDefault(_Mesh2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The Plane allows you to draw a texture across several points and them manipulate these points\n *\n *```js\n * for (let i = 0; i < 20; i++) {\n *     points.push(new PIXI.Point(i * 50, 0));\n * };\n * let Plane = new PIXI.Plane(PIXI.Texture.fromImage(\"snake.png\"), points);\n *  ```\n *\n * @class\n * @extends PIXI.mesh.Mesh\n * @memberof PIXI.mesh\n *\n */\nvar Plane = function (_Mesh) {\n    _inherits(Plane, _Mesh);\n\n    /**\n     * @param {PIXI.Texture} texture - The texture to use on the Plane.\n     * @param {number} verticesX - The number of vertices in the x-axis\n     * @param {number} verticesY - The number of vertices in the y-axis\n     */\n    function Plane(texture, verticesX, verticesY) {\n        _classCallCheck(this, Plane);\n\n        /**\n         * Tracker for if the Plane is ready to be drawn. Needed because Mesh ctor can\n         * call _onTextureUpdated which could call refresh too early.\n         *\n         * @member {boolean}\n         * @private\n         */\n        var _this = _possibleConstructorReturn(this, _Mesh.call(this, texture));\n\n        _this._ready = true;\n\n        _this.verticesX = verticesX || 10;\n        _this.verticesY = verticesY || 10;\n\n        _this.drawMode = _Mesh3.default.DRAW_MODES.TRIANGLES;\n        _this.refresh();\n        return _this;\n    }\n\n    /**\n     * Refreshes\n     *\n     */\n\n\n    Plane.prototype.refresh = function refresh() {\n        var total = this.verticesX * this.verticesY;\n        var verts = [];\n        var colors = [];\n        var uvs = [];\n        var indices = [];\n        var texture = this.texture;\n\n        var segmentsX = this.verticesX - 1;\n        var segmentsY = this.verticesY - 1;\n\n        var sizeX = texture.width / segmentsX;\n        var sizeY = texture.height / segmentsY;\n\n        for (var i = 0; i < total; i++) {\n            if (texture._uvs) {\n                var x = i % this.verticesX;\n                var y = i / this.verticesX | 0;\n\n                verts.push(x * sizeX, y * sizeY);\n\n                // this works for rectangular textures.\n                uvs.push(texture._uvs.x0 + (texture._uvs.x1 - texture._uvs.x0) * (x / (this.verticesX - 1)), texture._uvs.y0 + (texture._uvs.y3 - texture._uvs.y0) * (y / (this.verticesY - 1)));\n            } else {\n                uvs.push(0);\n            }\n        }\n\n        //  cons\n\n        var totalSub = segmentsX * segmentsY;\n\n        for (var _i = 0; _i < totalSub; _i++) {\n            var xpos = _i % segmentsX;\n            var ypos = _i / segmentsX | 0;\n\n            var value = ypos * this.verticesX + xpos;\n            var value2 = ypos * this.verticesX + xpos + 1;\n            var value3 = (ypos + 1) * this.verticesX + xpos;\n            var value4 = (ypos + 1) * this.verticesX + xpos + 1;\n\n            indices.push(value, value2, value3);\n            indices.push(value2, value4, value3);\n        }\n\n        // console.log(indices)\n        this.vertices = new Float32Array(verts);\n        this.uvs = new Float32Array(uvs);\n        this.colors = new Float32Array(colors);\n        this.indices = new Uint16Array(indices);\n\n        this.indexDirty = true;\n    };\n\n    /**\n     * Clear texture UVs when new texture is set\n     *\n     * @private\n     */\n\n\n    Plane.prototype._onTextureUpdate = function _onTextureUpdate() {\n        _Mesh3.default.prototype._onTextureUpdate.call(this);\n\n        // wait for the Plane ctor to finish before calling refresh\n        if (this._ready) {\n            this.refresh();\n        }\n    };\n\n    return Plane;\n}(_Mesh3.default);\n\nexports.default = Plane;\n//# sourceMappingURL=Plane.js.map\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Mesh = __webpack_require__(12);\n\nObject.defineProperty(exports, 'Mesh', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Mesh).default;\n  }\n});\n\nvar _MeshRenderer = __webpack_require__(154);\n\nObject.defineProperty(exports, 'MeshRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MeshRenderer).default;\n  }\n});\n\nvar _CanvasMeshRenderer = __webpack_require__(153);\n\nObject.defineProperty(exports, 'CanvasMeshRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasMeshRenderer).default;\n  }\n});\n\nvar _Plane = __webpack_require__(67);\n\nObject.defineProperty(exports, 'Plane', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Plane).default;\n  }\n});\n\nvar _NineSlicePlane = __webpack_require__(151);\n\nObject.defineProperty(exports, 'NineSlicePlane', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_NineSlicePlane).default;\n  }\n});\n\nvar _Rope = __webpack_require__(152);\n\nObject.defineProperty(exports, 'Rope', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Rope).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _ParticleContainer = __webpack_require__(155);\n\nObject.defineProperty(exports, 'ParticleContainer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ParticleContainer).default;\n  }\n});\n\nvar _ParticleRenderer = __webpack_require__(157);\n\nObject.defineProperty(exports, 'ParticleRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ParticleRenderer).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLPrepare = __webpack_require__(165);\n\nObject.defineProperty(exports, 'webgl', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_WebGLPrepare).default;\n  }\n});\n\nvar _CanvasPrepare = __webpack_require__(163);\n\nObject.defineProperty(exports, 'canvas', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasPrepare).default;\n  }\n});\n\nvar _BasePrepare = __webpack_require__(32);\n\nObject.defineProperty(exports, 'BasePrepare', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BasePrepare).default;\n  }\n});\n\nvar _CountLimiter = __webpack_require__(71);\n\nObject.defineProperty(exports, 'CountLimiter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CountLimiter).default;\n  }\n});\n\nvar _TimeLimiter = __webpack_require__(164);\n\nObject.defineProperty(exports, 'TimeLimiter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TimeLimiter).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 71 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * CountLimiter limits the number of items handled by a {@link PIXI.prepare.BasePrepare} to a specified\n * number of items per frame.\n *\n * @class\n * @memberof PIXI\n */\nvar CountLimiter = function () {\n  /**\n   * @param {number} maxItemsPerFrame - The maximum number of items that can be prepared each frame.\n   */\n  function CountLimiter(maxItemsPerFrame) {\n    _classCallCheck(this, CountLimiter);\n\n    /**\n     * The maximum number of items that can be prepared each frame.\n     * @private\n     */\n    this.maxItemsPerFrame = maxItemsPerFrame;\n    /**\n     * The number of items that can be prepared in the current frame.\n     * @type {number}\n     * @private\n     */\n    this.itemsLeft = 0;\n  }\n\n  /**\n   * Resets any counting properties to start fresh on a new frame.\n   */\n\n\n  CountLimiter.prototype.beginFrame = function beginFrame() {\n    this.itemsLeft = this.maxItemsPerFrame;\n  };\n\n  /**\n   * Checks to see if another item can be uploaded. This should only be called once per item.\n   * @return {boolean} If the item is allowed to be uploaded.\n   */\n\n\n  CountLimiter.prototype.allowedToUpload = function allowedToUpload() {\n    return this.itemsLeft-- > 0;\n  };\n\n  return CountLimiter;\n}();\n\nexports.default = CountLimiter;\n//# sourceMappingURL=CountLimiter.js.map\n\n/***/ },\n/* 72 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict'\n\nmodule.exports = function parseURI (str, opts) {\n  opts = opts || {}\n\n  var o = {\n    key: ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'],\n    q: {\n      name: 'queryKey',\n      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n  }\n\n  var m = o.parser[opts.strictMode ? 'strict' : 'loose'].exec(str)\n  var uri = {}\n  var i = 14\n\n  while (i--) uri[o.key[i]] = m[i] || ''\n\n  uri[o.q.name] = {}\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) uri[o.q.name][$1] = $2\n  })\n\n  return uri\n}\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports) {\n\n\n/**\n * Helper class to create a WebGL Texture\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param width {number} the width of the texture\n * @param height {number} the height of the texture\n * @param format {number} the pixel format of the texture. defaults to gl.RGBA\n * @param type {number} the gl type of the texture. defaults to gl.UNSIGNED_BYTE\n */\nvar Texture = function(gl, width, height, format, type)\n{\n\t/**\n\t * The current WebGL rendering context\n\t *\n\t * @member {WebGLRenderingContext}\n\t */\n\tthis.gl = gl;\n\n\n\t/**\n\t * The WebGL texture\n\t *\n\t * @member {WebGLTexture}\n\t */\n\tthis.texture = gl.createTexture();\n\n\t/**\n\t * If mipmapping was used for this texture, enable and disable with enableMipmap()\n\t *\n\t * @member {Boolean}\n\t */\n\t// some settings..\n\tthis.mipmap = false;\n\n\n\t/**\n\t * Set to true to enable pre-multiplied alpha\n\t *\n\t * @member {Boolean}\n\t */\n\tthis.premultiplyAlpha = false;\n\n\t/**\n\t * The width of texture\n\t *\n\t * @member {Number}\n\t */\n\tthis.width = width || -1;\n\t/**\n\t * The height of texture\n\t *\n\t * @member {Number}\n\t */\n\tthis.height = height || -1;\n\n\t/**\n\t * The pixel format of the texture. defaults to gl.RGBA\n\t *\n\t * @member {Number}\n\t */\n\tthis.format = format || gl.RGBA;\n\n\t/**\n\t * The gl type of the texture. defaults to gl.UNSIGNED_BYTE\n\t *\n\t * @member {Number}\n\t */\n\tthis.type = type || gl.UNSIGNED_BYTE;\n\n\n};\n\n/**\n * Uploads this texture to the GPU\n * @param source {HTMLImageElement|ImageData|HTMLVideoElement} the source image of the texture\n */\nTexture.prototype.upload = function(source)\n{\n\tthis.bind();\n\n\tvar gl = this.gl;\n\n\n\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n\n\tvar newWidth = source.videoWidth || source.width;\n\tvar newHeight = source.videoHeight || source.height;\n\n\tif(newHeight !== this.height || newWidth !== this.width)\n\t{\n    \tgl.texImage2D(gl.TEXTURE_2D, 0, this.format, this.format, this.type, source);\n\t}\n\telse\n\t{\n    \tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.format, this.type, source);\n\t}\n\n\t// if the source is a video, we need to use the videoWidth / videoHeight properties as width / height will be incorrect.\n\tthis.width = newWidth;\n\tthis.height = newHeight;\n\n};\n\nvar FLOATING_POINT_AVAILABLE = false;\n\n/**\n * Use a data source and uploads this texture to the GPU\n * @param data {TypedArray} the data to upload to the texture\n * @param width {number} the new width of the texture\n * @param height {number} the new height of the texture\n */\nTexture.prototype.uploadData = function(data, width, height)\n{\n\tthis.bind();\n\n\tvar gl = this.gl;\n\n\n\tif(data instanceof Float32Array)\n\t{\n\t\tif(!FLOATING_POINT_AVAILABLE)\n\t\t{\n\t\t\tvar ext = gl.getExtension(\"OES_texture_float\");\n\n\t\t\tif(ext)\n\t\t\t{\n\t\t\t\tFLOATING_POINT_AVAILABLE = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow new Error('floating point textures not available');\n\t\t\t}\n\t\t}\n\n\t\tthis.type = gl.FLOAT;\n\t}\n\telse\n\t{\n\t\t// TODO support for other types\n\t\tthis.type = gl.UNSIGNED_BYTE;\n\t}\n\n\t// what type of data?\n\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n\n\n\tif(width !== this.width || height !== this.height)\n\t{\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.format,  width, height, 0, this.format, this.type, data || null);\n\t}\n\telse\n\t{\n\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, this.format, this.type, data || null);\n\t}\n\n\tthis.width = width;\n\tthis.height = height;\n\n\n//\ttexSubImage2D\n};\n\n/**\n * Binds the texture\n * @param  location\n */\nTexture.prototype.bind = function(location)\n{\n\tvar gl = this.gl;\n\n\tif(location !== undefined)\n\t{\n\t\tgl.activeTexture(gl.TEXTURE0 + location);\n\t}\n\n\tgl.bindTexture(gl.TEXTURE_2D, this.texture);\n};\n\n/**\n * Unbinds the texture\n */\nTexture.prototype.unbind = function()\n{\n\tvar gl = this.gl;\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n};\n\n/**\n * @param linear {Boolean} if we want to use linear filtering or nearest neighbour interpolation\n */\nTexture.prototype.minFilter = function( linear )\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tif(this.mipmap)\n\t{\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linear ? gl.LINEAR_MIPMAP_LINEAR : gl.NEAREST_MIPMAP_NEAREST);\n\t}\n\telse\n\t{\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linear ? gl.LINEAR : gl.NEAREST);\n\t}\n};\n\n/**\n * @param linear {Boolean} if we want to use linear filtering or nearest neighbour interpolation\n */\nTexture.prototype.magFilter = function( linear )\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, linear ? gl.LINEAR : gl.NEAREST);\n};\n\n/**\n * Enables mipmapping\n */\nTexture.prototype.enableMipmap = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tthis.mipmap = true;\n\n\tgl.generateMipmap(gl.TEXTURE_2D);\n};\n\n/**\n * Enables linear filtering\n */\nTexture.prototype.enableLinearScaling = function()\n{\n\tthis.minFilter(true);\n\tthis.magFilter(true);\n};\n\n/**\n * Enables nearest neighbour interpolation\n */\nTexture.prototype.enableNearestScaling = function()\n{\n\tthis.minFilter(false);\n\tthis.magFilter(false);\n};\n\n/**\n * Enables clamping on the texture so WebGL will not repeat it\n */\nTexture.prototype.enableWrapClamp = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n};\n\n/**\n * Enable tiling on the texture\n */\nTexture.prototype.enableWrapRepeat = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n};\n\nTexture.prototype.enableWrapMirrorRepeat = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.MIRRORED_REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.MIRRORED_REPEAT);\n};\n\n\n/**\n * Destroys this texture\n */\nTexture.prototype.destroy = function()\n{\n\tvar gl = this.gl;\n\t//TODO\n\tgl.deleteTexture(this.texture);\n};\n\n/**\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param source {HTMLImageElement|ImageData} the source image of the texture\n * @param premultiplyAlpha {Boolean} If we want to use pre-multiplied alpha\n */\nTexture.fromSource = function(gl, source, premultiplyAlpha)\n{\n\tvar texture = new Texture(gl);\n\ttexture.premultiplyAlpha = premultiplyAlpha || false;\n\ttexture.upload(source);\n\n\treturn texture;\n};\n\n/**\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param data {TypedArray} the data to upload to the texture\n * @param width {number} the new width of the texture\n * @param height {number} the new height of the texture\n */\nTexture.fromData = function(gl, data, width, height)\n{\n\t//console.log(data, width, height);\n\tvar texture = new Texture(gl);\n\ttexture.uploadData(data, width, height);\n\n\treturn texture;\n};\n\n\nmodule.exports = Texture;\n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports) {\n\n// var GL_MAP = {};\n\n/**\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param attribs {*}\n * @param state {*}\n */\nvar setVertexAttribArrays = function (gl, attribs, state)\n{\n    var i;\n    if(state)\n    {\n        var tempAttribState = state.tempAttribState,\n            attribState = state.attribState;\n\n        for (i = 0; i < tempAttribState.length; i++)\n        {\n            tempAttribState[i] = false;\n        }\n\n        // set the new attribs\n        for (i = 0; i < attribs.length; i++)\n        {\n            tempAttribState[attribs[i].attribute.location] = true;\n        }\n\n        for (i = 0; i < attribState.length; i++)\n        {\n            if (attribState[i] !== tempAttribState[i])\n            {\n                attribState[i] = tempAttribState[i];\n\n                if (state.attribState[i])\n                {\n                    gl.enableVertexAttribArray(i);\n                }\n                else\n                {\n                    gl.disableVertexAttribArray(i);\n                }\n            }\n        }\n\n    }\n    else\n    {\n        for (i = 0; i < attribs.length; i++)\n        {\n            var attrib = attribs[i];\n            gl.enableVertexAttribArray(attrib.attribute.location);\n        }\n    }\n};\n\nmodule.exports = setVertexAttribArrays;\n\n\n/***/ },\n/* 75 */\n/***/ function(module, exports) {\n\n\n/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n * @return {WebGLProgram} the shader program\n */\nvar compileProgram = function(gl, vertexSrc, fragmentSrc)\n{\n    var glVertShader = compileShader(gl, gl.VERTEX_SHADER, vertexSrc);\n    var glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentSrc);\n\n    var program = gl.createProgram();\n\n    gl.attachShader(program, glVertShader);\n    gl.attachShader(program, glFragShader);\n    gl.linkProgram(program);\n\n    // if linking fails, then log and cleanup\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n    {\n        console.error('Pixi.js Error: Could not initialize shader.');\n        console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS));\n        console.error('gl.getError()', gl.getError());\n\n        // if there is a program info log, log it\n        if (gl.getProgramInfoLog(program) !== '')\n        {\n            console.warn('Pixi.js Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(program));\n        }\n\n        gl.deleteProgram(program);\n        program = null;\n    }\n\n    // clean up some shaders\n    gl.deleteShader(glVertShader);\n    gl.deleteShader(glFragShader);\n\n    return program;\n};\n\n/**\n * @private\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param type {Number} the type, can be either VERTEX_SHADER or FRAGMENT_SHADER\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @return {WebGLShader} the shader\n */\nvar compileShader = function (gl, type, src)\n{\n    var shader = gl.createShader(type);\n\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n    {\n        console.log(gl.getShaderInfoLog(shader));\n        return null;\n    }\n\n    return shader;\n};\n\nmodule.exports = compileProgram;\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports) {\n\n/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param type {String} Type of value\n * @param size {Number}\n */\nvar defaultValue = function(type, size) \n{\n    switch (type)\n    {\n        case 'float':\n            return 0;\n\n        case 'vec2': \n            return new Float32Array(2 * size);\n\n        case 'vec3':\n            return new Float32Array(3 * size);\n\n        case 'vec4':     \n            return new Float32Array(4 * size);\n            \n        case 'int':\n        case 'sampler2D':\n            return 0;\n\n        case 'ivec2':   \n            return new Int32Array(2 * size);\n\n        case 'ivec3':\n            return new Int32Array(3 * size);\n\n        case 'ivec4': \n            return new Int32Array(4 * size);\n\n        case 'bool':     \n            return false;\n\n        case 'bvec2':\n\n            return booleanArray( 2 * size);\n\n        case 'bvec3':\n            return booleanArray(3 * size);\n\n        case 'bvec4':\n            return booleanArray(4 * size);\n\n        case 'mat2':\n            return new Float32Array([1, 0,\n                                     0, 1]);\n\n        case 'mat3': \n            return new Float32Array([1, 0, 0,\n                                     0, 1, 0,\n                                     0, 0, 1]);\n\n        case 'mat4':\n            return new Float32Array([1, 0, 0, 0,\n                                     0, 1, 0, 0,\n                                     0, 0, 1, 0,\n                                     0, 0, 0, 1]);\n    }\n};\n\nvar booleanArray = function(size)\n{\n    var array = new Array(size);\n\n    for (var i = 0; i < array.length; i++) \n    {\n        array[i] = false;\n    }\n\n    return array;\n};\n\nmodule.exports = defaultValue;\n\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\nvar mapType = __webpack_require__(33);\nvar mapSize = __webpack_require__(80);\n\n/**\n * Extracts the attributes\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param program {WebGLProgram} The shader program to get the attributes from\n * @return attributes {Object}\n */\nvar extractAttributes = function(gl, program)\n{\n    var attributes = {};\n\n    var totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var i = 0; i < totalAttributes; i++)\n    {\n        var attribData = gl.getActiveAttrib(program, i);\n        var type = mapType(gl, attribData.type);\n\n        attributes[attribData.name] = {\n            type:type,\n            size:mapSize(type),\n            location:gl.getAttribLocation(program, attribData.name),\n            //TODO - make an attribute object\n            pointer: pointer\n        };\n    }\n\n    return attributes;\n};\n\nvar pointer = function(type, normalized, stride, start){\n    // console.log(this.location)\n    gl.vertexAttribPointer(this.location,this.size, type || gl.FLOAT, normalized || false, stride || 0, start || 0);\n};\n\nmodule.exports = extractAttributes;\n\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar mapType = __webpack_require__(33);\nvar defaultValue = __webpack_require__(76);\n\n/**\n * Extracts the uniforms\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param program {WebGLProgram} The shader program to get the uniforms from\n * @return uniforms {Object}\n */\nvar extractUniforms = function(gl, program)\n{\n\tvar uniforms = {};\n\n    var totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var i = 0; i < totalUniforms; i++)\n    {\n    \tvar uniformData = gl.getActiveUniform(program, i);\n    \tvar name = uniformData.name.replace(/\\[.*?\\]/, \"\");\n        var type = mapType(gl, uniformData.type );\n\n    \tuniforms[name] = {\n    \t\ttype:type,\n    \t\tsize:uniformData.size,\n    \t\tlocation:gl.getUniformLocation(program, name),\n    \t\tvalue:defaultValue(type, uniformData.size)\n    \t};\n    }\n\n\treturn uniforms;\n};\n\nmodule.exports = extractUniforms;\n\n\n/***/ },\n/* 79 */\n/***/ function(module, exports) {\n\n/**\n * Extracts the attributes\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param uniforms {Array} @mat ?\n * @return attributes {Object}\n */\nvar generateUniformAccessObject = function(gl, uniformData)\n{\n    // this is the object we will be sending back.\n    // an object hierachy will be created for structs\n    var uniforms = {data:{}};\n\n    uniforms.gl = gl;\n\n    var uniformKeys= Object.keys(uniformData);\n\n    for (var i = 0; i < uniformKeys.length; i++)\n    {\n        var fullName = uniformKeys[i];\n\n        var nameTokens = fullName.split('.');\n        var name = nameTokens[nameTokens.length - 1];\n\n        var uniformGroup = getUniformGroup(nameTokens, uniforms);\n\n        var uniform =  uniformData[fullName];\n        uniformGroup.data[name] = uniform;\n\n        uniformGroup.gl = gl;\n\n        Object.defineProperty(uniformGroup, name, {\n            get: generateGetter(name),\n            set: generateSetter(name, uniform)\n        });\n    }\n\n    return uniforms;\n};\n\nvar generateGetter = function(name)\n{\n\tvar template = getterTemplate.replace('%%', name);\n\treturn new Function(template); // jshint ignore:line\n};\n\nvar generateSetter = function(name, uniform)\n{\n    var template = setterTemplate.replace(/%%/g, name);\n    var setTemplate;\n\n    if(uniform.size === 1)\n    {\n        setTemplate = GLSL_TO_SINGLE_SETTERS[uniform.type];\n    }\n    else\n    {\n        setTemplate = GLSL_TO_ARRAY_SETTERS[uniform.type];\n    }\n\n    if(setTemplate)\n    {\n        template += \"\\nthis.gl.\" + setTemplate + \";\";\n    }\n\n  \treturn new Function('value', template); // jshint ignore:line\n};\n\nvar getUniformGroup = function(nameTokens, uniform)\n{\n    var cur = uniform;\n\n    for (var i = 0; i < nameTokens.length - 1; i++)\n    {\n        var o = cur[nameTokens[i]] || {data:{}};\n        cur[nameTokens[i]] = o;\n        cur = o;\n    }\n\n    return cur;\n};\n\nvar getterTemplate = [\n    'return this.data.%%.value;',\n].join('\\n');\n\nvar setterTemplate = [\n    'this.data.%%.value = value;',\n    'var location = this.data.%%.location;'\n].join('\\n');\n\n\nvar GLSL_TO_SINGLE_SETTERS = {\n\n    'float':    'uniform1f(location, value)',\n\n    'vec2':     'uniform2f(location, value[0], value[1])',\n    'vec3':     'uniform3f(location, value[0], value[1], value[2])',\n    'vec4':     'uniform4f(location, value[0], value[1], value[2], value[3])',\n\n    'int':      'uniform1i(location, value)',\n    'ivec2':    'uniform2i(location, value[0], value[1])',\n    'ivec3':    'uniform3i(location, value[0], value[1], value[2])',\n    'ivec4':    'uniform4i(location, value[0], value[1], value[2], value[3])',\n\n    'bool':     'uniform1i(location, value)',\n    'bvec2':    'uniform2i(location, value[0], value[1])',\n    'bvec3':    'uniform3i(location, value[0], value[1], value[2])',\n    'bvec4':    'uniform4i(location, value[0], value[1], value[2], value[3])',\n\n    'mat2':     'uniformMatrix2fv(location, false, value)',\n    'mat3':     'uniformMatrix3fv(location, false, value)',\n    'mat4':     'uniformMatrix4fv(location, false, value)',\n\n    'sampler2D':'uniform1i(location, value)'\n};\n\nvar GLSL_TO_ARRAY_SETTERS = {\n\n    'float':    'uniform1fv(location, value)',\n\n    'vec2':     'uniform2fv(location, value)',\n    'vec3':     'uniform3fv(location, value)',\n    'vec4':     'uniform4fv(location, value)',\n\n    'int':      'uniform1iv(location, value)',\n    'ivec2':    'uniform2iv(location, value)',\n    'ivec3':    'uniform3iv(location, value)',\n    'ivec4':    'uniform4iv(location, value)',\n\n    'bool':     'uniform1iv(location, value)',\n    'bvec2':    'uniform2iv(location, value)',\n    'bvec3':    'uniform3iv(location, value)',\n    'bvec4':    'uniform4iv(location, value)',\n\n    'sampler2D':'uniform1iv(location, value)'\n};\n\nmodule.exports = generateUniformAccessObject;\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports) {\n\n/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param type {String}\n * @return {Number}\n */\nvar mapSize = function(type) \n{ \n    return GLSL_TO_SIZE[type];\n};\n\n\nvar GLSL_TO_SIZE = {\n    'float':    1,\n    'vec2':     2,\n    'vec3':     3,\n    'vec4':     4,\n\n    'int':      1,\n    'ivec2':    2,\n    'ivec3':    3,\n    'ivec4':    4,\n\n    'bool':     1,\n    'bvec2':    2,\n    'bvec3':    3,\n    'bvec4':    4,\n\n    'mat2':     4,\n    'mat3':     9,\n    'mat4':     16,\n\n    'sampler2D':  1\n};\n\nmodule.exports = mapSize;\n\n\n/***/ },\n/* 81 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\n/**\n * Smaller version of the async library constructs.\n *\n */\n\nmodule.exports = {\n    eachSeries: asyncEachSeries,\n    queue: asyncQueue\n};\n\nfunction _noop() { /* empty */ }\n\n/**\n * Iterates an array in series.\n *\n * @param {*[]} array - Array to iterate.\n * @param {function} iterator - Function to call for each element.\n * @param {function} callback - Function to call when done, or on error.\n */\nfunction asyncEachSeries(array, iterator, callback) {\n    var i = 0;\n    var len = array.length;\n\n    (function next(err) {\n        if (err || i === len) {\n            if (callback) {\n                callback(err);\n            }\n\n            return;\n        }\n\n        iterator(array[i++], next);\n    })();\n}\n\n/**\n * Ensures a function is only called once.\n *\n * @param {function} fn - The function to wrap.\n * @return {function} The wrapping function.\n */\nfunction onlyOnce(fn) {\n    return function onceWrapper() {\n        if (fn === null) {\n            throw new Error('Callback was already called.');\n        }\n\n        var callFn = fn;\n\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\n/**\n * Async queue implementation,\n *\n * @param {function} worker - The worker function to call for each task.\n * @param {number} concurrency - How many workers to run in parrallel.\n * @return {*} The async queue object.\n */\nfunction asyncQueue(worker, concurrency) {\n    if (concurrency == null) { // eslint-disable-line no-eq-null,eqeqeq\n        concurrency = 1;\n    }\n    else if (concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    var workers = 0;\n    var q = {\n        _tasks: [],\n        concurrency: concurrency,\n        saturated: _noop,\n        unsaturated: _noop,\n        buffer: concurrency / 4,\n        empty: _noop,\n        drain: _noop,\n        error: _noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = _noop;\n            q._tasks = [];\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        process: function () {\n            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                var task = q._tasks.shift();\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n\n                workers += 1;\n\n                if (workers === q.concurrency) {\n                    q.saturated();\n                }\n\n                worker(task.data, onlyOnce(_next(task)));\n            }\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return workers;\n        },\n        idle: function () {\n            return q._tasks.length + workers === 0;\n        },\n        pause: function () {\n            if (q.paused === true) {\n                return;\n            }\n\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) {\n                return;\n            }\n\n            q.paused = false;\n\n            // Need to call q.process once per concurrent\n            // worker to preserve full concurrency after pause\n            for (var w = 1; w <= q.concurrency; w++) {\n                q.process();\n            }\n        }\n    };\n\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') { // eslint-disable-line no-eq-null,eqeqeq\n            throw new Error('task callback must be a function');\n        }\n\n        q.started = true;\n\n        if (data == null && q.idle()) { // eslint-disable-line no-eq-null,eqeqeq\n            // call drain immediately if there are no tasks\n            setTimeout(function () {\n                q.drain();\n            }, 1);\n\n            return;\n        }\n\n        var item = {\n            data: data,\n            callback: typeof callback === 'function' ? callback : _noop\n        };\n\n        if (insertAtFront) {\n            q._tasks.unshift(item);\n        }\n        else {\n            q._tasks.push(item);\n        }\n\n        setTimeout(function () {\n            q.process();\n        }, 1);\n    }\n\n    function _next(task) {\n        return function () {\n            workers -= 1;\n\n            task.callback.apply(task, arguments);\n\n            if (arguments[0] != null) { // eslint-disable-line no-eq-null,eqeqeq\n                q.error(arguments[0], task.data);\n            }\n\n            if (workers <= (q.concurrency - q.buffer)) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n\n            q.process();\n        };\n    }\n\n    return q;\n}\n\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n/***/ },\n/* 83 */,\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _pixels = __webpack_require__(85);\n\nvar _pixels2 = _interopRequireDefault(_pixels);\n\n__webpack_require__(175);\n\n__webpack_require__(174);\n\n__webpack_require__(87);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (false) {\n  module.hot.accept();\n}\n\n// Pixel Art\n\n\n// Syntax highlighting\n\n\n// Line numbers\n\n\n// Base theme\n\n\n(function () {\n  (0, _pixels2.default)();\n})();\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _lodash = __webpack_require__(166);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PIXI = __webpack_require__(145);\nPIXI.utils.skipHello(); // remove console log from PIXI.js\n// Cells\nvar cellSize = 8;\nvar cellSpacing = 8;\nvar cellColour = 0x323232;\nvar highlightColours = [0xF89600, 0xB7F900, 0xF6D200, 0x00E0E9];\nvar baseColour = 0x000000;\nvar container = document.getElementById('masthead');\nvar renderer = PIXI.autoDetectRenderer(container.offsetWidth, container.offsetHeight, { antialias: false, transparent: false, resolution: 1 });\nvar stage = new PIXI.Container();\n\nvar cells = [];\n\nvar setup = function setup() {\n  renderer.autoResize = true;\n  renderer.backgroundColor = baseColour;\n  container.appendChild(renderer.view);\n  renderer.render(stage);\n  createGrid();\n  window.addEventListener('resize', update);\n};\n\nfunction createGrid() {\n  var cols = Math.ceil(container.offsetWidth / (cellSize + cellSpacing));\n  var rows = Math.ceil(container.offsetHeight / (cellSize + cellSpacing));\n\n  for (var x = 0; x < cols; x++) {\n    cells[x] = [];\n    for (var y = 0; y < rows; y++) {\n      var randomiser = Math.ceil(Math.random() * 60);\n\n      var borderColour = randomiser === 60 ? highlightColours[Math.floor(Math.random() * highlightColours.length)] : cellColour;\n      addCell(x, y, borderColour);\n    }\n  }\n\n  renderer.render(stage);\n}\n\nfunction addCell(x, y, borderColour) {\n  var cell = new PIXI.Graphics();\n  // cell.beginFill(borderColour);\n  cell.lineStyle(1, borderColour);\n  cell.drawRect(0, 0, cellSize, cellSize);\n  cell.x = cellSpacing + cellSpacing * x + cellSize * x;\n  cell.y = cellSpacing + cellSpacing * y + cellSize * y;\n\n  cell.endFill();\n  cells[x][y] = cell;\n  stage.addChild(cell);\n}\n\nvar update = _lodash2.default.debounce(function () {\n  renderer.resize(container.offsetWidth, container.offsetHeight);\n  stage.removeChildren();\n  cells = [];\n  createGrid();\n}, 10);\n\nupdate();\n\nmodule.exports = setup;\n\n/***/ },\n/* 86 */,\n/* 87 */\n/***/ function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"brand\":\"index_brand__1p0TG\",\"logo\":\"index_logo__1x0LU\",\"browser-chrome\":\"index_browser-chrome__u5wNr\",\"screenshot\":\"index_screenshot__2Ap6T\",\"window-bar\":\"index_window-bar__2SOOS\",\"circles\":\"index_circles__f6mRL\",\"circle\":\"index_circle__1hF7I\",\"circle-red\":\"index_circle-red__22SGN\",\"circle-yellow\":\"index_circle-yellow__2EqGR\",\"circle-green\":\"index_circle-green__HrpKD\",\"btn-primary\":\"index_btn-primary__Zi6so\",\"btn-default\":\"index_btn-default__3u8MD\",\"btn-center\":\"index_btn-center__2fOJi\",\"btn-download\":\"index_btn-download__pL7r9\",\"os-title\":\"index_os-title__Oelf8\",\"os-icon\":\"index_os-icon__3GB34\",\"download-size\":\"index_download-size__IRf8p\",\"github\":\"index_github__8An62\",\"callout-titlebar\":\"index_callout-titlebar__3-AQ2\",\"callout\":\"index_callout__2LoxW\",\"content\":\"index_content__eeTrs\",\"callout-primary\":\"index_callout-primary__3LBwA\",\"code-well\":\"index_code-well__jrD5o\",\"hexagon-sm\":\"index_hexagon-sm__16UiG\",\"hexagon-md\":\"index_hexagon-md__3YGgw\",\"hexagon-lg\":\"index_hexagon-lg__je0Qf\",\"hexagon-inline\":\"index_hexagon-inline__p6s6N\",\"hexagon-left\":\"index_hexagon-left__1T9yY\",\"hexagon-right\":\"index_hexagon-right__5Z7dv\",\"windows-icon\":\"index_windows-icon__1PUfX\",\"apple-icon\":\"index_apple-icon__18_Ul\",\"linux-icon\":\"index_linux-icon__1Ekjt\",\"masthead\":\"index_masthead__3Rj11\",\"intro-wrapper\":\"index_intro-wrapper__3eHhm\",\"intro\":\"index_intro__2Z12l\",\"system-tray-menu-chrome\":\"index_system-tray-menu-chrome__11CyK\",\"osx-bar\":\"index_osx-bar__SZeEl\",\"system-tray-icon\":\"index_system-tray-icon__2x4Vw\",\"h1\":\"index_h1__1SLAe\",\"h2\":\"index_h2__2oHd5\",\"h3\":\"index_h3__3zIem\",\"h4\":\"index_h4__1f8cv\",\"h5\":\"index_h5__2-mH-\",\"h6\":\"index_h6__1sAd_\",\"lead\":\"index_lead__23C4T\",\"text-center\":\"index_text-center__2PvqE\",\"flex-wrapper\":\"index_flex-wrapper__wq-FX\",\"feature-container\":\"index_feature-container__1TUpR\",\"feature-icon-container\":\"index_feature-icon-container__1dU2K\",\"content-block\":\"index_content-block__3Secu\",\"feature-icon\":\"index_feature-icon__3g4g3\",\"feature-icon-blocks\":\"index_feature-icon-blocks__2saqg\",\"feature-icon-themeable\":\"index_feature-icon-themeable__c6s5f\",\"feature-icon-snippets\":\"index_feature-icon-snippets__3zGHG\",\"feature-icon-future\":\"index_feature-icon-future__1ayJm\",\"steps-container\":\"index_steps-container__3CMYb\",\"step\":\"index_step__1Ms0p\",\"step-last\":\"index_step-last__vcSwO\",\"hexagon-wrapper\":\"index_hexagon-wrapper__1U5b5\",\"section-preview\":\"index_section-preview__2HVn4\",\"animation\":\"index_animation__3G-SI\",\"system-tray-menu-chrome-wrapper\":\"index_system-tray-menu-chrome-wrapper__xuZXU\",\"system-tray-menu-wrapper\":\"index_system-tray-menu-wrapper__3qG7q\",\"system-tray-menu-shadow\":\"index_system-tray-menu-shadow__1FOml\"};\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _ismobilejs = __webpack_require__(19);\n\nvar _ismobilejs2 = _interopRequireDefault(_ismobilejs);\n\nvar _accessibleTarget = __webpack_require__(36);\n\nvar _accessibleTarget2 = _interopRequireDefault(_accessibleTarget);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// add some extra variables to the container..\nObject.assign(core.DisplayObject.prototype, _accessibleTarget2.default);\n\nvar KEY_CODE_TAB = 9;\n\nvar DIV_TOUCH_SIZE = 100;\nvar DIV_TOUCH_POS_X = 0;\nvar DIV_TOUCH_POS_Y = 0;\nvar DIV_TOUCH_ZINDEX = 2;\n\nvar DIV_HOOK_SIZE = 1;\nvar DIV_HOOK_POS_X = -1000;\nvar DIV_HOOK_POS_Y = -1000;\nvar DIV_HOOK_ZINDEX = 2;\n\n/**\n * The Accessibility manager reacreates the ability to tab and and have content read by screen\n * readers. This is very important as it can possibly help people with disabilities access pixi\n * content.\n *\n * Much like interaction any DisplayObject can be made accessible. This manager will map the\n * events as if the mouse was being used, minimizing the efferot required to implement.\n *\n * @class\n * @memberof PIXI\n */\n\nvar AccessibilityManager = function () {\n    /**\n     * @param {PIXI.CanvasRenderer|PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    function AccessibilityManager(renderer) {\n        _classCallCheck(this, AccessibilityManager);\n\n        if ((_ismobilejs2.default.tablet || _ismobilejs2.default.phone) && !navigator.isCocoonJS) {\n            this.createTouchHook();\n        }\n\n        // first we create a div that will sit over the pixi element. This is where the div overlays will go.\n        var div = document.createElement('div');\n\n        div.style.width = DIV_TOUCH_SIZE + 'px';\n        div.style.height = DIV_TOUCH_SIZE + 'px';\n        div.style.position = 'absolute';\n        div.style.top = DIV_TOUCH_POS_X + 'px';\n        div.style.left = DIV_TOUCH_POS_Y + 'px';\n        div.style.zIndex = DIV_TOUCH_ZINDEX;\n\n        /**\n         * This is the dom element that will sit over the pixi element. This is where the div overlays will go.\n         *\n         * @type {HTMLElement}\n         * @private\n         */\n        this.div = div;\n\n        /**\n         * A simple pool for storing divs.\n         *\n         * @type {*}\n         * @private\n         */\n        this.pool = [];\n\n        /**\n         * This is a tick used to check if an object is no longer being rendered.\n         *\n         * @type {Number}\n         * @private\n         */\n        this.renderId = 0;\n\n        /**\n         * Setting this to true will visually show the divs\n         *\n         * @type {boolean}\n         */\n        this.debug = false;\n\n        /**\n         * The renderer this accessibility manager works for.\n         *\n         * @member {PIXI.SystemRenderer}\n         */\n        this.renderer = renderer;\n\n        /**\n         * The array of currently active accessible items.\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this.children = [];\n\n        /**\n         * pre-bind the functions\n         *\n         * @private\n         */\n        this._onKeyDown = this._onKeyDown.bind(this);\n        this._onMouseMove = this._onMouseMove.bind(this);\n\n        /**\n         * stores the state of the manager. If there are no accessible objects or the mouse is moving the will be false.\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this.isActive = false;\n        this.isMobileAccessabillity = false;\n\n        // let listen for tab.. once pressed we can fire up and show the accessibility layer\n        window.addEventListener('keydown', this._onKeyDown, false);\n    }\n\n    /**\n     * Creates the touch hooks.\n     *\n     */\n\n\n    AccessibilityManager.prototype.createTouchHook = function createTouchHook() {\n        var _this = this;\n\n        var hookDiv = document.createElement('button');\n\n        hookDiv.style.width = DIV_HOOK_SIZE + 'px';\n        hookDiv.style.height = DIV_HOOK_SIZE + 'px';\n        hookDiv.style.position = 'absolute';\n        hookDiv.style.top = DIV_HOOK_POS_X + 'px';\n        hookDiv.style.left = DIV_HOOK_POS_Y + 'px';\n        hookDiv.style.zIndex = DIV_HOOK_ZINDEX;\n        hookDiv.style.backgroundColor = '#FF0000';\n        hookDiv.title = 'HOOK DIV';\n\n        hookDiv.addEventListener('focus', function () {\n            _this.isMobileAccessabillity = true;\n            _this.activate();\n            document.body.removeChild(hookDiv);\n        });\n\n        document.body.appendChild(hookDiv);\n    };\n\n    /**\n     * Activating will cause the Accessibility layer to be shown. This is called when a user\n     * preses the tab key\n     *\n     * @private\n     */\n\n\n    AccessibilityManager.prototype.activate = function activate() {\n        if (this.isActive) {\n            return;\n        }\n\n        this.isActive = true;\n\n        window.document.addEventListener('mousemove', this._onMouseMove, true);\n        window.removeEventListener('keydown', this._onKeyDown, false);\n\n        this.renderer.on('postrender', this.update, this);\n\n        if (this.renderer.view.parentNode) {\n            this.renderer.view.parentNode.appendChild(this.div);\n        }\n    };\n\n    /**\n     * Deactivating will cause the Accessibility layer to be hidden. This is called when a user moves\n     * the mouse\n     *\n     * @private\n     */\n\n\n    AccessibilityManager.prototype.deactivate = function deactivate() {\n        if (!this.isActive || this.isMobileAccessabillity) {\n            return;\n        }\n\n        this.isActive = false;\n\n        window.document.removeEventListener('mousemove', this._onMouseMove);\n        window.addEventListener('keydown', this._onKeyDown, false);\n\n        this.renderer.off('postrender', this.update);\n\n        if (this.div.parentNode) {\n            this.div.parentNode.removeChild(this.div);\n        }\n    };\n\n    /**\n     * This recursive function will run throught he scene graph and add any new accessible objects to the DOM layer.\n     *\n     * @private\n     * @param {PIXI.Container} displayObject - The DisplayObject to check.\n     */\n\n\n    AccessibilityManager.prototype.updateAccessibleObjects = function updateAccessibleObjects(displayObject) {\n        if (!displayObject.visible) {\n            return;\n        }\n\n        if (displayObject.accessible && displayObject.interactive) {\n            if (!displayObject._accessibleActive) {\n                this.addChild(displayObject);\n            }\n\n            displayObject.renderId = this.renderId;\n        }\n\n        var children = displayObject.children;\n\n        for (var i = children.length - 1; i >= 0; i--) {\n            this.updateAccessibleObjects(children[i]);\n        }\n    };\n\n    /**\n     * Before each render this function will ensure that all divs are mapped correctly to their DisplayObjects.\n     *\n     * @private\n     */\n\n\n    AccessibilityManager.prototype.update = function update() {\n        if (!this.renderer.renderingToScreen) {\n            return;\n        }\n\n        // update children...\n        this.updateAccessibleObjects(this.renderer._lastObjectRendered);\n\n        var rect = this.renderer.view.getBoundingClientRect();\n        var sx = rect.width / this.renderer.width;\n        var sy = rect.height / this.renderer.height;\n\n        var div = this.div;\n\n        div.style.left = rect.left + 'px';\n        div.style.top = rect.top + 'px';\n        div.style.width = this.renderer.width + 'px';\n        div.style.height = this.renderer.height + 'px';\n\n        for (var i = 0; i < this.children.length; i++) {\n            var child = this.children[i];\n\n            if (child.renderId !== this.renderId) {\n                child._accessibleActive = false;\n\n                core.utils.removeItems(this.children, i, 1);\n                this.div.removeChild(child._accessibleDiv);\n                this.pool.push(child._accessibleDiv);\n                child._accessibleDiv = null;\n\n                i--;\n\n                if (this.children.length === 0) {\n                    this.deactivate();\n                }\n            } else {\n                // map div to display..\n                div = child._accessibleDiv;\n                var hitArea = child.hitArea;\n                var wt = child.worldTransform;\n\n                if (child.hitArea) {\n                    div.style.left = (wt.tx + hitArea.x * wt.a) * sx + 'px';\n                    div.style.top = (wt.ty + hitArea.y * wt.d) * sy + 'px';\n\n                    div.style.width = hitArea.width * wt.a * sx + 'px';\n                    div.style.height = hitArea.height * wt.d * sy + 'px';\n                } else {\n                    hitArea = child.getBounds();\n\n                    this.capHitArea(hitArea);\n\n                    div.style.left = hitArea.x * sx + 'px';\n                    div.style.top = hitArea.y * sy + 'px';\n\n                    div.style.width = hitArea.width * sx + 'px';\n                    div.style.height = hitArea.height * sy + 'px';\n                }\n            }\n        }\n\n        // increment the render id..\n        this.renderId++;\n    };\n\n    /**\n     * TODO: docs.\n     *\n     * @param {Rectangle} hitArea - TODO docs\n     */\n\n\n    AccessibilityManager.prototype.capHitArea = function capHitArea(hitArea) {\n        if (hitArea.x < 0) {\n            hitArea.width += hitArea.x;\n            hitArea.x = 0;\n        }\n\n        if (hitArea.y < 0) {\n            hitArea.height += hitArea.y;\n            hitArea.y = 0;\n        }\n\n        if (hitArea.x + hitArea.width > this.renderer.width) {\n            hitArea.width = this.renderer.width - hitArea.x;\n        }\n\n        if (hitArea.y + hitArea.height > this.renderer.height) {\n            hitArea.height = this.renderer.height - hitArea.y;\n        }\n    };\n\n    /**\n     * Adds a DisplayObject to the accessibility manager\n     *\n     * @private\n     * @param {DisplayObject} displayObject - The child to make accessible.\n     */\n\n\n    AccessibilityManager.prototype.addChild = function addChild(displayObject) {\n        //    this.activate();\n\n        var div = this.pool.pop();\n\n        if (!div) {\n            div = document.createElement('button');\n\n            div.style.width = DIV_TOUCH_SIZE + 'px';\n            div.style.height = DIV_TOUCH_SIZE + 'px';\n            div.style.backgroundColor = this.debug ? 'rgba(255,0,0,0.5)' : 'transparent';\n            div.style.position = 'absolute';\n            div.style.zIndex = DIV_TOUCH_ZINDEX;\n            div.style.borderStyle = 'none';\n\n            div.addEventListener('click', this._onClick.bind(this));\n            div.addEventListener('focus', this._onFocus.bind(this));\n            div.addEventListener('focusout', this._onFocusOut.bind(this));\n        }\n\n        if (displayObject.accessibleTitle) {\n            div.title = displayObject.accessibleTitle;\n        } else if (!displayObject.accessibleTitle && !displayObject.accessibleHint) {\n            div.title = 'displayObject ' + this.tabIndex;\n        }\n\n        if (displayObject.accessibleHint) {\n            div.setAttribute('aria-label', displayObject.accessibleHint);\n        }\n\n        //\n\n        displayObject._accessibleActive = true;\n        displayObject._accessibleDiv = div;\n        div.displayObject = displayObject;\n\n        this.children.push(displayObject);\n        this.div.appendChild(displayObject._accessibleDiv);\n        displayObject._accessibleDiv.tabIndex = displayObject.tabIndex;\n    };\n\n    /**\n     * Maps the div button press to pixi's InteractionManager (click)\n     *\n     * @private\n     * @param {MouseEvent} e - The click event.\n     */\n\n\n    AccessibilityManager.prototype._onClick = function _onClick(e) {\n        var interactionManager = this.renderer.plugins.interaction;\n\n        interactionManager.dispatchEvent(e.target.displayObject, 'click', interactionManager.eventData);\n    };\n\n    /**\n     * Maps the div focus events to pixis InteractionManager (mouseover)\n     *\n     * @private\n     * @param {FocusEvent} e - The focus event.\n     */\n\n\n    AccessibilityManager.prototype._onFocus = function _onFocus(e) {\n        var interactionManager = this.renderer.plugins.interaction;\n\n        interactionManager.dispatchEvent(e.target.displayObject, 'mouseover', interactionManager.eventData);\n    };\n\n    /**\n     * Maps the div focus events to pixis InteractionManager (mouseout)\n     *\n     * @private\n     * @param {FocusEvent} e - The focusout event.\n     */\n\n\n    AccessibilityManager.prototype._onFocusOut = function _onFocusOut(e) {\n        var interactionManager = this.renderer.plugins.interaction;\n\n        interactionManager.dispatchEvent(e.target.displayObject, 'mouseout', interactionManager.eventData);\n    };\n\n    /**\n     * Is called when a key is pressed\n     *\n     * @private\n     * @param {KeyboardEvent} e - The keydown event.\n     */\n\n\n    AccessibilityManager.prototype._onKeyDown = function _onKeyDown(e) {\n        if (e.keyCode !== KEY_CODE_TAB) {\n            return;\n        }\n\n        this.activate();\n    };\n\n    /**\n     * Is called when the mouse moves across the renderer element\n     *\n     * @private\n     */\n\n\n    AccessibilityManager.prototype._onMouseMove = function _onMouseMove() {\n        this.deactivate();\n    };\n\n    /**\n     * Destroys the accessibility manager\n     *\n     */\n\n\n    AccessibilityManager.prototype.destroy = function destroy() {\n        this.div = null;\n\n        for (var i = 0; i < this.children.length; i++) {\n            this.children[i].div = null;\n        }\n\n        window.document.removeEventListener('mousemove', this._onMouseMove);\n        window.removeEventListener('keydown', this._onKeyDown);\n\n        this.pool = null;\n        this.children = null;\n        this.renderer = null;\n    };\n\n    return AccessibilityManager;\n}();\n\nexports.default = AccessibilityManager;\n\n\ncore.WebGLRenderer.registerPlugin('accessibility', AccessibilityManager);\ncore.CanvasRenderer.registerPlugin('accessibility', AccessibilityManager);\n//# sourceMappingURL=AccessibilityManager.js.map\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _accessibleTarget = __webpack_require__(36);\n\nObject.defineProperty(exports, 'accessibleTarget', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_accessibleTarget).default;\n  }\n});\n\nvar _AccessibilityManager = __webpack_require__(88);\n\nObject.defineProperty(exports, 'AccessibilityManager', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_AccessibilityManager).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Container2 = __webpack_require__(14);\n\nvar _Container3 = _interopRequireDefault(_Container2);\n\nvar _RenderTexture = __webpack_require__(29);\n\nvar _RenderTexture2 = _interopRequireDefault(_RenderTexture);\n\nvar _Texture = __webpack_require__(11);\n\nvar _Texture2 = _interopRequireDefault(_Texture);\n\nvar _GraphicsData = __webpack_require__(41);\n\nvar _GraphicsData2 = _interopRequireDefault(_GraphicsData);\n\nvar _Sprite = __webpack_require__(27);\n\nvar _Sprite2 = _interopRequireDefault(_Sprite);\n\nvar _math = __webpack_require__(3);\n\nvar _utils = __webpack_require__(2);\n\nvar _const = __webpack_require__(1);\n\nvar _Bounds = __webpack_require__(37);\n\nvar _Bounds2 = _interopRequireDefault(_Bounds);\n\nvar _bezierCurveTo2 = __webpack_require__(92);\n\nvar _bezierCurveTo3 = _interopRequireDefault(_bezierCurveTo2);\n\nvar _CanvasRenderer = __webpack_require__(16);\n\nvar _CanvasRenderer2 = _interopRequireDefault(_CanvasRenderer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar canvasRenderer = void 0;\nvar tempMatrix = new _math.Matrix();\nvar tempPoint = new _math.Point();\nvar tempColor1 = new Float32Array(4);\nvar tempColor2 = new Float32Array(4);\n\n/**\n * The Graphics class contains methods used to draw primitive shapes such as lines, circles and\n * rectangles to the display, and to color and fill them.\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\n\nvar Graphics = function (_Container) {\n    _inherits(Graphics, _Container);\n\n    /**\n     *\n     */\n    function Graphics() {\n        _classCallCheck(this, Graphics);\n\n        /**\n         * The alpha value used when filling the Graphics object.\n         *\n         * @member {number}\n         * @default 1\n         */\n        var _this = _possibleConstructorReturn(this, _Container.call(this));\n\n        _this.fillAlpha = 1;\n\n        /**\n         * The width (thickness) of any lines drawn.\n         *\n         * @member {number}\n         * @default 0\n         */\n        _this.lineWidth = 0;\n\n        /**\n         * The color of any lines drawn.\n         *\n         * @member {string}\n         * @default 0\n         */\n        _this.lineColor = 0;\n\n        /**\n         * Graphics data\n         *\n         * @member {PIXI.GraphicsData[]}\n         * @private\n         */\n        _this.graphicsData = [];\n\n        /**\n         * The tint applied to the graphic shape. This is a hex value. Apply a value of 0xFFFFFF to\n         * reset the tint.\n         *\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        _this.tint = 0xFFFFFF;\n\n        /**\n         * The previous tint applied to the graphic shape. Used to compare to the current tint and\n         * check if theres change.\n         *\n         * @member {number}\n         * @private\n         * @default 0xFFFFFF\n         */\n        _this._prevTint = 0xFFFFFF;\n\n        /**\n         * The blend mode to be applied to the graphic shape. Apply a value of\n         * `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL;\n         * @see PIXI.BLEND_MODES\n         */\n        _this.blendMode = _const.BLEND_MODES.NORMAL;\n\n        /**\n         * Current path\n         *\n         * @member {PIXI.GraphicsData}\n         * @private\n         */\n        _this.currentPath = null;\n\n        /**\n         * Array containing some WebGL-related properties used by the WebGL renderer.\n         *\n         * @member {object<number, object>}\n         * @private\n         */\n        // TODO - _webgl should use a prototype object, not a random undocumented object...\n        _this._webGL = {};\n\n        /**\n         * Whether this shape is being used as a mask.\n         *\n         * @member {boolean}\n         */\n        _this.isMask = false;\n\n        /**\n         * The bounds' padding used for bounds calculation.\n         *\n         * @member {number}\n         */\n        _this.boundsPadding = 0;\n\n        /**\n         * A cache of the local bounds to prevent recalculation.\n         *\n         * @member {PIXI.Rectangle}\n         * @private\n         */\n        _this._localBounds = new _Bounds2.default();\n\n        /**\n         * Used to detect if the graphics object has changed. If this is set to true then the graphics\n         * object will be recalculated.\n         *\n         * @member {boolean}\n         * @private\n         */\n        _this.dirty = 0;\n\n        /**\n         * Used to detect if we need to do a fast rect check using the id compare method\n         * @type {Number}\n         */\n        _this.fastRectDirty = -1;\n\n        /**\n         * Used to detect if we clear the graphics webGL data\n         * @type {Number}\n         */\n        _this.clearDirty = 0;\n\n        /**\n         * Used to detect if we we need to recalculate local bounds\n         * @type {Number}\n         */\n        _this.boundsDirty = -1;\n\n        /**\n         * Used to detect if the cached sprite object needs to be updated.\n         *\n         * @member {boolean}\n         * @private\n         */\n        _this.cachedSpriteDirty = false;\n\n        _this._spriteRect = null;\n        _this._fastRect = false;\n\n        /**\n         * When cacheAsBitmap is set to true the graphics object will be rendered as if it was a sprite.\n         * This is useful if your graphics element does not change often, as it will speed up the rendering\n         * of the object in exchange for taking up texture memory. It is also useful if you need the graphics\n         * object to be anti-aliased, because it will be rendered using canvas. This is not recommended if\n         * you are constantly redrawing the graphics element.\n         *\n         * @name cacheAsBitmap\n         * @member {boolean}\n         * @memberof PIXI.Graphics#\n         * @default false\n         */\n        return _this;\n    }\n\n    /**\n     * Creates a new Graphics object with the same values as this one.\n     * Note that the only the properties of the object are cloned, not its transform (position,scale,etc)\n     *\n     * @return {PIXI.Graphics} A clone of the graphics object\n     */\n\n\n    Graphics.prototype.clone = function clone() {\n        var clone = new Graphics();\n\n        clone.renderable = this.renderable;\n        clone.fillAlpha = this.fillAlpha;\n        clone.lineWidth = this.lineWidth;\n        clone.lineColor = this.lineColor;\n        clone.tint = this.tint;\n        clone.blendMode = this.blendMode;\n        clone.isMask = this.isMask;\n        clone.boundsPadding = this.boundsPadding;\n        clone.dirty = 0;\n        clone.cachedSpriteDirty = this.cachedSpriteDirty;\n\n        // copy graphics data\n        for (var i = 0; i < this.graphicsData.length; ++i) {\n            clone.graphicsData.push(this.graphicsData[i].clone());\n        }\n\n        clone.currentPath = clone.graphicsData[clone.graphicsData.length - 1];\n\n        clone.updateLocalBounds();\n\n        return clone;\n    };\n\n    /**\n     * Specifies the line style used for subsequent calls to Graphics methods such as the lineTo()\n     * method or the drawCircle() method.\n     *\n     * @param {number} [lineWidth=0] - width of the line to draw, will update the objects stored style\n     * @param {number} [color=0] - color of the line to draw, will update the objects stored style\n     * @param {number} [alpha=1] - alpha of the line to draw, will update the objects stored style\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.lineStyle = function lineStyle() {\n        var lineWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var alpha = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n        this.lineWidth = lineWidth;\n        this.lineColor = color;\n        this.lineAlpha = alpha;\n\n        if (this.currentPath) {\n            if (this.currentPath.shape.points.length) {\n                // halfway through a line? start a new one!\n                var shape = new _math.Polygon(this.currentPath.shape.points.slice(-2));\n\n                shape.closed = false;\n\n                this.drawShape(shape);\n            } else {\n                // otherwise its empty so lets just set the line properties\n                this.currentPath.lineWidth = this.lineWidth;\n                this.currentPath.lineColor = this.lineColor;\n                this.currentPath.lineAlpha = this.lineAlpha;\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Moves the current drawing position to x, y.\n     *\n     * @param {number} x - the X coordinate to move to\n     * @param {number} y - the Y coordinate to move to\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.moveTo = function moveTo(x, y) {\n        var shape = new _math.Polygon([x, y]);\n\n        shape.closed = false;\n        this.drawShape(shape);\n\n        return this;\n    };\n\n    /**\n     * Draws a line using the current line style from the current drawing position to (x, y);\n     * The current drawing position is then set to (x, y).\n     *\n     * @param {number} x - the X coordinate to draw to\n     * @param {number} y - the Y coordinate to draw to\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.lineTo = function lineTo(x, y) {\n        this.currentPath.shape.points.push(x, y);\n        this.dirty++;\n\n        return this;\n    };\n\n    /**\n     * Calculate the points for a quadratic bezier curve and then draws it.\n     * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.quadraticCurveTo = function quadraticCurveTo(cpX, cpY, toX, toY) {\n        if (this.currentPath) {\n            if (this.currentPath.shape.points.length === 0) {\n                this.currentPath.shape.points = [0, 0];\n            }\n        } else {\n            this.moveTo(0, 0);\n        }\n\n        var n = 20;\n        var points = this.currentPath.shape.points;\n        var xa = 0;\n        var ya = 0;\n\n        if (points.length === 0) {\n            this.moveTo(0, 0);\n        }\n\n        var fromX = points[points.length - 2];\n        var fromY = points[points.length - 1];\n\n        for (var i = 1; i <= n; ++i) {\n            var j = i / n;\n\n            xa = fromX + (cpX - fromX) * j;\n            ya = fromY + (cpY - fromY) * j;\n\n            points.push(xa + (cpX + (toX - cpX) * j - xa) * j, ya + (cpY + (toY - cpY) * j - ya) * j);\n        }\n\n        this.dirty++;\n\n        return this;\n    };\n\n    /**\n     * Calculate the points for a bezier curve and then draws it.\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} cpX2 - Second Control point x\n     * @param {number} cpY2 - Second Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.bezierCurveTo = function bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\n        if (this.currentPath) {\n            if (this.currentPath.shape.points.length === 0) {\n                this.currentPath.shape.points = [0, 0];\n            }\n        } else {\n            this.moveTo(0, 0);\n        }\n\n        var points = this.currentPath.shape.points;\n\n        var fromX = points[points.length - 2];\n        var fromY = points[points.length - 1];\n\n        points.length -= 2;\n\n        (0, _bezierCurveTo3.default)(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY, points);\n\n        this.dirty++;\n\n        return this;\n    };\n\n    /**\n     * The arcTo() method creates an arc/curve between two tangents on the canvas.\n     *\n     * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n     *\n     * @param {number} x1 - The x-coordinate of the beginning of the arc\n     * @param {number} y1 - The y-coordinate of the beginning of the arc\n     * @param {number} x2 - The x-coordinate of the end of the arc\n     * @param {number} y2 - The y-coordinate of the end of the arc\n     * @param {number} radius - The radius of the arc\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.arcTo = function arcTo(x1, y1, x2, y2, radius) {\n        if (this.currentPath) {\n            if (this.currentPath.shape.points.length === 0) {\n                this.currentPath.shape.points.push(x1, y1);\n            }\n        } else {\n            this.moveTo(x1, y1);\n        }\n\n        var points = this.currentPath.shape.points;\n        var fromX = points[points.length - 2];\n        var fromY = points[points.length - 1];\n        var a1 = fromY - y1;\n        var b1 = fromX - x1;\n        var a2 = y2 - y1;\n        var b2 = x2 - x1;\n        var mm = Math.abs(a1 * b2 - b1 * a2);\n\n        if (mm < 1.0e-8 || radius === 0) {\n            if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1) {\n                points.push(x1, y1);\n            }\n        } else {\n            var dd = a1 * a1 + b1 * b1;\n            var cc = a2 * a2 + b2 * b2;\n            var tt = a1 * a2 + b1 * b2;\n            var k1 = radius * Math.sqrt(dd) / mm;\n            var k2 = radius * Math.sqrt(cc) / mm;\n            var j1 = k1 * tt / dd;\n            var j2 = k2 * tt / cc;\n            var cx = k1 * b2 + k2 * b1;\n            var cy = k1 * a2 + k2 * a1;\n            var px = b1 * (k2 + j1);\n            var py = a1 * (k2 + j1);\n            var qx = b2 * (k1 + j2);\n            var qy = a2 * (k1 + j2);\n            var startAngle = Math.atan2(py - cy, px - cx);\n            var endAngle = Math.atan2(qy - cy, qx - cx);\n\n            this.arc(cx + x1, cy + y1, radius, startAngle, endAngle, b1 * a2 > b2 * a1);\n        }\n\n        this.dirty++;\n\n        return this;\n    };\n\n    /**\n     * The arc method creates an arc/curve (used to create circles, or parts of circles).\n     *\n     * @param {number} cx - The x-coordinate of the center of the circle\n     * @param {number} cy - The y-coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @param {number} startAngle - The starting angle, in radians (0 is at the 3 o'clock position\n     *  of the arc's circle)\n     * @param {number} endAngle - The ending angle, in radians\n     * @param {boolean} [anticlockwise=false] - Specifies whether the drawing should be\n     *  counter-clockwise or clockwise. False is default, and indicates clockwise, while true\n     *  indicates counter-clockwise.\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.arc = function arc(cx, cy, radius, startAngle, endAngle) {\n        var anticlockwise = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n        if (startAngle === endAngle) {\n            return this;\n        }\n\n        if (!anticlockwise && endAngle <= startAngle) {\n            endAngle += Math.PI * 2;\n        } else if (anticlockwise && startAngle <= endAngle) {\n            startAngle += Math.PI * 2;\n        }\n\n        var sweep = endAngle - startAngle;\n        var segs = Math.ceil(Math.abs(sweep) / (Math.PI * 2)) * 40;\n\n        if (sweep === 0) {\n            return this;\n        }\n\n        var startX = cx + Math.cos(startAngle) * radius;\n        var startY = cy + Math.sin(startAngle) * radius;\n\n        var points = this.currentPath.shape.points;\n\n        if (this.currentPath) {\n            if (points[points.length - 2] !== startX || points[points.length - 1] !== startY) {\n                points.push(startX, startY);\n            }\n        } else {\n            this.moveTo(startX, startY);\n        }\n\n        var theta = sweep / (segs * 2);\n        var theta2 = theta * 2;\n\n        var cTheta = Math.cos(theta);\n        var sTheta = Math.sin(theta);\n\n        var segMinus = segs - 1;\n\n        var remainder = segMinus % 1 / segMinus;\n\n        for (var i = 0; i <= segMinus; ++i) {\n            var real = i + remainder * i;\n\n            var angle = theta + startAngle + theta2 * real;\n\n            var c = Math.cos(angle);\n            var s = -Math.sin(angle);\n\n            points.push((cTheta * c + sTheta * s) * radius + cx, (cTheta * -s + sTheta * c) * radius + cy);\n        }\n\n        this.dirty++;\n\n        return this;\n    };\n\n    /**\n     * Specifies a simple one-color fill that subsequent calls to other Graphics methods\n     * (such as lineTo() or drawCircle()) use when drawing.\n     *\n     * @param {number} [color=0] - the color of the fill\n     * @param {number} [alpha=1] - the alpha of the fill\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.beginFill = function beginFill() {\n        var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        this.filling = true;\n        this.fillColor = color;\n        this.fillAlpha = alpha;\n\n        if (this.currentPath) {\n            if (this.currentPath.shape.points.length <= 2) {\n                this.currentPath.fill = this.filling;\n                this.currentPath.fillColor = this.fillColor;\n                this.currentPath.fillAlpha = this.fillAlpha;\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.\n     *\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.endFill = function endFill() {\n        this.filling = false;\n        this.fillColor = null;\n        this.fillAlpha = 1;\n\n        return this;\n    };\n\n    /**\n     *\n     * @param {number} x - The X coord of the top-left of the rectangle\n     * @param {number} y - The Y coord of the top-left of the rectangle\n     * @param {number} width - The width of the rectangle\n     * @param {number} height - The height of the rectangle\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.drawRect = function drawRect(x, y, width, height) {\n        this.drawShape(new _math.Rectangle(x, y, width, height));\n\n        return this;\n    };\n\n    /**\n     *\n     * @param {number} x - The X coord of the top-left of the rectangle\n     * @param {number} y - The Y coord of the top-left of the rectangle\n     * @param {number} width - The width of the rectangle\n     * @param {number} height - The height of the rectangle\n     * @param {number} radius - Radius of the rectangle corners\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.drawRoundedRect = function drawRoundedRect(x, y, width, height, radius) {\n        this.drawShape(new _math.RoundedRectangle(x, y, width, height, radius));\n\n        return this;\n    };\n\n    /**\n     * Draws a circle.\n     *\n     * @param {number} x - The X coordinate of the center of the circle\n     * @param {number} y - The Y coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.drawCircle = function drawCircle(x, y, radius) {\n        this.drawShape(new _math.Circle(x, y, radius));\n\n        return this;\n    };\n\n    /**\n     * Draws an ellipse.\n     *\n     * @param {number} x - The X coordinate of the center of the ellipse\n     * @param {number} y - The Y coordinate of the center of the ellipse\n     * @param {number} width - The half width of the ellipse\n     * @param {number} height - The half height of the ellipse\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.drawEllipse = function drawEllipse(x, y, width, height) {\n        this.drawShape(new _math.Ellipse(x, y, width, height));\n\n        return this;\n    };\n\n    /**\n     * Draws a polygon using the given path.\n     *\n     * @param {number[]|PIXI.Point[]} path - The path data used to construct the polygon.\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.drawPolygon = function drawPolygon(path) {\n        // prevents an argument assignment deopt\n        // see section 3.1: https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments\n        var points = path;\n\n        var closed = true;\n\n        if (points instanceof _math.Polygon) {\n            closed = points.closed;\n            points = points.points;\n        }\n\n        if (!Array.isArray(points)) {\n            // prevents an argument leak deopt\n            // see section 3.2: https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments\n            points = new Array(arguments.length);\n\n            for (var i = 0; i < points.length; ++i) {\n                points[i] = arguments[i]; // eslint-disable-line prefer-rest-params\n            }\n        }\n\n        var shape = new _math.Polygon(points);\n\n        shape.closed = closed;\n\n        this.drawShape(shape);\n\n        return this;\n    };\n\n    /**\n     * Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.\n     *\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.clear = function clear() {\n        if (this.lineWidth || this.filling || this.graphicsData.length > 0) {\n            this.lineWidth = 0;\n            this.filling = false;\n\n            this.dirty++;\n            this.clearDirty++;\n            this.graphicsData.length = 0;\n        }\n\n        return this;\n    };\n\n    /**\n     * True if graphics consists of one rectangle, and thus, can be drawn like a Sprite and\n     * masked with gl.scissor.\n     *\n     * @returns {boolean} True if only 1 rect.\n     */\n\n\n    Graphics.prototype.isFastRect = function isFastRect() {\n        return this.graphicsData.length === 1 && this.graphicsData[0].shape.type === _const.SHAPES.RECT && !this.graphicsData[0].lineWidth;\n    };\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    Graphics.prototype._renderWebGL = function _renderWebGL(renderer) {\n        // if the sprite is not visible or the alpha is 0 then no need to render this element\n        if (this.dirty !== this.fastRectDirty) {\n            this.fastRectDirty = this.dirty;\n            this._fastRect = this.isFastRect();\n        }\n\n        // TODO this check can be moved to dirty?\n        if (this._fastRect) {\n            this._renderSpriteRect(renderer);\n        } else {\n            renderer.setObjectRenderer(renderer.plugins.graphics);\n            renderer.plugins.graphics.render(this);\n        }\n    };\n\n    /**\n     * Renders a sprite rectangle.\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    Graphics.prototype._renderSpriteRect = function _renderSpriteRect(renderer) {\n        var rect = this.graphicsData[0].shape;\n\n        if (!this._spriteRect) {\n            if (!Graphics._SPRITE_TEXTURE) {\n                Graphics._SPRITE_TEXTURE = _RenderTexture2.default.create(10, 10);\n\n                var canvas = document.createElement('canvas');\n\n                canvas.width = 10;\n                canvas.height = 10;\n\n                var context = canvas.getContext('2d');\n\n                context.fillStyle = 'white';\n                context.fillRect(0, 0, 10, 10);\n\n                Graphics._SPRITE_TEXTURE = _Texture2.default.fromCanvas(canvas);\n            }\n\n            this._spriteRect = new _Sprite2.default(Graphics._SPRITE_TEXTURE);\n        }\n        if (this.tint === 0xffffff) {\n            this._spriteRect.tint = this.graphicsData[0].fillColor;\n        } else {\n            var t1 = tempColor1;\n            var t2 = tempColor2;\n\n            (0, _utils.hex2rgb)(this.graphicsData[0].fillColor, t1);\n            (0, _utils.hex2rgb)(this.tint, t2);\n\n            t1[0] *= t2[0];\n            t1[1] *= t2[1];\n            t1[2] *= t2[2];\n\n            this._spriteRect.tint = (0, _utils.rgb2hex)(t1);\n        }\n        this._spriteRect.alpha = this.graphicsData[0].fillAlpha;\n        this._spriteRect.worldAlpha = this.worldAlpha * this._spriteRect.alpha;\n\n        Graphics._SPRITE_TEXTURE._frame.width = rect.width;\n        Graphics._SPRITE_TEXTURE._frame.height = rect.height;\n\n        this._spriteRect.transform.worldTransform = this.transform.worldTransform;\n\n        this._spriteRect.anchor.set(-rect.x / rect.width, -rect.y / rect.height);\n        this._spriteRect._onAnchorUpdate();\n\n        this._spriteRect._renderWebGL(renderer);\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n\n\n    Graphics.prototype._renderCanvas = function _renderCanvas(renderer) {\n        if (this.isMask === true) {\n            return;\n        }\n\n        renderer.plugins.graphics.render(this);\n    };\n\n    /**\n     * Retrieves the bounds of the graphic shape as a rectangle object\n     *\n     * @private\n     */\n\n\n    Graphics.prototype._calculateBounds = function _calculateBounds() {\n        if (this.boundsDirty !== this.dirty) {\n            this.boundsDirty = this.dirty;\n            this.updateLocalBounds();\n\n            this.dirty++;\n            this.cachedSpriteDirty = true;\n        }\n\n        var lb = this._localBounds;\n\n        this._bounds.addFrame(this.transform, lb.minX, lb.minY, lb.maxX, lb.maxY);\n    };\n\n    /**\n     * Tests if a point is inside this graphics object\n     *\n     * @param {PIXI.Point} point - the point to test\n     * @return {boolean} the result of the test\n     */\n\n\n    Graphics.prototype.containsPoint = function containsPoint(point) {\n        this.worldTransform.applyInverse(point, tempPoint);\n\n        var graphicsData = this.graphicsData;\n\n        for (var i = 0; i < graphicsData.length; ++i) {\n            var data = graphicsData[i];\n\n            if (!data.fill) {\n                continue;\n            }\n\n            // only deal with fills..\n            if (data.shape) {\n                if (data.shape.contains(tempPoint.x, tempPoint.y)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * Update the bounds of the object\n     *\n     */\n\n\n    Graphics.prototype.updateLocalBounds = function updateLocalBounds() {\n        var minX = Infinity;\n        var maxX = -Infinity;\n\n        var minY = Infinity;\n        var maxY = -Infinity;\n\n        if (this.graphicsData.length) {\n            var shape = 0;\n            var x = 0;\n            var y = 0;\n            var w = 0;\n            var h = 0;\n\n            for (var i = 0; i < this.graphicsData.length; i++) {\n                var data = this.graphicsData[i];\n                var type = data.type;\n                var lineWidth = data.lineWidth;\n\n                shape = data.shape;\n\n                if (type === _const.SHAPES.RECT || type === _const.SHAPES.RREC) {\n                    x = shape.x - lineWidth / 2;\n                    y = shape.y - lineWidth / 2;\n                    w = shape.width + lineWidth;\n                    h = shape.height + lineWidth;\n\n                    minX = x < minX ? x : minX;\n                    maxX = x + w > maxX ? x + w : maxX;\n\n                    minY = y < minY ? y : minY;\n                    maxY = y + h > maxY ? y + h : maxY;\n                } else if (type === _const.SHAPES.CIRC) {\n                    x = shape.x;\n                    y = shape.y;\n                    w = shape.radius + lineWidth / 2;\n                    h = shape.radius + lineWidth / 2;\n\n                    minX = x - w < minX ? x - w : minX;\n                    maxX = x + w > maxX ? x + w : maxX;\n\n                    minY = y - h < minY ? y - h : minY;\n                    maxY = y + h > maxY ? y + h : maxY;\n                } else if (type === _const.SHAPES.ELIP) {\n                    x = shape.x;\n                    y = shape.y;\n                    w = shape.width + lineWidth / 2;\n                    h = shape.height + lineWidth / 2;\n\n                    minX = x - w < minX ? x - w : minX;\n                    maxX = x + w > maxX ? x + w : maxX;\n\n                    minY = y - h < minY ? y - h : minY;\n                    maxY = y + h > maxY ? y + h : maxY;\n                } else {\n                    // POLY\n                    var points = shape.points;\n                    var x2 = 0;\n                    var y2 = 0;\n                    var dx = 0;\n                    var dy = 0;\n                    var rw = 0;\n                    var rh = 0;\n                    var cx = 0;\n                    var cy = 0;\n\n                    for (var j = 0; j + 2 < points.length; j += 2) {\n                        x = points[j];\n                        y = points[j + 1];\n                        x2 = points[j + 2];\n                        y2 = points[j + 3];\n                        dx = Math.abs(x2 - x);\n                        dy = Math.abs(y2 - y);\n                        h = lineWidth;\n                        w = Math.sqrt(dx * dx + dy * dy);\n\n                        if (w < 1e-9) {\n                            continue;\n                        }\n\n                        rw = (h / w * dy + dx) / 2;\n                        rh = (h / w * dx + dy) / 2;\n                        cx = (x2 + x) / 2;\n                        cy = (y2 + y) / 2;\n\n                        minX = cx - rw < minX ? cx - rw : minX;\n                        maxX = cx + rw > maxX ? cx + rw : maxX;\n\n                        minY = cy - rh < minY ? cy - rh : minY;\n                        maxY = cy + rh > maxY ? cy + rh : maxY;\n                    }\n                }\n            }\n        } else {\n            minX = 0;\n            maxX = 0;\n            minY = 0;\n            maxY = 0;\n        }\n\n        var padding = this.boundsPadding;\n\n        this._localBounds.minX = minX - padding;\n        this._localBounds.maxX = maxX + padding * 2;\n\n        this._localBounds.minY = minY - padding;\n        this._localBounds.maxY = maxY + padding * 2;\n    };\n\n    /**\n     * Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.\n     *\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - The shape object to draw.\n     * @return {PIXI.GraphicsData} The generated GraphicsData object.\n     */\n\n\n    Graphics.prototype.drawShape = function drawShape(shape) {\n        if (this.currentPath) {\n            // check current path!\n            if (this.currentPath.shape.points.length <= 2) {\n                this.graphicsData.pop();\n            }\n        }\n\n        this.currentPath = null;\n\n        var data = new _GraphicsData2.default(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.filling, shape);\n\n        this.graphicsData.push(data);\n\n        if (data.type === _const.SHAPES.POLY) {\n            data.shape.closed = data.shape.closed || this.filling;\n            this.currentPath = data;\n        }\n\n        this.dirty++;\n\n        return data;\n    };\n\n    /**\n     * Generates a canvas texture.\n     *\n     * @param {number} scaleMode - The scale mode of the texture.\n     * @param {number} resolution - The resolution of the texture.\n     * @return {PIXI.Texture} The new texture.\n     */\n\n\n    Graphics.prototype.generateCanvasTexture = function generateCanvasTexture(scaleMode) {\n        var resolution = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        var bounds = this.getLocalBounds();\n\n        var canvasBuffer = _RenderTexture2.default.create(bounds.width, bounds.height, scaleMode, resolution);\n\n        if (!canvasRenderer) {\n            canvasRenderer = new _CanvasRenderer2.default();\n        }\n\n        tempMatrix.tx = -bounds.x;\n        tempMatrix.ty = -bounds.y;\n\n        canvasRenderer.render(this, canvasBuffer, false, tempMatrix);\n\n        var texture = _Texture2.default.fromCanvas(canvasBuffer.baseTexture._canvasRenderTarget.canvas, scaleMode);\n\n        texture.baseTexture.resolution = resolution;\n        texture.baseTexture.update();\n\n        return texture;\n    };\n\n    /**\n     * Closes the current path.\n     *\n     * @return {PIXI.Graphics} Returns itself.\n     */\n\n\n    Graphics.prototype.closePath = function closePath() {\n        // ok so close path assumes next one is a hole!\n        var currentPath = this.currentPath;\n\n        if (currentPath && currentPath.shape) {\n            currentPath.shape.close();\n        }\n\n        return this;\n    };\n\n    /**\n     * Adds a hole in the current path.\n     *\n     * @return {PIXI.Graphics} Returns itself.\n     */\n\n\n    Graphics.prototype.addHole = function addHole() {\n        // this is a hole!\n        var hole = this.graphicsData.pop();\n\n        this.currentPath = this.graphicsData[this.graphicsData.length - 1];\n\n        this.currentPath.addHole(hole.shape);\n        this.currentPath = null;\n\n        return this;\n    };\n\n    /**\n     * Destroys the Graphics object.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all\n     *  options have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have\n     *  their destroy method called as well. 'options' will be passed on to those calls.\n     */\n\n\n    Graphics.prototype.destroy = function destroy(options) {\n        _Container.prototype.destroy.call(this, options);\n\n        // destroy each of the GraphicsData objects\n        for (var i = 0; i < this.graphicsData.length; ++i) {\n            this.graphicsData[i].destroy();\n        }\n\n        // for each webgl data entry, destroy the WebGLGraphicsData\n        for (var id in this._webgl) {\n            for (var j = 0; j < this._webgl[id].data.length; ++j) {\n                this._webgl[id].data[j].destroy();\n            }\n        }\n\n        if (this._spriteRect) {\n            this._spriteRect.destroy();\n        }\n\n        this.graphicsData = null;\n\n        this.currentPath = null;\n        this._webgl = null;\n        this._localBounds = null;\n    };\n\n    return Graphics;\n}(_Container3.default);\n\nexports.default = Graphics;\n\n\nGraphics._SPRITE_TEXTURE = null;\n//# sourceMappingURL=Graphics.js.map\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _CanvasRenderer = __webpack_require__(16);\n\nvar _CanvasRenderer2 = _interopRequireDefault(_CanvasRenderer);\n\nvar _const = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they\n * now share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's CanvasGraphicsRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/CanvasGraphicsRenderer.java\n */\n\n/**\n * Renderer dedicated to drawing and batching graphics objects.\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar CanvasGraphicsRenderer = function () {\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The current PIXI renderer.\n     */\n    function CanvasGraphicsRenderer(renderer) {\n        _classCallCheck(this, CanvasGraphicsRenderer);\n\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders a Graphics object to a canvas.\n     *\n     * @param {PIXI.Graphics} graphics - the actual graphics object to render\n     */\n\n\n    CanvasGraphicsRenderer.prototype.render = function render(graphics) {\n        var renderer = this.renderer;\n        var context = renderer.context;\n        var worldAlpha = graphics.worldAlpha;\n        var transform = graphics.transform.worldTransform;\n        var resolution = renderer.resolution;\n\n        // if the tint has changed, set the graphics object to dirty.\n        if (this._prevTint !== this.tint) {\n            this.dirty = true;\n        }\n\n        context.setTransform(transform.a * resolution, transform.b * resolution, transform.c * resolution, transform.d * resolution, transform.tx * resolution, transform.ty * resolution);\n\n        if (graphics.dirty) {\n            this.updateGraphicsTint(graphics);\n            graphics.dirty = false;\n        }\n\n        renderer.setBlendMode(graphics.blendMode);\n\n        for (var i = 0; i < graphics.graphicsData.length; i++) {\n            var data = graphics.graphicsData[i];\n            var shape = data.shape;\n\n            var fillColor = data._fillTint;\n            var lineColor = data._lineTint;\n\n            context.lineWidth = data.lineWidth;\n\n            if (data.type === _const.SHAPES.POLY) {\n                context.beginPath();\n\n                this.renderPolygon(shape.points, shape.closed, context);\n\n                for (var j = 0; j < data.holes.length; j++) {\n                    this.renderPolygon(data.holes[j].points, true, context);\n                }\n\n                if (data.fill) {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = '#' + ('00000' + (fillColor | 0).toString(16)).substr(-6);\n                    context.fill();\n                }\n                if (data.lineWidth) {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = '#' + ('00000' + (lineColor | 0).toString(16)).substr(-6);\n                    context.stroke();\n                }\n            } else if (data.type === _const.SHAPES.RECT) {\n                if (data.fillColor || data.fillColor === 0) {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = '#' + ('00000' + (fillColor | 0).toString(16)).substr(-6);\n                    context.fillRect(shape.x, shape.y, shape.width, shape.height);\n                }\n                if (data.lineWidth) {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = '#' + ('00000' + (lineColor | 0).toString(16)).substr(-6);\n                    context.strokeRect(shape.x, shape.y, shape.width, shape.height);\n                }\n            } else if (data.type === _const.SHAPES.CIRC) {\n                // TODO - need to be Undefined!\n                context.beginPath();\n                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n                context.closePath();\n\n                if (data.fill) {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = '#' + ('00000' + (fillColor | 0).toString(16)).substr(-6);\n                    context.fill();\n                }\n                if (data.lineWidth) {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = '#' + ('00000' + (lineColor | 0).toString(16)).substr(-6);\n                    context.stroke();\n                }\n            } else if (data.type === _const.SHAPES.ELIP) {\n                // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n                var w = shape.width * 2;\n                var h = shape.height * 2;\n\n                var x = shape.x - w / 2;\n                var y = shape.y - h / 2;\n\n                context.beginPath();\n\n                var kappa = 0.5522848;\n                var ox = w / 2 * kappa; // control point offset horizontal\n                var oy = h / 2 * kappa; // control point offset vertical\n                var xe = x + w; // x-end\n                var ye = y + h; // y-end\n                var xm = x + w / 2; // x-middle\n                var ym = y + h / 2; // y-middle\n\n                context.moveTo(x, ym);\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n                context.closePath();\n\n                if (data.fill) {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = '#' + ('00000' + (fillColor | 0).toString(16)).substr(-6);\n                    context.fill();\n                }\n                if (data.lineWidth) {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = '#' + ('00000' + (lineColor | 0).toString(16)).substr(-6);\n                    context.stroke();\n                }\n            } else if (data.type === _const.SHAPES.RREC) {\n                var rx = shape.x;\n                var ry = shape.y;\n                var width = shape.width;\n                var height = shape.height;\n                var radius = shape.radius;\n\n                var maxRadius = Math.min(width, height) / 2 | 0;\n\n                radius = radius > maxRadius ? maxRadius : radius;\n\n                context.beginPath();\n                context.moveTo(rx, ry + radius);\n                context.lineTo(rx, ry + height - radius);\n                context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n                context.lineTo(rx + width - radius, ry + height);\n                context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n                context.lineTo(rx + width, ry + radius);\n                context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n                context.lineTo(rx + radius, ry);\n                context.quadraticCurveTo(rx, ry, rx, ry + radius);\n                context.closePath();\n\n                if (data.fillColor || data.fillColor === 0) {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = '#' + ('00000' + (fillColor | 0).toString(16)).substr(-6);\n                    context.fill();\n                }\n\n                if (data.lineWidth) {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = '#' + ('00000' + (lineColor | 0).toString(16)).substr(-6);\n                    context.stroke();\n                }\n            }\n        }\n    };\n\n    /**\n     * Updates the tint of a graphics object\n     *\n     * @private\n     * @param {PIXI.Graphics} graphics - the graphics that will have its tint updated\n     */\n\n\n    CanvasGraphicsRenderer.prototype.updateGraphicsTint = function updateGraphicsTint(graphics) {\n        graphics._prevTint = graphics.tint;\n\n        var tintR = (graphics.tint >> 16 & 0xFF) / 255;\n        var tintG = (graphics.tint >> 8 & 0xFF) / 255;\n        var tintB = (graphics.tint & 0xFF) / 255;\n\n        for (var i = 0; i < graphics.graphicsData.length; ++i) {\n            var data = graphics.graphicsData[i];\n\n            var fillColor = data.fillColor | 0;\n            var lineColor = data.lineColor | 0;\n\n            // super inline cos im an optimization NAZI :)\n            data._fillTint = ((fillColor >> 16 & 0xFF) / 255 * tintR * 255 << 16) + ((fillColor >> 8 & 0xFF) / 255 * tintG * 255 << 8) + (fillColor & 0xFF) / 255 * tintB * 255;\n\n            data._lineTint = ((lineColor >> 16 & 0xFF) / 255 * tintR * 255 << 16) + ((lineColor >> 8 & 0xFF) / 255 * tintG * 255 << 8) + (lineColor & 0xFF) / 255 * tintB * 255;\n        }\n    };\n\n    /**\n     * Renders a polygon.\n     *\n     * @param {PIXI.Point[]} points - The points to render\n     * @param {boolean} close - Should the polygon be closed\n     * @param {CanvasRenderingContext2D} context - The rendering context to use\n     */\n\n\n    CanvasGraphicsRenderer.prototype.renderPolygon = function renderPolygon(points, close, context) {\n        context.moveTo(points[0], points[1]);\n\n        for (var j = 1; j < points.length / 2; ++j) {\n            context.lineTo(points[j * 2], points[j * 2 + 1]);\n        }\n\n        if (close) {\n            context.closePath();\n        }\n    };\n\n    /**\n     * destroy graphics object\n     *\n     */\n\n\n    CanvasGraphicsRenderer.prototype.destroy = function destroy() {\n        this.renderer = null;\n    };\n\n    return CanvasGraphicsRenderer;\n}();\n\nexports.default = CanvasGraphicsRenderer;\n\n\n_CanvasRenderer2.default.registerPlugin('graphics', CanvasGraphicsRenderer);\n//# sourceMappingURL=CanvasGraphicsRenderer.js.map\n\n/***/ },\n/* 92 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = bezierCurveTo;\n/**\n * Calculate the points for a bezier curve and then draws it.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @param {number} fromX - Starting point x\n * @param {number} fromY - Starting point y\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} cpX2 - Second Control point x\n * @param {number} cpY2 - Second Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number[]} [path=[]] - Path array to push points into\n * @return {number[]} Array of points of the curve\n */\nfunction bezierCurveTo(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY) {\n    var path = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : [];\n\n    var n = 20;\n    var dt = 0;\n    var dt2 = 0;\n    var dt3 = 0;\n    var t2 = 0;\n    var t3 = 0;\n\n    path.push(fromX, fromY);\n\n    for (var i = 1, j = 0; i <= n; ++i) {\n        j = i / n;\n\n        dt = 1 - j;\n        dt2 = dt * dt;\n        dt3 = dt2 * dt;\n\n        t2 = j * j;\n        t3 = t2 * j;\n\n        path.push(dt3 * fromX + 3 * dt2 * j * cpX + 3 * dt * t2 * cpX2 + t3 * toX, dt3 * fromY + 3 * dt2 * j * cpY + 3 * dt * t2 * cpY2 + t3 * toY);\n    }\n\n    return path;\n}\n//# sourceMappingURL=bezierCurveTo.js.map\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _utils = __webpack_require__(2);\n\nvar _const = __webpack_require__(1);\n\nvar _ObjectRenderer2 = __webpack_require__(17);\n\nvar _ObjectRenderer3 = _interopRequireDefault(_ObjectRenderer2);\n\nvar _WebGLRenderer = __webpack_require__(26);\n\nvar _WebGLRenderer2 = _interopRequireDefault(_WebGLRenderer);\n\nvar _WebGLGraphicsData = __webpack_require__(94);\n\nvar _WebGLGraphicsData2 = _interopRequireDefault(_WebGLGraphicsData);\n\nvar _PrimitiveShader = __webpack_require__(95);\n\nvar _PrimitiveShader2 = _interopRequireDefault(_PrimitiveShader);\n\nvar _buildPoly = __webpack_require__(97);\n\nvar _buildPoly2 = _interopRequireDefault(_buildPoly);\n\nvar _buildRectangle = __webpack_require__(98);\n\nvar _buildRectangle2 = _interopRequireDefault(_buildRectangle);\n\nvar _buildRoundedRectangle = __webpack_require__(99);\n\nvar _buildRoundedRectangle2 = _interopRequireDefault(_buildRoundedRectangle);\n\nvar _buildCircle = __webpack_require__(96);\n\nvar _buildCircle2 = _interopRequireDefault(_buildCircle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Renders the graphics object.\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.ObjectRenderer\n */\nvar GraphicsRenderer = function (_ObjectRenderer) {\n    _inherits(GraphicsRenderer, _ObjectRenderer);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this object renderer works for.\n     */\n    function GraphicsRenderer(renderer) {\n        _classCallCheck(this, GraphicsRenderer);\n\n        var _this = _possibleConstructorReturn(this, _ObjectRenderer.call(this, renderer));\n\n        _this.graphicsDataPool = [];\n\n        _this.primitiveShader = null;\n\n        _this.gl = renderer.gl;\n\n        // easy access!\n        _this.CONTEXT_UID = 0;\n        return _this;\n    }\n\n    /**\n     * Called when there is a WebGL context change\n     *\n     * @private\n     *\n     */\n\n\n    GraphicsRenderer.prototype.onContextChange = function onContextChange() {\n        this.gl = this.renderer.gl;\n        this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n        this.primitiveShader = new _PrimitiveShader2.default(this.gl);\n    };\n\n    /**\n     * Destroys this renderer.\n     *\n     */\n\n\n    GraphicsRenderer.prototype.destroy = function destroy() {\n        _ObjectRenderer3.default.prototype.destroy.call(this);\n\n        for (var i = 0; i < this.graphicsDataPool.length; ++i) {\n            this.graphicsDataPool[i].destroy();\n        }\n\n        this.graphicsDataPool = null;\n    };\n\n    /**\n     * Renders a graphics object.\n     *\n     * @param {PIXI.Graphics} graphics - The graphics object to render.\n     */\n\n\n    GraphicsRenderer.prototype.render = function render(graphics) {\n        var renderer = this.renderer;\n        var gl = renderer.gl;\n\n        var webGLData = void 0;\n        var webGL = graphics._webGL[this.CONTEXT_UID];\n\n        if (!webGL || graphics.dirty !== webGL.dirty) {\n            this.updateGraphics(graphics);\n\n            webGL = graphics._webGL[this.CONTEXT_UID];\n        }\n\n        // This  could be speeded up for sure!\n        var shader = this.primitiveShader;\n\n        renderer.bindShader(shader);\n        renderer.state.setBlendMode(graphics.blendMode);\n\n        for (var i = 0, n = webGL.data.length; i < n; i++) {\n            webGLData = webGL.data[i];\n            var shaderTemp = webGLData.shader;\n\n            renderer.bindShader(shaderTemp);\n            shaderTemp.uniforms.translationMatrix = graphics.transform.worldTransform.toArray(true);\n            shaderTemp.uniforms.tint = (0, _utils.hex2rgb)(graphics.tint);\n            shaderTemp.uniforms.alpha = graphics.worldAlpha;\n\n            renderer.bindVao(webGLData.vao);\n            webGLData.vao.draw(gl.TRIANGLE_STRIP, webGLData.indices.length);\n        }\n    };\n\n    /**\n     * Updates the graphics object\n     *\n     * @private\n     * @param {PIXI.Graphics} graphics - The graphics object to update\n     */\n\n\n    GraphicsRenderer.prototype.updateGraphics = function updateGraphics(graphics) {\n        var gl = this.renderer.gl;\n\n        // get the contexts graphics object\n        var webGL = graphics._webGL[this.CONTEXT_UID];\n\n        // if the graphics object does not exist in the webGL context time to create it!\n        if (!webGL) {\n            webGL = graphics._webGL[this.CONTEXT_UID] = { lastIndex: 0, data: [], gl: gl, clearDirty: -1, dirty: -1 };\n        }\n\n        // flag the graphics as not dirty as we are about to update it...\n        webGL.dirty = graphics.dirty;\n\n        // if the user cleared the graphics object we will need to clear every object\n        if (graphics.clearDirty !== webGL.clearDirty) {\n            webGL.clearDirty = graphics.clearDirty;\n\n            // loop through and return all the webGLDatas to the object pool so than can be reused later on\n            for (var i = 0; i < webGL.data.length; i++) {\n                this.graphicsDataPool.push(webGL.data[i]);\n            }\n\n            // clear the array and reset the index..\n            webGL.data.length = 0;\n            webGL.lastIndex = 0;\n        }\n\n        var webGLData = void 0;\n\n        // loop through the graphics datas and construct each one..\n        // if the object is a complex fill then the new stencil buffer technique will be used\n        // other wise graphics objects will be pushed into a batch..\n        for (var _i = webGL.lastIndex; _i < graphics.graphicsData.length; _i++) {\n            var data = graphics.graphicsData[_i];\n\n            // TODO - this can be simplified\n            webGLData = this.getWebGLData(webGL, 0);\n\n            if (data.type === _const.SHAPES.POLY) {\n                (0, _buildPoly2.default)(data, webGLData);\n            }\n            if (data.type === _const.SHAPES.RECT) {\n                (0, _buildRectangle2.default)(data, webGLData);\n            } else if (data.type === _const.SHAPES.CIRC || data.type === _const.SHAPES.ELIP) {\n                (0, _buildCircle2.default)(data, webGLData);\n            } else if (data.type === _const.SHAPES.RREC) {\n                (0, _buildRoundedRectangle2.default)(data, webGLData);\n            }\n\n            webGL.lastIndex++;\n        }\n\n        this.renderer.bindVao(null);\n\n        // upload all the dirty data...\n        for (var _i2 = 0; _i2 < webGL.data.length; _i2++) {\n            webGLData = webGL.data[_i2];\n\n            if (webGLData.dirty) {\n                webGLData.upload();\n            }\n        }\n    };\n\n    /**\n     *\n     * @private\n     * @param {WebGLRenderingContext} gl - the current WebGL drawing context\n     * @param {number} type - TODO @Alvin\n     * @return {*} TODO\n     */\n\n\n    GraphicsRenderer.prototype.getWebGLData = function getWebGLData(gl, type) {\n        var webGLData = gl.data[gl.data.length - 1];\n\n        if (!webGLData || webGLData.points.length > 320000) {\n            webGLData = this.graphicsDataPool.pop() || new _WebGLGraphicsData2.default(this.renderer.gl, this.primitiveShader, this.renderer.state.attribsState);\n\n            webGLData.reset(type);\n            gl.data.push(webGLData);\n        }\n\n        webGLData.dirty = true;\n\n        return webGLData;\n    };\n\n    return GraphicsRenderer;\n}(_ObjectRenderer3.default);\n\nexports.default = GraphicsRenderer;\n\n\n_WebGLRenderer2.default.registerPlugin('graphics', GraphicsRenderer);\n//# sourceMappingURL=GraphicsRenderer.js.map\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _pixiGlCore = __webpack_require__(5);\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * An object containing WebGL specific properties to be used by the WebGL renderer\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar WebGLGraphicsData = function () {\n  /**\n   * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n   * @param {PIXI.Shader} shader - The shader\n   * @param {object} attribsState - The state for the VAO\n   */\n  function WebGLGraphicsData(gl, shader, attribsState) {\n    _classCallCheck(this, WebGLGraphicsData);\n\n    /**\n     * The current WebGL drawing context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    // TODO does this need to be split before uploading??\n    /**\n     * An array of color components (r,g,b)\n     * @member {number[]}\n     */\n    this.color = [0, 0, 0]; // color split!\n\n    /**\n     * An array of points to draw\n     * @member {PIXI.Point[]}\n     */\n    this.points = [];\n\n    /**\n     * The indices of the vertices\n     * @member {number[]}\n     */\n    this.indices = [];\n    /**\n     * The main buffer\n     * @member {WebGLBuffer}\n     */\n    this.buffer = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl);\n\n    /**\n     * The index buffer\n     * @member {WebGLBuffer}\n     */\n    this.indexBuffer = _pixiGlCore2.default.GLBuffer.createIndexBuffer(gl);\n\n    /**\n     * Whether this graphics is dirty or not\n     * @member {boolean}\n     */\n    this.dirty = true;\n\n    this.glPoints = null;\n    this.glIndices = null;\n\n    /**\n     *\n     * @member {PIXI.Shader}\n     */\n    this.shader = shader;\n\n    this.vao = new _pixiGlCore2.default.VertexArrayObject(gl, attribsState).addIndex(this.indexBuffer).addAttribute(this.buffer, shader.attributes.aVertexPosition, gl.FLOAT, false, 4 * 6, 0).addAttribute(this.buffer, shader.attributes.aColor, gl.FLOAT, false, 4 * 6, 2 * 4);\n  }\n\n  /**\n   * Resets the vertices and the indices\n   */\n\n\n  WebGLGraphicsData.prototype.reset = function reset() {\n    this.points.length = 0;\n    this.indices.length = 0;\n  };\n\n  /**\n   * Binds the buffers and uploads the data\n   */\n\n\n  WebGLGraphicsData.prototype.upload = function upload() {\n    this.glPoints = new Float32Array(this.points);\n    this.buffer.upload(this.glPoints);\n\n    this.glIndices = new Uint16Array(this.indices);\n    this.indexBuffer.upload(this.glIndices);\n\n    this.dirty = false;\n  };\n\n  /**\n   * Empties all the data\n   */\n\n\n  WebGLGraphicsData.prototype.destroy = function destroy() {\n    this.color = null;\n    this.points = null;\n    this.indices = null;\n\n    this.vao.destroy();\n    this.buffer.destroy();\n    this.indexBuffer.destroy();\n\n    this.gl = null;\n\n    this.buffer = null;\n    this.indexBuffer = null;\n\n    this.glPoints = null;\n    this.glIndices = null;\n  };\n\n  return WebGLGraphicsData;\n}();\n\nexports.default = WebGLGraphicsData;\n//# sourceMappingURL=WebGLGraphicsData.js.map\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Shader2 = __webpack_require__(8);\n\nvar _Shader3 = _interopRequireDefault(_Shader2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * This shader is used to draw simple primitive shapes for {@link PIXI.Graphics}.\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.Shader\n */\nvar PrimitiveShader = function (_Shader) {\n    _inherits(PrimitiveShader, _Shader);\n\n    /**\n     * @param {WebGLRenderingContext} gl - The webgl shader manager this shader works for.\n     */\n    function PrimitiveShader(gl) {\n        _classCallCheck(this, PrimitiveShader);\n\n        return _possibleConstructorReturn(this, _Shader.call(this, gl,\n        // vertex shader\n        ['attribute vec2 aVertexPosition;', 'attribute vec4 aColor;', 'uniform mat3 translationMatrix;', 'uniform mat3 projectionMatrix;', 'uniform float alpha;', 'uniform vec3 tint;', 'varying vec4 vColor;', 'void main(void){', '   gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);', '   vColor = aColor * vec4(tint * alpha, alpha);', '}'].join('\\n'),\n        // fragment shader\n        ['varying vec4 vColor;', 'void main(void){', '   gl_FragColor = vColor;', '}'].join('\\n')));\n    }\n\n    return PrimitiveShader;\n}(_Shader3.default);\n\nexports.default = PrimitiveShader;\n//# sourceMappingURL=PrimitiveShader.js.map\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = buildCircle;\n\nvar _buildLine = __webpack_require__(15);\n\nvar _buildLine2 = _interopRequireDefault(_buildLine);\n\nvar _const = __webpack_require__(1);\n\nvar _utils = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Builds a circle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object to draw\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildCircle(graphicsData, webGLData) {\n    // need to convert points to a nice regular data\n    var circleData = graphicsData.shape;\n    var x = circleData.x;\n    var y = circleData.y;\n    var width = void 0;\n    var height = void 0;\n\n    // TODO - bit hacky??\n    if (graphicsData.type === _const.SHAPES.CIRC) {\n        width = circleData.radius;\n        height = circleData.radius;\n    } else {\n        width = circleData.width;\n        height = circleData.height;\n    }\n\n    var totalSegs = Math.floor(30 * Math.sqrt(circleData.radius)) || Math.floor(15 * Math.sqrt(circleData.width + circleData.height));\n\n    var seg = Math.PI * 2 / totalSegs;\n\n    if (graphicsData.fill) {\n        var color = (0, _utils.hex2rgb)(graphicsData.fillColor);\n        var alpha = graphicsData.fillAlpha;\n\n        var r = color[0] * alpha;\n        var g = color[1] * alpha;\n        var b = color[2] * alpha;\n\n        var verts = webGLData.points;\n        var indices = webGLData.indices;\n\n        var vecPos = verts.length / 6;\n\n        indices.push(vecPos);\n\n        for (var i = 0; i < totalSegs + 1; i++) {\n            verts.push(x, y, r, g, b, alpha);\n\n            verts.push(x + Math.sin(seg * i) * width, y + Math.cos(seg * i) * height, r, g, b, alpha);\n\n            indices.push(vecPos++, vecPos++);\n        }\n\n        indices.push(vecPos - 1);\n    }\n\n    if (graphicsData.lineWidth) {\n        var tempPoints = graphicsData.points;\n\n        graphicsData.points = [];\n\n        for (var _i = 0; _i < totalSegs + 1; _i++) {\n            graphicsData.points.push(x + Math.sin(seg * _i) * width, y + Math.cos(seg * _i) * height);\n        }\n\n        (0, _buildLine2.default)(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n}\n//# sourceMappingURL=buildCircle.js.map\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = buildPoly;\n\nvar _buildLine = __webpack_require__(15);\n\nvar _buildLine2 = _interopRequireDefault(_buildLine);\n\nvar _utils = __webpack_require__(2);\n\nvar _earcut = __webpack_require__(35);\n\nvar _earcut2 = _interopRequireDefault(_earcut);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Builds a polygon to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildPoly(graphicsData, webGLData) {\n    graphicsData.points = graphicsData.shape.points.slice();\n\n    var points = graphicsData.points;\n\n    if (graphicsData.fill && points.length >= 6) {\n        var holeArray = [];\n        // Process holes..\n        var holes = graphicsData.holes;\n\n        for (var i = 0; i < holes.length; i++) {\n            var hole = holes[i];\n\n            holeArray.push(points.length / 2);\n\n            points = points.concat(hole.points);\n        }\n\n        // get first and last point.. figure out the middle!\n        var verts = webGLData.points;\n        var indices = webGLData.indices;\n\n        var length = points.length / 2;\n\n        // sort color\n        var color = (0, _utils.hex2rgb)(graphicsData.fillColor);\n        var alpha = graphicsData.fillAlpha;\n        var r = color[0] * alpha;\n        var g = color[1] * alpha;\n        var b = color[2] * alpha;\n\n        var triangles = (0, _earcut2.default)(points, holeArray, 2);\n\n        if (!triangles) {\n            return;\n        }\n\n        var vertPos = verts.length / 6;\n\n        for (var _i = 0; _i < triangles.length; _i += 3) {\n            indices.push(triangles[_i] + vertPos);\n            indices.push(triangles[_i] + vertPos);\n            indices.push(triangles[_i + 1] + vertPos);\n            indices.push(triangles[_i + 2] + vertPos);\n            indices.push(triangles[_i + 2] + vertPos);\n        }\n\n        for (var _i2 = 0; _i2 < length; _i2++) {\n            verts.push(points[_i2 * 2], points[_i2 * 2 + 1], r, g, b, alpha);\n        }\n    }\n\n    if (graphicsData.lineWidth > 0) {\n        (0, _buildLine2.default)(graphicsData, webGLData);\n    }\n}\n//# sourceMappingURL=buildPoly.js.map\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = buildRectangle;\n\nvar _buildLine = __webpack_require__(15);\n\nvar _buildLine2 = _interopRequireDefault(_buildLine);\n\nvar _utils = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildRectangle(graphicsData, webGLData) {\n    // --- //\n    // need to convert points to a nice regular data\n    //\n    var rectData = graphicsData.shape;\n    var x = rectData.x;\n    var y = rectData.y;\n    var width = rectData.width;\n    var height = rectData.height;\n\n    if (graphicsData.fill) {\n        var color = (0, _utils.hex2rgb)(graphicsData.fillColor);\n        var alpha = graphicsData.fillAlpha;\n\n        var r = color[0] * alpha;\n        var g = color[1] * alpha;\n        var b = color[2] * alpha;\n\n        var verts = webGLData.points;\n        var indices = webGLData.indices;\n\n        var vertPos = verts.length / 6;\n\n        // start\n        verts.push(x, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x, y + height);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y + height);\n        verts.push(r, g, b, alpha);\n\n        // insert 2 dead triangles..\n        indices.push(vertPos, vertPos, vertPos + 1, vertPos + 2, vertPos + 3, vertPos + 3);\n    }\n\n    if (graphicsData.lineWidth) {\n        var tempPoints = graphicsData.points;\n\n        graphicsData.points = [x, y, x + width, y, x + width, y + height, x, y + height, x, y];\n\n        (0, _buildLine2.default)(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n}\n//# sourceMappingURL=buildRectangle.js.map\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = buildRoundedRectangle;\n\nvar _earcut = __webpack_require__(35);\n\nvar _earcut2 = _interopRequireDefault(_earcut);\n\nvar _buildLine = __webpack_require__(15);\n\nvar _buildLine2 = _interopRequireDefault(_buildLine);\n\nvar _utils = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Builds a rounded rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildRoundedRectangle(graphicsData, webGLData) {\n    var rrectData = graphicsData.shape;\n    var x = rrectData.x;\n    var y = rrectData.y;\n    var width = rrectData.width;\n    var height = rrectData.height;\n\n    var radius = rrectData.radius;\n\n    var recPoints = [];\n\n    recPoints.push(x, y + radius);\n    quadraticBezierCurve(x, y + height - radius, x, y + height, x + radius, y + height, recPoints);\n    quadraticBezierCurve(x + width - radius, y + height, x + width, y + height, x + width, y + height - radius, recPoints);\n    quadraticBezierCurve(x + width, y + radius, x + width, y, x + width - radius, y, recPoints);\n    quadraticBezierCurve(x + radius, y, x, y, x, y + radius + 0.0000000001, recPoints);\n\n    // this tiny number deals with the issue that occurs when points overlap and earcut fails to triangulate the item.\n    // TODO - fix this properly, this is not very elegant.. but it works for now.\n\n    if (graphicsData.fill) {\n        var color = (0, _utils.hex2rgb)(graphicsData.fillColor);\n        var alpha = graphicsData.fillAlpha;\n\n        var r = color[0] * alpha;\n        var g = color[1] * alpha;\n        var b = color[2] * alpha;\n\n        var verts = webGLData.points;\n        var indices = webGLData.indices;\n\n        var vecPos = verts.length / 6;\n\n        var triangles = (0, _earcut2.default)(recPoints, null, 2);\n\n        for (var i = 0, j = triangles.length; i < j; i += 3) {\n            indices.push(triangles[i] + vecPos);\n            indices.push(triangles[i] + vecPos);\n            indices.push(triangles[i + 1] + vecPos);\n            indices.push(triangles[i + 2] + vecPos);\n            indices.push(triangles[i + 2] + vecPos);\n        }\n\n        for (var _i = 0, _j = recPoints.length; _i < _j; _i++) {\n            verts.push(recPoints[_i], recPoints[++_i], r, g, b, alpha);\n        }\n    }\n\n    if (graphicsData.lineWidth) {\n        var tempPoints = graphicsData.points;\n\n        graphicsData.points = recPoints;\n\n        (0, _buildLine2.default)(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n}\n\n/**\n * Calculate the points for a quadratic bezier curve. (helper function..)\n * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {number} fromX - Origin point x\n * @param {number} fromY - Origin point x\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number[]} [out=[]] - The output array to add points into. If not passed, a new array is created.\n * @return {number[]} an array of points\n */\nfunction quadraticBezierCurve(fromX, fromY, cpX, cpY, toX, toY) {\n    var out = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n\n    var n = 20;\n    var points = out;\n\n    var xa = 0;\n    var ya = 0;\n    var xb = 0;\n    var yb = 0;\n    var x = 0;\n    var y = 0;\n\n    function getPt(n1, n2, perc) {\n        var diff = n2 - n1;\n\n        return n1 + diff * perc;\n    }\n\n    for (var i = 0, j = 0; i <= n; ++i) {\n        j = i / n;\n\n        // The Green Line\n        xa = getPt(fromX, cpX, j);\n        ya = getPt(fromY, cpY, j);\n        xb = getPt(cpX, toX, j);\n        yb = getPt(cpY, toY, j);\n\n        // The Black Dot\n        x = getPt(xa, xb, j);\n        y = getPt(ya, yb, j);\n\n        points.push(x, y);\n    }\n\n    return points;\n}\n//# sourceMappingURL=buildRoundedRectangle.js.map\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Rectangle = __webpack_require__(25);\n\nvar _Rectangle2 = _interopRequireDefault(_Rectangle);\n\nvar _const = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The Circle object can be used to specify a hit area for displayObjects\n *\n * @class\n * @memberof PIXI\n */\nvar Circle = function () {\n  /**\n   * @param {number} [x=0] - The X coordinate of the center of this circle\n   * @param {number} [y=0] - The Y coordinate of the center of this circle\n   * @param {number} [radius=0] - The radius of the circle\n   */\n  function Circle() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Circle);\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.x = x;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.y = y;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.radius = radius;\n\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     *\n     * @member {number}\n     * @readOnly\n     * @default PIXI.SHAPES.CIRC\n     * @see PIXI.SHAPES\n     */\n    this.type = _const.SHAPES.CIRC;\n  }\n\n  /**\n   * Creates a clone of this Circle instance\n   *\n   * @return {PIXI.Circle} a copy of the Circle\n   */\n\n\n  Circle.prototype.clone = function clone() {\n    return new Circle(this.x, this.y, this.radius);\n  };\n\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle\n   *\n   * @param {number} x - The X coordinate of the point to test\n   * @param {number} y - The Y coordinate of the point to test\n   * @return {boolean} Whether the x/y coordinates are within this Circle\n   */\n\n\n  Circle.prototype.contains = function contains(x, y) {\n    if (this.radius <= 0) {\n      return false;\n    }\n\n    var r2 = this.radius * this.radius;\n    var dx = this.x - x;\n    var dy = this.y - y;\n\n    dx *= dx;\n    dy *= dy;\n\n    return dx + dy <= r2;\n  };\n\n  /**\n  * Returns the framing rectangle of the circle as a Rectangle object\n  *\n  * @return {PIXI.Rectangle} the framing rectangle\n  */\n\n\n  Circle.prototype.getBounds = function getBounds() {\n    return new _Rectangle2.default(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n  };\n\n  return Circle;\n}();\n\nexports.default = Circle;\n//# sourceMappingURL=Circle.js.map\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Rectangle = __webpack_require__(25);\n\nvar _Rectangle2 = _interopRequireDefault(_Rectangle);\n\nvar _const = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The Ellipse object can be used to specify a hit area for displayObjects\n *\n * @class\n * @memberof PIXI\n */\nvar Ellipse = function () {\n  /**\n   * @param {number} [x=0] - The X coordinate of the center of this circle\n   * @param {number} [y=0] - The Y coordinate of the center of this circle\n   * @param {number} [width=0] - The half width of this ellipse\n   * @param {number} [height=0] - The half height of this ellipse\n   */\n  function Ellipse() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    _classCallCheck(this, Ellipse);\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.x = x;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.y = y;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.width = width;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.height = height;\n\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     *\n     * @member {number}\n     * @readOnly\n     * @default PIXI.SHAPES.ELIP\n     * @see PIXI.SHAPES\n     */\n    this.type = _const.SHAPES.ELIP;\n  }\n\n  /**\n   * Creates a clone of this Ellipse instance\n   *\n   * @return {PIXI.Ellipse} a copy of the ellipse\n   */\n\n\n  Ellipse.prototype.clone = function clone() {\n    return new Ellipse(this.x, this.y, this.width, this.height);\n  };\n\n  /**\n   * Checks whether the x and y coordinates given are contained within this ellipse\n   *\n   * @param {number} x - The X coordinate of the point to test\n   * @param {number} y - The Y coordinate of the point to test\n   * @return {boolean} Whether the x/y coords are within this ellipse\n   */\n\n\n  Ellipse.prototype.contains = function contains(x, y) {\n    if (this.width <= 0 || this.height <= 0) {\n      return false;\n    }\n\n    // normalize the coords to an ellipse with center 0,0\n    var normx = (x - this.x) / this.width;\n    var normy = (y - this.y) / this.height;\n\n    normx *= normx;\n    normy *= normy;\n\n    return normx + normy <= 1;\n  };\n\n  /**\n   * Returns the framing rectangle of the ellipse as a Rectangle object\n   *\n   * @return {PIXI.Rectangle} the framing rectangle\n   */\n\n\n  Ellipse.prototype.getBounds = function getBounds() {\n    return new _Rectangle2.default(this.x - this.width, this.y - this.height, this.width, this.height);\n  };\n\n  return Ellipse;\n}();\n\nexports.default = Ellipse;\n//# sourceMappingURL=Ellipse.js.map\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Point = __webpack_require__(24);\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _const = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class\n * @memberof PIXI\n */\nvar Polygon = function () {\n    /**\n     * @param {PIXI.Point[]|number[]} points - This can be an array of Points\n     *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n     *  the arguments passed can be all the points of the polygon e.g.\n     *  `new PIXI.Polygon(new PIXI.Point(), new PIXI.Point(), ...)`, or the arguments passed can be flat\n     *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n     */\n    function Polygon() {\n        for (var _len = arguments.length, points = Array(_len), _key = 0; _key < _len; _key++) {\n            points[_key] = arguments[_key];\n        }\n\n        _classCallCheck(this, Polygon);\n\n        if (Array.isArray(points[0])) {\n            points = points[0];\n        }\n\n        // if this is an array of points, convert it to a flat array of numbers\n        if (points[0] instanceof _Point2.default) {\n            var p = [];\n\n            for (var i = 0, il = points.length; i < il; i++) {\n                p.push(points[i].x, points[i].y);\n            }\n\n            points = p;\n        }\n\n        this.closed = true;\n\n        /**\n         * An array of the points of this polygon\n         *\n         * @member {number[]}\n         */\n        this.points = points;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.POLY\n         * @see PIXI.SHAPES\n         */\n        this.type = _const.SHAPES.POLY;\n    }\n\n    /**\n     * Creates a clone of this polygon\n     *\n     * @return {PIXI.Polygon} a copy of the polygon\n     */\n\n\n    Polygon.prototype.clone = function clone() {\n        return new Polygon(this.points.slice());\n    };\n\n    /**\n     * Closes the polygon, adding points if necessary.\n     *\n     */\n\n\n    Polygon.prototype.close = function close() {\n        var points = this.points;\n\n        // close the poly if the value is true!\n        if (points[0] !== points[points.length - 2] || points[1] !== points[points.length - 1]) {\n            points.push(points[0], points[1]);\n        }\n    };\n\n    /**\n     * Checks whether the x and y coordinates passed to this function are contained within this polygon\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this polygon\n     */\n\n\n    Polygon.prototype.contains = function contains(x, y) {\n        var inside = false;\n\n        // use some raycasting to test hits\n        // https://github.com/substack/point-in-polygon/blob/master/index.js\n        var length = this.points.length / 2;\n\n        for (var i = 0, j = length - 1; i < length; j = i++) {\n            var xi = this.points[i * 2];\n            var yi = this.points[i * 2 + 1];\n            var xj = this.points[j * 2];\n            var yj = this.points[j * 2 + 1];\n            var intersect = yi > y !== yj > y && x < (xj - xi) * ((y - yi) / (yj - yi)) + xi;\n\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n\n        return inside;\n    };\n\n    return Polygon;\n}();\n\nexports.default = Polygon;\n//# sourceMappingURL=Polygon.js.map\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _const = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The Rounded Rectangle object is an area that has nice rounded corners, as indicated by its\n * top-left corner point (x, y) and by its width and its height and its radius.\n *\n * @class\n * @memberof PIXI\n */\nvar RoundedRectangle = function () {\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [width=0] - The overall width of this rounded rectangle\n     * @param {number} [height=0] - The overall height of this rounded rectangle\n     * @param {number} [radius=20] - Controls the radius of the rounded corners\n     */\n    function RoundedRectangle() {\n        var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n        var radius = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 20;\n\n        _classCallCheck(this, RoundedRectangle);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = width;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = height;\n\n        /**\n         * @member {number}\n         * @default 20\n         */\n        this.radius = radius;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readonly\n         * @default PIXI.SHAPES.RREC\n         * @see PIXI.SHAPES\n         */\n        this.type = _const.SHAPES.RREC;\n    }\n\n    /**\n     * Creates a clone of this Rounded Rectangle\n     *\n     * @return {PIXI.RoundedRectangle} a copy of the rounded rectangle\n     */\n\n\n    RoundedRectangle.prototype.clone = function clone() {\n        return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n    };\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rounded Rectangle\n     */\n\n\n    RoundedRectangle.prototype.contains = function contains(x, y) {\n        if (this.width <= 0 || this.height <= 0) {\n            return false;\n        }\n        if (x >= this.x && x <= this.x + this.width) {\n            if (y >= this.y && y <= this.y + this.height) {\n                if (y >= this.y + this.radius && y <= this.y + this.height - this.radius || x >= this.x + this.radius && x <= this.x + this.width - this.radius) {\n                    return true;\n                }\n                var dx = x - (this.x + this.radius);\n                var dy = y - (this.y + this.radius);\n                var radius2 = this.radius * this.radius;\n\n                if (dx * dx + dy * dy <= radius2) {\n                    return true;\n                }\n                dx = x - (this.x + this.width - this.radius);\n                if (dx * dx + dy * dy <= radius2) {\n                    return true;\n                }\n                dy = y - (this.y + this.height - this.radius);\n                if (dx * dx + dy * dy <= radius2) {\n                    return true;\n                }\n                dx = x - (this.x + this.radius);\n                if (dx * dx + dy * dy <= radius2) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    return RoundedRectangle;\n}();\n\nexports.default = RoundedRectangle;\n//# sourceMappingURL=RoundedRectangle.js.map\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _const = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A set of functions used to handle masking.\n *\n * @class\n * @memberof PIXI\n */\nvar CanvasMaskManager = function () {\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n     */\n    function CanvasMaskManager(renderer) {\n        _classCallCheck(this, CanvasMaskManager);\n\n        this.renderer = renderer;\n    }\n\n    /**\n     * This method adds it to the current stack of masks.\n     *\n     * @param {object} maskData - the maskData that will be pushed\n     */\n\n\n    CanvasMaskManager.prototype.pushMask = function pushMask(maskData) {\n        var renderer = this.renderer;\n\n        renderer.context.save();\n\n        var cacheAlpha = maskData.alpha;\n        var transform = maskData.transform.worldTransform;\n        var resolution = renderer.resolution;\n\n        renderer.context.setTransform(transform.a * resolution, transform.b * resolution, transform.c * resolution, transform.d * resolution, transform.tx * resolution, transform.ty * resolution);\n\n        // TODO suport sprite alpha masks??\n        // lots of effort required. If demand is great enough..\n        if (!maskData._texture) {\n            this.renderGraphicsShape(maskData);\n            renderer.context.clip();\n        }\n\n        maskData.worldAlpha = cacheAlpha;\n    };\n\n    /**\n     * Renders a PIXI.Graphics shape.\n     *\n     * @param {PIXI.Graphics} graphics - The object to render.\n     */\n\n\n    CanvasMaskManager.prototype.renderGraphicsShape = function renderGraphicsShape(graphics) {\n        var context = this.renderer.context;\n        var len = graphics.graphicsData.length;\n\n        if (len === 0) {\n            return;\n        }\n\n        context.beginPath();\n\n        for (var i = 0; i < len; i++) {\n            var data = graphics.graphicsData[i];\n            var shape = data.shape;\n\n            if (data.type === _const.SHAPES.POLY) {\n                var points = shape.points;\n\n                context.moveTo(points[0], points[1]);\n\n                for (var j = 1; j < points.length / 2; j++) {\n                    context.lineTo(points[j * 2], points[j * 2 + 1]);\n                }\n\n                // if the first and last point are the same close the path - much neater :)\n                if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1]) {\n                    context.closePath();\n                }\n            } else if (data.type === _const.SHAPES.RECT) {\n                context.rect(shape.x, shape.y, shape.width, shape.height);\n                context.closePath();\n            } else if (data.type === _const.SHAPES.CIRC) {\n                // TODO - need to be Undefined!\n                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n                context.closePath();\n            } else if (data.type === _const.SHAPES.ELIP) {\n                // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n                var w = shape.width * 2;\n                var h = shape.height * 2;\n\n                var x = shape.x - w / 2;\n                var y = shape.y - h / 2;\n\n                var kappa = 0.5522848;\n                var ox = w / 2 * kappa; // control point offset horizontal\n                var oy = h / 2 * kappa; // control point offset vertical\n                var xe = x + w; // x-end\n                var ye = y + h; // y-end\n                var xm = x + w / 2; // x-middle\n                var ym = y + h / 2; // y-middle\n\n                context.moveTo(x, ym);\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n                context.closePath();\n            } else if (data.type === _const.SHAPES.RREC) {\n                var rx = shape.x;\n                var ry = shape.y;\n                var width = shape.width;\n                var height = shape.height;\n                var radius = shape.radius;\n\n                var maxRadius = Math.min(width, height) / 2 | 0;\n\n                radius = radius > maxRadius ? maxRadius : radius;\n\n                context.moveTo(rx, ry + radius);\n                context.lineTo(rx, ry + height - radius);\n                context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n                context.lineTo(rx + width - radius, ry + height);\n                context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n                context.lineTo(rx + width, ry + radius);\n                context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n                context.lineTo(rx + radius, ry);\n                context.quadraticCurveTo(rx, ry, rx, ry + radius);\n                context.closePath();\n            }\n        }\n    };\n\n    /**\n     * Restores the current drawing context to the state it was before the mask was applied.\n     *\n     * @param {PIXI.CanvasRenderer} renderer - The renderer context to use.\n     */\n\n\n    CanvasMaskManager.prototype.popMask = function popMask(renderer) {\n        renderer.context.restore();\n    };\n\n    /**\n     * Destroys this canvas mask manager.\n     *\n     */\n\n\n    CanvasMaskManager.prototype.destroy = function destroy() {\n        /* empty */\n    };\n\n    return CanvasMaskManager;\n}();\n\nexports.default = CanvasMaskManager;\n//# sourceMappingURL=CanvasMaskManager.js.map\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = mapCanvasBlendModesToPixi;\n\nvar _const = __webpack_require__(1);\n\nvar _canUseNewCanvasBlendModes = __webpack_require__(46);\n\nvar _canUseNewCanvasBlendModes2 = _interopRequireDefault(_canUseNewCanvasBlendModes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Maps blend combinations to Canvas.\n *\n * @memberof PIXI\n * @function mapCanvasBlendModesToPixi\n * @private\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nfunction mapCanvasBlendModesToPixi() {\n    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    if ((0, _canUseNewCanvasBlendModes2.default)()) {\n        array[_const.BLEND_MODES.NORMAL] = 'source-over';\n        array[_const.BLEND_MODES.ADD] = 'lighter'; // IS THIS OK???\n        array[_const.BLEND_MODES.MULTIPLY] = 'multiply';\n        array[_const.BLEND_MODES.SCREEN] = 'screen';\n        array[_const.BLEND_MODES.OVERLAY] = 'overlay';\n        array[_const.BLEND_MODES.DARKEN] = 'darken';\n        array[_const.BLEND_MODES.LIGHTEN] = 'lighten';\n        array[_const.BLEND_MODES.COLOR_DODGE] = 'color-dodge';\n        array[_const.BLEND_MODES.COLOR_BURN] = 'color-burn';\n        array[_const.BLEND_MODES.HARD_LIGHT] = 'hard-light';\n        array[_const.BLEND_MODES.SOFT_LIGHT] = 'soft-light';\n        array[_const.BLEND_MODES.DIFFERENCE] = 'difference';\n        array[_const.BLEND_MODES.EXCLUSION] = 'exclusion';\n        array[_const.BLEND_MODES.HUE] = 'hue';\n        array[_const.BLEND_MODES.SATURATION] = 'saturate';\n        array[_const.BLEND_MODES.COLOR] = 'color';\n        array[_const.BLEND_MODES.LUMINOSITY] = 'luminosity';\n    } else {\n        // this means that the browser does not support the cool new blend modes in canvas 'cough' ie 'cough'\n        array[_const.BLEND_MODES.NORMAL] = 'source-over';\n        array[_const.BLEND_MODES.ADD] = 'lighter'; // IS THIS OK???\n        array[_const.BLEND_MODES.MULTIPLY] = 'source-over';\n        array[_const.BLEND_MODES.SCREEN] = 'source-over';\n        array[_const.BLEND_MODES.OVERLAY] = 'source-over';\n        array[_const.BLEND_MODES.DARKEN] = 'source-over';\n        array[_const.BLEND_MODES.LIGHTEN] = 'source-over';\n        array[_const.BLEND_MODES.COLOR_DODGE] = 'source-over';\n        array[_const.BLEND_MODES.COLOR_BURN] = 'source-over';\n        array[_const.BLEND_MODES.HARD_LIGHT] = 'source-over';\n        array[_const.BLEND_MODES.SOFT_LIGHT] = 'source-over';\n        array[_const.BLEND_MODES.DIFFERENCE] = 'source-over';\n        array[_const.BLEND_MODES.EXCLUSION] = 'source-over';\n        array[_const.BLEND_MODES.HUE] = 'source-over';\n        array[_const.BLEND_MODES.SATURATION] = 'source-over';\n        array[_const.BLEND_MODES.COLOR] = 'source-over';\n        array[_const.BLEND_MODES.LUMINOSITY] = 'source-over';\n    }\n\n    return array;\n}\n//# sourceMappingURL=mapCanvasBlendModesToPixi.js.map\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _const = __webpack_require__(1);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GC_MODE = _settings2.default.GC_MODE,\n    GC_MAX_IDLE = _settings2.default.GC_MAX_IDLE,\n    GC_MAX_CHECK_COUNT = _settings2.default.GC_MAX_CHECK_COUNT;\n\n/**\n * TextureGarbageCollector. This class manages the GPU and ensures that it does not get clogged\n * up with textures that are no longer being used.\n *\n * @class\n * @memberof PIXI\n */\n\nvar TextureGarbageCollector = function () {\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    function TextureGarbageCollector(renderer) {\n        _classCallCheck(this, TextureGarbageCollector);\n\n        this.renderer = renderer;\n\n        this.count = 0;\n        this.checkCount = 0;\n        this.maxIdle = GC_MAX_IDLE;\n        this.checkCountMax = GC_MAX_CHECK_COUNT;\n        this.mode = GC_MODE;\n    }\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n\n\n    TextureGarbageCollector.prototype.update = function update() {\n        this.count++;\n\n        if (this.mode === _const.GC_MODES.MANUAL) {\n            return;\n        }\n\n        this.checkCount++;\n\n        if (this.checkCount > this.checkCountMax) {\n            this.checkCount = 0;\n\n            this.run();\n        }\n    };\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n\n\n    TextureGarbageCollector.prototype.run = function run() {\n        var tm = this.renderer.textureManager;\n        var managedTextures = tm._managedTextures;\n        var wasRemoved = false;\n\n        for (var i = 0; i < managedTextures.length; i++) {\n            var texture = managedTextures[i];\n\n            // only supports non generated textures at the moment!\n            if (!texture._glRenderTargets && this.count - texture.touched > this.maxIdle) {\n                tm.destroyTexture(texture, true);\n                managedTextures[i] = null;\n                wasRemoved = true;\n            }\n        }\n\n        if (wasRemoved) {\n            var j = 0;\n\n            for (var _i = 0; _i < managedTextures.length; _i++) {\n                if (managedTextures[_i] !== null) {\n                    managedTextures[j++] = managedTextures[_i];\n                }\n            }\n\n            managedTextures.length = j;\n        }\n    };\n\n    /**\n     * Removes all the textures within the specified displayObject and its children from the GPU\n     *\n     * @param {PIXI.DisplayObject} displayObject - the displayObject to remove the textures from.\n     */\n\n\n    TextureGarbageCollector.prototype.unload = function unload(displayObject) {\n        var tm = this.renderer.textureManager;\n\n        if (displayObject._texture) {\n            tm.destroyTexture(displayObject._texture, true);\n        }\n\n        for (var i = displayObject.children.length - 1; i >= 0; i--) {\n            this.unload(displayObject.children[i]);\n        }\n    };\n\n    return TextureGarbageCollector;\n}();\n\nexports.default = TextureGarbageCollector;\n//# sourceMappingURL=TextureGarbageCollector.js.map\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _pixiGlCore = __webpack_require__(5);\n\nvar _const = __webpack_require__(1);\n\nvar _RenderTarget = __webpack_require__(18);\n\nvar _RenderTarget2 = _interopRequireDefault(_RenderTarget);\n\nvar _utils = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Helper class to create a webGL Texture\n *\n * @class\n * @memberof PIXI\n */\nvar TextureManager = function () {\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    function TextureManager(renderer) {\n        _classCallCheck(this, TextureManager);\n\n        /**\n         * A reference to the current renderer\n         *\n         * @member {PIXI.WebGLRenderer}\n         */\n        this.renderer = renderer;\n\n        /**\n         * The current WebGL rendering context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = renderer.gl;\n\n        /**\n         * Track textures in the renderer so we can no longer listen to them on destruction.\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this._managedTextures = [];\n    }\n\n    /**\n     * Binds a texture.\n     *\n     */\n\n\n    TextureManager.prototype.bindTexture = function bindTexture() {}\n    // empty\n\n\n    /**\n     * Gets a texture.\n     *\n     */\n    ;\n\n    TextureManager.prototype.getTexture = function getTexture() {}\n    // empty\n\n\n    /**\n     * Updates and/or Creates a WebGL texture for the renderer's context.\n     *\n     * @param {PIXI.BaseTexture|PIXI.Texture} texture - the texture to update\n     * @param {Number} location - the location the texture will be bound to.\n     * @return {GLTexture} The gl texture.\n     */\n    ;\n\n    TextureManager.prototype.updateTexture = function updateTexture(texture, location) {\n        // assume it good!\n        // texture = texture.baseTexture || texture;\n        location = location || 0;\n\n        var gl = this.gl;\n\n        var isRenderTexture = !!texture._glRenderTargets;\n\n        if (!texture.hasLoaded) {\n            return null;\n        }\n\n        gl.activeTexture(gl.TEXTURE0 + location);\n\n        var glTexture = texture._glTextures[this.renderer.CONTEXT_UID];\n\n        if (!glTexture) {\n            if (isRenderTexture) {\n                var renderTarget = new _RenderTarget2.default(this.gl, texture.width, texture.height, texture.scaleMode, texture.resolution);\n\n                renderTarget.resize(texture.width, texture.height);\n                texture._glRenderTargets[this.renderer.CONTEXT_UID] = renderTarget;\n                glTexture = renderTarget.texture;\n            } else {\n                glTexture = new _pixiGlCore.GLTexture(this.gl, null, null, null, null);\n                glTexture.bind(location);\n                glTexture.premultiplyAlpha = true;\n                glTexture.upload(texture.source);\n            }\n\n            texture._glTextures[this.renderer.CONTEXT_UID] = glTexture;\n\n            texture.on('update', this.updateTexture, this);\n            texture.on('dispose', this.destroyTexture, this);\n\n            this._managedTextures.push(texture);\n\n            if (texture.isPowerOfTwo) {\n                if (texture.mipmap) {\n                    glTexture.enableMipmap();\n                }\n\n                if (texture.wrapMode === _const.WRAP_MODES.CLAMP) {\n                    glTexture.enableWrapClamp();\n                } else if (texture.wrapMode === _const.WRAP_MODES.REPEAT) {\n                    glTexture.enableWrapRepeat();\n                } else {\n                    glTexture.enableWrapMirrorRepeat();\n                }\n            } else {\n                glTexture.enableWrapClamp();\n            }\n\n            if (texture.scaleMode === _const.SCALE_MODES.NEAREST) {\n                glTexture.enableNearestScaling();\n            } else {\n                glTexture.enableLinearScaling();\n            }\n        }\n        // the texture already exists so we only need to update it..\n        else if (isRenderTexture) {\n                texture._glRenderTargets[this.renderer.CONTEXT_UID].resize(texture.width, texture.height);\n            } else {\n                glTexture.upload(texture.source);\n            }\n\n        this.renderer.boundTextures[location] = texture;\n\n        return glTexture;\n    };\n\n    /**\n     * Deletes the texture from WebGL\n     *\n     * @param {PIXI.BaseTexture|PIXI.Texture} texture - the texture to destroy\n     * @param {boolean} [skipRemove=false] - Whether to skip removing the texture from the TextureManager.\n     */\n\n\n    TextureManager.prototype.destroyTexture = function destroyTexture(texture, skipRemove) {\n        texture = texture.baseTexture || texture;\n\n        if (!texture.hasLoaded) {\n            return;\n        }\n\n        if (texture._glTextures[this.renderer.CONTEXT_UID]) {\n            this.renderer.unbindTexture(texture);\n\n            texture._glTextures[this.renderer.CONTEXT_UID].destroy();\n            texture.off('update', this.updateTexture, this);\n            texture.off('dispose', this.destroyTexture, this);\n\n            delete texture._glTextures[this.renderer.CONTEXT_UID];\n\n            if (!skipRemove) {\n                var i = this._managedTextures.indexOf(texture);\n\n                if (i !== -1) {\n                    (0, _utils.removeItems)(this._managedTextures, i, 1);\n                }\n            }\n        }\n    };\n\n    /**\n     * Deletes all the textures from WebGL\n     */\n\n\n    TextureManager.prototype.removeAll = function removeAll() {\n        // empty all the old gl textures as they are useless now\n        for (var i = 0; i < this._managedTextures.length; ++i) {\n            var texture = this._managedTextures[i];\n\n            if (texture._glTextures[this.renderer.CONTEXT_UID]) {\n                delete texture._glTextures[this.renderer.CONTEXT_UID];\n            }\n        }\n    };\n\n    /**\n     * Destroys this manager and removes all its textures\n     */\n\n\n    TextureManager.prototype.destroy = function destroy() {\n        // destroy managed textures\n        for (var i = 0; i < this._managedTextures.length; ++i) {\n            var texture = this._managedTextures[i];\n\n            this.destroyTexture(texture, true);\n\n            texture.off('update', this.updateTexture, this);\n            texture.off('dispose', this.destroyTexture, this);\n        }\n\n        this._managedTextures = null;\n    };\n\n    return TextureManager;\n}();\n\nexports.default = TextureManager;\n//# sourceMappingURL=TextureManager.js.map\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _mapWebGLBlendModesToPixi = __webpack_require__(115);\n\nvar _mapWebGLBlendModesToPixi2 = _interopRequireDefault(_mapWebGLBlendModesToPixi);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BLEND = 0;\nvar DEPTH_TEST = 1;\nvar FRONT_FACE = 2;\nvar CULL_FACE = 3;\nvar BLEND_FUNC = 4;\n\n/**\n * A WebGL state machines\n *\n * @memberof PIXI\n * @class\n */\n\nvar WebGLState = function () {\n    /**\n     * @param {WebGLRenderingContext} gl - The current WebGL rendering context\n     */\n    function WebGLState(gl) {\n        _classCallCheck(this, WebGLState);\n\n        /**\n         * The current active state\n         *\n         * @member {Uint8Array}\n         */\n        this.activeState = new Uint8Array(16);\n\n        /**\n         * The default state\n         *\n         * @member {Uint8Array}\n         */\n        this.defaultState = new Uint8Array(16);\n\n        // default blend mode..\n        this.defaultState[0] = 1;\n\n        /**\n         * The current state index in the stack\n         *\n         * @member {number}\n         * @private\n         */\n        this.stackIndex = 0;\n\n        /**\n         * The stack holding all the different states\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this.stack = [];\n\n        /**\n         * The current WebGL rendering context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        this.maxAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n        this.attribState = {\n            tempAttribState: new Array(this.maxAttribs),\n            attribState: new Array(this.maxAttribs)\n        };\n\n        this.blendModes = (0, _mapWebGLBlendModesToPixi2.default)(gl);\n\n        // check we have vao..\n        this.nativeVaoExtension = gl.getExtension('OES_vertex_array_object') || gl.getExtension('MOZ_OES_vertex_array_object') || gl.getExtension('WEBKIT_OES_vertex_array_object');\n    }\n\n    /**\n     * Pushes a new active state\n     */\n\n\n    WebGLState.prototype.push = function push() {\n        // next state..\n        var state = this.stack[++this.stackIndex];\n\n        if (!state) {\n            state = this.stack[this.stackIndex] = new Uint8Array(16);\n        }\n\n        // copy state..\n        // set active state so we can force overrides of gl state\n        for (var i = 0; i < this.activeState.length; i++) {\n            this.activeState[i] = state[i];\n        }\n    };\n\n    /**\n     * Pops a state out\n     */\n\n\n    WebGLState.prototype.pop = function pop() {\n        var state = this.stack[--this.stackIndex];\n\n        this.setState(state);\n    };\n\n    /**\n     * Sets the current state\n     *\n     * @param {*} state - The state to set.\n     */\n\n\n    WebGLState.prototype.setState = function setState(state) {\n        this.setBlend(state[BLEND]);\n        this.setDepthTest(state[DEPTH_TEST]);\n        this.setFrontFace(state[FRONT_FACE]);\n        this.setCullFace(state[CULL_FACE]);\n        this.setBlendMode(state[BLEND_FUNC]);\n    };\n\n    /**\n     * Enables or disabled blending.\n     *\n     * @param {boolean} value - Turn on or off webgl blending.\n     */\n\n\n    WebGLState.prototype.setBlend = function setBlend(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[BLEND] === value) {\n            return;\n        }\n\n        this.activeState[BLEND] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.BLEND);\n    };\n\n    /**\n     * Sets the blend mode.\n     *\n     * @param {number} value - The blend mode to set to.\n     */\n\n\n    WebGLState.prototype.setBlendMode = function setBlendMode(value) {\n        if (value === this.activeState[BLEND_FUNC]) {\n            return;\n        }\n\n        this.activeState[BLEND_FUNC] = value;\n\n        this.gl.blendFunc(this.blendModes[value][0], this.blendModes[value][1]);\n    };\n\n    /**\n     * Sets whether to enable or disable depth test.\n     *\n     * @param {boolean} value - Turn on or off webgl depth testing.\n     */\n\n\n    WebGLState.prototype.setDepthTest = function setDepthTest(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[DEPTH_TEST] === value) {\n            return;\n        }\n\n        this.activeState[DEPTH_TEST] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.DEPTH_TEST);\n    };\n\n    /**\n     * Sets whether to enable or disable cull face.\n     *\n     * @param {boolean} value - Turn on or off webgl cull face.\n     */\n\n\n    WebGLState.prototype.setCullFace = function setCullFace(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[CULL_FACE] === value) {\n            return;\n        }\n\n        this.activeState[CULL_FACE] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.CULL_FACE);\n    };\n\n    /**\n     * Sets the gl front face.\n     *\n     * @param {boolean} value - true is clockwise and false is counter-clockwise\n     */\n\n\n    WebGLState.prototype.setFrontFace = function setFrontFace(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[FRONT_FACE] === value) {\n            return;\n        }\n\n        this.activeState[FRONT_FACE] = value;\n        this.gl.frontFace(this.gl[value ? 'CW' : 'CCW']);\n    };\n\n    /**\n     * Disables all the vaos in use\n     *\n     */\n\n\n    WebGLState.prototype.resetAttributes = function resetAttributes() {\n        for (var i = 0; i < this.attribState.tempAttribState.length; i++) {\n            this.attribState.tempAttribState[i] = 0;\n        }\n\n        for (var _i = 0; _i < this.attribState.attribState.length; _i++) {\n            this.attribState.attribState[_i] = 0;\n        }\n\n        // im going to assume one is always active for performance reasons.\n        for (var _i2 = 1; _i2 < this.maxAttribs; _i2++) {\n            this.gl.disableVertexAttribArray(_i2);\n        }\n    };\n\n    // used\n    /**\n     * Resets all the logic and disables the vaos\n     */\n\n\n    WebGLState.prototype.resetToDefault = function resetToDefault() {\n        // unbind any VAO if they exist..\n        if (this.nativeVaoExtension) {\n            this.nativeVaoExtension.bindVertexArrayOES(null);\n        }\n\n        // reset all attributes..\n        this.resetAttributes();\n\n        // set active state so we can force overrides of gl state\n        for (var i = 0; i < this.activeState.length; ++i) {\n            this.activeState[i] = 32;\n        }\n\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        this.setState(this.defaultState);\n    };\n\n    return WebGLState;\n}();\n\nexports.default = WebGLState;\n//# sourceMappingURL=WebGLState.js.map\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = extractUniformsFromSrc;\n\nvar _pixiGlCore = __webpack_require__(5);\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultValue = _pixiGlCore2.default.shader.defaultValue;\n\nfunction extractUniformsFromSrc(vertexSrc, fragmentSrc, mask) {\n    var vertUniforms = extractUniformsFromString(vertexSrc, mask);\n    var fragUniforms = extractUniformsFromString(fragmentSrc, mask);\n\n    return Object.assign(vertUniforms, fragUniforms);\n}\n\nfunction extractUniformsFromString(string) {\n    var maskRegex = new RegExp('^(projectionMatrix|uSampler|filterArea)$');\n\n    var uniforms = {};\n    var nameSplit = void 0;\n\n    // clean the lines a little - remove extra spaces / tabs etc\n    // then split along ';'\n    var lines = string.replace(/\\s+/g, ' ').split(/\\s*;\\s*/);\n\n    // loop through..\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i].trim();\n\n        if (line.indexOf('uniform') > -1) {\n            var splitLine = line.split(' ');\n            var type = splitLine[1];\n\n            var name = splitLine[2];\n            var size = 1;\n\n            if (name.indexOf('[') > -1) {\n                // array!\n                nameSplit = name.split(/\\[|]/);\n                name = nameSplit[0];\n                size *= Number(nameSplit[1]);\n            }\n\n            if (!name.match(maskRegex)) {\n                uniforms[name] = {\n                    value: defaultValue(type, size),\n                    name: name,\n                    type: type\n                };\n            }\n        }\n    }\n\n    return uniforms;\n}\n//# sourceMappingURL=extractUniformsFromSrc.js.map\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.calculateScreenSpaceMatrix = calculateScreenSpaceMatrix;\nexports.calculateNormalizedScreenSpaceMatrix = calculateNormalizedScreenSpaceMatrix;\nexports.calculateSpriteMatrix = calculateSpriteMatrix;\n\nvar _math = __webpack_require__(3);\n\n/*\n * Calculates the mapped matrix\n * @param filterArea {Rectangle} The filter area\n * @param sprite {Sprite} the target sprite\n * @param outputMatrix {Matrix} @alvin\n */\n// TODO playing around here.. this is temporary - (will end up in the shader)\n// this returns a matrix that will normalise map filter cords in the filter to screen space\nfunction calculateScreenSpaceMatrix(outputMatrix, filterArea, textureSize) {\n    // let worldTransform = sprite.worldTransform.copy(Matrix.TEMP_MATRIX),\n    // let texture = {width:1136, height:700};//sprite._texture.baseTexture;\n\n    // TODO unwrap?\n    var mappedMatrix = outputMatrix.identity();\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    mappedMatrix.scale(textureSize.width, textureSize.height);\n\n    return mappedMatrix;\n}\n\nfunction calculateNormalizedScreenSpaceMatrix(outputMatrix, filterArea, textureSize) {\n    var mappedMatrix = outputMatrix.identity();\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    var translateScaleX = textureSize.width / filterArea.width;\n    var translateScaleY = textureSize.height / filterArea.height;\n\n    mappedMatrix.scale(translateScaleX, translateScaleY);\n\n    return mappedMatrix;\n}\n\n// this will map the filter coord so that a texture can be used based on the transform of a sprite\nfunction calculateSpriteMatrix(outputMatrix, filterArea, textureSize, sprite) {\n    var worldTransform = sprite.worldTransform.copy(_math.Matrix.TEMP_MATRIX);\n    var texture = sprite._texture.baseTexture;\n\n    // TODO unwrap?\n    var mappedMatrix = outputMatrix.identity();\n\n    // scale..\n    var ratio = textureSize.height / textureSize.width;\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    mappedMatrix.scale(1, ratio);\n\n    var translateScaleX = textureSize.width / texture.width;\n    var translateScaleY = textureSize.height / texture.height;\n\n    worldTransform.tx /= texture.width * translateScaleX;\n\n    // this...?  free beer for anyone who can explain why this makes sense!\n    worldTransform.ty /= texture.width * translateScaleX;\n    // worldTransform.ty /= texture.height * translateScaleY;\n\n    worldTransform.invert();\n    mappedMatrix.prepend(worldTransform);\n\n    // apply inverse scale..\n    mappedMatrix.scale(1, 1 / ratio);\n\n    mappedMatrix.scale(translateScaleX, translateScaleY);\n\n    mappedMatrix.translate(sprite.anchor.x, sprite.anchor.y);\n\n    return mappedMatrix;\n}\n//# sourceMappingURL=filterTransforms.js.map\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLManager2 = __webpack_require__(9);\n\nvar _WebGLManager3 = _interopRequireDefault(_WebGLManager2);\n\nvar _RenderTarget = __webpack_require__(18);\n\nvar _RenderTarget2 = _interopRequireDefault(_RenderTarget);\n\nvar _Quad = __webpack_require__(49);\n\nvar _Quad2 = _interopRequireDefault(_Quad);\n\nvar _math = __webpack_require__(3);\n\nvar _Shader = __webpack_require__(8);\n\nvar _Shader2 = _interopRequireDefault(_Shader);\n\nvar _filterTransforms = __webpack_require__(110);\n\nvar filterTransforms = _interopRequireWildcard(_filterTransforms);\n\nvar _bitTwiddle = __webpack_require__(21);\n\nvar _bitTwiddle2 = _interopRequireDefault(_bitTwiddle);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @ignore\n * @class\n */\nvar FilterState =\n/**\n *\n */\nfunction FilterState() {\n    _classCallCheck(this, FilterState);\n\n    this.renderTarget = null;\n    this.sourceFrame = new _math.Rectangle();\n    this.destinationFrame = new _math.Rectangle();\n    this.filters = [];\n    this.target = null;\n    this.resolution = 1;\n};\n\n/**\n * @class\n * @memberof PIXI\n * @extends PIXI.WebGLManager\n */\n\n\nvar FilterManager = function (_WebGLManager) {\n    _inherits(FilterManager, _WebGLManager);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    function FilterManager(renderer) {\n        _classCallCheck(this, FilterManager);\n\n        var _this = _possibleConstructorReturn(this, _WebGLManager.call(this, renderer));\n\n        _this.gl = _this.renderer.gl;\n        // know about sprites!\n        _this.quad = new _Quad2.default(_this.gl, renderer.state.attribState);\n\n        _this.shaderCache = {};\n        // todo add default!\n        _this.pool = {};\n\n        _this.filterData = null;\n        return _this;\n    }\n\n    /**\n     * Adds a new filter to the manager.\n     *\n     * @param {PIXI.DisplayObject} target - The target of the filter to render.\n     * @param {PIXI.Filter[]} filters - The filters to apply.\n     */\n\n\n    FilterManager.prototype.pushFilter = function pushFilter(target, filters) {\n        var renderer = this.renderer;\n\n        var filterData = this.filterData;\n\n        if (!filterData) {\n            filterData = this.renderer._activeRenderTarget.filterStack;\n\n            // add new stack\n            var filterState = new FilterState();\n\n            filterState.sourceFrame = filterState.destinationFrame = this.renderer._activeRenderTarget.size;\n            filterState.renderTarget = renderer._activeRenderTarget;\n\n            this.renderer._activeRenderTarget.filterData = filterData = {\n                index: 0,\n                stack: [filterState]\n            };\n\n            this.filterData = filterData;\n        }\n\n        // get the current filter state..\n        var currentState = filterData.stack[++filterData.index];\n\n        if (!currentState) {\n            currentState = filterData.stack[filterData.index] = new FilterState();\n        }\n\n        // for now we go off the filter of the first resolution..\n        var resolution = filters[0].resolution;\n        var padding = filters[0].padding | 0;\n        var targetBounds = target.filterArea || target.getBounds(true);\n        var sourceFrame = currentState.sourceFrame;\n        var destinationFrame = currentState.destinationFrame;\n\n        sourceFrame.x = (targetBounds.x * resolution | 0) / resolution;\n        sourceFrame.y = (targetBounds.y * resolution | 0) / resolution;\n        sourceFrame.width = (targetBounds.width * resolution | 0) / resolution;\n        sourceFrame.height = (targetBounds.height * resolution | 0) / resolution;\n\n        if (filterData.stack[0].renderTarget.transform) {//\n\n            // TODO we should fit the rect around the transform..\n        } else {\n            sourceFrame.fit(filterData.stack[0].destinationFrame);\n        }\n\n        // lets apply the padding After we fit the element to the screen.\n        // this should stop the strange side effects that can occur when cropping to the edges\n        sourceFrame.pad(padding);\n\n        destinationFrame.width = sourceFrame.width;\n        destinationFrame.height = sourceFrame.height;\n\n        // lets play the padding after we fit the element to the screen.\n        // this should stop the strange side effects that can occur when cropping to the edges\n\n        var renderTarget = this.getPotRenderTarget(renderer.gl, sourceFrame.width, sourceFrame.height, resolution);\n\n        currentState.target = target;\n        currentState.filters = filters;\n        currentState.resolution = resolution;\n        currentState.renderTarget = renderTarget;\n\n        // bind the render target to draw the shape in the top corner..\n\n        renderTarget.setFrame(destinationFrame, sourceFrame);\n        // bind the render target\n        renderer.bindRenderTarget(renderTarget);\n\n        // clear the renderTarget\n        renderer.clear(); // [0.5,0.5,0.5, 1.0]);\n    };\n\n    /**\n     * Pops off the filter and applies it.\n     *\n     */\n\n\n    FilterManager.prototype.popFilter = function popFilter() {\n        var filterData = this.filterData;\n\n        var lastState = filterData.stack[filterData.index - 1];\n        var currentState = filterData.stack[filterData.index];\n\n        this.quad.map(currentState.renderTarget.size, currentState.sourceFrame).upload();\n\n        var filters = currentState.filters;\n\n        if (filters.length === 1) {\n            filters[0].apply(this, currentState.renderTarget, lastState.renderTarget, false);\n            this.freePotRenderTarget(currentState.renderTarget);\n        } else {\n            var flip = currentState.renderTarget;\n            var flop = this.getPotRenderTarget(this.renderer.gl, currentState.sourceFrame.width, currentState.sourceFrame.height, currentState.resolution);\n\n            flop.setFrame(currentState.destinationFrame, currentState.sourceFrame);\n\n            var i = 0;\n\n            for (i = 0; i < filters.length - 1; ++i) {\n                filters[i].apply(this, flip, flop, true);\n\n                var t = flip;\n\n                flip = flop;\n                flop = t;\n            }\n\n            filters[i].apply(this, flip, lastState.renderTarget, false);\n\n            this.freePotRenderTarget(flip);\n            this.freePotRenderTarget(flop);\n        }\n\n        filterData.index--;\n\n        if (filterData.index === 0) {\n            this.filterData = null;\n        }\n    };\n\n    /**\n     * Draws a filter.\n     *\n     * @param {PIXI.Filter} filter - The filter to draw.\n     * @param {PIXI.RenderTarget} input - The input render target.\n     * @param {PIXI.RenderTarget} output - The target to output to.\n     * @param {boolean} clear - Should the output be cleared before rendering to it\n     */\n\n\n    FilterManager.prototype.applyFilter = function applyFilter(filter, input, output, clear) {\n        var renderer = this.renderer;\n        var gl = renderer.gl;\n\n        var shader = filter.glShaders[renderer.CONTEXT_UID];\n\n        // cacheing..\n        if (!shader) {\n            if (filter.glShaderKey) {\n                shader = this.shaderCache[filter.glShaderKey];\n\n                if (!shader) {\n                    shader = new _Shader2.default(this.gl, filter.vertexSrc, filter.fragmentSrc);\n\n                    filter.glShaders[renderer.CONTEXT_UID] = this.shaderCache[filter.glShaderKey] = shader;\n                }\n            } else {\n                shader = filter.glShaders[renderer.CONTEXT_UID] = new _Shader2.default(this.gl, filter.vertexSrc, filter.fragmentSrc);\n            }\n\n            // TODO - this only needs to be done once?\n            renderer.bindVao(null);\n\n            this.quad.initVao(shader);\n        }\n\n        renderer.bindVao(this.quad.vao);\n\n        renderer.bindRenderTarget(output);\n\n        if (clear) {\n            gl.disable(gl.SCISSOR_TEST);\n            renderer.clear(); // [1, 1, 1, 1]);\n            gl.enable(gl.SCISSOR_TEST);\n        }\n\n        // in case the render target is being masked using a scissor rect\n        if (output === renderer.maskManager.scissorRenderTarget) {\n            renderer.maskManager.pushScissorMask(null, renderer.maskManager.scissorData);\n        }\n\n        renderer.bindShader(shader);\n\n        // this syncs the pixi filters  uniforms with glsl uniforms\n        this.syncUniforms(shader, filter);\n\n        renderer.state.setBlendMode(filter.blendMode);\n\n        // temporary bypass cache..\n        var tex = this.renderer.boundTextures[0];\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, input.texture.texture);\n\n        this.quad.vao.draw(this.renderer.gl.TRIANGLES, 6, 0);\n\n        // restore cache.\n        gl.bindTexture(gl.TEXTURE_2D, tex._glTextures[this.renderer.CONTEXT_UID].texture);\n    };\n\n    /**\n     * Uploads the uniforms of the filter.\n     *\n     * @param {GLShader} shader - The underlying gl shader.\n     * @param {PIXI.Filter} filter - The filter we are synchronizing.\n     */\n\n\n    FilterManager.prototype.syncUniforms = function syncUniforms(shader, filter) {\n        var uniformData = filter.uniformData;\n        var uniforms = filter.uniforms;\n\n        // 0 is reserved for the pixi texture so we start at 1!\n        var textureCount = 1;\n        var currentState = void 0;\n\n        if (shader.uniforms.data.filterArea) {\n            currentState = this.filterData.stack[this.filterData.index];\n            var filterArea = shader.uniforms.filterArea;\n\n            filterArea[0] = currentState.renderTarget.size.width;\n            filterArea[1] = currentState.renderTarget.size.height;\n            filterArea[2] = currentState.sourceFrame.x;\n            filterArea[3] = currentState.sourceFrame.y;\n\n            shader.uniforms.filterArea = filterArea;\n        }\n\n        // use this to clamp displaced texture coords so they belong to filterArea\n        // see displacementFilter fragment shader for an example\n        if (shader.uniforms.data.filterClamp) {\n            currentState = this.filterData.stack[this.filterData.index];\n\n            var filterClamp = shader.uniforms.filterClamp;\n\n            filterClamp[0] = 0;\n            filterClamp[1] = 0;\n            filterClamp[2] = (currentState.sourceFrame.width - 1) / currentState.renderTarget.size.width;\n            filterClamp[3] = (currentState.sourceFrame.height - 1) / currentState.renderTarget.size.height;\n\n            shader.uniforms.filterClamp = filterClamp;\n        }\n\n        // TODO Cacheing layer..\n        for (var i in uniformData) {\n            if (uniformData[i].type === 'sampler2D' && uniforms[i] !== 0) {\n                if (uniforms[i].baseTexture) {\n                    shader.uniforms[i] = this.renderer.bindTexture(uniforms[i].baseTexture, textureCount);\n                } else {\n                    shader.uniforms[i] = textureCount;\n\n                    // TODO\n                    // this is helpful as renderTargets can also be set.\n                    // Although thinking about it, we could probably\n                    // make the filter texture cache return a RenderTexture\n                    // rather than a renderTarget\n                    var gl = this.renderer.gl;\n\n                    gl.activeTexture(gl.TEXTURE0 + textureCount);\n                    uniforms[i].texture.bind();\n                }\n\n                textureCount++;\n            } else if (uniformData[i].type === 'mat3') {\n                // check if its pixi matrix..\n                if (uniforms[i].a !== undefined) {\n                    shader.uniforms[i] = uniforms[i].toArray(true);\n                } else {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            } else if (uniformData[i].type === 'vec2') {\n                // check if its a point..\n                if (uniforms[i].x !== undefined) {\n                    var val = shader.uniforms[i] || new Float32Array(2);\n\n                    val[0] = uniforms[i].x;\n                    val[1] = uniforms[i].y;\n                    shader.uniforms[i] = val;\n                } else {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            } else if (uniformData[i].type === 'float') {\n                if (shader.uniforms.data[i].value !== uniformData[i]) {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            } else {\n                shader.uniforms[i] = uniforms[i];\n            }\n        }\n    };\n\n    /**\n     * Gets a render target from the pool, or creates a new one.\n     *\n     * @param {boolean} clear - Should we clear the render texture when we get it?\n     * @param {number} resolution - The resolution of the target.\n     * @return {PIXI.RenderTarget} The new render target\n     */\n\n\n    FilterManager.prototype.getRenderTarget = function getRenderTarget(clear, resolution) {\n        var currentState = this.filterData.stack[this.filterData.index];\n        var renderTarget = this.getPotRenderTarget(this.renderer.gl, currentState.sourceFrame.width, currentState.sourceFrame.height, resolution || currentState.resolution);\n\n        renderTarget.setFrame(currentState.destinationFrame, currentState.sourceFrame);\n\n        return renderTarget;\n    };\n\n    /**\n     * Returns a render target to the pool.\n     *\n     * @param {PIXI.RenderTarget} renderTarget - The render target to return.\n     */\n\n\n    FilterManager.prototype.returnRenderTarget = function returnRenderTarget(renderTarget) {\n        this.freePotRenderTarget(renderTarget);\n    };\n\n    /**\n     * Calculates the mapped matrix.\n     *\n     * TODO playing around here.. this is temporary - (will end up in the shader)\n     * this returns a matrix that will normalise map filter cords in the filter to screen space\n     *\n     * @param {PIXI.Matrix} outputMatrix - the matrix to output to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */\n\n\n    FilterManager.prototype.calculateScreenSpaceMatrix = function calculateScreenSpaceMatrix(outputMatrix) {\n        var currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateScreenSpaceMatrix(outputMatrix, currentState.sourceFrame, currentState.renderTarget.size);\n    };\n\n    /**\n     * Multiply vTextureCoord to this matrix to achieve (0,0,1,1) for filterArea\n     *\n     * @param {PIXI.Matrix} outputMatrix - The matrix to output to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */\n\n\n    FilterManager.prototype.calculateNormalizedScreenSpaceMatrix = function calculateNormalizedScreenSpaceMatrix(outputMatrix) {\n        var currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateNormalizedScreenSpaceMatrix(outputMatrix, currentState.sourceFrame, currentState.renderTarget.size, currentState.destinationFrame);\n    };\n\n    /**\n     * This will map the filter coord so that a texture can be used based on the transform of a sprite\n     *\n     * @param {PIXI.Matrix} outputMatrix - The matrix to output to.\n     * @param {PIXI.Sprite} sprite - The sprite to map to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */\n\n\n    FilterManager.prototype.calculateSpriteMatrix = function calculateSpriteMatrix(outputMatrix, sprite) {\n        var currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateSpriteMatrix(outputMatrix, currentState.sourceFrame, currentState.renderTarget.size, sprite);\n    };\n\n    /**\n     * Destroys this Filter Manager.\n     *\n     */\n\n\n    FilterManager.prototype.destroy = function destroy() {\n        this.shaderCache = [];\n        this.emptyPool();\n    };\n\n    /**\n     * Gets a Power-of-Two render texture.\n     *\n     * TODO move to a seperate class could be on renderer?\n     * also - could cause issue with multiple contexts?\n     *\n     * @private\n     * @param {WebGLRenderingContext} gl - The webgl rendering context\n     * @param {number} minWidth - The minimum width of the render target.\n     * @param {number} minHeight - The minimum height of the render target.\n     * @param {number} resolution - The resolution of the render target.\n     * @return {PIXI.RenderTarget} The new render target.\n     */\n\n\n    FilterManager.prototype.getPotRenderTarget = function getPotRenderTarget(gl, minWidth, minHeight, resolution) {\n        // TODO you could return a bigger texture if there is not one in the pool?\n        minWidth = _bitTwiddle2.default.nextPow2(minWidth * resolution);\n        minHeight = _bitTwiddle2.default.nextPow2(minHeight * resolution);\n\n        var key = (minWidth & 0xFFFF) << 16 | minHeight & 0xFFFF;\n\n        if (!this.pool[key]) {\n            this.pool[key] = [];\n        }\n\n        var renderTarget = this.pool[key].pop();\n\n        // creating render target will cause texture to be bound!\n        if (!renderTarget) {\n            // temporary bypass cache..\n            var tex = this.renderer.boundTextures[0];\n\n            gl.activeTexture(gl.TEXTURE0);\n\n            // internally - this will cause a texture to be bound..\n            renderTarget = new _RenderTarget2.default(gl, minWidth, minHeight, null, 1);\n\n            // set the current one back\n            gl.bindTexture(gl.TEXTURE_2D, tex._glTextures[this.renderer.CONTEXT_UID].texture);\n        }\n\n        // manually tweak the resolution...\n        // this will not modify the size of the frame buffer, just its resolution.\n        renderTarget.resolution = resolution;\n        renderTarget.defaultFrame.width = renderTarget.size.width = minWidth / resolution;\n        renderTarget.defaultFrame.height = renderTarget.size.height = minHeight / resolution;\n\n        return renderTarget;\n    };\n\n    /**\n     * Empties the texture pool.\n     *\n     */\n\n\n    FilterManager.prototype.emptyPool = function emptyPool() {\n        for (var i in this.pool) {\n            var textures = this.pool[i];\n\n            if (textures) {\n                for (var j = 0; j < textures.length; j++) {\n                    textures[j].destroy(true);\n                }\n            }\n        }\n\n        this.pool = {};\n    };\n\n    /**\n     * Frees a render target back into the pool.\n     *\n     * @param {PIXI.RenderTarget} renderTarget - The renderTarget to free\n     */\n\n\n    FilterManager.prototype.freePotRenderTarget = function freePotRenderTarget(renderTarget) {\n        var minWidth = renderTarget.size.width * renderTarget.resolution;\n        var minHeight = renderTarget.size.height * renderTarget.resolution;\n        var key = (minWidth & 0xFFFF) << 16 | minHeight & 0xFFFF;\n\n        this.pool[key].push(renderTarget);\n    };\n\n    return FilterManager;\n}(_WebGLManager3.default);\n\nexports.default = FilterManager;\n//# sourceMappingURL=FilterManager.js.map\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLManager2 = __webpack_require__(9);\n\nvar _WebGLManager3 = _interopRequireDefault(_WebGLManager2);\n\nvar _SpriteMaskFilter = __webpack_require__(48);\n\nvar _SpriteMaskFilter2 = _interopRequireDefault(_SpriteMaskFilter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nvar MaskManager = function (_WebGLManager) {\n    _inherits(MaskManager, _WebGLManager);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    function MaskManager(renderer) {\n        _classCallCheck(this, MaskManager);\n\n        // TODO - we don't need both!\n        var _this = _possibleConstructorReturn(this, _WebGLManager.call(this, renderer));\n\n        _this.scissor = false;\n        _this.scissorData = null;\n        _this.scissorRenderTarget = null;\n\n        _this.enableScissor = true;\n\n        _this.alphaMaskPool = [];\n        _this.alphaMaskIndex = 0;\n        return _this;\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to push the mask to\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */\n\n\n    MaskManager.prototype.pushMask = function pushMask(target, maskData) {\n        if (maskData.texture) {\n            this.pushSpriteMask(target, maskData);\n        } else if (this.enableScissor && !this.scissor && !this.renderer.stencilManager.stencilMaskStack.length && maskData.isFastRect()) {\n            var matrix = maskData.worldTransform;\n\n            var rot = Math.atan2(matrix.b, matrix.a);\n\n            // use the nearest degree!\n            rot = Math.round(rot * (180 / Math.PI));\n\n            if (rot % 90) {\n                this.pushStencilMask(maskData);\n            } else {\n                this.pushScissorMask(target, maskData);\n            }\n        } else {\n            this.pushStencilMask(maskData);\n        }\n    };\n\n    /**\n     * Removes the last mask from the mask stack and doesn't return it.\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to pop the mask from\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */\n\n\n    MaskManager.prototype.popMask = function popMask(target, maskData) {\n        if (maskData.texture) {\n            this.popSpriteMask(target, maskData);\n        } else if (this.enableScissor && !this.renderer.stencilManager.stencilMaskStack.length) {\n            this.popScissorMask(target, maskData);\n        } else {\n            this.popStencilMask(target, maskData);\n        }\n    };\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.RenderTarget} target - Display Object to push the sprite mask to\n     * @param {PIXI.Sprite} maskData - Sprite to be used as the mask\n     */\n\n\n    MaskManager.prototype.pushSpriteMask = function pushSpriteMask(target, maskData) {\n        var alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];\n\n        if (!alphaMaskFilter) {\n            alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new _SpriteMaskFilter2.default(maskData)];\n        }\n\n        alphaMaskFilter[0].resolution = this.renderer.resolution;\n        alphaMaskFilter[0].maskSprite = maskData;\n\n        // TODO - may cause issues!\n        target.filterArea = maskData.getBounds(true);\n\n        this.renderer.filterManager.pushFilter(target, alphaMaskFilter);\n\n        this.alphaMaskIndex++;\n    };\n\n    /**\n     * Removes the last filter from the filter stack and doesn't return it.\n     *\n     */\n\n\n    MaskManager.prototype.popSpriteMask = function popSpriteMask() {\n        this.renderer.filterManager.popFilter();\n        this.alphaMaskIndex--;\n    };\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */\n\n\n    MaskManager.prototype.pushStencilMask = function pushStencilMask(maskData) {\n        this.renderer.currentRenderer.stop();\n        this.renderer.stencilManager.pushStencil(maskData);\n    };\n\n    /**\n     * Removes the last filter from the filter stack and doesn't return it.\n     *\n     */\n\n\n    MaskManager.prototype.popStencilMask = function popStencilMask() {\n        this.renderer.currentRenderer.stop();\n        this.renderer.stencilManager.popStencil();\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to push the mask to\n     * @param {PIXI.Graphics} maskData - The masking data.\n     */\n\n\n    MaskManager.prototype.pushScissorMask = function pushScissorMask(target, maskData) {\n        maskData.renderable = true;\n\n        var renderTarget = this.renderer._activeRenderTarget;\n\n        var bounds = maskData.getBounds();\n\n        bounds.fit(renderTarget.size);\n        maskData.renderable = false;\n\n        this.renderer.gl.enable(this.renderer.gl.SCISSOR_TEST);\n\n        var resolution = this.renderer.resolution;\n\n        this.renderer.gl.scissor(bounds.x * resolution, (renderTarget.root ? renderTarget.size.height - bounds.y - bounds.height : bounds.y) * resolution, bounds.width * resolution, bounds.height * resolution);\n\n        this.scissorRenderTarget = renderTarget;\n        this.scissorData = maskData;\n        this.scissor = true;\n    };\n\n    /**\n     *\n     *\n     */\n\n\n    MaskManager.prototype.popScissorMask = function popScissorMask() {\n        this.scissorRenderTarget = null;\n        this.scissorData = null;\n        this.scissor = false;\n\n        // must be scissor!\n        var gl = this.renderer.gl;\n\n        gl.disable(gl.SCISSOR_TEST);\n    };\n\n    return MaskManager;\n}(_WebGLManager3.default);\n\nexports.default = MaskManager;\n//# sourceMappingURL=MaskManager.js.map\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLManager2 = __webpack_require__(9);\n\nvar _WebGLManager3 = _interopRequireDefault(_WebGLManager2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nvar StencilManager = function (_WebGLManager) {\n    _inherits(StencilManager, _WebGLManager);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    function StencilManager(renderer) {\n        _classCallCheck(this, StencilManager);\n\n        var _this = _possibleConstructorReturn(this, _WebGLManager.call(this, renderer));\n\n        _this.stencilMaskStack = null;\n        return _this;\n    }\n\n    /**\n     * Changes the mask stack that is used by this manager.\n     *\n     * @param {PIXI.Graphics[]} stencilMaskStack - The mask stack\n     */\n\n\n    StencilManager.prototype.setMaskStack = function setMaskStack(stencilMaskStack) {\n        this.stencilMaskStack = stencilMaskStack;\n\n        var gl = this.renderer.gl;\n\n        if (stencilMaskStack.length === 0) {\n            gl.disable(gl.STENCIL_TEST);\n        } else {\n            gl.enable(gl.STENCIL_TEST);\n        }\n    };\n\n    /**\n     * Applies the Mask and adds it to the current filter stack. @alvin\n     *\n     * @param {PIXI.Graphics} graphics - The mask\n     */\n\n\n    StencilManager.prototype.pushStencil = function pushStencil(graphics) {\n        this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n        this.renderer._activeRenderTarget.attachStencilBuffer();\n\n        var gl = this.renderer.gl;\n        var sms = this.stencilMaskStack;\n\n        if (sms.length === 0) {\n            gl.enable(gl.STENCIL_TEST);\n            gl.clear(gl.STENCIL_BUFFER_BIT);\n            gl.stencilFunc(gl.ALWAYS, 1, 1);\n        }\n\n        sms.push(graphics);\n\n        gl.colorMask(false, false, false, false);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);\n\n        this.renderer.plugins.graphics.render(graphics);\n\n        gl.colorMask(true, true, true, true);\n        gl.stencilFunc(gl.NOTEQUAL, 0, sms.length);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n    };\n\n    /**\n     * TODO @alvin\n     */\n\n\n    StencilManager.prototype.popStencil = function popStencil() {\n        this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n        var gl = this.renderer.gl;\n        var sms = this.stencilMaskStack;\n\n        var graphics = sms.pop();\n\n        if (sms.length === 0) {\n            // the stack is empty!\n            gl.disable(gl.STENCIL_TEST);\n        } else {\n            gl.colorMask(false, false, false, false);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);\n\n            this.renderer.plugins.graphics.render(graphics);\n\n            gl.colorMask(true, true, true, true);\n            gl.stencilFunc(gl.NOTEQUAL, 0, sms.length);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n        }\n    };\n\n    /**\n     * Destroys the mask stack.\n     *\n     */\n\n\n    StencilManager.prototype.destroy = function destroy() {\n        _WebGLManager3.default.prototype.destroy.call(this);\n\n        this.stencilMaskStack.stencilStack = null;\n    };\n\n    return StencilManager;\n}(_WebGLManager3.default);\n\nexports.default = StencilManager;\n//# sourceMappingURL=StencilManager.js.map\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = checkMaxIfStatmentsInShader;\n\nvar _pixiGlCore = __webpack_require__(5);\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar fragTemplate = ['precision mediump float;', 'void main(void){', 'float test = 0.1;', '%forloop%', 'gl_FragColor = vec4(0.0);', '}'].join('\\n');\n\nfunction checkMaxIfStatmentsInShader(maxIfs, gl) {\n    var createTempContext = !gl;\n\n    // @if DEBUG\n    if (maxIfs === 0) {\n        throw new Error('Invalid value of `0` passed to `checkMaxIfStatementsInShader`');\n    }\n    // @endif\n\n    if (createTempContext) {\n        var tinyCanvas = document.createElement('canvas');\n\n        tinyCanvas.width = 1;\n        tinyCanvas.height = 1;\n\n        gl = _pixiGlCore2.default.createContext(tinyCanvas);\n    }\n\n    var shader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    while (true) // eslint-disable-line no-constant-condition\n    {\n        var fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\n\n        gl.shaderSource(shader, fragmentSrc);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            maxIfs = maxIfs / 2 | 0;\n        } else {\n            // valid!\n            break;\n        }\n    }\n\n    if (createTempContext) {\n        // get rid of context\n        if (gl.getExtension('WEBGL_lose_context')) {\n            gl.getExtension('WEBGL_lose_context').loseContext();\n        }\n    }\n\n    return maxIfs;\n}\n\nfunction generateIfTestSrc(maxIfs) {\n    var src = '';\n\n    for (var i = 0; i < maxIfs; ++i) {\n        if (i > 0) {\n            src += '\\nelse ';\n        }\n\n        if (i < maxIfs - 1) {\n            src += 'if(test == ' + i + '.0){}';\n        }\n    }\n\n    return src;\n}\n//# sourceMappingURL=checkMaxIfStatmentsInShader.js.map\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = mapWebGLBlendModesToPixi;\n\nvar _const = __webpack_require__(1);\n\n/**\n * Maps gl blend combinations to WebGL.\n *\n * @memberof PIXI\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nfunction mapWebGLBlendModesToPixi(gl) {\n    var array = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    // TODO - premultiply alpha would be different.\n    // add a boolean for that!\n    array[_const.BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.ADD] = [gl.ONE, gl.DST_ALPHA];\n    array[_const.BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR];\n    array[_const.BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n    return array;\n}\n//# sourceMappingURL=mapWebGLBlendModesToPixi.js.map\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = mapWebGLDrawModesToPixi;\n\nvar _const = __webpack_require__(1);\n\n/**\n * Generic Mask Stack data structure.\n *\n * @memberof PIXI\n * @function mapWebGLDrawModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n * @param {object} [object={}] - The object to map into\n * @return {object} The mapped draw modes.\n */\nfunction mapWebGLDrawModesToPixi(gl) {\n  var object = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  object[_const.DRAW_MODES.POINTS] = gl.POINTS;\n  object[_const.DRAW_MODES.LINES] = gl.LINES;\n  object[_const.DRAW_MODES.LINE_LOOP] = gl.LINE_LOOP;\n  object[_const.DRAW_MODES.LINE_STRIP] = gl.LINE_STRIP;\n  object[_const.DRAW_MODES.TRIANGLES] = gl.TRIANGLES;\n  object[_const.DRAW_MODES.TRIANGLE_STRIP] = gl.TRIANGLE_STRIP;\n  object[_const.DRAW_MODES.TRIANGLE_FAN] = gl.TRIANGLE_FAN;\n\n  return object;\n}\n//# sourceMappingURL=mapWebGLDrawModesToPixi.js.map\n\n/***/ },\n/* 117 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = validateContext;\nfunction validateContext(gl) {\n    var attributes = gl.getContextAttributes();\n\n    // this is going to be fairly simple for now.. but at least we have room to grow!\n    if (!attributes.stencil) {\n        /* eslint-disable no-console */\n        console.warn('Provided WebGL context does not have a stencil buffer, masks may not render correctly');\n        /* eslint-enable no-console */\n    }\n}\n//# sourceMappingURL=validateContext.js.map\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _CanvasRenderer = __webpack_require__(16);\n\nvar _CanvasRenderer2 = _interopRequireDefault(_CanvasRenderer);\n\nvar _const = __webpack_require__(1);\n\nvar _math = __webpack_require__(3);\n\nvar _CanvasTinter = __webpack_require__(28);\n\nvar _CanvasTinter2 = _interopRequireDefault(_CanvasTinter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar canvasRenderWorldTransform = new _math.Matrix();\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now\n * share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's CanvasSpriteRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/CanvasSpriteRenderer.java\n */\n\n/**\n * Renderer dedicated to drawing and batching sprites.\n *\n * @class\n * @private\n * @memberof PIXI\n */\n\nvar CanvasSpriteRenderer = function () {\n    /**\n     * @param {PIXI.WebGLRenderer} renderer -The renderer sprite this batch works for.\n     */\n    function CanvasSpriteRenderer(renderer) {\n        _classCallCheck(this, CanvasSpriteRenderer);\n\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders the sprite object.\n     *\n     * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\n     */\n\n\n    CanvasSpriteRenderer.prototype.render = function render(sprite) {\n        var texture = sprite._texture;\n        var renderer = this.renderer;\n\n        var width = texture._frame.width;\n        var height = texture._frame.height;\n\n        var wt = sprite.transform.worldTransform;\n        var dx = 0;\n        var dy = 0;\n\n        if (texture.orig.width <= 0 || texture.orig.height <= 0 || !texture.baseTexture.source) {\n            return;\n        }\n\n        renderer.setBlendMode(sprite.blendMode);\n\n        //  Ignore null sources\n        if (texture.valid) {\n            renderer.context.globalAlpha = sprite.worldAlpha;\n\n            // If smoothingEnabled is supported and we need to change the smoothing property for sprite texture\n            var smoothingEnabled = texture.baseTexture.scaleMode === _const.SCALE_MODES.LINEAR;\n\n            if (renderer.smoothProperty && renderer.context[renderer.smoothProperty] !== smoothingEnabled) {\n                renderer.context[renderer.smoothProperty] = smoothingEnabled;\n            }\n\n            if (texture.trim) {\n                dx = texture.trim.width / 2 + texture.trim.x - sprite.anchor.x * texture.orig.width;\n                dy = texture.trim.height / 2 + texture.trim.y - sprite.anchor.y * texture.orig.height;\n            } else {\n                dx = (0.5 - sprite.anchor.x) * texture.orig.width;\n                dy = (0.5 - sprite.anchor.y) * texture.orig.height;\n            }\n\n            if (texture.rotate) {\n                wt.copy(canvasRenderWorldTransform);\n                wt = canvasRenderWorldTransform;\n                _math.GroupD8.matrixAppendRotationInv(wt, texture.rotate, dx, dy);\n                // the anchor has already been applied above, so lets set it to zero\n                dx = 0;\n                dy = 0;\n            }\n\n            dx -= width / 2;\n            dy -= height / 2;\n\n            // Allow for pixel rounding\n            if (renderer.roundPixels) {\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution | 0, wt.ty * renderer.resolution | 0);\n\n                dx = dx | 0;\n                dy = dy | 0;\n            } else {\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n\n            var resolution = texture.baseTexture.resolution;\n\n            if (sprite.tint !== 0xFFFFFF) {\n                if (sprite.cachedTint !== sprite.tint) {\n                    sprite.cachedTint = sprite.tint;\n\n                    // TODO clean up caching - how to clean up the caches?\n                    sprite.tintedTexture = _CanvasTinter2.default.getTintedTexture(sprite, sprite.tint);\n                }\n\n                renderer.context.drawImage(sprite.tintedTexture, 0, 0, width * resolution, height * resolution, dx * renderer.resolution, dy * renderer.resolution, width * renderer.resolution, height * renderer.resolution);\n            } else {\n                renderer.context.drawImage(texture.baseTexture.source, texture._frame.x * resolution, texture._frame.y * resolution, width * resolution, height * resolution, dx * renderer.resolution, dy * renderer.resolution, width * renderer.resolution, height * renderer.resolution);\n            }\n        }\n    };\n\n    /**\n     * destroy the sprite object.\n     *\n     */\n\n\n    CanvasSpriteRenderer.prototype.destroy = function destroy() {\n        this.renderer = null;\n    };\n\n    return CanvasSpriteRenderer;\n}();\n\nexports.default = CanvasSpriteRenderer;\n\n\n_CanvasRenderer2.default.registerPlugin('sprite', CanvasSpriteRenderer);\n//# sourceMappingURL=CanvasSpriteRenderer.js.map\n\n/***/ },\n/* 119 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class\n */\nvar Buffer = function () {\n  /**\n   * @param {number} size - The size of the buffer in bytes.\n   */\n  function Buffer(size) {\n    _classCallCheck(this, Buffer);\n\n    this.vertices = new ArrayBuffer(size);\n\n    /**\n     * View on the vertices as a Float32Array for positions\n     *\n     * @member {Float32Array}\n     */\n    this.float32View = new Float32Array(this.vertices);\n\n    /**\n     * View on the vertices as a Uint32Array for uvs\n     *\n     * @member {Float32Array}\n     */\n    this.uint32View = new Uint32Array(this.vertices);\n  }\n\n  /**\n   * Destroys the buffer.\n   *\n   */\n\n\n  Buffer.prototype.destroy = function destroy() {\n    this.vertices = null;\n    this.positions = null;\n    this.uvs = null;\n    this.colors = null;\n  };\n\n  return Buffer;\n}();\n\nexports.default = Buffer;\n//# sourceMappingURL=BatchBuffer.js.map\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _ObjectRenderer2 = __webpack_require__(17);\n\nvar _ObjectRenderer3 = _interopRequireDefault(_ObjectRenderer2);\n\nvar _WebGLRenderer = __webpack_require__(26);\n\nvar _WebGLRenderer2 = _interopRequireDefault(_WebGLRenderer);\n\nvar _createIndicesForQuads = __webpack_require__(30);\n\nvar _createIndicesForQuads2 = _interopRequireDefault(_createIndicesForQuads);\n\nvar _generateMultiTextureShader = __webpack_require__(121);\n\nvar _generateMultiTextureShader2 = _interopRequireDefault(_generateMultiTextureShader);\n\nvar _checkMaxIfStatmentsInShader = __webpack_require__(114);\n\nvar _checkMaxIfStatmentsInShader2 = _interopRequireDefault(_checkMaxIfStatmentsInShader);\n\nvar _BatchBuffer = __webpack_require__(119);\n\nvar _BatchBuffer2 = _interopRequireDefault(_BatchBuffer);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _pixiGlCore = __webpack_require__(5);\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nvar _bitTwiddle = __webpack_require__(21);\n\nvar _bitTwiddle2 = _interopRequireDefault(_bitTwiddle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar SPRITE_BATCH_SIZE = _settings2.default.SPRITE_BATCH_SIZE,\n    SPRITE_MAX_TEXTURES = _settings2.default.SPRITE_MAX_TEXTURES,\n    CAN_UPLOAD_SAME_BUFFER = _settings2.default.CAN_UPLOAD_SAME_BUFFER;\n\n\nvar TICK = 0;\nvar TEXTURE_TICK = 0;\n\n/**\n * Renderer dedicated to drawing and batching sprites.\n *\n * @class\n * @private\n * @memberof PIXI\n * @extends PIXI.ObjectRenderer\n */\n\nvar SpriteRenderer = function (_ObjectRenderer) {\n    _inherits(SpriteRenderer, _ObjectRenderer);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\n     */\n    function SpriteRenderer(renderer) {\n        _classCallCheck(this, SpriteRenderer);\n\n        /**\n         * Number of values sent in the vertex buffer.\n         * positionX, positionY, colorR, colorG, colorB = 5\n         *\n         * @member {number}\n         */\n        var _this = _possibleConstructorReturn(this, _ObjectRenderer.call(this, renderer));\n\n        _this.vertSize = 5;\n\n        /**\n         * The size of the vertex information in bytes.\n         *\n         * @member {number}\n         */\n        _this.vertByteSize = _this.vertSize * 4;\n\n        /**\n         * The number of images in the SpriteBatch before it flushes.\n         *\n         * @member {number}\n         */\n        _this.size = SPRITE_BATCH_SIZE; // 2000 is a nice balance between mobile / desktop\n\n        // the total number of bytes in our batch\n        // let numVerts = this.size * 4 * this.vertByteSize;\n\n        _this.buffers = [];\n        for (var i = 1; i <= _bitTwiddle2.default.nextPow2(_this.size); i *= 2) {\n            _this.buffers.push(new _BatchBuffer2.default(i * 4 * _this.vertByteSize));\n        }\n\n        /**\n         * Holds the indices of the geometry (quads) to draw\n         *\n         * @member {Uint16Array}\n         */\n        _this.indices = (0, _createIndicesForQuads2.default)(_this.size);\n\n        /**\n         * The default shaders that is used if a sprite doesn't have a more specific one.\n         * there is a shader for each number of textures that can be rendererd.\n         * These shaders will also be generated on the fly as required.\n         * @member {PIXI.Shader[]}\n         */\n        _this.shader = null;\n\n        _this.currentIndex = 0;\n        TICK = 0;\n        _this.groups = [];\n\n        for (var k = 0; k < _this.size; k++) {\n            _this.groups[k] = { textures: [], textureCount: 0, ids: [], size: 0, start: 0, blend: 0 };\n        }\n\n        _this.sprites = [];\n\n        _this.vertexBuffers = [];\n        _this.vaos = [];\n\n        _this.vaoMax = 2;\n        _this.vertexCount = 0;\n\n        _this.renderer.on('prerender', _this.onPrerender, _this);\n        return _this;\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */\n\n\n    SpriteRenderer.prototype.onContextChange = function onContextChange() {\n        var gl = this.renderer.gl;\n\n        // step 1: first check max textures the GPU can handle.\n        this.MAX_TEXTURES = Math.min(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS), SPRITE_MAX_TEXTURES);\n\n        // step 2: check the maximum number of if statements the shader can have too..\n        this.MAX_TEXTURES = (0, _checkMaxIfStatmentsInShader2.default)(this.MAX_TEXTURES, gl);\n\n        var shader = this.shader = (0, _generateMultiTextureShader2.default)(gl, this.MAX_TEXTURES);\n\n        // create a couple of buffers\n        this.indexBuffer = _pixiGlCore2.default.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n        // we use the second shader as the first one depending on your browser may omit aTextureId\n        // as it is not used by the shader so is optimized out.\n\n        this.renderer.bindVao(null);\n\n        for (var i = 0; i < this.vaoMax; i++) {\n            this.vertexBuffers[i] = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n\n            /* eslint-disable max-len */\n\n            // build the vao object that will render..\n            this.vaos[i] = this.renderer.createVao().addIndex(this.indexBuffer).addAttribute(this.vertexBuffers[i], shader.attributes.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0).addAttribute(this.vertexBuffers[i], shader.attributes.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4).addAttribute(this.vertexBuffers[i], shader.attributes.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 3 * 4).addAttribute(this.vertexBuffers[i], shader.attributes.aTextureId, gl.FLOAT, false, this.vertByteSize, 4 * 4);\n\n            /* eslint-disable max-len */\n        }\n\n        this.vao = this.vaos[0];\n        this.currentBlendMode = 99999;\n\n        this.boundTextures = new Array(this.MAX_TEXTURES);\n    };\n\n    /**\n     * Called before the renderer starts rendering.\n     *\n     */\n\n\n    SpriteRenderer.prototype.onPrerender = function onPrerender() {\n        this.vertexCount = 0;\n    };\n\n    /**\n     * Renders the sprite object.\n     *\n     * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\n     */\n\n\n    SpriteRenderer.prototype.render = function render(sprite) {\n        // TODO set blend modes..\n        // check texture..\n        if (this.currentIndex >= this.size) {\n            this.flush();\n        }\n\n        // get the uvs for the texture\n\n        // if the uvs have not updated then no point rendering just yet!\n        if (!sprite.texture._uvs) {\n            return;\n        }\n\n        // push a texture.\n        // increment the batchsize\n        this.sprites[this.currentIndex++] = sprite;\n    };\n\n    /**\n     * Renders the content and empties the current batch.\n     *\n     */\n\n\n    SpriteRenderer.prototype.flush = function flush() {\n        if (this.currentIndex === 0) {\n            return;\n        }\n\n        var gl = this.renderer.gl;\n        var MAX_TEXTURES = this.MAX_TEXTURES;\n\n        var np2 = _bitTwiddle2.default.nextPow2(this.currentIndex);\n        var log2 = _bitTwiddle2.default.log2(np2);\n        var buffer = this.buffers[log2];\n\n        var sprites = this.sprites;\n        var groups = this.groups;\n\n        var float32View = buffer.float32View;\n        var uint32View = buffer.uint32View;\n\n        var boundTextures = this.boundTextures;\n        var rendererBoundTextures = this.renderer.boundTextures;\n        var touch = this.renderer.textureGC.count;\n\n        var index = 0;\n        var nextTexture = void 0;\n        var currentTexture = void 0;\n        var groupCount = 1;\n        var textureCount = 0;\n        var currentGroup = groups[0];\n        var vertexData = void 0;\n        var uvs = void 0;\n        var blendMode = sprites[0].blendMode;\n\n        currentGroup.textureCount = 0;\n        currentGroup.start = 0;\n        currentGroup.blend = blendMode;\n\n        TICK++;\n\n        var i = void 0;\n\n        // copy textures..\n        for (i = 0; i < MAX_TEXTURES; ++i) {\n            boundTextures[i] = rendererBoundTextures[i];\n            boundTextures[i]._virtalBoundId = i;\n        }\n\n        for (i = 0; i < this.currentIndex; ++i) {\n            // upload the sprite elemetns...\n            // they have all ready been calculated so we just need to push them into the buffer.\n            var sprite = sprites[i];\n\n            nextTexture = sprite._texture.baseTexture;\n\n            if (blendMode !== sprite.blendMode) {\n                // finish a group..\n                blendMode = sprite.blendMode;\n\n                // force the batch to break!\n                currentTexture = null;\n                textureCount = MAX_TEXTURES;\n                TICK++;\n            }\n\n            if (currentTexture !== nextTexture) {\n                currentTexture = nextTexture;\n\n                if (nextTexture._enabled !== TICK) {\n                    if (textureCount === MAX_TEXTURES) {\n                        TICK++;\n\n                        currentGroup.size = i - currentGroup.start;\n\n                        textureCount = 0;\n\n                        currentGroup = groups[groupCount++];\n                        currentGroup.blend = blendMode;\n                        currentGroup.textureCount = 0;\n                        currentGroup.start = i;\n                    }\n\n                    nextTexture.touched = touch;\n\n                    if (nextTexture._virtalBoundId === -1) {\n                        for (var j = 0; j < MAX_TEXTURES; ++j) {\n                            var tIndex = (j + TEXTURE_TICK) % MAX_TEXTURES;\n\n                            var t = boundTextures[tIndex];\n\n                            if (t._enabled !== TICK) {\n                                TEXTURE_TICK++;\n\n                                t._virtalBoundId = -1;\n\n                                nextTexture._virtalBoundId = tIndex;\n\n                                boundTextures[tIndex] = nextTexture;\n                                break;\n                            }\n                        }\n                    }\n\n                    nextTexture._enabled = TICK;\n\n                    currentGroup.textureCount++;\n                    currentGroup.ids[textureCount] = nextTexture._virtalBoundId;\n                    currentGroup.textures[textureCount++] = nextTexture;\n                }\n            }\n\n            vertexData = sprite.vertexData;\n\n            // TODO this sum does not need to be set each frame..\n            uvs = sprite._texture._uvs.uvsUint32;\n\n            if (this.renderer.roundPixels) {\n                var resolution = this.renderer.resolution;\n\n                // xy\n                float32View[index] = (vertexData[0] * resolution | 0) / resolution;\n                float32View[index + 1] = (vertexData[1] * resolution | 0) / resolution;\n\n                // xy\n                float32View[index + 5] = (vertexData[2] * resolution | 0) / resolution;\n                float32View[index + 6] = (vertexData[3] * resolution | 0) / resolution;\n\n                // xy\n                float32View[index + 10] = (vertexData[4] * resolution | 0) / resolution;\n                float32View[index + 11] = (vertexData[5] * resolution | 0) / resolution;\n\n                // xy\n                float32View[index + 15] = (vertexData[6] * resolution | 0) / resolution;\n                float32View[index + 16] = (vertexData[7] * resolution | 0) / resolution;\n            } else {\n                // xy\n                float32View[index] = vertexData[0];\n                float32View[index + 1] = vertexData[1];\n\n                // xy\n                float32View[index + 5] = vertexData[2];\n                float32View[index + 6] = vertexData[3];\n\n                // xy\n                float32View[index + 10] = vertexData[4];\n                float32View[index + 11] = vertexData[5];\n\n                // xy\n                float32View[index + 15] = vertexData[6];\n                float32View[index + 16] = vertexData[7];\n            }\n\n            uint32View[index + 2] = uvs[0];\n            uint32View[index + 7] = uvs[1];\n            uint32View[index + 12] = uvs[2];\n            uint32View[index + 17] = uvs[3];\n\n            uint32View[index + 3] = uint32View[index + 8] = uint32View[index + 13] = uint32View[index + 18] = sprite._tintRGB + (sprite.worldAlpha * 255 << 24);\n\n            float32View[index + 4] = float32View[index + 9] = float32View[index + 14] = float32View[index + 19] = nextTexture._virtalBoundId;\n\n            index += 20;\n        }\n\n        currentGroup.size = i - currentGroup.start;\n\n        if (!CAN_UPLOAD_SAME_BUFFER) {\n            // this is still needed for IOS performance..\n            // it really does not like uploading to  the same buffer in a single frame!\n            if (this.vaoMax <= this.vertexCount) {\n                this.vaoMax++;\n                this.vertexBuffers[this.vertexCount] = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n\n                // build the vao object that will render..\n                this.vaos[this.vertexCount] = this.renderer.createVao().addIndex(this.indexBuffer).addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0).addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4).addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 3 * 4).addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aTextureId, gl.FLOAT, false, this.vertByteSize, 4 * 4);\n            }\n\n            this.renderer.bindVao(this.vaos[this.vertexCount]);\n\n            this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, false);\n\n            this.vertexCount++;\n        } else {\n            // lets use the faster option, always use buffer number 0\n            this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, true);\n        }\n\n        for (i = 0; i < MAX_TEXTURES; ++i) {\n            rendererBoundTextures[i]._virtalBoundId = -1;\n        }\n\n        // render the groups..\n        for (i = 0; i < groupCount; ++i) {\n            var group = groups[i];\n            var groupTextureCount = group.textureCount;\n\n            for (var _j = 0; _j < groupTextureCount; _j++) {\n                currentTexture = group.textures[_j];\n\n                // reset virtual ids..\n                // lets do a quick check..\n                if (rendererBoundTextures[group.ids[_j]] !== currentTexture) {\n                    this.renderer.bindTexture(currentTexture, group.ids[_j], true);\n                }\n\n                // reset the virtualId..\n                currentTexture._virtalBoundId = -1;\n            }\n\n            // set the blend mode..\n            this.renderer.state.setBlendMode(group.blend);\n\n            gl.drawElements(gl.TRIANGLES, group.size * 6, gl.UNSIGNED_SHORT, group.start * 6 * 2);\n        }\n\n        // reset elements for the next flush\n        this.currentIndex = 0;\n    };\n\n    /**\n     * Starts a new sprite batch.\n     */\n\n\n    SpriteRenderer.prototype.start = function start() {\n        this.renderer.bindShader(this.shader);\n\n        if (CAN_UPLOAD_SAME_BUFFER) {\n            // bind buffer #0, we don't need others\n            this.renderer.bindVao(this.vaos[this.vertexCount]);\n\n            this.vertexBuffers[this.vertexCount].bind();\n        }\n    };\n\n    /**\n     * Stops and flushes the current batch.\n     *\n     */\n\n\n    SpriteRenderer.prototype.stop = function stop() {\n        this.flush();\n    };\n\n    /**\n     * Destroys the SpriteBatch.\n     *\n     */\n\n\n    SpriteRenderer.prototype.destroy = function destroy() {\n        for (var i = 0; i < this.vaoMax; i++) {\n            if (this.vertexBuffers[i]) {\n                this.vertexBuffers[i].destroy();\n            }\n            if (this.vaos[i]) {\n                this.vaos[i].destroy();\n            }\n        }\n\n        if (this.indexBuffer) {\n            this.indexBuffer.destroy();\n        }\n\n        this.renderer.off('prerender', this.onPrerender, this);\n\n        _ObjectRenderer.prototype.destroy.call(this);\n\n        if (this.shader) {\n            this.shader.destroy();\n            this.shader = null;\n        }\n\n        this.vertexBuffers = null;\n        this.vaos = null;\n        this.indexBuffer = null;\n        this.indices = null;\n\n        this.sprites = null;\n\n        for (var _i = 0; _i < this.buffers.length; ++_i) {\n            this.buffers[_i].destroy();\n        }\n    };\n\n    return SpriteRenderer;\n}(_ObjectRenderer3.default);\n\nexports.default = SpriteRenderer;\n\n\n_WebGLRenderer2.default.registerPlugin('sprite', SpriteRenderer);\n//# sourceMappingURL=SpriteRenderer.js.map\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = generateMultiTextureShader;\n\nvar _Shader = __webpack_require__(8);\n\nvar _Shader2 = _interopRequireDefault(_Shader);\n\nvar _path = __webpack_require__(6);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar fragTemplate = ['varying vec2 vTextureCoord;', 'varying vec4 vColor;', 'varying float vTextureId;', 'uniform sampler2D uSamplers[%count%];', 'void main(void){', 'vec4 color;', 'float textureId = floor(vTextureId+0.5);', '%forloop%', 'gl_FragColor = color * vColor;', '}'].join('\\n');\n\nfunction generateMultiTextureShader(gl, maxTextures) {\n    var vertexSrc = 'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aColor;\\nattribute float aTextureId;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\nvarying float vTextureId;\\n\\nvoid main(void){\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = aTextureCoord;\\n    vTextureId = aTextureId;\\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a);\\n}\\n';\n    var fragmentSrc = fragTemplate;\n\n    fragmentSrc = fragmentSrc.replace(/%count%/gi, maxTextures);\n    fragmentSrc = fragmentSrc.replace(/%forloop%/gi, generateSampleSrc(maxTextures));\n\n    var shader = new _Shader2.default(gl, vertexSrc, fragmentSrc);\n\n    var sampleValues = [];\n\n    for (var i = 0; i < maxTextures; i++) {\n        sampleValues[i] = i;\n    }\n\n    shader.bind();\n    shader.uniforms.uSamplers = sampleValues;\n\n    return shader;\n}\n\nfunction generateSampleSrc(maxTextures) {\n    var src = '';\n\n    src += '\\n';\n    src += '\\n';\n\n    for (var i = 0; i < maxTextures; i++) {\n        if (i > 0) {\n            src += '\\nelse ';\n        }\n\n        if (i < maxTextures - 1) {\n            src += 'if(textureId == ' + i + '.0)';\n        }\n\n        src += '\\n{';\n        src += '\\n\\tcolor = texture2D(uSamplers[' + i + '], vTextureCoord);';\n        src += '\\n}';\n    }\n\n    src += '\\n';\n    src += '\\n';\n\n    return src;\n}\n//# sourceMappingURL=generateMultiTextureShader.js.map\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Sprite2 = __webpack_require__(27);\n\nvar _Sprite3 = _interopRequireDefault(_Sprite2);\n\nvar _Texture = __webpack_require__(11);\n\nvar _Texture2 = _interopRequireDefault(_Texture);\n\nvar _math = __webpack_require__(3);\n\nvar _utils = __webpack_require__(2);\n\nvar _const = __webpack_require__(1);\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _TextStyle = __webpack_require__(50);\n\nvar _TextStyle2 = _interopRequireDefault(_TextStyle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint max-depth: [2, 8] */\n\n\nvar RESOLUTION = _settings2.default.RESOLUTION;\n\n\nvar defaultDestroyOptions = {\n    texture: true,\n    children: false,\n    baseTexture: true\n};\n\n/**\n * A Text Object will create a line or multiple lines of text. To split a line you can use '\\n' in your text string,\n * or add a wordWrap property set to true and and wordWrapWidth property with a value in the style object.\n *\n * A Text can be created directly from a string and a style object\n *\n * ```js\n * let text = new PIXI.Text('This is a pixi text',{fontFamily : 'Arial', fontSize: 24, fill : 0xff1010, align : 'center'});\n * ```\n *\n * @class\n * @extends PIXI.Sprite\n * @memberof PIXI\n */\n\nvar Text = function (_Sprite) {\n    _inherits(Text, _Sprite);\n\n    /**\n     * @param {string} text - The string that you would like the text to display\n     * @param {object|PIXI.TextStyle} [style] - The style parameters\n     */\n    function Text(text, style) {\n        _classCallCheck(this, Text);\n\n        var canvas = document.createElement('canvas');\n\n        canvas.width = 3;\n        canvas.height = 3;\n\n        var texture = _Texture2.default.fromCanvas(canvas);\n\n        texture.orig = new _math.Rectangle();\n        texture.trim = new _math.Rectangle();\n\n        /**\n         * The canvas element that everything is drawn to\n         *\n         * @member {HTMLCanvasElement}\n         */\n        var _this = _possibleConstructorReturn(this, _Sprite.call(this, texture));\n\n        _this.canvas = canvas;\n\n        /**\n         * The canvas 2d context that everything is drawn with\n         * @member {HTMLCanvasElement}\n         */\n        _this.context = _this.canvas.getContext('2d');\n\n        /**\n         * The resolution / device pixel ratio of the canvas. This is set automatically by the renderer.\n         * @member {number}\n         * @default 1\n         */\n        _this.resolution = RESOLUTION;\n\n        /**\n         * Private tracker for the current text.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._text = null;\n\n        /**\n         * Private tracker for the current style.\n         *\n         * @member {object}\n         * @private\n         */\n        _this._style = null;\n        /**\n         * Private listener to track style changes.\n         *\n         * @member {Function}\n         * @private\n         */\n        _this._styleListener = null;\n\n        /**\n         * Private tracker for the current font.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._font = '';\n\n        _this.text = text;\n        _this.style = style;\n\n        _this.localStyleID = -1;\n        return _this;\n    }\n\n    /**\n     * Renders text and updates it when needed.\n     *\n     * @private\n     * @param {boolean} respectDirty - Whether to abort updating the text if the Text isn't dirty and the function is called.\n     */\n\n\n    Text.prototype.updateText = function updateText(respectDirty) {\n        var style = this._style;\n\n        // check if style has changed..\n        if (this.localStyleID !== style.styleID) {\n            this.dirty = true;\n            this.localStyleID = style.styleID;\n        }\n\n        if (!this.dirty && respectDirty) {\n            return;\n        }\n\n        this._font = Text.getFontStyle(style);\n\n        this.context.font = this._font;\n\n        // word wrap\n        // preserve original text\n        var outputText = style.wordWrap ? this.wordWrap(this._text) : this._text;\n\n        // split text into lines\n        var lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n\n        // calculate text width\n        var lineWidths = new Array(lines.length);\n        var maxLineWidth = 0;\n        var fontProperties = Text.calculateFontProperties(this._font);\n\n        for (var i = 0; i < lines.length; i++) {\n            var lineWidth = this.context.measureText(lines[i]).width + (lines[i].length - 1) * style.letterSpacing;\n\n            lineWidths[i] = lineWidth;\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        var width = maxLineWidth + style.strokeThickness;\n\n        if (style.dropShadow) {\n            width += style.dropShadowDistance;\n        }\n\n        width += style.padding * 2;\n\n        this.canvas.width = Math.ceil((width + this.context.lineWidth) * this.resolution);\n\n        // calculate text height\n        var lineHeight = this.style.lineHeight || fontProperties.fontSize + style.strokeThickness;\n\n        var height = Math.max(lineHeight, fontProperties.fontSize + style.strokeThickness) + (lines.length - 1) * lineHeight;\n\n        if (style.dropShadow) {\n            height += style.dropShadowDistance;\n        }\n\n        this.canvas.height = Math.ceil((height + this._style.padding * 2) * this.resolution);\n\n        this.context.scale(this.resolution, this.resolution);\n\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        this.context.font = this._font;\n        this.context.strokeStyle = style.stroke;\n        this.context.lineWidth = style.strokeThickness;\n        this.context.textBaseline = style.textBaseline;\n        this.context.lineJoin = style.lineJoin;\n        this.context.miterLimit = style.miterLimit;\n\n        var linePositionX = void 0;\n        var linePositionY = void 0;\n\n        if (style.dropShadow) {\n            if (style.dropShadowBlur > 0) {\n                this.context.shadowColor = style.dropShadowColor;\n                this.context.shadowBlur = style.dropShadowBlur;\n            } else {\n                this.context.fillStyle = style.dropShadowColor;\n            }\n\n            var xShadowOffset = Math.cos(style.dropShadowAngle) * style.dropShadowDistance;\n            var yShadowOffset = Math.sin(style.dropShadowAngle) * style.dropShadowDistance;\n\n            for (var _i = 0; _i < lines.length; _i++) {\n                linePositionX = style.strokeThickness / 2;\n                linePositionY = style.strokeThickness / 2 + _i * lineHeight + fontProperties.ascent;\n\n                if (style.align === 'right') {\n                    linePositionX += maxLineWidth - lineWidths[_i];\n                } else if (style.align === 'center') {\n                    linePositionX += (maxLineWidth - lineWidths[_i]) / 2;\n                }\n\n                if (style.fill) {\n                    this.drawLetterSpacing(lines[_i], linePositionX + xShadowOffset + style.padding, linePositionY + yShadowOffset + style.padding);\n\n                    if (style.stroke && style.strokeThickness) {\n                        this.context.strokeStyle = style.dropShadowColor;\n                        this.drawLetterSpacing(lines[_i], linePositionX + xShadowOffset + style.padding, linePositionY + yShadowOffset + style.padding, true);\n                        this.context.strokeStyle = style.stroke;\n                    }\n                }\n            }\n        }\n\n        // set canvas text styles\n        this.context.fillStyle = this._generateFillStyle(style, lines);\n\n        // draw lines line by line\n        for (var _i2 = 0; _i2 < lines.length; _i2++) {\n            linePositionX = style.strokeThickness / 2;\n            linePositionY = style.strokeThickness / 2 + _i2 * lineHeight + fontProperties.ascent;\n\n            if (style.align === 'right') {\n                linePositionX += maxLineWidth - lineWidths[_i2];\n            } else if (style.align === 'center') {\n                linePositionX += (maxLineWidth - lineWidths[_i2]) / 2;\n            }\n\n            if (style.stroke && style.strokeThickness) {\n                this.drawLetterSpacing(lines[_i2], linePositionX + style.padding, linePositionY + style.padding, true);\n            }\n\n            if (style.fill) {\n                this.drawLetterSpacing(lines[_i2], linePositionX + style.padding, linePositionY + style.padding);\n            }\n        }\n\n        this.updateTexture();\n    };\n\n    /**\n     * Render the text with letter-spacing.\n     * @param {string} text - The text to draw\n     * @param {number} x - Horizontal position to draw the text\n     * @param {number} y - Vertical position to draw the text\n     * @param {boolean} [isStroke=false] - Is this drawing for the outside stroke of the\n     *  text? If not, it's for the inside fill\n     * @private\n     */\n\n\n    Text.prototype.drawLetterSpacing = function drawLetterSpacing(text, x, y) {\n        var isStroke = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        var style = this._style;\n\n        // letterSpacing of 0 means normal\n        var letterSpacing = style.letterSpacing;\n\n        if (letterSpacing === 0) {\n            if (isStroke) {\n                this.context.strokeText(text, x, y);\n            } else {\n                this.context.fillText(text, x, y);\n            }\n\n            return;\n        }\n\n        var characters = String.prototype.split.call(text, '');\n        var currentPosition = x;\n        var index = 0;\n        var current = '';\n\n        while (index < text.length) {\n            current = characters[index++];\n            if (isStroke) {\n                this.context.strokeText(current, currentPosition, y);\n            } else {\n                this.context.fillText(current, currentPosition, y);\n            }\n            currentPosition += this.context.measureText(current).width + letterSpacing;\n        }\n    };\n\n    /**\n     * Updates texture size based on canvas size\n     *\n     * @private\n     */\n\n\n    Text.prototype.updateTexture = function updateTexture() {\n        var texture = this._texture;\n        var style = this._style;\n\n        texture.baseTexture.hasLoaded = true;\n        texture.baseTexture.resolution = this.resolution;\n\n        texture.baseTexture.realWidth = this.canvas.width;\n        texture.baseTexture.realHeight = this.canvas.height;\n        texture.baseTexture.width = this.canvas.width / this.resolution;\n        texture.baseTexture.height = this.canvas.height / this.resolution;\n        texture.trim.width = texture._frame.width = this.canvas.width / this.resolution;\n        texture.trim.height = texture._frame.height = this.canvas.height / this.resolution;\n\n        texture.trim.x = -style.padding;\n        texture.trim.y = -style.padding;\n\n        texture.orig.width = texture._frame.width - style.padding * 2;\n        texture.orig.height = texture._frame.height - style.padding * 2;\n\n        // call sprite onTextureUpdate to update scale if _width or _height were set\n        this._onTextureUpdate();\n\n        texture.baseTexture.emit('update', texture.baseTexture);\n\n        this.dirty = false;\n    };\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    Text.prototype.renderWebGL = function renderWebGL(renderer) {\n        if (this.resolution !== renderer.resolution) {\n            this.resolution = renderer.resolution;\n            this.dirty = true;\n        }\n\n        this.updateText(true);\n\n        _Sprite.prototype.renderWebGL.call(this, renderer);\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n\n\n    Text.prototype._renderCanvas = function _renderCanvas(renderer) {\n        if (this.resolution !== renderer.resolution) {\n            this.resolution = renderer.resolution;\n            this.dirty = true;\n        }\n\n        this.updateText(true);\n\n        _Sprite.prototype._renderCanvas.call(this, renderer);\n    };\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     *\n     * @private\n     * @param {string} text - String to apply word wrapping to\n     * @return {string} New string with new lines applied where required\n     */\n\n\n    Text.prototype.wordWrap = function wordWrap(text) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer\n        // than its horizontal bounds.\n        var result = '';\n        var lines = text.split('\\n');\n        var wordWrapWidth = this._style.wordWrapWidth;\n\n        for (var i = 0; i < lines.length; i++) {\n            var spaceLeft = wordWrapWidth;\n            var words = lines[i].split(' ');\n\n            for (var j = 0; j < words.length; j++) {\n                var wordWidth = this.context.measureText(words[j]).width;\n\n                if (this._style.breakWords && wordWidth > wordWrapWidth) {\n                    // Word should be split in the middle\n                    var characters = words[j].split('');\n\n                    for (var c = 0; c < characters.length; c++) {\n                        var characterWidth = this.context.measureText(characters[c]).width;\n\n                        if (characterWidth > spaceLeft) {\n                            result += '\\n' + characters[c];\n                            spaceLeft = wordWrapWidth - characterWidth;\n                        } else {\n                            if (c === 0) {\n                                result += ' ';\n                            }\n\n                            result += characters[c];\n                            spaceLeft -= characterWidth;\n                        }\n                    }\n                } else {\n                    var wordWidthWithSpace = wordWidth + this.context.measureText(' ').width;\n\n                    if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                        // Skip printing the newline if it's the first word of the line that is\n                        // greater than the word wrap width.\n                        if (j > 0) {\n                            result += '\\n';\n                        }\n                        result += words[j];\n                        spaceLeft = wordWrapWidth - wordWidth;\n                    } else {\n                        spaceLeft -= wordWidthWithSpace;\n                        result += ' ' + words[j];\n                    }\n                }\n            }\n\n            if (i < lines.length - 1) {\n                result += '\\n';\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * calculates the bounds of the Text as a rectangle. The bounds calculation takes the worldTransform into account.\n     */\n\n\n    Text.prototype._calculateBounds = function _calculateBounds() {\n        this.updateText(true);\n        this.calculateVertices();\n        // if we have already done this on THIS frame.\n        this._bounds.addQuad(this.vertexData);\n    };\n\n    /**\n     * Method to be called upon a TextStyle change.\n     * @private\n     */\n\n\n    Text.prototype._onStyleChange = function _onStyleChange() {\n        this.dirty = true;\n    };\n\n    /**\n     * Generates the fill style. Can automatically generate a gradient based on the fill style being an array\n     *\n     * @private\n     * @param {object} style - The style.\n     * @param {string} lines - The lines of text.\n     * @return {string|number|CanvasGradient} The fill style\n     */\n\n\n    Text.prototype._generateFillStyle = function _generateFillStyle(style, lines) {\n        if (!Array.isArray(style.fill)) {\n            return style.fill;\n        }\n\n        // cocoon on canvas+ cannot generate textures, so use the first colour instead\n        if (navigator.isCocoonJS) {\n            return style.fill[0];\n        }\n\n        // the gradient will be evenly spaced out according to how large the array is.\n        // ['#FF0000', '#00FF00', '#0000FF'] would created stops at 0.25, 0.5 and 0.75\n        var gradient = void 0;\n        var totalIterations = void 0;\n        var currentIteration = void 0;\n        var stop = void 0;\n\n        var width = this.canvas.width / this.resolution;\n        var height = this.canvas.height / this.resolution;\n\n        if (style.fillGradientType === _const.TEXT_GRADIENT.LINEAR_VERTICAL) {\n            // start the gradient at the top center of the canvas, and end at the bottom middle of the canvas\n            gradient = this.context.createLinearGradient(width / 2, 0, width / 2, height);\n\n            // we need to repeat the gradient so that each individual line of text has the same vertical gradient effect\n            // ['#FF0000', '#00FF00', '#0000FF'] over 2 lines would create stops at 0.125, 0.25, 0.375, 0.625, 0.75, 0.875\n            totalIterations = (style.fill.length + 1) * lines.length;\n            currentIteration = 0;\n            for (var i = 0; i < lines.length; i++) {\n                currentIteration += 1;\n                for (var j = 0; j < style.fill.length; j++) {\n                    stop = currentIteration / totalIterations;\n                    gradient.addColorStop(stop, style.fill[j]);\n                    currentIteration++;\n                }\n            }\n        } else {\n            // start the gradient at the center left of the canvas, and end at the center right of the canvas\n            gradient = this.context.createLinearGradient(0, height / 2, width, height / 2);\n\n            // can just evenly space out the gradients in this case, as multiple lines makes no difference\n            // to an even left to right gradient\n            totalIterations = style.fill.length + 1;\n            currentIteration = 1;\n\n            for (var _i3 = 0; _i3 < style.fill.length; _i3++) {\n                stop = currentIteration / totalIterations;\n                gradient.addColorStop(stop, style.fill[_i3]);\n                currentIteration++;\n            }\n        }\n\n        return gradient;\n    };\n\n    /**\n     * Destroys this text object.\n     * Note* Unlike a Sprite, a Text object will automatically destroy its baseTexture and texture as\n     * the majorety of the time the texture will not be shared with any other Sprites.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their\n     *  destroy method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=true] - Should it destroy the current texture of the sprite as well\n     * @param {boolean} [options.baseTexture=true] - Should it destroy the base texture of the sprite as well\n     */\n\n\n    Text.prototype.destroy = function destroy(options) {\n        if (typeof options === 'boolean') {\n            options = { children: options };\n        }\n\n        options = Object.assign({}, defaultDestroyOptions, options);\n\n        _Sprite.prototype.destroy.call(this, options);\n\n        // make sure to reset the the context and canvas.. dont want this hanging around in memory!\n        this.context = null;\n        this.canvas = null;\n\n        this._style = null;\n    };\n\n    /**\n     * The width of the Text, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Text#\n     */\n\n\n    /**\n     * Generates a font style string to use for Text.calculateFontProperties(). Takes the same parameter\n     * as Text.style.\n     *\n     * @static\n     * @param {object|TextStyle} style - String representing the style of the font\n     * @return {string} Font style string, for passing to Text.calculateFontProperties()\n     */\n    Text.getFontStyle = function getFontStyle(style) {\n        style = style || {};\n\n        if (!(style instanceof _TextStyle2.default)) {\n            style = new _TextStyle2.default(style);\n        }\n\n        // build canvas api font setting from individual components. Convert a numeric style.fontSize to px\n        var fontSizeString = typeof style.fontSize === 'number' ? style.fontSize + 'px' : style.fontSize;\n\n        return style.fontStyle + ' ' + style.fontVariant + ' ' + style.fontWeight + ' ' + fontSizeString + ' ' + style.fontFamily;\n    };\n\n    /**\n     * Calculates the ascent, descent and fontSize of a given fontStyle\n     *\n     * @static\n     * @param {string} fontStyle - String representing the style of the font\n     * @return {Object} Font properties object\n     */\n\n\n    Text.calculateFontProperties = function calculateFontProperties(fontStyle) {\n        // as this method is used for preparing assets, don't recalculate things if we don't need to\n        if (Text.fontPropertiesCache[fontStyle]) {\n            return Text.fontPropertiesCache[fontStyle];\n        }\n\n        var properties = {};\n\n        var canvas = Text.fontPropertiesCanvas;\n        var context = Text.fontPropertiesContext;\n\n        context.font = fontStyle;\n\n        var width = Math.ceil(context.measureText('|MÉq').width);\n        var baseline = Math.ceil(context.measureText('M').width);\n        var height = 2 * baseline;\n\n        baseline = baseline * 1.4 | 0;\n\n        canvas.width = width;\n        canvas.height = height;\n\n        context.fillStyle = '#f00';\n        context.fillRect(0, 0, width, height);\n\n        context.font = fontStyle;\n\n        context.textBaseline = 'alphabetic';\n        context.fillStyle = '#000';\n        context.fillText('|MÉq', 0, baseline);\n\n        var imagedata = context.getImageData(0, 0, width, height).data;\n        var pixels = imagedata.length;\n        var line = width * 4;\n\n        var i = 0;\n        var idx = 0;\n        var stop = false;\n\n        // ascent. scan from top to bottom until we find a non red pixel\n        for (i = 0; i < baseline; ++i) {\n            for (var j = 0; j < line; j += 4) {\n                if (imagedata[idx + j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n            if (!stop) {\n                idx += line;\n            } else {\n                break;\n            }\n        }\n\n        properties.ascent = baseline - i;\n\n        idx = pixels - line;\n        stop = false;\n\n        // descent. scan from bottom to top until we find a non red pixel\n        for (i = height; i > baseline; --i) {\n            for (var _j = 0; _j < line; _j += 4) {\n                if (imagedata[idx + _j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n\n            if (!stop) {\n                idx -= line;\n            } else {\n                break;\n            }\n        }\n\n        properties.descent = i - baseline;\n        properties.fontSize = properties.ascent + properties.descent;\n\n        Text.fontPropertiesCache[fontStyle] = properties;\n\n        return properties;\n    };\n\n    _createClass(Text, [{\n        key: 'width',\n        get: function get() {\n            this.updateText(true);\n\n            return Math.abs(this.scale.x) * this.texture.orig.width;\n        }\n\n        /**\n         * Sets the width of the text.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.updateText(true);\n\n            var s = (0, _utils.sign)(this.scale.x) || 1;\n\n            this.scale.x = s * value / this.texture.orig.width;\n            this._width = value;\n        }\n\n        /**\n         * The height of the Text, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         * @memberof PIXI.Text#\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            this.updateText(true);\n\n            return Math.abs(this.scale.y) * this._texture.orig.height;\n        }\n\n        /**\n         * Sets the height of the text.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.updateText(true);\n\n            var s = (0, _utils.sign)(this.scale.y) || 1;\n\n            this.scale.y = s * value / this.texture.orig.height;\n            this._height = value;\n        }\n\n        /**\n         * Set the style of the text. Set up an event listener to listen for changes on the style\n         * object and mark the text as dirty.\n         *\n         * @member {object|PIXI.TextStyle}\n         * @memberof PIXI.Text#\n         */\n\n    }, {\n        key: 'style',\n        get: function get() {\n            return this._style;\n        }\n\n        /**\n         * Sets the style of the text.\n         *\n         * @param {object} style - The value to set to.\n         */\n        ,\n        set: function set(style) {\n            style = style || {};\n\n            if (style instanceof _TextStyle2.default) {\n                this._style = style;\n            } else {\n                this._style = new _TextStyle2.default(style);\n            }\n\n            this.localStyleID = -1;\n            this.dirty = true;\n        }\n\n        /**\n         * Set the copy for the text object. To split a line you can use '\\n'.\n         *\n         * @member {string}\n         * @memberof PIXI.Text#\n         */\n\n    }, {\n        key: 'text',\n        get: function get() {\n            return this._text;\n        }\n\n        /**\n         * Sets the text.\n         *\n         * @param {string} text - The value to set to.\n         */\n        ,\n        set: function set(text) {\n            text = text || ' ';\n            text = text.toString();\n\n            if (this._text === text) {\n                return;\n            }\n            this._text = text;\n            this.dirty = true;\n        }\n    }]);\n\n    return Text;\n}(_Sprite3.default);\n\nexports.default = Text;\n\n\nText.fontPropertiesCache = {};\nText.fontPropertiesCanvas = document.createElement('canvas');\nText.fontPropertiesContext = Text.fontPropertiesCanvas.getContext('2d');\n//# sourceMappingURL=Text.js.map\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _settings = __webpack_require__(4);\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _eventemitter = __webpack_require__(7);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Internal event used by composed emitter\nvar TICK = 'tick';\n\nvar TARGET_FPMS = _settings2.default.TARGET_FPMS;\n\n/**\n * A Ticker class that runs an update loop that other objects listen to.\n * This class is composed around an EventEmitter object to add listeners\n * meant for execution on the next requested animation frame.\n * Animation frames are requested only when necessary,\n * e.g. When the ticker is started and the emitter has listeners.\n *\n * @class\n * @memberof PIXI.ticker\n */\n\nvar Ticker = function () {\n    /**\n     *\n     */\n    function Ticker() {\n        var _this = this;\n\n        _classCallCheck(this, Ticker);\n\n        /**\n         * Internal emitter used to fire 'tick' event\n         * @private\n         */\n        this._emitter = new _eventemitter2.default();\n\n        /**\n         * Internal current frame request ID\n         * @private\n         */\n        this._requestId = null;\n\n        /**\n         * Internal value managed by minFPS property setter and getter.\n         * This is the maximum allowed milliseconds between updates.\n         * @private\n         */\n        this._maxElapsedMS = 100;\n\n        /**\n         * Whether or not this ticker should invoke the method\n         * {@link PIXI.ticker.Ticker#start} automatically\n         * when a listener is added.\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.autoStart = false;\n\n        /**\n         * Scalar time value from last frame to this frame.\n         * This value is capped by setting {@link PIXI.ticker.Ticker#minFPS}\n         * and is scaled with {@link PIXI.ticker.Ticker#speed}.\n         * **Note:** The cap may be exceeded by scaling.\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.deltaTime = 1;\n\n        /**\n         * Time elapsed in milliseconds from last frame to this frame.\n         * Opposed to what the scalar {@link PIXI.ticker.Ticker#deltaTime}\n         * is based, this value is neither capped nor scaled.\n         * If the platform supports DOMHighResTimeStamp,\n         * this value will have a precision of 1 µs.\n         *\n         * @member {number}\n         * @default 1 / TARGET_FPMS\n         */\n        this.elapsedMS = 1 / TARGET_FPMS; // default to target frame time\n\n        /**\n         * The last time {@link PIXI.ticker.Ticker#update} was invoked.\n         * This value is also reset internally outside of invoking\n         * update, but only when a new animation frame is requested.\n         * If the platform supports DOMHighResTimeStamp,\n         * this value will have a precision of 1 µs.\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.lastTime = 0;\n\n        /**\n         * Factor of current {@link PIXI.ticker.Ticker#deltaTime}.\n         * @example\n         * // Scales ticker.deltaTime to what would be\n         * // the equivalent of approximately 120 FPS\n         * ticker.speed = 2;\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.speed = 1;\n\n        /**\n         * Whether or not this ticker has been started.\n         * `true` if {@link PIXI.ticker.Ticker#start} has been called.\n         * `false` if {@link PIXI.ticker.Ticker#stop} has been called.\n         * While `false`, this value may change to `true` in the\n         * event of {@link PIXI.ticker.Ticker#autoStart} being `true`\n         * and a listener is added.\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.started = false;\n\n        /**\n         * Internal tick method bound to ticker instance.\n         * This is because in early 2015, Function.bind\n         * is still 60% slower in high performance scenarios.\n         * Also separating frame requests from update method\n         * so listeners may be called at any time and with\n         * any animation API, just invoke ticker.update(time).\n         *\n         * @private\n         * @param {number} time - Time since last tick.\n         */\n        this._tick = function (time) {\n            _this._requestId = null;\n\n            if (_this.started) {\n                // Invoke listeners now\n                _this.update(time);\n                // Listener side effects may have modified ticker state.\n                if (_this.started && _this._requestId === null && _this._emitter.listeners(TICK, true)) {\n                    _this._requestId = requestAnimationFrame(_this._tick);\n                }\n            }\n        };\n    }\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If a frame has not already been requested, and if the internal\n     * emitter has listeners, a new frame is requested.\n     *\n     * @private\n     */\n\n\n    Ticker.prototype._requestIfNeeded = function _requestIfNeeded() {\n        if (this._requestId === null && this._emitter.listeners(TICK, true)) {\n            // ensure callbacks get correct delta\n            this.lastTime = performance.now();\n            this._requestId = requestAnimationFrame(this._tick);\n        }\n    };\n\n    /**\n     * Conditionally cancels a pending animation frame.\n     *\n     * @private\n     */\n\n\n    Ticker.prototype._cancelIfNeeded = function _cancelIfNeeded() {\n        if (this._requestId !== null) {\n            cancelAnimationFrame(this._requestId);\n            this._requestId = null;\n        }\n    };\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If the ticker has been started it checks if a frame has not already\n     * been requested, and if the internal emitter has listeners. If these\n     * conditions are met, a new frame is requested. If the ticker has not\n     * been started, but autoStart is `true`, then the ticker starts now,\n     * and continues with the previous conditions to request a new frame.\n     *\n     * @private\n     */\n\n\n    Ticker.prototype._startIfPossible = function _startIfPossible() {\n        if (this.started) {\n            this._requestIfNeeded();\n        } else if (this.autoStart) {\n            this.start();\n        }\n    };\n\n    /**\n     * Calls {@link module:eventemitter3.EventEmitter#on} internally for the\n     * internal 'tick' event. It checks if the emitter has listeners,\n     * and if so it requests a new animation frame at this point.\n     *\n     * @param {Function} fn - The listener function to be added for updates\n     * @param {Function} [context] - The listener context\n     * @returns {PIXI.ticker.Ticker} This instance of a ticker\n     */\n\n\n    Ticker.prototype.add = function add(fn, context) {\n        this._emitter.on(TICK, fn, context);\n\n        this._startIfPossible();\n\n        return this;\n    };\n\n    /**\n     * Calls {@link module:eventemitter3.EventEmitter#once} internally for the\n     * internal 'tick' event. It checks if the emitter has listeners,\n     * and if so it requests a new animation frame at this point.\n     *\n     * @param {Function} fn - The listener function to be added for one update\n     * @param {Function} [context] - The listener context\n     * @returns {PIXI.ticker.Ticker} This instance of a ticker\n     */\n\n\n    Ticker.prototype.addOnce = function addOnce(fn, context) {\n        this._emitter.once(TICK, fn, context);\n\n        this._startIfPossible();\n\n        return this;\n    };\n\n    /**\n     * Calls {@link module:eventemitter3.EventEmitter#off} internally for 'tick' event.\n     * It checks if the emitter has listeners for 'tick' event.\n     * If it does, then it cancels the animation frame.\n     *\n     * @param {Function} [fn] - The listener function to be removed\n     * @param {Function} [context] - The listener context to be removed\n     * @returns {PIXI.ticker.Ticker} This instance of a ticker\n     */\n\n\n    Ticker.prototype.remove = function remove(fn, context) {\n        this._emitter.off(TICK, fn, context);\n\n        if (!this._emitter.listeners(TICK, true)) {\n            this._cancelIfNeeded();\n        }\n\n        return this;\n    };\n\n    /**\n     * Starts the ticker. If the ticker has listeners\n     * a new animation frame is requested at this point.\n     */\n\n\n    Ticker.prototype.start = function start() {\n        if (!this.started) {\n            this.started = true;\n            this._requestIfNeeded();\n        }\n    };\n\n    /**\n     * Stops the ticker. If the ticker has requested\n     * an animation frame it is canceled at this point.\n     */\n\n\n    Ticker.prototype.stop = function stop() {\n        if (this.started) {\n            this.started = false;\n            this._cancelIfNeeded();\n        }\n    };\n\n    /**\n     * Triggers an update. An update entails setting the\n     * current {@link PIXI.ticker.Ticker#elapsedMS},\n     * the current {@link PIXI.ticker.Ticker#deltaTime},\n     * invoking all listeners with current deltaTime,\n     * and then finally setting {@link PIXI.ticker.Ticker#lastTime}\n     * with the value of currentTime that was provided.\n     * This method will be called automatically by animation\n     * frame callbacks if the ticker instance has been started\n     * and listeners are added.\n     *\n     * @param {number} [currentTime=performance.now()] - the current time of execution\n     */\n\n\n    Ticker.prototype.update = function update() {\n        var currentTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : performance.now();\n\n        var elapsedMS = void 0;\n\n        // If the difference in time is zero or negative, we ignore most of the work done here.\n        // If there is no valid difference, then should be no reason to let anyone know about it.\n        // A zero delta, is exactly that, nothing should update.\n        //\n        // The difference in time can be negative, and no this does not mean time traveling.\n        // This can be the result of a race condition between when an animation frame is requested\n        // on the current JavaScript engine event loop, and when the ticker's start method is invoked\n        // (which invokes the internal _requestIfNeeded method). If a frame is requested before\n        // _requestIfNeeded is invoked, then the callback for the animation frame the ticker requests,\n        // can receive a time argument that can be less than the lastTime value that was set within\n        // _requestIfNeeded. This difference is in microseconds, but this is enough to cause problems.\n        //\n        // This check covers this browser engine timing issue, as well as if consumers pass an invalid\n        // currentTime value. This may happen if consumers opt-out of the autoStart, and update themselves.\n\n        if (currentTime > this.lastTime) {\n            // Save uncapped elapsedMS for measurement\n            elapsedMS = this.elapsedMS = currentTime - this.lastTime;\n\n            // cap the milliseconds elapsed used for deltaTime\n            if (elapsedMS > this._maxElapsedMS) {\n                elapsedMS = this._maxElapsedMS;\n            }\n\n            this.deltaTime = elapsedMS * TARGET_FPMS * this.speed;\n\n            // Invoke listeners added to internal emitter\n            this._emitter.emit(TICK, this.deltaTime);\n        } else {\n            this.deltaTime = this.elapsedMS = 0;\n        }\n\n        this.lastTime = currentTime;\n    };\n\n    /**\n     * The frames per second at which this ticker is running.\n     * The default is approximately 60 in most modern browsers.\n     * **Note:** This does not factor in the value of\n     * {@link PIXI.ticker.Ticker#speed}, which is specific\n     * to scaling {@link PIXI.ticker.Ticker#deltaTime}.\n     *\n     * @memberof PIXI.ticker.Ticker#\n     * @readonly\n     */\n\n\n    _createClass(Ticker, [{\n        key: 'FPS',\n        get: function get() {\n            return 1000 / this.elapsedMS;\n        }\n\n        /**\n         * Manages the maximum amount of milliseconds allowed to\n         * elapse between invoking {@link PIXI.ticker.Ticker#update}.\n         * This value is used to cap {@link PIXI.ticker.Ticker#deltaTime},\n         * but does not effect the measured value of {@link PIXI.ticker.Ticker#FPS}.\n         * When setting this property it is clamped to a value between\n         * `0` and `PIXI.settings.TARGET_FPMS * 1000`.\n         *\n         * @memberof PIXI.ticker.Ticker#\n         * @default 10\n         */\n\n    }, {\n        key: 'minFPS',\n        get: function get() {\n            return 1000 / this._maxElapsedMS;\n        }\n\n        /**\n         * Sets the min fps.\n         *\n         * @param {number} fps - value to set.\n         */\n        ,\n        set: function set(fps) {\n            // Clamp: 0 to TARGET_FPMS\n            var minFPMS = Math.min(Math.max(0, fps) / 1000, TARGET_FPMS);\n\n            this._maxElapsedMS = 1 / minFPMS;\n        }\n    }]);\n\n    return Ticker;\n}();\n\nexports.default = Ticker;\n//# sourceMappingURL=Ticker.js.map\n\n/***/ },\n/* 124 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = canUploadSameBuffer;\nfunction canUploadSameBuffer() {\n\t// Uploading the same buffer multiple times in a single frame can cause perf issues.\n\t// Apparent on IOS so only check for that at the moment\n\t// this check may become more complex if this issue pops up elsewhere.\n\tvar ios = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\n\treturn !ios;\n}\n//# sourceMappingURL=canUploadSameBuffer.js.map\n\n/***/ },\n/* 125 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = determineCrossOrigin;\n\nvar _url2 = __webpack_require__(185);\n\nvar _url3 = _interopRequireDefault(_url2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar tempAnchor = void 0;\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nfunction determineCrossOrigin(url) {\n    var loc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location;\n\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0) {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || window.location;\n\n    if (!tempAnchor) {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    url = _url3.default.parse(tempAnchor.href);\n\n    var samePort = !url.port && loc.port === '' || url.port === loc.port;\n\n    // if cross origin\n    if (url.hostname !== loc.hostname || !samePort || url.protocol !== loc.protocol) {\n        return 'anonymous';\n    }\n\n    return '';\n}\n//# sourceMappingURL=determineCrossOrigin.js.map\n\n/***/ },\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.default = maxRecommendedTextures;\n\nvar _ismobilejs = __webpack_require__(19);\n\nvar _ismobilejs2 = _interopRequireDefault(_ismobilejs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction maxRecommendedTextures(max) {\n    if (_ismobilejs2.default.tablet || _ismobilejs2.default.phone) {\n        // check if the res is iphone 6 or higher..\n        return 4;\n    }\n\n    // desktop should be ok\n    return max;\n}\n//# sourceMappingURL=maxRecommendedTextures.js.map\n\n/***/ },\n/* 127 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\n/**\n * Mixins functionality to make an object have \"plugins\".\n *\n * @example\n *      function MyObject() {}\n *\n *      pluginTarget.mixin(MyObject);\n *\n * @mixin\n * @memberof PIXI.utils\n * @param {object} obj - The object to mix into.\n */\nfunction pluginTarget(obj) {\n    obj.__plugins = {};\n\n    /**\n     * Adds a plugin to an object\n     *\n     * @param {string} pluginName - The events that should be listed.\n     * @param {Function} ctor - The constructor function for the plugin.\n     */\n    obj.registerPlugin = function registerPlugin(pluginName, ctor) {\n        obj.__plugins[pluginName] = ctor;\n    };\n\n    /**\n     * Instantiates all the plugins of this object\n     *\n     */\n    obj.prototype.initPlugins = function initPlugins() {\n        this.plugins = this.plugins || {};\n\n        for (var o in obj.__plugins) {\n            this.plugins[o] = new obj.__plugins[o](this);\n        }\n    };\n\n    /**\n     * Removes all the plugins of this object\n     *\n     */\n    obj.prototype.destroyPlugins = function destroyPlugins() {\n        for (var o in this.plugins) {\n            this.plugins[o].destroy();\n            this.plugins[o] = null;\n        }\n\n        this.plugins = null;\n    };\n}\n\nexports.default = {\n    /**\n     * Mixes in the properties of the pluginTarget into another object\n     *\n     * @param {object} obj - The obj to mix into\n     */\n    mixin: function mixin(obj) {\n        pluginTarget(obj);\n    }\n};\n//# sourceMappingURL=pluginTarget.js.map\n\n/***/ },\n/* 128 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _mesh = __webpack_require__(68);\n\nvar mesh = _interopRequireWildcard(_mesh);\n\nvar _particles = __webpack_require__(69);\n\nvar particles = _interopRequireWildcard(_particles);\n\nvar _extras = __webpack_require__(31);\n\nvar extras = _interopRequireWildcard(_extras);\n\nvar _filters = __webpack_require__(61);\n\nvar filters = _interopRequireWildcard(_filters);\n\nvar _prepare = __webpack_require__(70);\n\nvar prepare = _interopRequireWildcard(_prepare);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\nfunction warn(msg) {\n    // @if DEBUG\n    /* eslint-disable no-console */\n    var stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined') {\n        console.warn('Deprecation Warning: ', msg);\n    } else {\n        // chop off the stack trace which includes pixi.js internal calls\n        stack = stack.split('\\n').splice(3).join('\\n');\n\n        if (console.groupCollapsed) {\n            console.groupCollapsed('%cDeprecation Warning: %c%s', 'color:#614108;background:#fffbe6', 'font-weight:normal;color:#614108;background:#fffbe6', msg);\n            console.warn(stack);\n            console.groupEnd();\n        } else {\n            console.warn('Deprecation Warning: ', msg);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n    // @endif\n}\n\n/**\n * @class\n * @private\n * @name SpriteBatch\n * @memberof PIXI\n * @see PIXI.ParticleContainer\n * @throws {ReferenceError} SpriteBatch does not exist any more, please use the new ParticleContainer instead.\n * @deprecated since version 3.0.0\n */\ncore.SpriteBatch = function () {\n    throw new ReferenceError('SpriteBatch does not exist any more, please use the new ParticleContainer instead.');\n};\n\n/**\n * @class\n * @private\n * @name AssetLoader\n * @memberof PIXI\n * @see PIXI.loaders.Loader\n * @throws {ReferenceError} The loader system was overhauled in pixi v3, please see the new PIXI.loaders.Loader class.\n * @deprecated since version 3.0.0\n */\ncore.AssetLoader = function () {\n    throw new ReferenceError('The loader system was overhauled in pixi v3, please see the new PIXI.loaders.Loader class.');\n};\n\nObject.defineProperties(core, {\n\n    /**\n     * @class\n     * @private\n     * @name Stage\n     * @memberof PIXI\n     * @see PIXI.Container\n     * @deprecated since version 3.0.0\n     */\n    Stage: {\n        enumerable: true,\n        get: function get() {\n            warn('You do not need to use a PIXI Stage any more, you can simply render any container.');\n\n            return core.Container;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name DisplayObjectContainer\n     * @memberof PIXI\n     * @see PIXI.Container\n     * @deprecated since version 3.0.0\n     */\n    DisplayObjectContainer: {\n        enumerable: true,\n        get: function get() {\n            warn('DisplayObjectContainer has been shortened to Container, please use Container from now on.');\n\n            return core.Container;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name Strip\n     * @memberof PIXI\n     * @see PIXI.mesh.Mesh\n     * @deprecated since version 3.0.0\n     */\n    Strip: {\n        enumerable: true,\n        get: function get() {\n            warn('The Strip class has been renamed to Mesh and moved to mesh.Mesh, please use mesh.Mesh from now on.');\n\n            return mesh.Mesh;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name Rope\n     * @memberof PIXI\n     * @see PIXI.mesh.Rope\n     * @deprecated since version 3.0.0\n     */\n    Rope: {\n        enumerable: true,\n        get: function get() {\n            warn('The Rope class has been moved to mesh.Rope, please use mesh.Rope from now on.');\n\n            return mesh.Rope;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name ParticleContainer\n     * @memberof PIXI\n     * @see PIXI.particles.ParticleContainer\n     * @deprecated since version 4.0.0\n     */\n    ParticleContainer: {\n        enumerable: true,\n        get: function get() {\n            warn('The ParticleContainer class has been moved to particles.ParticleContainer, ' + 'please use particles.ParticleContainer from now on.');\n\n            return particles.ParticleContainer;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name MovieClip\n     * @memberof PIXI\n     * @see PIXI.extras.MovieClip\n     * @deprecated since version 3.0.0\n     */\n    MovieClip: {\n        enumerable: true,\n        get: function get() {\n            warn('The MovieClip class has been moved to extras.AnimatedSprite, please use extras.AnimatedSprite.');\n\n            return extras.AnimatedSprite;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name TilingSprite\n     * @memberof PIXI\n     * @see PIXI.extras.TilingSprite\n     * @deprecated since version 3.0.0\n     */\n    TilingSprite: {\n        enumerable: true,\n        get: function get() {\n            warn('The TilingSprite class has been moved to extras.TilingSprite, ' + 'please use extras.TilingSprite from now on.');\n\n            return extras.TilingSprite;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name BitmapText\n     * @memberof PIXI\n     * @see PIXI.extras.BitmapText\n     * @deprecated since version 3.0.0\n     */\n    BitmapText: {\n        enumerable: true,\n        get: function get() {\n            warn('The BitmapText class has been moved to extras.BitmapText, ' + 'please use extras.BitmapText from now on.');\n\n            return extras.BitmapText;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name blendModes\n     * @memberof PIXI\n     * @see PIXI.BLEND_MODES\n     * @deprecated since version 3.0.0\n     */\n    blendModes: {\n        enumerable: true,\n        get: function get() {\n            warn('The blendModes has been moved to BLEND_MODES, please use BLEND_MODES from now on.');\n\n            return core.BLEND_MODES;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name scaleModes\n     * @memberof PIXI\n     * @see PIXI.SCALE_MODES\n     * @deprecated since version 3.0.0\n     */\n    scaleModes: {\n        enumerable: true,\n        get: function get() {\n            warn('The scaleModes has been moved to SCALE_MODES, please use SCALE_MODES from now on.');\n\n            return core.SCALE_MODES;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name BaseTextureCache\n     * @memberof PIXI\n     * @see PIXI.utils.BaseTextureCache\n     * @deprecated since version 3.0.0\n     */\n    BaseTextureCache: {\n        enumerable: true,\n        get: function get() {\n            warn('The BaseTextureCache class has been moved to utils.BaseTextureCache, ' + 'please use utils.BaseTextureCache from now on.');\n\n            return core.utils.BaseTextureCache;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name TextureCache\n     * @memberof PIXI\n     * @see PIXI.utils.TextureCache\n     * @deprecated since version 3.0.0\n     */\n    TextureCache: {\n        enumerable: true,\n        get: function get() {\n            warn('The TextureCache class has been moved to utils.TextureCache, ' + 'please use utils.TextureCache from now on.');\n\n            return core.utils.TextureCache;\n        }\n    },\n\n    /**\n     * @namespace\n     * @private\n     * @name math\n     * @memberof PIXI\n     * @see PIXI\n     * @deprecated since version 3.0.6\n     */\n    math: {\n        enumerable: true,\n        get: function get() {\n            warn('The math namespace is deprecated, please access members already accessible on PIXI.');\n\n            return core;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.AbstractFilter\n     * @see PIXI.Filter\n     * @deprecated since version 3.0.6\n     */\n    AbstractFilter: {\n        enumerable: true,\n        get: function get() {\n            warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n\n            return core.Filter;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.TransformManual\n     * @see PIXI.TransformBase\n     * @deprecated since version 4.0.0\n     */\n    TransformManual: {\n        enumerable: true,\n        get: function get() {\n            warn('TransformManual has been renamed to TransformBase, please update your pixi-spine');\n\n            return core.TransformBase;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.TARGET_FPMS\n     * @see PIXI.settings.TARGET_FPMS\n     * @deprecated since version 4.2.0\n     */\n    TARGET_FPMS: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n\n            return core.settings.TARGET_FPMS;\n        },\n        set: function set(value) {\n            warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n\n            core.settings.TARGET_FPMS = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.FILTER_RESOLUTION\n     * @see PIXI.settings.FILTER_RESOLUTION\n     * @deprecated since version 4.2.0\n     */\n    FILTER_RESOLUTION: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n\n            return core.settings.FILTER_RESOLUTION;\n        },\n        set: function set(value) {\n            warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n\n            core.settings.FILTER_RESOLUTION = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.RESOLUTION\n     * @see PIXI.settings.RESOLUTION\n     * @deprecated since version 4.2.0\n     */\n    RESOLUTION: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n\n            return core.settings.RESOLUTION;\n        },\n        set: function set(value) {\n            warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n\n            core.settings.RESOLUTION = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.MIPMAP_TEXTURES\n     * @see PIXI.settings.MIPMAP_TEXTURES\n     * @deprecated since version 4.2.0\n     */\n    MIPMAP_TEXTURES: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n\n            return core.settings.MIPMAP_TEXTURES;\n        },\n        set: function set(value) {\n            warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n\n            core.settings.MIPMAP_TEXTURES = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.SPRITE_BATCH_SIZE\n     * @see PIXI.settings.SPRITE_BATCH_SIZE\n     * @deprecated since version 4.2.0\n     */\n    SPRITE_BATCH_SIZE: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n\n            return core.settings.SPRITE_BATCH_SIZE;\n        },\n        set: function set(value) {\n            warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n\n            core.settings.SPRITE_BATCH_SIZE = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.SPRITE_MAX_TEXTURES\n     * @see PIXI.settings.SPRITE_MAX_TEXTURES\n     * @deprecated since version 4.2.0\n     */\n    SPRITE_MAX_TEXTURES: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n\n            return core.settings.SPRITE_MAX_TEXTURES;\n        },\n        set: function set(value) {\n            warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n\n            core.settings.SPRITE_MAX_TEXTURES = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.RETINA_PREFIX\n     * @see PIXI.settings.RETINA_PREFIX\n     * @deprecated since version 4.2.0\n     */\n    RETINA_PREFIX: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n\n            return core.settings.RETINA_PREFIX;\n        },\n        set: function set(value) {\n            warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n\n            core.settings.RETINA_PREFIX = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.DEFAULT_RENDER_OPTIONS\n     * @see PIXI.settings.RENDER_OPTIONS\n     * @deprecated since version 4.2.0\n     */\n    DEFAULT_RENDER_OPTIONS: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.DEFAULT_RENDER_OPTIONS has been deprecated, please use PIXI.settings.DEFAULT_RENDER_OPTIONS');\n\n            return core.settings.RENDER_OPTIONS;\n        }\n    }\n});\n\n// Move the default properties to settings\nvar defaults = [{ parent: 'TRANSFORM_MODE', target: 'TRANSFORM_MODE' }, { parent: 'GC_MODES', target: 'GC_MODE' }, { parent: 'WRAP_MODES', target: 'WRAP_MODE' }, { parent: 'SCALE_MODES', target: 'SCALE_MODE' }, { parent: 'PRECISION', target: 'PRECISION' }];\n\nvar _loop = function _loop(i) {\n    var deprecation = defaults[i];\n\n    Object.defineProperty(core[deprecation.parent], 'DEFAULT', {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.' + deprecation.parent + '.DEFAULT has been deprecated, please use PIXI.settings.' + deprecation.target);\n\n            return core.settings[deprecation.target];\n        },\n        set: function set(value) {\n            warn('PIXI.' + deprecation.parent + '.DEFAULT has been deprecated, please use PIXI.settings.' + deprecation.target);\n\n            core.settings[deprecation.target] = value;\n        }\n    });\n};\n\nfor (var i = 0; i < defaults.length; i++) {\n    _loop(i);\n}\n\nObject.defineProperties(extras, {\n\n    /**\n     * @class\n     * @name MovieClip\n     * @memberof PIXI.extras\n     * @see PIXI.extras.AnimatedSprite\n     * @deprecated since version 4.2.0\n     */\n    MovieClip: {\n        enumerable: true,\n        get: function get() {\n            warn('The MovieClip class has been renamed to AnimatedSprite, please use AnimatedSprite from now on.');\n\n            return extras.AnimatedSprite;\n        }\n    }\n});\n\ncore.DisplayObject.prototype.generateTexture = function generateTexture(renderer, scaleMode, resolution) {\n    warn('generateTexture has moved to the renderer, please use renderer.generateTexture(displayObject)');\n\n    return renderer.generateTexture(this, scaleMode, resolution);\n};\n\ncore.Graphics.prototype.generateTexture = function generateTexture(scaleMode, resolution) {\n    warn('graphics generate texture has moved to the renderer. ' + 'Or to render a graphics to a texture using canvas please use generateCanvasTexture');\n\n    return this.generateCanvasTexture(scaleMode, resolution);\n};\n\ncore.RenderTexture.prototype.render = function render(displayObject, matrix, clear, updateTransform) {\n    this.legacyRenderer.render(displayObject, this, clear, matrix, !updateTransform);\n    warn('RenderTexture.render is now deprecated, please use renderer.render(displayObject, renderTexture)');\n};\n\ncore.RenderTexture.prototype.getImage = function getImage(target) {\n    warn('RenderTexture.getImage is now deprecated, please use renderer.extract.image(target)');\n\n    return this.legacyRenderer.extract.image(target);\n};\n\ncore.RenderTexture.prototype.getBase64 = function getBase64(target) {\n    warn('RenderTexture.getBase64 is now deprecated, please use renderer.extract.base64(target)');\n\n    return this.legacyRenderer.extract.base64(target);\n};\n\ncore.RenderTexture.prototype.getCanvas = function getCanvas(target) {\n    warn('RenderTexture.getCanvas is now deprecated, please use renderer.extract.canvas(target)');\n\n    return this.legacyRenderer.extract.canvas(target);\n};\n\ncore.RenderTexture.prototype.getPixels = function getPixels(target) {\n    warn('RenderTexture.getPixels is now deprecated, please use renderer.extract.pixels(target)');\n\n    return this.legacyRenderer.pixels(target);\n};\n\n/**\n * @method\n * @private\n * @name PIXI.Sprite#setTexture\n * @see PIXI.Sprite#texture\n * @deprecated since version 3.0.0\n * @param {PIXI.Texture} texture - The texture to set to.\n */\ncore.Sprite.prototype.setTexture = function setTexture(texture) {\n    this.texture = texture;\n    warn('setTexture is now deprecated, please use the texture property, e.g : sprite.texture = texture;');\n};\n\n/**\n * @method\n * @name PIXI.extras.BitmapText#setText\n * @see PIXI.extras.BitmapText#text\n * @deprecated since version 3.0.0\n * @param {string} text - The text to set to.\n */\nextras.BitmapText.prototype.setText = function setText(text) {\n    this.text = text;\n    warn('setText is now deprecated, please use the text property, e.g : myBitmapText.text = \\'my text\\';');\n};\n\n/**\n * @method\n * @name PIXI.Text#setText\n * @see PIXI.Text#text\n * @deprecated since version 3.0.0\n * @param {string} text - The text to set to.\n */\ncore.Text.prototype.setText = function setText(text) {\n    this.text = text;\n    warn('setText is now deprecated, please use the text property, e.g : myText.text = \\'my text\\';');\n};\n\n/**\n * @method\n * @name PIXI.Text#setStyle\n * @see PIXI.Text#style\n * @deprecated since version 3.0.0\n * @param {*} style - The style to set to.\n */\ncore.Text.prototype.setStyle = function setStyle(style) {\n    this.style = style;\n    warn('setStyle is now deprecated, please use the style property, e.g : myText.style = style;');\n};\n\n/**\n * @method\n * @name PIXI.Text#determineFontProperties\n * @see PIXI.Text#calculateFontProperties\n * @deprecated since version 4.2.0\n * @private\n * @param {string} fontStyle - String representing the style of the font\n * @return {Object} Font properties object\n */\ncore.Text.prototype.determineFontProperties = function determineFontProperties(fontStyle) {\n    warn('determineFontProperties is now deprecated, please use the static calculateFontProperties method, ' + 'e.g : Text.calculateFontProperties(fontStyle);');\n\n    return Text.calculateFontProperties(fontStyle);\n};\n\nObject.defineProperties(core.TextStyle.prototype, {\n    /**\n     * Set all properties of a font as a single string\n     *\n     * @name PIXI.TextStyle#font\n     * @deprecated since version 4.0.0\n     */\n    font: {\n        get: function get() {\n            warn('text style property \\'font\\' is now deprecated, please use the ' + '\\'fontFamily\\', \\'fontSize\\', \\'fontStyle\\', \\'fontVariant\\' and \\'fontWeight\\' properties from now on');\n\n            var fontSizeString = typeof this._fontSize === 'number' ? this._fontSize + 'px' : this._fontSize;\n\n            return this._fontStyle + ' ' + this._fontVariant + ' ' + this._fontWeight + ' ' + fontSizeString + ' ' + this._fontFamily;\n        },\n        set: function set(font) {\n            warn('text style property \\'font\\' is now deprecated, please use the ' + '\\'fontFamily\\',\\'fontSize\\',fontStyle\\',\\'fontVariant\\' and \\'fontWeight\\' properties from now on');\n\n            // can work out fontStyle from search of whole string\n            if (font.indexOf('italic') > 1) {\n                this._fontStyle = 'italic';\n            } else if (font.indexOf('oblique') > -1) {\n                this._fontStyle = 'oblique';\n            } else {\n                this._fontStyle = 'normal';\n            }\n\n            // can work out fontVariant from search of whole string\n            if (font.indexOf('small-caps') > -1) {\n                this._fontVariant = 'small-caps';\n            } else {\n                this._fontVariant = 'normal';\n            }\n\n            // fontWeight and fontFamily are tricker to find, but it's easier to find the fontSize due to it's units\n            var splits = font.split(' ');\n            var fontSizeIndex = -1;\n\n            this._fontSize = 26;\n            for (var _i = 0; _i < splits.length; ++_i) {\n                if (splits[_i].match(/(px|pt|em|%)/)) {\n                    fontSizeIndex = _i;\n                    this._fontSize = splits[_i];\n                    break;\n                }\n            }\n\n            // we can now search for fontWeight as we know it must occur before the fontSize\n            this._fontWeight = 'normal';\n            for (var _i2 = 0; _i2 < fontSizeIndex; ++_i2) {\n                if (splits[_i2].match(/(bold|bolder|lighter|100|200|300|400|500|600|700|800|900)/)) {\n                    this._fontWeight = splits[_i2];\n                    break;\n                }\n            }\n\n            // and finally join everything together after the fontSize in case the font family has multiple words\n            if (fontSizeIndex > -1 && fontSizeIndex < splits.length - 1) {\n                this._fontFamily = '';\n                for (var _i3 = fontSizeIndex + 1; _i3 < splits.length; ++_i3) {\n                    this._fontFamily += splits[_i3] + ' ';\n                }\n\n                this._fontFamily = this._fontFamily.slice(0, -1);\n            } else {\n                this._fontFamily = 'Arial';\n            }\n\n            this.styleID++;\n        }\n    }\n});\n\n/**\n * @method\n * @name PIXI.Texture#setFrame\n * @see PIXI.Texture#setFrame\n * @deprecated since version 3.0.0\n * @param {PIXI.Rectangle} frame - The frame to set.\n */\ncore.Texture.prototype.setFrame = function setFrame(frame) {\n    this.frame = frame;\n    warn('setFrame is now deprecated, please use the frame property, e.g: myTexture.frame = frame;');\n};\n\nObject.defineProperties(filters, {\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.filters.AbstractFilter\n     * @see PIXI.AbstractFilter\n     * @deprecated since version 3.0.6\n     */\n    AbstractFilter: {\n        get: function get() {\n            warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n\n            return core.AbstractFilter;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.filters.SpriteMaskFilter\n     * @see PIXI.SpriteMaskFilter\n     * @deprecated since version 3.0.6\n     */\n    SpriteMaskFilter: {\n        get: function get() {\n            warn('filters.SpriteMaskFilter is an undocumented alias, please use SpriteMaskFilter from now on.');\n\n            return core.SpriteMaskFilter;\n        }\n    }\n});\n\n/**\n * @method\n * @name PIXI.utils.uuid\n * @see PIXI.utils.uid\n * @deprecated since version 3.0.6\n * @return {number} The uid\n */\ncore.utils.uuid = function () {\n    warn('utils.uuid() is deprecated, please use utils.uid() from now on.');\n\n    return core.utils.uid();\n};\n\n/**\n * @method\n * @name PIXI.utils.canUseNewCanvasBlendModes\n * @see PIXI.CanvasTinter\n * @deprecated\n * @return {boolean} Can use blend modes.\n */\ncore.utils.canUseNewCanvasBlendModes = function () {\n    warn('utils.canUseNewCanvasBlendModes() is deprecated, please use CanvasTinter.canUseMultiply from now on');\n\n    return core.CanvasTinter.canUseMultiply;\n};\n\nvar saidHello = true;\n\n/**\n * @name PIXI.utils._saidHello\n * @type {boolean}\n * @see PIXI.utils.skipHello\n * @deprecated since 4.1.0\n */\nObject.defineProperty(core.utils, '_saidHello', {\n    set: function set(bool) {\n        if (bool) {\n            warn('PIXI.utils._saidHello is deprecated, please use PIXI.utils.skipHello()');\n            this.skipHello();\n        }\n        saidHello = bool;\n    },\n    get: function get() {\n        return saidHello;\n    }\n});\n\n/**\n * The number of graphics or textures to upload to the GPU.\n *\n * @name PIXI.prepare.canvas.UPLOADS_PER_FRAME\n * @static\n * @type {number}\n * @see PIXI.prepare.BasePrepare.limiter\n * @deprecated since 4.2.0\n */\nObject.defineProperty(prepare.canvas, 'UPLOADS_PER_FRAME', {\n    set: function set() {\n        warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please set ' + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n        // because we don't have a reference to the renderer, we can't actually set\n        // the uploads per frame, so we'll have to stick with the warning.\n    },\n    get: function get() {\n        warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please use ' + 'renderer.plugins.prepare.limiter');\n\n        return NaN;\n    }\n});\n\n/**\n * The number of graphics or textures to upload to the GPU.\n *\n * @name PIXI.prepare.webgl.UPLOADS_PER_FRAME\n * @static\n * @type {number}\n * @see PIXI.prepare.BasePrepare.limiter\n * @deprecated since 4.2.0\n */\nObject.defineProperty(prepare.webgl, 'UPLOADS_PER_FRAME', {\n    set: function set() {\n        warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please set ' + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n        // because we don't have a reference to the renderer, we can't actually set\n        // the uploads per frame, so we'll have to stick with the warning.\n    },\n    get: function get() {\n        warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please use ' + 'renderer.plugins.prepare.limiter');\n\n        return NaN;\n    }\n});\n//# sourceMappingURL=deprecation.js.map\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TEMP_RECT = new core.Rectangle();\n\n/**\n * The extract manager provides functionality to export content from the renderers.\n *\n * @class\n * @memberof PIXI\n */\n\nvar CanvasExtract = function () {\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - A reference to the current renderer\n     */\n    function CanvasExtract(renderer) {\n        _classCallCheck(this, CanvasExtract);\n\n        this.renderer = renderer;\n        /**\n         * Collection of methods for extracting data (image, pixels, etc.) from a display object or render texture\n         *\n         * @member {PIXI.CanvasExtract} extract\n         * @memberof PIXI.CanvasRenderer#\n         * @see PIXI.CanvasExtract\n         */\n        renderer.extract = this;\n    }\n\n    /**\n     * Will return a HTML Image of the target\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLImageElement} HTML Image of the target\n     */\n\n\n    CanvasExtract.prototype.image = function image(target) {\n        var image = new Image();\n\n        image.src = this.base64(target);\n\n        return image;\n    };\n\n    /**\n     * Will return a a base64 encoded string of this target. It works by calling\n     *  `CanvasExtract.getCanvas` and then running toDataURL on that.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {string} A base64 encoded string of the texture.\n     */\n\n\n    CanvasExtract.prototype.base64 = function base64(target) {\n        return this.canvas(target).toDataURL();\n    };\n\n    /**\n     * Creates a Canvas element, renders this target to it and then returns it.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLCanvasElement} A Canvas element with the texture rendered on.\n     */\n\n\n    CanvasExtract.prototype.canvas = function canvas(target) {\n        var renderer = this.renderer;\n        var context = void 0;\n        var resolution = void 0;\n        var frame = void 0;\n        var renderTexture = void 0;\n\n        if (target) {\n            if (target instanceof core.RenderTexture) {\n                renderTexture = target;\n            } else {\n                renderTexture = renderer.generateTexture(target);\n            }\n        }\n\n        if (renderTexture) {\n            context = renderTexture.baseTexture._canvasRenderTarget.context;\n            resolution = renderTexture.baseTexture._canvasRenderTarget.resolution;\n            frame = renderTexture.frame;\n        } else {\n            context = renderer.rootContext;\n\n            frame = TEMP_RECT;\n            frame.width = this.renderer.width;\n            frame.height = this.renderer.height;\n        }\n\n        var width = frame.width * resolution;\n        var height = frame.height * resolution;\n\n        var canvasBuffer = new core.CanvasRenderTarget(width, height);\n        var canvasData = context.getImageData(frame.x * resolution, frame.y * resolution, width, height);\n\n        canvasBuffer.context.putImageData(canvasData, 0, 0);\n\n        // send the canvas back..\n        return canvasBuffer.canvas;\n    };\n\n    /**\n     * Will return a one-dimensional array containing the pixel data of the entire texture in RGBA\n     * order, with integer values between 0 and 255 (included).\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {Uint8ClampedArray} One-dimensional array containing the pixel data of the entire texture\n     */\n\n\n    CanvasExtract.prototype.pixels = function pixels(target) {\n        var renderer = this.renderer;\n        var context = void 0;\n        var resolution = void 0;\n        var frame = void 0;\n        var renderTexture = void 0;\n\n        if (target) {\n            if (target instanceof core.RenderTexture) {\n                renderTexture = target;\n            } else {\n                renderTexture = renderer.generateTexture(target);\n            }\n        }\n\n        if (renderTexture) {\n            context = renderTexture.baseTexture._canvasRenderTarget.context;\n            resolution = renderTexture.baseTexture._canvasRenderTarget.resolution;\n            frame = renderTexture.frame;\n        } else {\n            context = renderer.rootContext;\n\n            frame = TEMP_RECT;\n            frame.width = renderer.width;\n            frame.height = renderer.height;\n        }\n\n        return context.getImageData(0, 0, frame.width * resolution, frame.height * resolution).data;\n    };\n\n    /**\n     * Destroys the extract\n     *\n     */\n\n\n    CanvasExtract.prototype.destroy = function destroy() {\n        this.renderer.extract = null;\n        this.renderer = null;\n    };\n\n    return CanvasExtract;\n}();\n\nexports.default = CanvasExtract;\n\n\ncore.CanvasRenderer.registerPlugin('extract', CanvasExtract);\n//# sourceMappingURL=CanvasExtract.js.map\n\n/***/ },\n/* 130 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLExtract = __webpack_require__(131);\n\nObject.defineProperty(exports, 'webgl', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_WebGLExtract).default;\n  }\n});\n\nvar _CanvasExtract = __webpack_require__(129);\n\nObject.defineProperty(exports, 'canvas', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasExtract).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TEMP_RECT = new core.Rectangle();\nvar BYTES_PER_PIXEL = 4;\n\n/**\n * The extract manager provides functionality to export content from the renderers.\n *\n * @class\n * @memberof PIXI\n */\n\nvar WebGLExtract = function () {\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    function WebGLExtract(renderer) {\n        _classCallCheck(this, WebGLExtract);\n\n        this.renderer = renderer;\n        /**\n         * Collection of methods for extracting data (image, pixels, etc.) from a display object or render texture\n         *\n         * @member {PIXI.WebGLExtract} extract\n         * @memberof PIXI.WebGLRenderer#\n         * @see PIXI.WebGLExtract\n         */\n        renderer.extract = this;\n    }\n\n    /**\n     * Will return a HTML Image of the target\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLImageElement} HTML Image of the target\n     */\n\n\n    WebGLExtract.prototype.image = function image(target) {\n        var image = new Image();\n\n        image.src = this.base64(target);\n\n        return image;\n    };\n\n    /**\n     * Will return a a base64 encoded string of this target. It works by calling\n     *  `WebGLExtract.getCanvas` and then running toDataURL on that.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {string} A base64 encoded string of the texture.\n     */\n\n\n    WebGLExtract.prototype.base64 = function base64(target) {\n        return this.canvas(target).toDataURL();\n    };\n\n    /**\n     * Creates a Canvas element, renders this target to it and then returns it.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLCanvasElement} A Canvas element with the texture rendered on.\n     */\n\n\n    WebGLExtract.prototype.canvas = function canvas(target) {\n        var renderer = this.renderer;\n        var textureBuffer = void 0;\n        var resolution = void 0;\n        var frame = void 0;\n        var flipY = false;\n        var renderTexture = void 0;\n\n        if (target) {\n            if (target instanceof core.RenderTexture) {\n                renderTexture = target;\n            } else {\n                renderTexture = this.renderer.generateTexture(target);\n            }\n        }\n\n        if (renderTexture) {\n            textureBuffer = renderTexture.baseTexture._glRenderTargets[this.renderer.CONTEXT_UID];\n            resolution = textureBuffer.resolution;\n            frame = renderTexture.frame;\n            flipY = false;\n        } else {\n            textureBuffer = this.renderer.rootRenderTarget;\n            resolution = textureBuffer.resolution;\n            flipY = true;\n\n            frame = TEMP_RECT;\n            frame.width = textureBuffer.size.width;\n            frame.height = textureBuffer.size.height;\n        }\n\n        var width = frame.width * resolution;\n        var height = frame.height * resolution;\n\n        var canvasBuffer = new core.CanvasRenderTarget(width, height);\n\n        if (textureBuffer) {\n            // bind the buffer\n            renderer.bindRenderTarget(textureBuffer);\n\n            // set up an array of pixels\n            var webglPixels = new Uint8Array(BYTES_PER_PIXEL * width * height);\n\n            // read pixels to the array\n            var gl = renderer.gl;\n\n            gl.readPixels(frame.x * resolution, frame.y * resolution, width, height, gl.RGBA, gl.UNSIGNED_BYTE, webglPixels);\n\n            // add the pixels to the canvas\n            var canvasData = canvasBuffer.context.getImageData(0, 0, width, height);\n\n            canvasData.data.set(webglPixels);\n\n            canvasBuffer.context.putImageData(canvasData, 0, 0);\n\n            // pulling pixels\n            if (flipY) {\n                canvasBuffer.context.scale(1, -1);\n                canvasBuffer.context.drawImage(canvasBuffer.canvas, 0, -height);\n            }\n        }\n\n        // send the canvas back..\n        return canvasBuffer.canvas;\n    };\n\n    /**\n     * Will return a one-dimensional array containing the pixel data of the entire texture in RGBA\n     * order, with integer values between 0 and 255 (included).\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {Uint8ClampedArray} One-dimensional array containing the pixel data of the entire texture\n     */\n\n\n    WebGLExtract.prototype.pixels = function pixels(target) {\n        var renderer = this.renderer;\n        var textureBuffer = void 0;\n        var resolution = void 0;\n        var frame = void 0;\n        var renderTexture = void 0;\n\n        if (target) {\n            if (target instanceof core.RenderTexture) {\n                renderTexture = target;\n            } else {\n                renderTexture = this.renderer.generateTexture(target);\n            }\n        }\n\n        if (renderTexture) {\n            textureBuffer = renderTexture.baseTexture._glRenderTargets[this.renderer.CONTEXT_UID];\n            resolution = textureBuffer.resolution;\n            frame = renderTexture.frame;\n        } else {\n            textureBuffer = this.renderer.rootRenderTarget;\n            resolution = textureBuffer.resolution;\n\n            frame = TEMP_RECT;\n            frame.width = textureBuffer.size.width;\n            frame.height = textureBuffer.size.height;\n        }\n\n        var width = frame.width * resolution;\n        var height = frame.height * resolution;\n\n        var webglPixels = new Uint8Array(BYTES_PER_PIXEL * width * height);\n\n        if (textureBuffer) {\n            // bind the buffer\n            renderer.bindRenderTarget(textureBuffer);\n            // read pixels to the array\n            var gl = renderer.gl;\n\n            gl.readPixels(frame.x * resolution, frame.y * resolution, width, height, gl.RGBA, gl.UNSIGNED_BYTE, webglPixels);\n        }\n\n        return webglPixels;\n    };\n\n    /**\n     * Destroys the extract\n     *\n     */\n\n\n    WebGLExtract.prototype.destroy = function destroy() {\n        this.renderer.extract = null;\n        this.renderer = null;\n    };\n\n    return WebGLExtract;\n}();\n\nexports.default = WebGLExtract;\n\n\ncore.WebGLRenderer.registerPlugin('extract', WebGLExtract);\n//# sourceMappingURL=WebGLExtract.js.map\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @typedef FrameObject\n * @type {object}\n * @property {PIXI.Texture} texture - The {@link PIXI.Texture} of the frame\n * @property {number} time - the duration of the frame in ms\n */\n\n/**\n * An AnimatedSprite is a simple way to display an animation depicted by a list of textures.\n *\n * ```js\n * let alienImages = [\"image_sequence_01.png\",\"image_sequence_02.png\",\"image_sequence_03.png\",\"image_sequence_04.png\"];\n * let textureArray = [];\n *\n * for (let i=0; i < 4; i++)\n * {\n *      let texture = PIXI.Texture.fromImage(alienImages[i]);\n *      textureArray.push(texture);\n * };\n *\n * let mc = new PIXI.AnimatedSprite(textureArray);\n * ```\n *\n * @class\n * @extends PIXI.Sprite\n * @memberof PIXI.extras\n */\nvar AnimatedSprite = function (_core$Sprite) {\n    _inherits(AnimatedSprite, _core$Sprite);\n\n    /**\n     * @param {PIXI.Texture[]|FrameObject[]} textures - an array of {@link PIXI.Texture} or frame\n     *  objects that make up the animation\n     */\n    function AnimatedSprite(textures) {\n        _classCallCheck(this, AnimatedSprite);\n\n        /**\n         * @private\n         */\n        var _this = _possibleConstructorReturn(this, _core$Sprite.call(this, textures[0] instanceof core.Texture ? textures[0] : textures[0].texture));\n\n        _this._textures = null;\n\n        /**\n         * @private\n         */\n        _this._durations = null;\n\n        _this.textures = textures;\n\n        /**\n         * The speed that the AnimatedSprite will play at. Higher is faster, lower is slower\n         *\n         * @member {number}\n         * @default 1\n         */\n        _this.animationSpeed = 1;\n\n        /**\n         * Whether or not the animate sprite repeats after playing.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        _this.loop = true;\n\n        /**\n         * Function to call when a AnimatedSprite finishes playing\n         *\n         * @method\n         * @memberof PIXI.extras.AnimatedSprite#\n         */\n        _this.onComplete = null;\n\n        /**\n         * Function to call when a AnimatedSprite changes which texture is being rendered\n         *\n         * @method\n         * @memberof PIXI.extras.AnimatedSprite#\n         */\n        _this.onFrameChange = null;\n\n        /**\n         * Elapsed time since animation has been started, used internally to display current texture\n         *\n         * @member {number}\n         * @private\n         */\n        _this._currentTime = 0;\n\n        /**\n         * Indicates if the AnimatedSprite is currently playing\n         *\n         * @member {boolean}\n         * @readonly\n         */\n        _this.playing = false;\n        return _this;\n    }\n\n    /**\n     * Stops the AnimatedSprite\n     *\n     */\n\n\n    AnimatedSprite.prototype.stop = function stop() {\n        if (!this.playing) {\n            return;\n        }\n\n        this.playing = false;\n        core.ticker.shared.remove(this.update, this);\n    };\n\n    /**\n     * Plays the AnimatedSprite\n     *\n     */\n\n\n    AnimatedSprite.prototype.play = function play() {\n        if (this.playing) {\n            return;\n        }\n\n        this.playing = true;\n        core.ticker.shared.add(this.update, this);\n    };\n\n    /**\n     * Stops the AnimatedSprite and goes to a specific frame\n     *\n     * @param {number} frameNumber - frame index to stop at\n     */\n\n\n    AnimatedSprite.prototype.gotoAndStop = function gotoAndStop(frameNumber) {\n        this.stop();\n\n        var previousFrame = this.currentFrame;\n\n        this._currentTime = frameNumber;\n\n        if (previousFrame !== this.currentFrame) {\n            this.updateTexture();\n        }\n    };\n\n    /**\n     * Goes to a specific frame and begins playing the AnimatedSprite\n     *\n     * @param {number} frameNumber - frame index to start at\n     */\n\n\n    AnimatedSprite.prototype.gotoAndPlay = function gotoAndPlay(frameNumber) {\n        var previousFrame = this.currentFrame;\n\n        this._currentTime = frameNumber;\n\n        if (previousFrame !== this.currentFrame) {\n            this.updateTexture();\n        }\n\n        this.play();\n    };\n\n    /**\n     * Updates the object transform for rendering.\n     *\n     * @private\n     * @param {number} deltaTime - Time since last tick.\n     */\n\n\n    AnimatedSprite.prototype.update = function update(deltaTime) {\n        var elapsed = this.animationSpeed * deltaTime;\n        var previousFrame = this.currentFrame;\n\n        if (this._durations !== null) {\n            var lag = this._currentTime % 1 * this._durations[this.currentFrame];\n\n            lag += elapsed / 60 * 1000;\n\n            while (lag < 0) {\n                this._currentTime--;\n                lag += this._durations[this.currentFrame];\n            }\n\n            var sign = Math.sign(this.animationSpeed * deltaTime);\n\n            this._currentTime = Math.floor(this._currentTime);\n\n            while (lag >= this._durations[this.currentFrame]) {\n                lag -= this._durations[this.currentFrame] * sign;\n                this._currentTime += sign;\n            }\n\n            this._currentTime += lag / this._durations[this.currentFrame];\n        } else {\n            this._currentTime += elapsed;\n        }\n\n        if (this._currentTime < 0 && !this.loop) {\n            this.gotoAndStop(0);\n\n            if (this.onComplete) {\n                this.onComplete();\n            }\n        } else if (this._currentTime >= this._textures.length && !this.loop) {\n            this.gotoAndStop(this._textures.length - 1);\n\n            if (this.onComplete) {\n                this.onComplete();\n            }\n        } else if (previousFrame !== this.currentFrame) {\n            this.updateTexture();\n        }\n    };\n\n    /**\n     * Updates the displayed texture to match the current frame index\n     *\n     * @private\n     */\n\n\n    AnimatedSprite.prototype.updateTexture = function updateTexture() {\n        this._texture = this._textures[this.currentFrame];\n        this._textureID = -1;\n\n        if (this.onFrameChange) {\n            this.onFrameChange(this.currentFrame);\n        }\n    };\n\n    /**\n     * Stops the AnimatedSprite and destroys it\n     *\n     */\n\n\n    AnimatedSprite.prototype.destroy = function destroy() {\n        this.stop();\n        _core$Sprite.prototype.destroy.call(this);\n    };\n\n    /**\n     * A short hand way of creating a movieclip from an array of frame ids\n     *\n     * @static\n     * @param {string[]} frames - The array of frames ids the movieclip will use as its texture frames\n     * @return {AnimatedSprite} The new animated sprite with the specified frames.\n     */\n\n\n    AnimatedSprite.fromFrames = function fromFrames(frames) {\n        var textures = [];\n\n        for (var i = 0; i < frames.length; ++i) {\n            textures.push(core.Texture.fromFrame(frames[i]));\n        }\n\n        return new AnimatedSprite(textures);\n    };\n\n    /**\n     * A short hand way of creating a movieclip from an array of image ids\n     *\n     * @static\n     * @param {string[]} images - the array of image urls the movieclip will use as its texture frames\n     * @return {AnimatedSprite} The new animate sprite with the specified images as frames.\n     */\n\n\n    AnimatedSprite.fromImages = function fromImages(images) {\n        var textures = [];\n\n        for (var i = 0; i < images.length; ++i) {\n            textures.push(core.Texture.fromImage(images[i]));\n        }\n\n        return new AnimatedSprite(textures);\n    };\n\n    /**\n     * totalFrames is the total number of frames in the AnimatedSprite. This is the same as number of textures\n     * assigned to the AnimatedSprite.\n     *\n     * @readonly\n     * @member {number}\n     * @memberof PIXI.extras.AnimatedSprite#\n     * @default 0\n     */\n\n\n    _createClass(AnimatedSprite, [{\n        key: 'totalFrames',\n        get: function get() {\n            return this._textures.length;\n        }\n\n        /**\n         * The array of textures used for this AnimatedSprite\n         *\n         * @member {PIXI.Texture[]}\n         * @memberof PIXI.extras.AnimatedSprite#\n         */\n\n    }, {\n        key: 'textures',\n        get: function get() {\n            return this._textures;\n        }\n\n        /**\n         * Sets the textures.\n         *\n         * @param {PIXI.Texture[]} value - The texture to set.\n         */\n        ,\n        set: function set(value) {\n            if (value[0] instanceof core.Texture) {\n                this._textures = value;\n                this._durations = null;\n            } else {\n                this._textures = [];\n                this._durations = [];\n\n                for (var i = 0; i < value.length; i++) {\n                    this._textures.push(value[i].texture);\n                    this._durations.push(value[i].time);\n                }\n            }\n        }\n\n        /**\n        * The AnimatedSprites current frame index\n        *\n        * @member {number}\n        * @memberof PIXI.extras.AnimatedSprite#\n        * @readonly\n        */\n\n    }, {\n        key: 'currentFrame',\n        get: function get() {\n            var currentFrame = Math.floor(this._currentTime) % this._textures.length;\n\n            if (currentFrame < 0) {\n                currentFrame += this._textures.length;\n            }\n\n            return currentFrame;\n        }\n    }]);\n\n    return AnimatedSprite;\n}(core.Sprite);\n\nexports.default = AnimatedSprite;\n//# sourceMappingURL=AnimatedSprite.js.map\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _ObservablePoint = __webpack_require__(43);\n\nvar _ObservablePoint2 = _interopRequireDefault(_ObservablePoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A BitmapText object will create a line or multiple lines of text using bitmap font. To\n * split a line you can use '\\n', '\\r' or '\\r\\n' in your string. You can generate the fnt files using:\n *\n * A BitmapText can only be created when the font is loaded\n *\n * ```js\n * // in this case the font is in a file called 'desyrel.fnt'\n * let bitmapText = new PIXI.extras.BitmapText(\"text using a fancy font!\", {font: \"35px Desyrel\", align: \"right\"});\n * ```\n *\n * http://www.angelcode.com/products/bmfont/ for windows or\n * http://www.bmglyph.com/ for mac.\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI.extras\n */\nvar BitmapText = function (_core$Container) {\n    _inherits(BitmapText, _core$Container);\n\n    /**\n     * @param {string} text - The copy that you would like the text to display\n     * @param {object} style - The style parameters\n     * @param {string|object} style.font - The font descriptor for the object, can be passed as a string of form\n     *      \"24px FontName\" or \"FontName\" or as an object with explicit name/size properties.\n     * @param {string} [style.font.name] - The bitmap font id\n     * @param {number} [style.font.size] - The size of the font in pixels, e.g. 24\n     * @param {string} [style.align='left'] - Alignment for multiline text ('left', 'center' or 'right'), does not affect\n     *      single line text\n     * @param {number} [style.tint=0xFFFFFF] - The tint color\n     */\n    function BitmapText(text) {\n        var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, BitmapText);\n\n        /**\n         * The width of the overall text, different from fontSize,\n         * which is defined in the style object\n         *\n         * @member {number}\n         * @readonly\n         */\n        var _this = _possibleConstructorReturn(this, _core$Container.call(this));\n\n        _this.textWidth = 0;\n\n        /**\n         * The height of the overall text, different from fontSize,\n         * which is defined in the style object\n         *\n         * @member {number}\n         * @readonly\n         */\n        _this.textHeight = 0;\n\n        /**\n         * Private tracker for the letter sprite pool.\n         *\n         * @member {PIXI.Sprite[]}\n         * @private\n         */\n        _this._glyphs = [];\n\n        /**\n         * Private tracker for the current style.\n         *\n         * @member {object}\n         * @private\n         */\n        _this._font = {\n            tint: style.tint !== undefined ? style.tint : 0xFFFFFF,\n            align: style.align || 'left',\n            name: null,\n            size: 0\n        };\n\n        /**\n         * Private tracker for the current font.\n         *\n         * @member {object}\n         * @private\n         */\n        _this.font = style.font; // run font setter\n\n        /**\n         * Private tracker for the current text.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._text = text;\n\n        /**\n         * The max width of this bitmap text in pixels. If the text provided is longer than the\n         * value provided, line breaks will be automatically inserted in the last whitespace.\n         * Disable by setting value to 0\n         *\n         * @member {number}\n         */\n        _this.maxWidth = 0;\n\n        /**\n         * The max line height. This is useful when trying to use the total height of the Text,\n         * ie: when trying to vertically align.\n         *\n         * @member {number}\n         */\n        _this.maxLineHeight = 0;\n\n        /**\n         * Text anchor. read-only\n         *\n         * @member {PIXI.ObservablePoint}\n         * @private\n         */\n        _this._anchor = new _ObservablePoint2.default(function () {\n            _this.dirty = true;\n        }, _this, 0, 0);\n\n        /**\n         * The dirty state of this object.\n         *\n         * @member {boolean}\n         */\n        _this.dirty = false;\n\n        _this.updateText();\n        return _this;\n    }\n\n    /**\n     * Renders text and updates it when needed\n     *\n     * @private\n     */\n\n\n    BitmapText.prototype.updateText = function updateText() {\n        var data = BitmapText.fonts[this._font.name];\n        var scale = this._font.size / data.size;\n        var pos = new core.Point();\n        var chars = [];\n        var lineWidths = [];\n\n        var prevCharCode = null;\n        var lastLineWidth = 0;\n        var maxLineWidth = 0;\n        var line = 0;\n        var lastSpace = -1;\n        var lastSpaceWidth = 0;\n        var maxLineHeight = 0;\n\n        for (var i = 0; i < this.text.length; i++) {\n            var charCode = this.text.charCodeAt(i);\n\n            if (/(\\s)/.test(this.text.charAt(i))) {\n                lastSpace = i;\n                lastSpaceWidth = lastLineWidth;\n            }\n\n            if (/(?:\\r\\n|\\r|\\n)/.test(this.text.charAt(i))) {\n                lineWidths.push(lastLineWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n                line++;\n\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n                continue;\n            }\n\n            if (lastSpace !== -1 && this.maxWidth > 0 && pos.x * scale > this.maxWidth) {\n                core.utils.removeItems(chars, lastSpace, i - lastSpace);\n                i = lastSpace;\n                lastSpace = -1;\n\n                lineWidths.push(lastSpaceWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastSpaceWidth);\n                line++;\n\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n                continue;\n            }\n\n            var charData = data.chars[charCode];\n\n            if (!charData) {\n                continue;\n            }\n\n            if (prevCharCode && charData.kerning[prevCharCode]) {\n                pos.x += charData.kerning[prevCharCode];\n            }\n\n            chars.push({\n                texture: charData.texture,\n                line: line,\n                charCode: charCode,\n                position: new core.Point(pos.x + charData.xOffset, pos.y + charData.yOffset)\n            });\n            lastLineWidth = pos.x + (charData.texture.width + charData.xOffset);\n            pos.x += charData.xAdvance;\n            maxLineHeight = Math.max(maxLineHeight, charData.yOffset + charData.texture.height);\n            prevCharCode = charCode;\n        }\n\n        lineWidths.push(lastLineWidth);\n        maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n\n        var lineAlignOffsets = [];\n\n        for (var _i = 0; _i <= line; _i++) {\n            var alignOffset = 0;\n\n            if (this._font.align === 'right') {\n                alignOffset = maxLineWidth - lineWidths[_i];\n            } else if (this._font.align === 'center') {\n                alignOffset = (maxLineWidth - lineWidths[_i]) / 2;\n            }\n\n            lineAlignOffsets.push(alignOffset);\n        }\n\n        var lenChars = chars.length;\n        var tint = this.tint;\n\n        for (var _i2 = 0; _i2 < lenChars; _i2++) {\n            var c = this._glyphs[_i2]; // get the next glyph sprite\n\n            if (c) {\n                c.texture = chars[_i2].texture;\n            } else {\n                c = new core.Sprite(chars[_i2].texture);\n                this._glyphs.push(c);\n            }\n\n            c.position.x = (chars[_i2].position.x + lineAlignOffsets[chars[_i2].line]) * scale;\n            c.position.y = chars[_i2].position.y * scale;\n            c.scale.x = c.scale.y = scale;\n            c.tint = tint;\n\n            if (!c.parent) {\n                this.addChild(c);\n            }\n        }\n\n        // remove unnecessary children.\n        for (var _i3 = lenChars; _i3 < this._glyphs.length; ++_i3) {\n            this.removeChild(this._glyphs[_i3]);\n        }\n\n        this.textWidth = maxLineWidth * scale;\n        this.textHeight = (pos.y + data.lineHeight) * scale;\n\n        // apply anchor\n        if (this.anchor.x !== 0 || this.anchor.y !== 0) {\n            for (var _i4 = 0; _i4 < lenChars; _i4++) {\n                this._glyphs[_i4].x -= this.textWidth * this.anchor.x;\n                this._glyphs[_i4].y -= this.textHeight * this.anchor.y;\n            }\n        }\n        this.maxLineHeight = maxLineHeight * scale;\n    };\n\n    /**\n     * Updates the transform of this object\n     *\n     * @private\n     */\n\n\n    BitmapText.prototype.updateTransform = function updateTransform() {\n        this.validate();\n        this.containerUpdateTransform();\n    };\n\n    /**\n     * Validates text before calling parent's getLocalBounds\n     *\n     * @return {PIXI.Rectangle} The rectangular bounding area\n     */\n\n\n    BitmapText.prototype.getLocalBounds = function getLocalBounds() {\n        this.validate();\n\n        return _core$Container.prototype.getLocalBounds.call(this);\n    };\n\n    /**\n     * Updates text when needed\n     *\n     * @private\n     */\n\n\n    BitmapText.prototype.validate = function validate() {\n        if (this.dirty) {\n            this.updateText();\n            this.dirty = false;\n        }\n    };\n\n    /**\n     * The tint of the BitmapText object\n     *\n     * @member {number}\n     * @memberof PIXI.extras.BitmapText#\n     */\n\n\n    _createClass(BitmapText, [{\n        key: 'tint',\n        get: function get() {\n            return this._font.tint;\n        }\n\n        /**\n         * Sets the tint.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._font.tint = typeof value === 'number' && value >= 0 ? value : 0xFFFFFF;\n\n            this.dirty = true;\n        }\n\n        /**\n         * The alignment of the BitmapText object\n         *\n         * @member {string}\n         * @default 'left'\n         * @memberof PIXI.extras.BitmapText#\n         */\n\n    }, {\n        key: 'align',\n        get: function get() {\n            return this._font.align;\n        }\n\n        /**\n         * Sets the alignment\n         *\n         * @param {string} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._font.align = value || 'left';\n\n            this.dirty = true;\n        }\n\n        /**\n         * The anchor sets the origin point of the text.\n         * The default is 0,0 this means the text's origin is the top left\n         * Setting the anchor to 0.5,0.5 means the text's origin is centered\n         * Setting the anchor to 1,1 would mean the text's origin point will be the bottom right corner\n         *\n         * @member {PIXI.Point | number}\n         * @memberof PIXI.extras.BitmapText#\n         */\n\n    }, {\n        key: 'anchor',\n        get: function get() {\n            return this._anchor;\n        }\n\n        /**\n         * Sets the anchor.\n         *\n         * @param {PIXI.Point|number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (typeof value === 'number') {\n                this._anchor.set(value);\n            } else {\n                this._anchor.copy(value);\n            }\n        }\n\n        /**\n         * The font descriptor of the BitmapText object\n         *\n         * @member {string|object}\n         * @memberof PIXI.extras.BitmapText#\n         */\n\n    }, {\n        key: 'font',\n        get: function get() {\n            return this._font;\n        }\n\n        /**\n         * Sets the font.\n         *\n         * @param {string|object} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (!value) {\n                return;\n            }\n\n            if (typeof value === 'string') {\n                value = value.split(' ');\n\n                this._font.name = value.length === 1 ? value[0] : value.slice(1).join(' ');\n                this._font.size = value.length >= 2 ? parseInt(value[0], 10) : BitmapText.fonts[this._font.name].size;\n            } else {\n                this._font.name = value.name;\n                this._font.size = typeof value.size === 'number' ? value.size : parseInt(value.size, 10);\n            }\n\n            this.dirty = true;\n        }\n\n        /**\n         * The text of the BitmapText object\n         *\n         * @member {string}\n         * @memberof PIXI.extras.BitmapText#\n         */\n\n    }, {\n        key: 'text',\n        get: function get() {\n            return this._text;\n        }\n\n        /**\n         * Sets the text.\n         *\n         * @param {string} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            value = value.toString() || ' ';\n            if (this._text === value) {\n                return;\n            }\n            this._text = value;\n            this.dirty = true;\n        }\n    }]);\n\n    return BitmapText;\n}(core.Container);\n\nexports.default = BitmapText;\n\n\nBitmapText.fonts = {};\n//# sourceMappingURL=BitmapText.js.map\n\n/***/ },\n/* 134 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _CanvasTinter = __webpack_require__(28);\n\nvar _CanvasTinter2 = _interopRequireDefault(_CanvasTinter);\n\nvar _TextureTransform = __webpack_require__(55);\n\nvar _TextureTransform2 = _interopRequireDefault(_TextureTransform);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tempPoint = new core.Point();\n\n/**\n * A tiling sprite is a fast way of rendering a tiling image\n *\n * @class\n * @extends PIXI.Sprite\n * @memberof PIXI.extras\n */\n\nvar TilingSprite = function (_core$Sprite) {\n    _inherits(TilingSprite, _core$Sprite);\n\n    /**\n     * @param {PIXI.Texture} texture - the texture of the tiling sprite\n     * @param {number} [width=100] - the width of the tiling sprite\n     * @param {number} [height=100] - the height of the tiling sprite\n     */\n    function TilingSprite(texture) {\n        var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n        var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n\n        _classCallCheck(this, TilingSprite);\n\n        /**\n         * Tile transform\n         *\n         * @member {PIXI.TransformStatic}\n         */\n        var _this = _possibleConstructorReturn(this, _core$Sprite.call(this, texture));\n\n        _this.tileTransform = new core.TransformStatic();\n\n        // /// private\n\n        /**\n         * The with of the tiling sprite\n         *\n         * @member {number}\n         * @private\n         */\n        _this._width = width;\n\n        /**\n         * The height of the tiling sprite\n         *\n         * @member {number}\n         * @private\n         */\n        _this._height = height;\n\n        /**\n         * Canvas pattern\n         *\n         * @type {CanvasPattern}\n         * @private\n         */\n        _this._canvasPattern = null;\n\n        /**\n         * transform that is applied to UV to get the texture coords\n         *\n         * @member {PIXI.extras.TextureTransform}\n         */\n        _this.uvTransform = texture.transform || new _TextureTransform2.default(texture);\n        return _this;\n    }\n    /**\n     * Changes frame clamping in corresponding textureTransform, shortcut\n     * Change to -0.5 to add a pixel to the edge, recommended for transparent trimmed textures in atlas\n     *\n     * @default 0.5\n     * @member {number}\n     * @memberof PIXI.TilingSprite\n     */\n\n\n    /**\n     * @private\n     */\n    TilingSprite.prototype._onTextureUpdate = function _onTextureUpdate() {\n        if (this.uvTransform) {\n            this.uvTransform.texture = this._texture;\n        }\n    };\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    TilingSprite.prototype._renderWebGL = function _renderWebGL(renderer) {\n        // tweak our texture temporarily..\n        var texture = this._texture;\n\n        if (!texture || !texture.valid) {\n            return;\n        }\n\n        this.tileTransform.updateLocalTransform();\n        this.uvTransform.update();\n\n        renderer.setObjectRenderer(renderer.plugins.tilingSprite);\n        renderer.plugins.tilingSprite.render(this);\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - a reference to the canvas renderer\n     */\n\n\n    TilingSprite.prototype._renderCanvas = function _renderCanvas(renderer) {\n        var texture = this._texture;\n\n        if (!texture.baseTexture.hasLoaded) {\n            return;\n        }\n\n        var context = renderer.context;\n        var transform = this.worldTransform;\n        var resolution = renderer.resolution;\n        var baseTexture = texture.baseTexture;\n        var baseTextureResolution = texture.baseTexture.resolution;\n        var modX = this.tilePosition.x / this.tileScale.x % texture._frame.width;\n        var modY = this.tilePosition.y / this.tileScale.y % texture._frame.height;\n\n        // create a nice shiny pattern!\n        // TODO this needs to be refreshed if texture changes..\n        if (!this._canvasPattern) {\n            // cut an object from a spritesheet..\n            var tempCanvas = new core.CanvasRenderTarget(texture._frame.width, texture._frame.height, baseTextureResolution);\n\n            // Tint the tiling sprite\n            if (this.tint !== 0xFFFFFF) {\n                if (this.cachedTint !== this.tint) {\n                    this.cachedTint = this.tint;\n\n                    this.tintedTexture = _CanvasTinter2.default.getTintedTexture(this, this.tint);\n                }\n                tempCanvas.context.drawImage(this.tintedTexture, 0, 0);\n            } else {\n                tempCanvas.context.drawImage(baseTexture.source, -texture._frame.x, -texture._frame.y);\n            }\n            this._canvasPattern = tempCanvas.context.createPattern(tempCanvas.canvas, 'repeat');\n        }\n\n        // set context state..\n        context.globalAlpha = this.worldAlpha;\n        context.setTransform(transform.a * resolution, transform.b * resolution, transform.c * resolution, transform.d * resolution, transform.tx * resolution, transform.ty * resolution);\n\n        // TODO - this should be rolled into the setTransform above..\n        context.scale(this.tileScale.x / baseTextureResolution, this.tileScale.y / baseTextureResolution);\n\n        context.translate(modX + this.anchor.x * -this._width, modY + this.anchor.y * -this._height);\n\n        renderer.setBlendMode(this.blendMode);\n\n        // fill the pattern!\n        context.fillStyle = this._canvasPattern;\n        context.fillRect(-modX, -modY, this._width / this.tileScale.x * baseTextureResolution, this._height / this.tileScale.y * baseTextureResolution);\n    };\n\n    /**\n     * Updates the bounds of the tiling sprite.\n     *\n     * @private\n     */\n\n\n    TilingSprite.prototype._calculateBounds = function _calculateBounds() {\n        var minX = this._width * -this._anchor._x;\n        var minY = this._height * -this._anchor._y;\n        var maxX = this._width * (1 - this._anchor._x);\n        var maxY = this._height * (1 - this._anchor._y);\n\n        this._bounds.addFrame(this.transform, minX, minY, maxX, maxY);\n    };\n\n    /**\n     * Gets the local bounds of the sprite object.\n     *\n     * @param {PIXI.Rectangle} rect - The output rectangle.\n     * @return {PIXI.Rectangle} The bounds.\n     */\n\n\n    TilingSprite.prototype.getLocalBounds = function getLocalBounds(rect) {\n        // we can do a fast local bounds if the sprite has no children!\n        if (this.children.length === 0) {\n            this._bounds.minX = this._width * -this._anchor._x;\n            this._bounds.minY = this._height * -this._anchor._y;\n            this._bounds.maxX = this._width * (1 - this._anchor._x);\n            this._bounds.maxY = this._height * (1 - this._anchor._x);\n\n            if (!rect) {\n                if (!this._localBoundsRect) {\n                    this._localBoundsRect = new core.Rectangle();\n                }\n\n                rect = this._localBoundsRect;\n            }\n\n            return this._bounds.getRectangle(rect);\n        }\n\n        return _core$Sprite.prototype.getLocalBounds.call(this, rect);\n    };\n\n    /**\n     * Checks if a point is inside this tiling sprite.\n     *\n     * @param {PIXI.Point} point - the point to check\n     * @return {boolean} Whether or not the sprite contains the point.\n     */\n\n\n    TilingSprite.prototype.containsPoint = function containsPoint(point) {\n        this.worldTransform.applyInverse(point, tempPoint);\n\n        var width = this._width;\n        var height = this._height;\n        var x1 = -width * this.anchor._x;\n\n        if (tempPoint.x > x1 && tempPoint.x < x1 + width) {\n            var y1 = -height * this.anchor._y;\n\n            if (tempPoint.y > y1 && tempPoint.y < y1 + height) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * Destroys this tiling sprite\n     *\n     */\n\n\n    TilingSprite.prototype.destroy = function destroy() {\n        _core$Sprite.prototype.destroy.call(this);\n\n        this.tileTransform = null;\n        this.uvTransform = null;\n    };\n\n    /**\n     * Helper function that creates a new tiling sprite based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|PIXI.BaseTexture|HTMLCanvasElement|HTMLVideoElement} source - Source to create texture from\n     * @param {number} width - the width of the tiling sprite\n     * @param {number} height - the height of the tiling sprite\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    TilingSprite.from = function from(source, width, height) {\n        return new TilingSprite(core.Texture.from(source), width, height);\n    };\n\n    /**\n     * Helper function that creates a tiling sprite that will use a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @param {number} width - the width of the tiling sprite\n     * @param {number} height - the height of the tiling sprite\n     * @return {PIXI.extras.TilingSprite} A new TilingSprite using a texture from the texture cache matching the frameId\n     */\n\n\n    TilingSprite.fromFrame = function fromFrame(frameId, width, height) {\n        var texture = core.utils.TextureCache[frameId];\n\n        if (!texture) {\n            throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache ' + this);\n        }\n\n        return new TilingSprite(texture, width, height);\n    };\n\n    /**\n     * Helper function that creates a sprite that will contain a texture based on an image url\n     * If the image is not in the texture cache it will be loaded\n     *\n     * @static\n     * @param {string} imageId - The image url of the texture\n     * @param {number} width - the width of the tiling sprite\n     * @param {number} height - the height of the tiling sprite\n     * @param {boolean} [crossorigin] - if you want to specify the cross-origin parameter\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - if you want to specify the scale mode,\n     *  see {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.extras.TilingSprite} A new TilingSprite using a texture from the texture cache matching the image id\n     */\n\n\n    TilingSprite.fromImage = function fromImage(imageId, width, height, crossorigin, scaleMode) {\n        return new TilingSprite(core.Texture.fromImage(imageId, crossorigin, scaleMode), width, height);\n    };\n\n    /**\n     * The width of the sprite, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.extras.TilingSprite#\n     */\n\n\n    _createClass(TilingSprite, [{\n        key: 'clampMargin',\n        get: function get() {\n            return this.uvTransform.clampMargin;\n        }\n\n        /**\n         * setter for clampMargin\n         *\n         * @param {number} value assigned value\n         */\n        ,\n        set: function set(value) {\n            this.uvTransform.clampMargin = value;\n            this.uvTransform.update(true);\n        }\n\n        /**\n         * The scaling of the image that is being tiled\n         *\n         * @member {PIXI.ObservablePoint}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'tileScale',\n        get: function get() {\n            return this.tileTransform.scale;\n        }\n\n        /**\n         * Copies the point to the scale of the tiled image.\n         *\n         * @param {PIXI.Point|PIXI.ObservablePoint} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.tileTransform.scale.copy(value);\n        }\n\n        /**\n         * The offset of the image that is being tiled\n         *\n         * @member {PIXI.ObservablePoint}\n         * @memberof PIXI.TilingSprite#\n         */\n\n    }, {\n        key: 'tilePosition',\n        get: function get() {\n            return this.tileTransform.position;\n        }\n\n        /**\n         * Copies the point to the position of the tiled image.\n         *\n         * @param {PIXI.Point|PIXI.ObservablePoint} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.tileTransform.position.copy(value);\n        }\n    }, {\n        key: 'width',\n        get: function get() {\n            return this._width;\n        }\n\n        /**\n         * Sets the width.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._width = value;\n        }\n\n        /**\n         * The height of the TilingSprite, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         * @memberof PIXI.extras.TilingSprite#\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return this._height;\n        }\n\n        /**\n         * Sets the width.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._height = value;\n        }\n    }]);\n\n    return TilingSprite;\n}(core.Sprite);\n\nexports.default = TilingSprite;\n//# sourceMappingURL=TilingSprite.js.map\n\n/***/ },\n/* 135 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DisplayObject = core.DisplayObject;\nvar _tempMatrix = new core.Matrix();\n\nDisplayObject.prototype._cacheAsBitmap = false;\nDisplayObject.prototype._cacheData = false;\n\n// figured theres no point adding ALL the extra variables to prototype.\n// this model can hold the information needed. This can also be generated on demand as\n// most objects are not cached as bitmaps.\n/**\n * @class\n * @ignore\n */\n\nvar CacheData =\n/**\n *\n */\nfunction CacheData() {\n    _classCallCheck(this, CacheData);\n\n    this.originalRenderWebGL = null;\n    this.originalRenderCanvas = null;\n    this.originalCalculateBounds = null;\n    this.originalGetLocalBounds = null;\n\n    this.originalUpdateTransform = null;\n    this.originalHitTest = null;\n    this.originalDestroy = null;\n    this.originalMask = null;\n    this.originalFilterArea = null;\n    this.sprite = null;\n};\n\nObject.defineProperties(DisplayObject.prototype, {\n    /**\n     * Set this to true if you want this display object to be cached as a bitmap.\n     * This basically takes a snap shot of the display object as it is at that moment. It can\n     * provide a performance benefit for complex static displayObjects.\n     * To remove simply set this property to 'false'\n     *\n     * @member {boolean}\n     * @memberof PIXI.DisplayObject#\n     */\n    cacheAsBitmap: {\n        get: function get() {\n            return this._cacheAsBitmap;\n        },\n        set: function set(value) {\n            if (this._cacheAsBitmap === value) {\n                return;\n            }\n\n            this._cacheAsBitmap = value;\n\n            var data = void 0;\n\n            if (value) {\n                if (!this._cacheData) {\n                    this._cacheData = new CacheData();\n                }\n\n                data = this._cacheData;\n\n                data.originalRenderWebGL = this.renderWebGL;\n                data.originalRenderCanvas = this.renderCanvas;\n\n                data.originalUpdateTransform = this.updateTransform;\n                data.originalCalculateBounds = this._calculateBounds;\n                data.originalGetLocalBounds = this.getLocalBounds;\n\n                data.originalDestroy = this.destroy;\n\n                data.originalContainsPoint = this.containsPoint;\n\n                data.originalMask = this._mask;\n                data.originalFilterArea = this.filterArea;\n\n                this.renderWebGL = this._renderCachedWebGL;\n                this.renderCanvas = this._renderCachedCanvas;\n\n                this.destroy = this._cacheAsBitmapDestroy;\n            } else {\n                data = this._cacheData;\n\n                if (data.sprite) {\n                    this._destroyCachedDisplayObject();\n                }\n\n                this.renderWebGL = data.originalRenderWebGL;\n                this.renderCanvas = data.originalRenderCanvas;\n                this._calculateBounds = data.originalCalculateBounds;\n                this.getLocalBounds = data.originalGetLocalBounds;\n\n                this.destroy = data.originalDestroy;\n\n                this.updateTransform = data.originalUpdateTransform;\n                this.containsPoint = data.originalContainsPoint;\n\n                this._mask = data.originalMask;\n                this.filterArea = data.originalFilterArea;\n            }\n        }\n    }\n});\n\n/**\n * Renders a cached version of the sprite with WebGL\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.WebGLRenderer} renderer - the WebGL renderer\n */\nDisplayObject.prototype._renderCachedWebGL = function _renderCachedWebGL(renderer) {\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n        return;\n    }\n\n    this._initCachedDisplayObject(renderer);\n\n    this._cacheData.sprite._transformID = -1;\n    this._cacheData.sprite.worldAlpha = this.worldAlpha;\n    this._cacheData.sprite._renderWebGL(renderer);\n};\n\n/**\n * Prepares the WebGL renderer to cache the sprite\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.WebGLRenderer} renderer - the WebGL renderer\n */\nDisplayObject.prototype._initCachedDisplayObject = function _initCachedDisplayObject(renderer) {\n    if (this._cacheData && this._cacheData.sprite) {\n        return;\n    }\n\n    // make sure alpha is set to 1 otherwise it will get rendered as invisible!\n    var cacheAlpha = this.alpha;\n\n    this.alpha = 1;\n\n    // first we flush anything left in the renderer (otherwise it would get rendered to the cached texture)\n    renderer.currentRenderer.flush();\n    // this.filters= [];\n\n    // next we find the dimensions of the untransformed object\n    // this function also calls updatetransform on all its children as part of the measuring.\n    // This means we don't need to update the transform again in this function\n    // TODO pass an object to clone too? saves having to create a new one each time!\n    var bounds = this.getLocalBounds().clone();\n\n    // add some padding!\n    if (this._filters) {\n        var padding = this._filters[0].padding;\n\n        bounds.pad(padding);\n    }\n\n    // for now we cache the current renderTarget that the webGL renderer is currently using.\n    // this could be more elegent..\n    var cachedRenderTarget = renderer._activeRenderTarget;\n    // We also store the filter stack - I will definitely look to change how this works a little later down the line.\n    var stack = renderer.filterManager.filterStack;\n\n    // this renderTexture will be used to store the cached DisplayObject\n\n    var renderTexture = core.RenderTexture.create(bounds.width | 0, bounds.height | 0);\n\n    // need to set //\n    var m = _tempMatrix;\n\n    m.tx = -bounds.x;\n    m.ty = -bounds.y;\n\n    // reset\n    this.transform.worldTransform.identity();\n\n    // set all properties to there original so we can render to a texture\n    this.renderWebGL = this._cacheData.originalRenderWebGL;\n\n    renderer.render(this, renderTexture, true, m, true);\n    // now restore the state be setting the new properties\n\n    renderer.bindRenderTarget(cachedRenderTarget);\n\n    renderer.filterManager.filterStack = stack;\n\n    this.renderWebGL = this._renderCachedWebGL;\n    this.updateTransform = this.displayObjectUpdateTransform;\n\n    this._mask = null;\n    this.filterArea = null;\n\n    // create our cached sprite\n    var cachedSprite = new core.Sprite(renderTexture);\n\n    cachedSprite.transform.worldTransform = this.transform.worldTransform;\n    cachedSprite.anchor.x = -(bounds.x / bounds.width);\n    cachedSprite.anchor.y = -(bounds.y / bounds.height);\n    cachedSprite.alpha = cacheAlpha;\n    cachedSprite._bounds = this._bounds;\n\n    // easy bounds..\n    this._calculateBounds = this._calculateCachedBounds;\n    this.getLocalBounds = this._getCachedLocalBounds;\n\n    this._cacheData.sprite = cachedSprite;\n\n    this.transform._parentID = -1;\n    // restore the transform of the cached sprite to avoid the nasty flicker..\n    this.updateTransform();\n\n    // map the hit test..\n    this.containsPoint = cachedSprite.containsPoint.bind(cachedSprite);\n};\n\n/**\n * Renders a cached version of the sprite with canvas\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.WebGLRenderer} renderer - the WebGL renderer\n */\nDisplayObject.prototype._renderCachedCanvas = function _renderCachedCanvas(renderer) {\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n        return;\n    }\n\n    this._initCachedDisplayObjectCanvas(renderer);\n\n    this._cacheData.sprite.worldAlpha = this.worldAlpha;\n\n    this._cacheData.sprite.renderCanvas(renderer);\n};\n\n// TODO this can be the same as the webGL verison.. will need to do a little tweaking first though..\n/**\n * Prepares the Canvas renderer to cache the sprite\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.WebGLRenderer} renderer - the WebGL renderer\n */\nDisplayObject.prototype._initCachedDisplayObjectCanvas = function _initCachedDisplayObjectCanvas(renderer) {\n    if (this._cacheData && this._cacheData.sprite) {\n        return;\n    }\n\n    // get bounds actually transforms the object for us already!\n    var bounds = this.getLocalBounds();\n\n    var cacheAlpha = this.alpha;\n\n    this.alpha = 1;\n\n    var cachedRenderTarget = renderer.context;\n\n    var renderTexture = core.RenderTexture.create(bounds.width | 0, bounds.height | 0);\n\n    // need to set //\n    var m = _tempMatrix;\n\n    this.transform.worldTransform.copy(m);\n    m.invert();\n\n    m.tx -= bounds.x;\n    m.ty -= bounds.y;\n\n    // m.append(this.transform.worldTransform.)\n    // set all properties to there original so we can render to a texture\n    this.renderCanvas = this._cacheData.originalRenderCanvas;\n\n    // renderTexture.render(this, m, true);\n    renderer.render(this, renderTexture, true, m, false);\n\n    // now restore the state be setting the new properties\n    renderer.context = cachedRenderTarget;\n\n    this.renderCanvas = this._renderCachedCanvas;\n    this._calculateBounds = this._calculateCachedBounds;\n\n    this._mask = null;\n    this.filterArea = null;\n\n    // create our cached sprite\n    var cachedSprite = new core.Sprite(renderTexture);\n\n    cachedSprite.transform.worldTransform = this.transform.worldTransform;\n    cachedSprite.anchor.x = -(bounds.x / bounds.width);\n    cachedSprite.anchor.y = -(bounds.y / bounds.height);\n    cachedSprite._bounds = this._bounds;\n    cachedSprite.alpha = cacheAlpha;\n\n    this.updateTransform();\n    this.updateTransform = this.displayObjectUpdateTransform;\n\n    this._cacheData.sprite = cachedSprite;\n\n    this.containsPoint = cachedSprite.containsPoint.bind(cachedSprite);\n};\n\n/**\n * Calculates the bounds of the cached sprite\n *\n * @private\n */\nDisplayObject.prototype._calculateCachedBounds = function _calculateCachedBounds() {\n    this._cacheData.sprite._calculateBounds();\n};\n\n/**\n * Gets the bounds of the cached sprite.\n *\n * @private\n * @return {Rectangle} The local bounds.\n */\nDisplayObject.prototype._getCachedLocalBounds = function _getCachedLocalBounds() {\n    return this._cacheData.sprite.getLocalBounds();\n};\n\n/**\n * Destroys the cached sprite.\n *\n * @private\n */\nDisplayObject.prototype._destroyCachedDisplayObject = function _destroyCachedDisplayObject() {\n    this._cacheData.sprite._texture.destroy(true);\n    this._cacheData.sprite = null;\n};\n\n/**\n * Destroys the cached object.\n *\n * @private\n */\nDisplayObject.prototype._cacheAsBitmapDestroy = function _cacheAsBitmapDestroy() {\n    this.cacheAsBitmap = false;\n    this.destroy();\n};\n//# sourceMappingURL=cacheAsBitmap.js.map\n\n/***/ },\n/* 136 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * The instance name of the object.\n *\n * @memberof PIXI.DisplayObject#\n * @member {string}\n */\ncore.DisplayObject.prototype.name = null;\n\n/**\n * Returns the display object in the container\n *\n * @memberof PIXI.Container#\n * @param {string} name - instance name\n * @return {PIXI.DisplayObject} The child with the specified name.\n */\ncore.Container.prototype.getChildByName = function getChildByName(name) {\n    for (var i = 0; i < this.children.length; i++) {\n        if (this.children[i].name === name) {\n            return this.children[i];\n        }\n    }\n\n    return null;\n};\n//# sourceMappingURL=getChildByName.js.map\n\n/***/ },\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @memberof PIXI.DisplayObject#\n * @param {Point} point - the point to write the global value to. If null a new point will be returned\n * @param {boolean} skipUpdate - setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost\n * @return {Point} The updated point\n */\ncore.DisplayObject.prototype.getGlobalPosition = function getGlobalPosition() {\n    var point = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new core.Point();\n    var skipUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (this.parent) {\n        this.parent.toGlobal(this.position, point, skipUpdate);\n    } else {\n        point.x = this.position.x;\n        point.y = this.position.y;\n    }\n\n    return point;\n};\n//# sourceMappingURL=getGlobalPosition.js.map\n\n/***/ },\n/* 138 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _const = __webpack_require__(1);\n\nvar _path = __webpack_require__(6);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tempMat = new core.Matrix();\nvar tempArray = new Float32Array(4);\n\n/**\n * WebGL renderer plugin for tiling sprites\n */\n\nvar TilingSpriteRenderer = function (_core$ObjectRenderer) {\n    _inherits(TilingSpriteRenderer, _core$ObjectRenderer);\n\n    /**\n     * constructor for renderer\n     *\n     * @param {WebGLRenderer} renderer The renderer this tiling awesomeness works for.\n     */\n    function TilingSpriteRenderer(renderer) {\n        _classCallCheck(this, TilingSpriteRenderer);\n\n        var _this = _possibleConstructorReturn(this, _core$ObjectRenderer.call(this, renderer));\n\n        _this.shader = null;\n        _this.simpleShader = null;\n        _this.quad = null;\n        return _this;\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */\n\n\n    TilingSpriteRenderer.prototype.onContextChange = function onContextChange() {\n        var gl = this.renderer.gl;\n\n        this.shader = new core.Shader(gl, 'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 translationMatrix;\\nuniform mat3 uTransform;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;\\n}\\n', 'varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec4 uColor;\\nuniform mat3 uMapCoord;\\nuniform vec4 uClampFrame;\\nuniform vec2 uClampOffset;\\n\\nvoid main(void)\\n{\\n    vec2 coord = mod(vTextureCoord - uClampOffset, vec2(1.0, 1.0)) + uClampOffset;\\n    coord = (uMapCoord * vec3(coord, 1.0)).xy;\\n    coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\\n\\n    vec4 sample = texture2D(uSampler, coord);\\n    vec4 color = vec4(uColor.rgb * uColor.a, uColor.a);\\n\\n    gl_FragColor = sample * color ;\\n}\\n');\n        this.simpleShader = new core.Shader(gl, 'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 translationMatrix;\\nuniform mat3 uTransform;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;\\n}\\n', 'varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec4 uColor;\\n\\nvoid main(void)\\n{\\n    vec4 sample = texture2D(uSampler, vTextureCoord);\\n    vec4 color = vec4(uColor.rgb * uColor.a, uColor.a);\\n    gl_FragColor = sample * color;\\n}\\n');\n\n        this.renderer.bindVao(null);\n        this.quad = new core.Quad(gl, this.renderer.state.attribState);\n        this.quad.initVao(this.shader);\n    };\n\n    /**\n     *\n     * @param {PIXI.extras.TilingSprite} ts tilingSprite to be rendered\n     */\n\n\n    TilingSpriteRenderer.prototype.render = function render(ts) {\n        var renderer = this.renderer;\n        var quad = this.quad;\n\n        renderer.bindVao(quad.vao);\n\n        var vertices = quad.vertices;\n\n        vertices[0] = vertices[6] = ts._width * -ts.anchor.x;\n        vertices[1] = vertices[3] = ts._height * -ts.anchor.y;\n\n        vertices[2] = vertices[4] = ts._width * (1.0 - ts.anchor.x);\n        vertices[5] = vertices[7] = ts._height * (1.0 - ts.anchor.y);\n\n        vertices = quad.uvs;\n\n        vertices[0] = vertices[6] = -ts.anchor.x;\n        vertices[1] = vertices[3] = -ts.anchor.y;\n\n        vertices[2] = vertices[4] = 1.0 - ts.anchor.x;\n        vertices[5] = vertices[7] = 1.0 - ts.anchor.y;\n\n        quad.upload();\n\n        var tex = ts._texture;\n        var baseTex = tex.baseTexture;\n        var lt = ts.tileTransform.localTransform;\n        var uv = ts.uvTransform;\n        var isSimple = baseTex.isPowerOfTwo && tex.frame.width === baseTex.width && tex.frame.height === baseTex.height;\n\n        // auto, force repeat wrapMode for big tiling textures\n        if (isSimple) {\n            if (!baseTex._glTextures[renderer.CONTEXT_UID]) {\n                if (baseTex.wrapMode === _const.WRAP_MODES.CLAMP) {\n                    baseTex.wrapMode = _const.WRAP_MODES.REPEAT;\n                }\n            } else {\n                isSimple = baseTex.wrapMode !== _const.WRAP_MODES.CLAMP;\n            }\n        }\n\n        var shader = isSimple ? this.simpleShader : this.shader;\n\n        renderer.bindShader(shader);\n\n        var w = tex.width;\n        var h = tex.height;\n        var W = ts._width;\n        var H = ts._height;\n\n        tempMat.set(lt.a * w / W, lt.b * w / H, lt.c * h / W, lt.d * h / H, lt.tx / W, lt.ty / H);\n\n        // that part is the same as above:\n        // tempMat.identity();\n        // tempMat.scale(tex.width, tex.height);\n        // tempMat.prepend(lt);\n        // tempMat.scale(1.0 / ts._width, 1.0 / ts._height);\n\n        tempMat.invert();\n        if (isSimple) {\n            tempMat.append(uv.mapCoord);\n        } else {\n            shader.uniforms.uMapCoord = uv.mapCoord.toArray(true);\n            shader.uniforms.uClampFrame = uv.uClampFrame;\n            shader.uniforms.uClampOffset = uv.uClampOffset;\n        }\n\n        shader.uniforms.uTransform = tempMat.toArray(true);\n\n        var color = tempArray;\n\n        core.utils.hex2rgb(ts.tint, color);\n        color[3] = ts.worldAlpha;\n        shader.uniforms.uColor = color;\n        shader.uniforms.translationMatrix = ts.transform.worldTransform.toArray(true);\n\n        shader.uniforms.uSampler = renderer.bindTexture(tex);\n\n        renderer.setBlendMode(ts.blendMode);\n\n        quad.vao.draw(this.renderer.gl.TRIANGLES, 6, 0);\n    };\n\n    return TilingSpriteRenderer;\n}(core.ObjectRenderer);\n\nexports.default = TilingSpriteRenderer;\n\n\ncore.WebGLRenderer.registerPlugin('tilingSprite', TilingSpriteRenderer);\n//# sourceMappingURL=TilingSpriteRenderer.js.map\n\n/***/ },\n/* 139 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _BlurXFilter = __webpack_require__(56);\n\nvar _BlurXFilter2 = _interopRequireDefault(_BlurXFilter);\n\nvar _BlurYFilter = __webpack_require__(57);\n\nvar _BlurYFilter2 = _interopRequireDefault(_BlurYFilter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The BlurFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar BlurFilter = function (_core$Filter) {\n  _inherits(BlurFilter, _core$Filter);\n\n  /**\n   * @param {number} strength - The strength of the blur filter.\n   * @param {number} quality - The quality of the blur filter.\n   * @param {number} resolution - The reoslution of the blur filter.\n   */\n  function BlurFilter(strength, quality, resolution) {\n    _classCallCheck(this, BlurFilter);\n\n    var _this = _possibleConstructorReturn(this, _core$Filter.call(this));\n\n    _this.blurXFilter = new _BlurXFilter2.default();\n    _this.blurYFilter = new _BlurYFilter2.default();\n    _this.resolution = 1;\n\n    _this.padding = 0;\n    _this.resolution = resolution || 1;\n    _this.quality = quality || 4;\n    _this.blur = strength || 8;\n    return _this;\n  }\n\n  /**\n   * Applies the filter.\n   *\n   * @param {PIXI.FilterManager} filterManager - The manager.\n   * @param {PIXI.RenderTarget} input - The input target.\n   * @param {PIXI.RenderTarget} output - The output target.\n   */\n\n\n  BlurFilter.prototype.apply = function apply(filterManager, input, output) {\n    var renderTarget = filterManager.getRenderTarget(true);\n\n    this.blurXFilter.apply(filterManager, input, renderTarget, true);\n    this.blurYFilter.apply(filterManager, renderTarget, output, false);\n\n    filterManager.returnRenderTarget(renderTarget);\n  };\n\n  /**\n   * Sets the strength of both the blurX and blurY properties simultaneously\n   *\n   * @member {number}\n   * @memberOf PIXI.filters.BlurFilter#\n   * @default 2\n   */\n\n\n  _createClass(BlurFilter, [{\n    key: 'blur',\n    get: function get() {\n      return this.blurXFilter.blur;\n    }\n\n    /**\n     * Sets the strength of the blur.\n     *\n     * @param {number} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      this.blurXFilter.blur = this.blurYFilter.blur = value;\n      this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n    }\n\n    /**\n     * Sets the number of passes for blur. More passes means higher quaility bluring.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.BlurYFilter#\n     * @default 1\n     */\n\n  }, {\n    key: 'quality',\n    get: function get() {\n      return this.blurXFilter.quality;\n    }\n\n    /**\n     * Sets the quality of the blur.\n     *\n     * @param {number} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      this.blurXFilter.quality = this.blurYFilter.quality = value;\n    }\n\n    /**\n     * Sets the strength of the blurX property\n     *\n     * @member {number}\n     * @memberOf PIXI.filters.BlurFilter#\n     * @default 2\n     */\n\n  }, {\n    key: 'blurX',\n    get: function get() {\n      return this.blurXFilter.blur;\n    }\n\n    /**\n     * Sets the strength of the blurX.\n     *\n     * @param {number} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      this.blurXFilter.blur = value;\n      this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n    }\n\n    /**\n     * Sets the strength of the blurY property\n     *\n     * @member {number}\n     * @memberOf PIXI.filters.BlurFilter#\n     * @default 2\n     */\n\n  }, {\n    key: 'blurY',\n    get: function get() {\n      return this.blurYFilter.blur;\n    }\n\n    /**\n     * Sets the strength of the blurY.\n     *\n     * @param {number} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      this.blurYFilter.blur = value;\n      this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n    }\n  }]);\n\n  return BlurFilter;\n}(core.Filter);\n\nexports.default = BlurFilter;\n//# sourceMappingURL=BlurFilter.js.map\n\n/***/ },\n/* 140 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _path = __webpack_require__(6);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The ColorMatrixFilter class lets you apply a 5x4 matrix transformation on the RGBA\n * color and alpha values of every pixel on your displayObject to produce a result\n * with a new set of RGBA color and alpha values. It's pretty powerful!\n *\n * ```js\n *  let colorMatrix = new PIXI.ColorMatrixFilter();\n *  container.filters = [colorMatrix];\n *  colorMatrix.contrast(2);\n * ```\n * @author Clément Chenebault <clement@goodboydigital.com>\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar ColorMatrixFilter = function (_core$Filter) {\n    _inherits(ColorMatrixFilter, _core$Filter);\n\n    /**\n     *\n     */\n    function ColorMatrixFilter() {\n        _classCallCheck(this, ColorMatrixFilter);\n\n        var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}',\n        // fragment shader\n        'varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform float m[20];\\n\\nvoid main(void)\\n{\\n\\n    vec4 c = texture2D(uSampler, vTextureCoord);\\n\\n    gl_FragColor.r = (m[0] * c.r);\\n        gl_FragColor.r += (m[1] * c.g);\\n        gl_FragColor.r += (m[2] * c.b);\\n        gl_FragColor.r += (m[3] * c.a);\\n        gl_FragColor.r += m[4] * c.a;\\n\\n    gl_FragColor.g = (m[5] * c.r);\\n        gl_FragColor.g += (m[6] * c.g);\\n        gl_FragColor.g += (m[7] * c.b);\\n        gl_FragColor.g += (m[8] * c.a);\\n        gl_FragColor.g += m[9] * c.a;\\n\\n     gl_FragColor.b = (m[10] * c.r);\\n        gl_FragColor.b += (m[11] * c.g);\\n        gl_FragColor.b += (m[12] * c.b);\\n        gl_FragColor.b += (m[13] * c.a);\\n        gl_FragColor.b += m[14] * c.a;\\n\\n     gl_FragColor.a = (m[15] * c.r);\\n        gl_FragColor.a += (m[16] * c.g);\\n        gl_FragColor.a += (m[17] * c.b);\\n        gl_FragColor.a += (m[18] * c.a);\\n        gl_FragColor.a += m[19] * c.a;\\n\\n//    gl_FragColor = vec4(m[0]);\\n}\\n'));\n\n        _this.uniforms.m = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n        return _this;\n    }\n\n    /**\n     * Transforms current matrix and set the new one\n     *\n     * @param {number[]} matrix - 5x4 matrix\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype._loadMatrix = function _loadMatrix(matrix) {\n        var multiply = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var newMatrix = matrix;\n\n        if (multiply) {\n            this._multiply(newMatrix, this.uniforms.m, matrix);\n            newMatrix = this._colorMatrix(newMatrix);\n        }\n\n        // set the new matrix\n        this.uniforms.m = newMatrix;\n    };\n\n    /**\n     * Multiplies two mat5's\n     *\n     * @private\n     * @param {number[]} out - 5x4 matrix the receiving matrix\n     * @param {number[]} a - 5x4 matrix the first operand\n     * @param {number[]} b - 5x4 matrix the second operand\n     * @returns {number[]} 5x4 matrix\n     */\n\n\n    ColorMatrixFilter.prototype._multiply = function _multiply(out, a, b) {\n        // Red Channel\n        out[0] = a[0] * b[0] + a[1] * b[5] + a[2] * b[10] + a[3] * b[15];\n        out[1] = a[0] * b[1] + a[1] * b[6] + a[2] * b[11] + a[3] * b[16];\n        out[2] = a[0] * b[2] + a[1] * b[7] + a[2] * b[12] + a[3] * b[17];\n        out[3] = a[0] * b[3] + a[1] * b[8] + a[2] * b[13] + a[3] * b[18];\n        out[4] = a[0] * b[4] + a[1] * b[9] + a[2] * b[14] + a[3] * b[19];\n\n        // Green Channel\n        out[5] = a[5] * b[0] + a[6] * b[5] + a[7] * b[10] + a[8] * b[15];\n        out[6] = a[5] * b[1] + a[6] * b[6] + a[7] * b[11] + a[8] * b[16];\n        out[7] = a[5] * b[2] + a[6] * b[7] + a[7] * b[12] + a[8] * b[17];\n        out[8] = a[5] * b[3] + a[6] * b[8] + a[7] * b[13] + a[8] * b[18];\n        out[9] = a[5] * b[4] + a[6] * b[9] + a[7] * b[14] + a[8] * b[19];\n\n        // Blue Channel\n        out[10] = a[10] * b[0] + a[11] * b[5] + a[12] * b[10] + a[13] * b[15];\n        out[11] = a[10] * b[1] + a[11] * b[6] + a[12] * b[11] + a[13] * b[16];\n        out[12] = a[10] * b[2] + a[11] * b[7] + a[12] * b[12] + a[13] * b[17];\n        out[13] = a[10] * b[3] + a[11] * b[8] + a[12] * b[13] + a[13] * b[18];\n        out[14] = a[10] * b[4] + a[11] * b[9] + a[12] * b[14] + a[13] * b[19];\n\n        // Alpha Channel\n        out[15] = a[15] * b[0] + a[16] * b[5] + a[17] * b[10] + a[18] * b[15];\n        out[16] = a[15] * b[1] + a[16] * b[6] + a[17] * b[11] + a[18] * b[16];\n        out[17] = a[15] * b[2] + a[16] * b[7] + a[17] * b[12] + a[18] * b[17];\n        out[18] = a[15] * b[3] + a[16] * b[8] + a[17] * b[13] + a[18] * b[18];\n        out[19] = a[15] * b[4] + a[16] * b[9] + a[17] * b[14] + a[18] * b[19];\n\n        return out;\n    };\n\n    /**\n     * Create a Float32 Array and normalize the offset component to 0-1\n     *\n     * @private\n     * @param {number[]} matrix - 5x4 matrix\n     * @return {number[]} 5x4 matrix with all values between 0-1\n     */\n\n\n    ColorMatrixFilter.prototype._colorMatrix = function _colorMatrix(matrix) {\n        // Create a Float32 Array and normalize the offset component to 0-1\n        var m = new Float32Array(matrix);\n\n        m[4] /= 255;\n        m[9] /= 255;\n        m[14] /= 255;\n        m[19] /= 255;\n\n        return m;\n    };\n\n    /**\n     * Adjusts brightness\n     *\n     * @param {number} b - value of the brigthness (0-1, where 0 is black)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.brightness = function brightness(b, multiply) {\n        var matrix = [b, 0, 0, 0, 0, 0, b, 0, 0, 0, 0, 0, b, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Set the matrices in grey scales\n     *\n     * @param {number} scale - value of the grey (0-1, where 0 is black)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.greyscale = function greyscale(scale, multiply) {\n        var matrix = [scale, scale, scale, 0, 0, scale, scale, scale, 0, 0, scale, scale, scale, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Set the black and white matrice.\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.blackAndWhite = function blackAndWhite(multiply) {\n        var matrix = [0.3, 0.6, 0.1, 0, 0, 0.3, 0.6, 0.1, 0, 0, 0.3, 0.6, 0.1, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Set the hue property of the color\n     *\n     * @param {number} rotation - in degrees\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.hue = function hue(rotation, multiply) {\n        rotation = (rotation || 0) / 180 * Math.PI;\n\n        var cosR = Math.cos(rotation);\n        var sinR = Math.sin(rotation);\n        var sqrt = Math.sqrt;\n\n        /* a good approximation for hue rotation\n         This matrix is far better than the versions with magic luminance constants\n         formerly used here, but also used in the starling framework (flash) and known from this\n         old part of the internet: quasimondo.com/archives/000565.php\n          This new matrix is based on rgb cube rotation in space. Look here for a more descriptive\n         implementation as a shader not a general matrix:\n         https://github.com/evanw/glfx.js/blob/58841c23919bd59787effc0333a4897b43835412/src/filters/adjust/huesaturation.js\n          This is the source for the code:\n         see http://stackoverflow.com/questions/8507885/shift-hue-of-an-rgb-color/8510751#8510751\n         */\n\n        var w = 1 / 3;\n        var sqrW = sqrt(w); // weight is\n\n        var a00 = cosR + (1.0 - cosR) * w;\n        var a01 = w * (1.0 - cosR) - sqrW * sinR;\n        var a02 = w * (1.0 - cosR) + sqrW * sinR;\n\n        var a10 = w * (1.0 - cosR) + sqrW * sinR;\n        var a11 = cosR + w * (1.0 - cosR);\n        var a12 = w * (1.0 - cosR) - sqrW * sinR;\n\n        var a20 = w * (1.0 - cosR) - sqrW * sinR;\n        var a21 = w * (1.0 - cosR) + sqrW * sinR;\n        var a22 = cosR + w * (1.0 - cosR);\n\n        var matrix = [a00, a01, a02, 0, 0, a10, a11, a12, 0, 0, a20, a21, a22, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Set the contrast matrix, increase the separation between dark and bright\n     * Increase contrast : shadows darker and highlights brighter\n     * Decrease contrast : bring the shadows up and the highlights down\n     *\n     * @param {number} amount - value of the contrast (0-1)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.contrast = function contrast(amount, multiply) {\n        var v = (amount || 0) + 1;\n        var o = -128 * (v - 1);\n\n        var matrix = [v, 0, 0, 0, o, 0, v, 0, 0, o, 0, 0, v, 0, o, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Set the saturation matrix, increase the separation between colors\n     * Increase saturation : increase contrast, brightness, and sharpness\n     *\n     * @param {number} amount - The saturation amount (0-1)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.saturate = function saturate() {\n        var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var multiply = arguments[1];\n\n        var x = amount * 2 / 3 + 1;\n        var y = (x - 1) * -0.5;\n\n        var matrix = [x, y, y, 0, 0, y, x, y, 0, 0, y, y, x, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Desaturate image (remove color)\n     *\n     * Call the saturate function\n     *\n     */\n\n\n    ColorMatrixFilter.prototype.desaturate = function desaturate() // eslint-disable-line no-unused-vars\n    {\n        this.saturate(-1);\n    };\n\n    /**\n     * Negative image (inverse of classic rgb matrix)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.negative = function negative(multiply) {\n        var matrix = [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Sepia image\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.sepia = function sepia(multiply) {\n        var matrix = [0.393, 0.7689999, 0.18899999, 0, 0, 0.349, 0.6859999, 0.16799999, 0, 0, 0.272, 0.5339999, 0.13099999, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Color motion picture process invented in 1916 (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.technicolor = function technicolor(multiply) {\n        var matrix = [1.9125277891456083, -0.8545344976951645, -0.09155508482755585, 0, 11.793603434377337, -0.3087833385928097, 1.7658908555458428, -0.10601743074722245, 0, -70.35205161461398, -0.231103377548616, -0.7501899197440212, 1.847597816108189, 0, 30.950940869491138, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Polaroid filter\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.polaroid = function polaroid(multiply) {\n        var matrix = [1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016, 1.483, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Filter who transforms : Red -> Blue and Blue -> Red\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.toBGR = function toBGR(multiply) {\n        var matrix = [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Color reversal film introduced by Eastman Kodak in 1935. (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.kodachrome = function kodachrome(multiply) {\n        var matrix = [1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502, -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203, -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Brown delicious browni filter (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.browni = function browni(multiply) {\n        var matrix = [0.5997023498159715, 0.34553243048391263, -0.2708298674538042, 0, 47.43192855600873, -0.037703249837783157, 0.8609577587992641, 0.15059552388459913, 0, -36.96841498319127, 0.24113635128153335, -0.07441037908422492, 0.44972182064877153, 0, -7.562075277591283, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Vintage filter (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.vintage = function vintage(multiply) {\n        var matrix = [0.6279345635605994, 0.3202183420819367, -0.03965408211312453, 0, 9.651285835294123, 0.02578397704808868, 0.6441188644374771, 0.03259127616149294, 0, 7.462829176470591, 0.0466055556782719, -0.0851232987247891, 0.5241648018700465, 0, 5.159190588235296, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * We don't know exactly what it does, kind of gradient map, but funny to play with!\n     *\n     * @param {number} desaturation - Tone values.\n     * @param {number} toned - Tone values.\n     * @param {string} lightColor - Tone values, example: `0xFFE580`\n     * @param {string} darkColor - Tone values, example: `0xFFE580`\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.colorTone = function colorTone(desaturation, toned, lightColor, darkColor, multiply) {\n        desaturation = desaturation || 0.2;\n        toned = toned || 0.15;\n        lightColor = lightColor || 0xFFE580;\n        darkColor = darkColor || 0x338000;\n\n        var lR = (lightColor >> 16 & 0xFF) / 255;\n        var lG = (lightColor >> 8 & 0xFF) / 255;\n        var lB = (lightColor & 0xFF) / 255;\n\n        var dR = (darkColor >> 16 & 0xFF) / 255;\n        var dG = (darkColor >> 8 & 0xFF) / 255;\n        var dB = (darkColor & 0xFF) / 255;\n\n        var matrix = [0.3, 0.59, 0.11, 0, 0, lR, lG, lB, desaturation, 0, dR, dG, dB, toned, 0, lR - dR, lG - dG, lB - dB, 0, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Night effect\n     *\n     * @param {number} intensity - The intensity of the night effect.\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.night = function night(intensity, multiply) {\n        intensity = intensity || 0.1;\n        var matrix = [intensity * -2.0, -intensity, 0, 0, 0, -intensity, 0, intensity, 0, 0, 0, intensity, intensity * 2.0, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Predator effect\n     *\n     * Erase the current matrix by setting a new indepent one\n     *\n     * @param {number} amount - how much the predator feels his future victim\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.predator = function predator(amount, multiply) {\n        var matrix = [\n        // row 1\n        11.224130630493164 * amount, -4.794486999511719 * amount, -2.8746118545532227 * amount, 0 * amount, 0.40342438220977783 * amount,\n        // row 2\n        -3.6330697536468506 * amount, 9.193157196044922 * amount, -2.951810836791992 * amount, 0 * amount, -1.316135048866272 * amount,\n        // row 3\n        -3.2184197902679443 * amount, -4.2375030517578125 * amount, 7.476448059082031 * amount, 0 * amount, 0.8044459223747253 * amount,\n        // row 4\n        0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * LSD effect\n     *\n     * Multiply the current matrix\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.lsd = function lsd(multiply) {\n        var matrix = [2, -0.4, 0.5, 0, 0, -0.5, 2, -0.4, 0, 0, -0.4, -0.5, 3, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Erase the current matrix by setting the default one\n     *\n     */\n\n\n    ColorMatrixFilter.prototype.reset = function reset() {\n        var matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, false);\n    };\n\n    /**\n     * The matrix of the color matrix filter\n     *\n     * @member {number[]}\n     * @memberof PIXI.filters.ColorMatrixFilter#\n     * @default [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]\n     */\n\n\n    _createClass(ColorMatrixFilter, [{\n        key: 'matrix',\n        get: function get() {\n            return this.uniforms.m;\n        }\n\n        /**\n         * Sets the matrix directly.\n         *\n         * @param {number[]} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.uniforms.m = value;\n        }\n    }]);\n\n    return ColorMatrixFilter;\n}(core.Filter);\n\n// Americanized alias\n\n\nexports.default = ColorMatrixFilter;\nColorMatrixFilter.prototype.grayscale = ColorMatrixFilter.prototype.greyscale;\n//# sourceMappingURL=ColorMatrixFilter.js.map\n\n/***/ },\n/* 141 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _path = __webpack_require__(6);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The DisplacementFilter class uses the pixel values from the specified texture\n * (called the displacement map) to perform a displacement of an object. You can\n * use this filter to apply all manor of crazy warping effects. Currently the r\n * property of the texture is used to offset the x and the g property of the texture\n * is used to offset the y.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar DisplacementFilter = function (_core$Filter) {\n    _inherits(DisplacementFilter, _core$Filter);\n\n    /**\n     * @param {PIXI.Sprite} sprite - The sprite used for the displacement map. (make sure its added to the scene!)\n     * @param {number} scale - The scale of the displacement\n     */\n    function DisplacementFilter(sprite, scale) {\n        _classCallCheck(this, DisplacementFilter);\n\n        var maskMatrix = new core.Matrix();\n\n        sprite.renderable = false;\n\n        var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 filterMatrix;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec2 vFilterCoord;\\n\\nvoid main(void)\\n{\\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n   vFilterCoord = ( filterMatrix * vec3( aTextureCoord, 1.0)  ).xy;\\n   vTextureCoord = aTextureCoord;\\n}',\n        // fragment shader\n        'varying vec2 vFilterCoord;\\nvarying vec2 vTextureCoord;\\n\\nuniform vec2 scale;\\n\\nuniform sampler2D uSampler;\\nuniform sampler2D mapSampler;\\n\\nuniform vec4 filterClamp;\\n\\nvoid main(void)\\n{\\n   vec4 map =  texture2D(mapSampler, vFilterCoord);\\n\\n   map -= 0.5;\\n   map.xy *= scale;\\n\\n   gl_FragColor = texture2D(uSampler, clamp(vec2(vTextureCoord.x + map.x, vTextureCoord.y + map.y), filterClamp.xy, filterClamp.zw));\\n}\\n'));\n\n        _this.maskSprite = sprite;\n        _this.maskMatrix = maskMatrix;\n\n        _this.uniforms.mapSampler = sprite.texture;\n        _this.uniforms.filterMatrix = maskMatrix.toArray(true);\n        _this.uniforms.scale = { x: 1, y: 1 };\n\n        if (scale === null || scale === undefined) {\n            scale = 20;\n        }\n\n        _this.scale = new core.Point(scale, scale);\n        return _this;\n    }\n\n    /**\n     * Applies the filter.\n     *\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     */\n\n\n    DisplacementFilter.prototype.apply = function apply(filterManager, input, output) {\n        var ratio = 1 / output.destinationFrame.width * (output.size.width / input.size.width);\n\n        this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, this.maskSprite);\n        this.uniforms.scale.x = this.scale.x * ratio;\n        this.uniforms.scale.y = this.scale.y * ratio;\n\n        // draw the filter...\n        filterManager.applyFilter(this, input, output);\n    };\n\n    /**\n     * The texture used for the displacement map. Must be power of 2 sized texture.\n     *\n     * @member {PIXI.Texture}\n     * @memberof PIXI.filters.DisplacementFilter#\n     */\n\n\n    _createClass(DisplacementFilter, [{\n        key: 'map',\n        get: function get() {\n            return this.uniforms.mapSampler;\n        }\n\n        /**\n         * Sets the texture to use for the displacement.\n         *\n         * @param {PIXI.Texture} value - The texture to set to.\n         */\n        ,\n        set: function set(value) {\n            this.uniforms.mapSampler = value;\n        }\n    }]);\n\n    return DisplacementFilter;\n}(core.Filter);\n\nexports.default = DisplacementFilter;\n//# sourceMappingURL=DisplacementFilter.js.map\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _path = __webpack_require__(6);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Basic FXAA implementation based on the code on geeks3d.com with the\n * modification that the texture2DLod stuff was removed since it's\n * unsupported by WebGL.\n *\n * @see https://github.com/mitsuhiko/webgl-meincraft\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n *\n */\nvar FXAAFilter = function (_core$Filter) {\n    _inherits(FXAAFilter, _core$Filter);\n\n    /**\n     *\n     */\n    function FXAAFilter() {\n        _classCallCheck(this, FXAAFilter);\n\n        // TODO - needs work\n        return _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        '\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec4 filterArea;\\n\\nvarying vec2 vTextureCoord;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvoid texcoords(vec2 fragCoord, vec2 resolution,\\n               out vec2 v_rgbNW, out vec2 v_rgbNE,\\n               out vec2 v_rgbSW, out vec2 v_rgbSE,\\n               out vec2 v_rgbM) {\\n    vec2 inverseVP = 1.0 / resolution.xy;\\n    v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n    v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n    v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n    v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n    v_rgbM = vec2(fragCoord * inverseVP);\\n}\\n\\nvoid main(void) {\\n\\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n   vTextureCoord = aTextureCoord;\\n\\n   vec2 fragCoord = vTextureCoord * filterArea.xy;\\n\\n   texcoords(fragCoord, filterArea.xy, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n}',\n        // fragment shader\n        'varying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\n/**\\n Basic FXAA implementation based on the code on geeks3d.com with the\\n modification that the texture2DLod stuff was removed since it\\'s\\n unsupported by WebGL.\\n \\n --\\n \\n From:\\n https://github.com/mitsuhiko/webgl-meincraft\\n \\n Copyright (c) 2011 by Armin Ronacher.\\n \\n Some rights reserved.\\n \\n Redistribution and use in source and binary forms, with or without\\n modification, are permitted provided that the following conditions are\\n met:\\n \\n * Redistributions of source code must retain the above copyright\\n notice, this list of conditions and the following disclaimer.\\n \\n * Redistributions in binary form must reproduce the above\\n copyright notice, this list of conditions and the following\\n disclaimer in the documentation and/or other materials provided\\n with the distribution.\\n \\n * The names of the contributors may not be used to endorse or\\n promote products derived from this software without specific\\n prior written permission.\\n \\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n#ifndef FXAA_REDUCE_MIN\\n#define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n#define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n#define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent\\n//texture reads can be a bottleneck\\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n          vec2 v_rgbNW, vec2 v_rgbNE,\\n          vec2 v_rgbSW, vec2 v_rgbSE,\\n          vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n                  dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n                       texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n                       texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n                                     texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n                                     texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n    \\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\nvoid main() {\\n\\n      vec2 fragCoord = vTextureCoord * filterArea.xy;\\n\\n      vec4 color;\\n\\n    color = fxaa(uSampler, fragCoord, filterArea.xy, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n\\n      gl_FragColor = color;\\n}\\n'));\n    }\n\n    return FXAAFilter;\n}(core.Filter);\n\nexports.default = FXAAFilter;\n//# sourceMappingURL=FXAAFilter.js.map\n\n/***/ },\n/* 143 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _path = __webpack_require__(6);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @author Vico @vicocotea\n * original filter: https://github.com/evanw/glfx.js/blob/master/src/filters/adjust/noise.js\n */\n\n/**\n * A Noise effect filter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar NoiseFilter = function (_core$Filter) {\n  _inherits(NoiseFilter, _core$Filter);\n\n  /**\n   *\n   */\n  function NoiseFilter() {\n    _classCallCheck(this, NoiseFilter);\n\n    var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n    // vertex shader\n    'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}',\n    // fragment shader\n    'precision highp float;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\n\\nuniform float noise;\\nuniform sampler2D uSampler;\\n\\nfloat rand(vec2 co)\\n{\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvoid main()\\n{\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    float diff = (rand(gl_FragCoord.xy) - 0.5) * noise;\\n\\n    color.r += diff;\\n    color.g += diff;\\n    color.b += diff;\\n\\n    gl_FragColor = color;\\n}\\n'));\n\n    _this.noise = 0.5;\n    return _this;\n  }\n\n  /**\n   * The amount of noise to apply.\n   *\n   * @member {number}\n   * @memberof PIXI.filters.NoiseFilter#\n   * @default 0.5\n   */\n\n\n  _createClass(NoiseFilter, [{\n    key: 'noise',\n    get: function get() {\n      return this.uniforms.noise;\n    }\n\n    /**\n     * Sets the amount of noise to apply.\n     *\n     * @param {number} value - The value to set to.\n     */\n    ,\n    set: function set(value) {\n      this.uniforms.noise = value;\n    }\n  }]);\n\n  return NoiseFilter;\n}(core.Filter);\n\nexports.default = NoiseFilter;\n//# sourceMappingURL=NoiseFilter.js.map\n\n/***/ },\n/* 144 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _path = __webpack_require__(6);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Does nothing. Very handy.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar VoidFilter = function (_core$Filter) {\n    _inherits(VoidFilter, _core$Filter);\n\n    /**\n     *\n     */\n    function VoidFilter() {\n        _classCallCheck(this, VoidFilter);\n\n        var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}',\n        // fragment shader\n        'varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\n\\nvoid main(void)\\n{\\n   gl_FragColor = texture2D(uSampler, vTextureCoord);\\n}\\n'));\n\n        _this.glShaderKey = 'void';\n        return _this;\n    }\n\n    return VoidFilter;\n}(core.Filter);\n\nexports.default = VoidFilter;\n//# sourceMappingURL=VoidFilter.js.map\n\n/***/ },\n/* 145 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nexports.__esModule = true;\nexports.loader = exports.prepare = exports.particles = exports.mesh = exports.loaders = exports.interaction = exports.filters = exports.extras = exports.extract = exports.accessibility = undefined;\n\nvar _deprecation = __webpack_require__(128);\n\nObject.keys(_deprecation).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function get() {\n            return _deprecation[key];\n        }\n    });\n});\n\nvar _core = __webpack_require__(0);\n\nObject.keys(_core).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function get() {\n            return _core[key];\n        }\n    });\n});\n\n__webpack_require__(161);\n\nvar _accessibility = __webpack_require__(89);\n\nvar accessibility = _interopRequireWildcard(_accessibility);\n\nvar _extract = __webpack_require__(130);\n\nvar extract = _interopRequireWildcard(_extract);\n\nvar _extras = __webpack_require__(31);\n\nvar extras = _interopRequireWildcard(_extras);\n\nvar _filters = __webpack_require__(61);\n\nvar filters = _interopRequireWildcard(_filters);\n\nvar _interaction = __webpack_require__(148);\n\nvar interaction = _interopRequireWildcard(_interaction);\n\nvar _loaders = __webpack_require__(149);\n\nvar loaders = _interopRequireWildcard(_loaders);\n\nvar _mesh = __webpack_require__(68);\n\nvar mesh = _interopRequireWildcard(_mesh);\n\nvar _particles = __webpack_require__(69);\n\nvar particles = _interopRequireWildcard(_particles);\n\nvar _prepare = __webpack_require__(70);\n\nvar prepare = _interopRequireWildcard(_prepare);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// import polyfills\nexports.accessibility = accessibility;\nexports.extract = extract;\nexports.extras = extras;\nexports.filters = filters;\nexports.interaction = interaction;\nexports.loaders = loaders;\nexports.mesh = mesh;\nexports.particles = particles;\nexports.prepare = prepare;\n\n/**\n * A premade instance of the loader that can be used to load resources.\n *\n * @name loader\n * @memberof PIXI\n * @property {PIXI.loaders.Loader}\n */\n\n\n// export libs\n\n\n// export core\n\nvar loader = loaders && loaders.Loader ? new loaders.Loader() : null; // check is there in case user excludes loader lib\n\nexports.loader = loader;\n\n// Always export pixi globally.\n\nglobal.PIXI = exports; // eslint-disable-line\n//# sourceMappingURL=index.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))\n\n/***/ },\n/* 146 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Event class that mimics native DOM events.\n *\n * @class\n * @memberof PIXI.interaction\n */\nvar InteractionEvent = function () {\n  /**\n   *\n   */\n  function InteractionEvent() {\n    _classCallCheck(this, InteractionEvent);\n\n    /**\n     * Which this event will continue propagating in the tree\n     *\n     * @member {boolean}\n     */\n    this.stopped = false;\n\n    /**\n     * The object to which event is dispatched.\n     *\n     * @member {PIXI.DisplayObject}\n     */\n    this.target = null;\n\n    /**\n     * The object whose event listener’s callback is currently being invoked.\n     *\n     * @member {PIXI.DisplayObject}\n     */\n    this.currentTarget = null;\n\n    /*\n     * Type of the event\n     *\n     * @member {string}\n     */\n    this.type = null;\n\n    /*\n     * InteractionData related to this event\n     *\n     * @member {PIXI.interaction.InteractionData}\n     */\n    this.data = null;\n  }\n\n  /**\n   * Prevents event from reaching any objects other than the current object.\n   *\n   */\n\n\n  InteractionEvent.prototype.stopPropagation = function stopPropagation() {\n    this.stopped = true;\n  };\n\n  /**\n   * Prevents event from reaching any objects other than the current object.\n   *\n   * @private\n   */\n\n\n  InteractionEvent.prototype._reset = function _reset() {\n    this.stopped = false;\n    this.currentTarget = null;\n    this.target = null;\n  };\n\n  return InteractionEvent;\n}();\n\nexports.default = InteractionEvent;\n//# sourceMappingURL=InteractionEvent.js.map\n\n/***/ },\n/* 147 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _InteractionData = __webpack_require__(62);\n\nvar _InteractionData2 = _interopRequireDefault(_InteractionData);\n\nvar _InteractionEvent = __webpack_require__(146);\n\nvar _InteractionEvent2 = _interopRequireDefault(_InteractionEvent);\n\nvar _eventemitter = __webpack_require__(7);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _interactiveTarget = __webpack_require__(63);\n\nvar _interactiveTarget2 = _interopRequireDefault(_interactiveTarget);\n\nvar _ismobilejs = __webpack_require__(19);\n\nvar _ismobilejs2 = _interopRequireDefault(_ismobilejs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Mix interactiveTarget into core.DisplayObject.prototype\nObject.assign(core.DisplayObject.prototype, _interactiveTarget2.default);\n\n/**\n * The interaction manager deals with mouse and touch events. Any DisplayObject can be interactive\n * if its interactive parameter is set to true\n * This manager also supports multitouch.\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI.interaction\n */\n\nvar InteractionManager = function (_EventEmitter) {\n    _inherits(InteractionManager, _EventEmitter);\n\n    /**\n     * @param {PIXI.CanvasRenderer|PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     * @param {object} [options] - The options for the manager.\n     * @param {boolean} [options.autoPreventDefault=true] - Should the manager automatically prevent default browser actions.\n     * @param {number} [options.interactionFrequency=10] - Frequency increases the interaction events will be checked.\n     */\n    function InteractionManager(renderer, options) {\n        _classCallCheck(this, InteractionManager);\n\n        var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n        options = options || {};\n\n        /**\n         * The renderer this interaction manager works for.\n         *\n         * @member {PIXI.SystemRenderer}\n         */\n        _this.renderer = renderer;\n\n        /**\n         * Should default browser actions automatically be prevented.\n         * Does not apply to pointer events for backwards compatibility\n         * preventDefault on pointer events stops mouse events from firing\n         * Thus, for every pointer event, there will always be either a mouse of touch event alongside it.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        _this.autoPreventDefault = options.autoPreventDefault !== undefined ? options.autoPreventDefault : true;\n\n        /**\n         * As this frequency increases the interaction events will be checked more often.\n         *\n         * @member {number}\n         * @default 10\n         */\n        _this.interactionFrequency = options.interactionFrequency || 10;\n\n        /**\n         * The mouse data\n         *\n         * @member {PIXI.interaction.InteractionData}\n         */\n        _this.mouse = new _InteractionData2.default();\n\n        // setting the mouse to start off far off screen will mean that mouse over does\n        //  not get called before we even move the mouse.\n        _this.mouse.global.set(-999999);\n\n        /**\n         * The pointer data\n         *\n         * @member {PIXI.interaction.InteractionData}\n         */\n        _this.pointer = new _InteractionData2.default();\n\n        // setting the pointer to start off far off screen will mean that pointer over does\n        //  not get called before we even move the pointer.\n        _this.pointer.global.set(-999999);\n\n        /**\n         * An event data object to handle all the event tracking/dispatching\n         *\n         * @member {object}\n         */\n        _this.eventData = new _InteractionEvent2.default();\n\n        /**\n         * Tiny little interactiveData pool !\n         *\n         * @member {PIXI.interaction.InteractionData[]}\n         */\n        _this.interactiveDataPool = [];\n\n        /**\n         * The DOM element to bind to.\n         *\n         * @private\n         * @member {HTMLElement}\n         */\n        _this.interactionDOMElement = null;\n\n        /**\n         * This property determins if mousemove and touchmove events are fired only when the cursror\n         * is over the object.\n         * Setting to true will make things work more in line with how the DOM verison works.\n         * Setting to false can make things easier for things like dragging\n         * It is currently set to false as this is how pixi used to work. This will be set to true in\n         * future versions of pixi.\n         *\n         * @private\n         * @member {boolean}\n         */\n        _this.moveWhenInside = false;\n\n        /**\n         * Have events been attached to the dom element?\n         *\n         * @private\n         * @member {boolean}\n         */\n        _this.eventsAdded = false;\n\n        /**\n         * Is the mouse hovering over the renderer?\n         *\n         * @private\n         * @member {boolean}\n         */\n        _this.mouseOverRenderer = false;\n\n        /**\n         * Does the device support touch events\n         * https://www.w3.org/TR/touch-events/\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        _this.supportsTouchEvents = 'ontouchstart' in window;\n\n        /**\n         * Does the device support pointer events\n         * https://www.w3.org/Submission/pointer-events/\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        _this.supportsPointerEvents = !!window.PointerEvent;\n\n        /**\n         * Are touch events being 'normalized' and converted into pointer events if pointer events are not supported\n         * For example, on a touch screen mobile device, a touchstart would also be emitted as a pointerdown\n         *\n         * @private\n         * @readonly\n         * @member {boolean}\n         */\n        _this.normalizeTouchEvents = !_this.supportsPointerEvents && _this.supportsTouchEvents;\n\n        /**\n         * Are mouse events being 'normalized' and converted into pointer events if pointer events are not supported\n         * For example, on a desktop pc, a mousedown would also be emitted as a pointerdown\n         *\n         * @private\n         * @readonly\n         * @member {boolean}\n         */\n        _this.normalizeMouseEvents = !_this.supportsPointerEvents && !_ismobilejs2.default.any;\n\n        // this will make it so that you don't have to call bind all the time\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        _this.processMouseUp = _this.processMouseUp.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onMouseDown = _this.onMouseDown.bind(_this);\n        _this.processMouseDown = _this.processMouseDown.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.processMouseMove = _this.processMouseMove.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onMouseOut = _this.onMouseOut.bind(_this);\n        _this.processMouseOverOut = _this.processMouseOverOut.bind(_this);\n\n        /**\n        * @private\n        * @member {Function}\n        */\n        _this.onMouseOver = _this.onMouseOver.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onPointerUp = _this.onPointerUp.bind(_this);\n        _this.processPointerUp = _this.processPointerUp.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onPointerDown = _this.onPointerDown.bind(_this);\n        _this.processPointerDown = _this.processPointerDown.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onPointerMove = _this.onPointerMove.bind(_this);\n        _this.processPointerMove = _this.processPointerMove.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onPointerOut = _this.onPointerOut.bind(_this);\n        _this.processPointerOverOut = _this.processPointerOverOut.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onPointerOver = _this.onPointerOver.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onTouchStart = _this.onTouchStart.bind(_this);\n        _this.processTouchStart = _this.processTouchStart.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onTouchEnd = _this.onTouchEnd.bind(_this);\n        _this.processTouchEnd = _this.processTouchEnd.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onTouchMove = _this.onTouchMove.bind(_this);\n        _this.processTouchMove = _this.processTouchMove.bind(_this);\n\n        /**\n         * Every update cursor will be reset to this value, if some element wont override it in\n         * its hitTest.\n         *\n         * @member {string}\n         * @default 'inherit'\n         */\n        _this.defaultCursorStyle = 'inherit';\n\n        /**\n         * The css style of the cursor that is being used.\n         *\n         * @member {string}\n         */\n        _this.currentCursorStyle = 'inherit';\n\n        /**\n         * Internal cached let.\n         *\n         * @private\n         * @member {PIXI.Point}\n         */\n        _this._tempPoint = new core.Point();\n\n        /**\n         * The current resolution / device pixel ratio.\n         *\n         * @member {number}\n         * @default 1\n         */\n        _this.resolution = 1;\n\n        _this.setTargetElement(_this.renderer.view, _this.renderer.resolution);\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is pressed on the display\n         * object.\n         *\n         * @event mousedown\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is pressed\n         * on the display object.\n         *\n         * @event rightdown\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is released over the display\n         * object.\n         *\n         * @event mouseup\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is released\n         * over the display object.\n         *\n         * @event rightup\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is pressed and released on\n         * the display object.\n         *\n         * @event click\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is pressed\n         * and released on the display object.\n         *\n         * @event rightclick\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is released outside the\n         * display object that initially registered a\n         * [mousedown]{@link PIXI.interaction.InteractionManager#event:mousedown}.\n         *\n         * @event mouseupoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is released\n         * outside the display object that initially registered a\n         * [rightdown]{@link PIXI.interaction.InteractionManager#event:rightdown}.\n         *\n         * @event rightupoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device (usually a mouse) is moved while over the display object\n         *\n         * @event mousemove\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device (usually a mouse) is moved onto the display object\n         *\n         * @event mouseover\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device (usually a mouse) is moved off the display object\n         *\n         * @event mouseout\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is pressed on the display object.\n         *\n         * @event pointerdown\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is released over the display object.\n         *\n         * @event pointerup\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is pressed and released on the display object.\n         *\n         * @event pointertap\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is released outside the display object that initially\n         * registered a [pointerdown]{@link PIXI.interaction.InteractionManager#event:pointerdown}.\n         *\n         * @event pointerupoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device is moved while over the display object\n         *\n         * @event pointermove\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device is moved onto the display object\n         *\n         * @event pointerover\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device is moved off the display object\n         *\n         * @event pointerout\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is placed on the display object.\n         *\n         * @event touchstart\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is removed from the display object.\n         *\n         * @event touchend\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is placed and removed from the display object.\n         *\n         * @event tap\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is removed outside of the display object that initially\n         * registered a [touchstart]{@link PIXI.interaction.InteractionManager#event:touchstart}.\n         *\n         * @event touchendoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is moved along the display object.\n         *\n         * @event touchmove\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n        return _this;\n    }\n\n    /**\n     * Sets the DOM element which will receive mouse/touch events. This is useful for when you have\n     * other DOM elements on top of the renderers Canvas element. With this you'll be bale to deletegate\n     * another DOM element to receive those events.\n     *\n     * @param {HTMLCanvasElement} element - the DOM element which will receive mouse and touch events.\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the new element (relative to the canvas).\n     * @private\n     */\n\n\n    InteractionManager.prototype.setTargetElement = function setTargetElement(element) {\n        var resolution = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        this.removeEvents();\n\n        this.interactionDOMElement = element;\n\n        this.resolution = resolution;\n\n        this.addEvents();\n    };\n\n    /**\n     * Registers all the DOM events\n     *\n     * @private\n     */\n\n\n    InteractionManager.prototype.addEvents = function addEvents() {\n        if (!this.interactionDOMElement) {\n            return;\n        }\n\n        core.ticker.shared.add(this.update, this);\n\n        if (window.navigator.msPointerEnabled) {\n            this.interactionDOMElement.style['-ms-content-zooming'] = 'none';\n            this.interactionDOMElement.style['-ms-touch-action'] = 'none';\n        } else if (this.supportsPointerEvents) {\n            this.interactionDOMElement.style['touch-action'] = 'none';\n        }\n\n        /**\n         * These events are added first, so that if pointer events are normalised, they are fired\n         * in the same order as non-normalised events. ie. pointer event 1st, mouse / touch 2nd\n         */\n        if (this.supportsPointerEvents) {\n            window.document.addEventListener('pointermove', this.onPointerMove, true);\n            this.interactionDOMElement.addEventListener('pointerdown', this.onPointerDown, true);\n            this.interactionDOMElement.addEventListener('pointerout', this.onPointerOut, true);\n            this.interactionDOMElement.addEventListener('pointerover', this.onPointerOver, true);\n            window.addEventListener('pointerup', this.onPointerUp, true);\n        } else {\n            /**\n             * If pointer events aren't available on a device, this will turn either the touch or\n             * mouse events into pointer events. This allows a developer to just listen for emitted\n             * pointer events on interactive sprites\n             */\n            if (this.normalizeTouchEvents) {\n                this.interactionDOMElement.addEventListener('touchstart', this.onPointerDown, true);\n                this.interactionDOMElement.addEventListener('touchend', this.onPointerUp, true);\n                this.interactionDOMElement.addEventListener('touchmove', this.onPointerMove, true);\n            }\n\n            if (this.normalizeMouseEvents) {\n                window.document.addEventListener('mousemove', this.onPointerMove, true);\n                this.interactionDOMElement.addEventListener('mousedown', this.onPointerDown, true);\n                this.interactionDOMElement.addEventListener('mouseout', this.onPointerOut, true);\n                this.interactionDOMElement.addEventListener('mouseover', this.onPointerOver, true);\n                window.addEventListener('mouseup', this.onPointerUp, true);\n            }\n        }\n\n        window.document.addEventListener('mousemove', this.onMouseMove, true);\n        this.interactionDOMElement.addEventListener('mousedown', this.onMouseDown, true);\n        this.interactionDOMElement.addEventListener('mouseout', this.onMouseOut, true);\n        this.interactionDOMElement.addEventListener('mouseover', this.onMouseOver, true);\n        window.addEventListener('mouseup', this.onMouseUp, true);\n\n        if (this.supportsTouchEvents) {\n            this.interactionDOMElement.addEventListener('touchstart', this.onTouchStart, true);\n            this.interactionDOMElement.addEventListener('touchend', this.onTouchEnd, true);\n            this.interactionDOMElement.addEventListener('touchmove', this.onTouchMove, true);\n        }\n\n        this.eventsAdded = true;\n    };\n\n    /**\n     * Removes all the DOM events that were previously registered\n     *\n     * @private\n     */\n\n\n    InteractionManager.prototype.removeEvents = function removeEvents() {\n        if (!this.interactionDOMElement) {\n            return;\n        }\n\n        core.ticker.shared.remove(this.update, this);\n\n        if (window.navigator.msPointerEnabled) {\n            this.interactionDOMElement.style['-ms-content-zooming'] = '';\n            this.interactionDOMElement.style['-ms-touch-action'] = '';\n        } else if (this.supportsPointerEvents) {\n            this.interactionDOMElement.style['touch-action'] = '';\n        }\n\n        if (this.supportsPointerEvents) {\n            window.document.removeEventListener('pointermove', this.onPointerMove, true);\n            this.interactionDOMElement.removeEventListener('pointerdown', this.onPointerDown, true);\n            this.interactionDOMElement.removeEventListener('pointerout', this.onPointerOut, true);\n            this.interactionDOMElement.removeEventListener('pointerover', this.onPointerOver, true);\n            window.removeEventListener('pointerup', this.onPointerUp, true);\n        } else {\n            /**\n             * If pointer events aren't available on a device, this will turn either the touch or\n             * mouse events into pointer events. This allows a developer to just listen for emitted\n             * pointer events on interactive sprites\n             */\n            if (this.normalizeTouchEvents) {\n                this.interactionDOMElement.removeEventListener('touchstart', this.onPointerDown, true);\n                this.interactionDOMElement.removeEventListener('touchend', this.onPointerUp, true);\n                this.interactionDOMElement.removeEventListener('touchmove', this.onPointerMove, true);\n            }\n\n            if (this.normalizeMouseEvents) {\n                window.document.removeEventListener('mousemove', this.onPointerMove, true);\n                this.interactionDOMElement.removeEventListener('mousedown', this.onPointerDown, true);\n                this.interactionDOMElement.removeEventListener('mouseout', this.onPointerOut, true);\n                this.interactionDOMElement.removeEventListener('mouseover', this.onPointerOver, true);\n                window.removeEventListener('mouseup', this.onPointerUp, true);\n            }\n        }\n\n        window.document.removeEventListener('mousemove', this.onMouseMove, true);\n        this.interactionDOMElement.removeEventListener('mousedown', this.onMouseDown, true);\n        this.interactionDOMElement.removeEventListener('mouseout', this.onMouseOut, true);\n        this.interactionDOMElement.removeEventListener('mouseover', this.onMouseOver, true);\n        window.removeEventListener('mouseup', this.onMouseUp, true);\n\n        if (this.supportsTouchEvents) {\n            this.interactionDOMElement.removeEventListener('touchstart', this.onTouchStart, true);\n            this.interactionDOMElement.removeEventListener('touchend', this.onTouchEnd, true);\n            this.interactionDOMElement.removeEventListener('touchmove', this.onTouchMove, true);\n        }\n\n        this.interactionDOMElement = null;\n\n        this.eventsAdded = false;\n    };\n\n    /**\n     * Updates the state of interactive objects.\n     * Invoked by a throttled ticker update from {@link PIXI.ticker.shared}.\n     *\n     * @param {number} deltaTime - time delta since last tick\n     */\n\n\n    InteractionManager.prototype.update = function update(deltaTime) {\n        this._deltaTime += deltaTime;\n\n        if (this._deltaTime < this.interactionFrequency) {\n            return;\n        }\n\n        this._deltaTime = 0;\n\n        if (!this.interactionDOMElement) {\n            return;\n        }\n\n        // if the user move the mouse this check has already been dfone using the mouse move!\n        if (this.didMove) {\n            this.didMove = false;\n\n            return;\n        }\n\n        this.cursor = this.defaultCursorStyle;\n\n        // Resets the flag as set by a stopPropagation call. This flag is usually reset by a user interaction of any kind,\n        // but there was a scenario of a display object moving under a static mouse cursor.\n        // In this case, mouseover and mouseevents would not pass the flag test in dispatchEvent function\n        this.eventData._reset();\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseOverOut, true);\n\n        if (this.currentCursorStyle !== this.cursor) {\n            this.currentCursorStyle = this.cursor;\n            this.interactionDOMElement.style.cursor = this.cursor;\n        }\n\n        // TODO\n    };\n\n    /**\n     * Dispatches an event on the display object that was interacted with\n     *\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - the display object in question\n     * @param {string} eventString - the name of the event (e.g, mousedown)\n     * @param {object} eventData - the event data object\n     * @private\n     */\n\n\n    InteractionManager.prototype.dispatchEvent = function dispatchEvent(displayObject, eventString, eventData) {\n        if (!eventData.stopped) {\n            eventData.currentTarget = displayObject;\n            eventData.type = eventString;\n\n            displayObject.emit(eventString, eventData);\n\n            if (displayObject[eventString]) {\n                displayObject[eventString](eventData);\n            }\n        }\n    };\n\n    /**\n     * Maps x and y coords from a DOM object and maps them correctly to the pixi view. The\n     * resulting value is stored in the point. This takes into account the fact that the DOM\n     * element could be scaled and positioned anywhere on the screen.\n     *\n     * @param  {PIXI.Point} point - the point that the result will be stored in\n     * @param  {number} x - the x coord of the position to map\n     * @param  {number} y - the y coord of the position to map\n     */\n\n\n    InteractionManager.prototype.mapPositionToPoint = function mapPositionToPoint(point, x, y) {\n        var rect = void 0;\n\n        // IE 11 fix\n        if (!this.interactionDOMElement.parentElement) {\n            rect = { x: 0, y: 0, width: 0, height: 0 };\n        } else {\n            rect = this.interactionDOMElement.getBoundingClientRect();\n        }\n\n        point.x = (x - rect.left) * (this.interactionDOMElement.width / rect.width) / this.resolution;\n        point.y = (y - rect.top) * (this.interactionDOMElement.height / rect.height) / this.resolution;\n    };\n\n    /**\n     * This function is provides a neat way of crawling through the scene graph and running a\n     * specified function on all interactive objects it finds. It will also take care of hit\n     * testing the interactive objects and passes the hit across in the function.\n     *\n     * @param {PIXI.Point} point - the point that is tested for collision\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - the displayObject\n     *  that will be hit test (recursively crawls its children)\n     * @param {Function} [func] - the function that will be called on each interactive object. The\n     *  displayObject and hit will be passed to the function\n     * @param {boolean} [hitTest] - this indicates if the objects inside should be hit test against the point\n     * @param {boolean} [interactive] - Whether the displayObject is interactive\n     * @return {boolean} returns true if the displayObject hit the point\n     */\n\n\n    InteractionManager.prototype.processInteractive = function processInteractive(point, displayObject, func, hitTest, interactive) {\n        if (!displayObject || !displayObject.visible) {\n            return false;\n        }\n\n        // Took a little while to rework this function correctly! But now it is done and nice and optimised. ^_^\n        //\n        // This function will now loop through all objects and then only hit test the objects it HAS\n        // to, not all of them. MUCH faster..\n        // An object will be hit test if the following is true:\n        //\n        // 1: It is interactive.\n        // 2: It belongs to a parent that is interactive AND one of the parents children have not already been hit.\n        //\n        // As another little optimisation once an interactive object has been hit we can carry on\n        // through the scenegraph, but we know that there will be no more hits! So we can avoid extra hit tests\n        // A final optimisation is that an object is not hit test directly if a child has already been hit.\n\n        interactive = displayObject.interactive || interactive;\n\n        var hit = false;\n        var interactiveParent = interactive;\n\n        // if the displayobject has a hitArea, then it does not need to hitTest children.\n        if (displayObject.hitArea) {\n            interactiveParent = false;\n        }\n\n        // it has a mask! Then lets hit test that before continuing..\n        if (hitTest && displayObject._mask) {\n            if (!displayObject._mask.containsPoint(point)) {\n                hitTest = false;\n            }\n        }\n\n        // it has a filterArea! Same as mask but easier, its a rectangle\n        if (hitTest && displayObject.filterArea) {\n            if (!displayObject.filterArea.contains(point.x, point.y)) {\n                hitTest = false;\n            }\n        }\n\n        // ** FREE TIP **! If an object is not interactive or has no buttons in it\n        // (such as a game scene!) set interactiveChildren to false for that displayObject.\n        // This will allow pixi to completely ignore and bypass checking the displayObjects children.\n        if (displayObject.interactiveChildren && displayObject.children) {\n            var children = displayObject.children;\n\n            for (var i = children.length - 1; i >= 0; i--) {\n                var child = children[i];\n\n                // time to get recursive.. if this function will return if something is hit..\n                if (this.processInteractive(point, child, func, hitTest, interactiveParent)) {\n                    // its a good idea to check if a child has lost its parent.\n                    // this means it has been removed whilst looping so its best\n                    if (!child.parent) {\n                        continue;\n                    }\n\n                    hit = true;\n\n                    // we no longer need to hit test any more objects in this container as we we\n                    // now know the parent has been hit\n                    interactiveParent = false;\n\n                    // If the child is interactive , that means that the object hit was actually\n                    // interactive and not just the child of an interactive object.\n                    // This means we no longer need to hit test anything else. We still need to run\n                    // through all objects, but we don't need to perform any hit tests.\n\n                    // {\n                    hitTest = false;\n                    // }\n\n                    // we can break now as we have hit an object.\n                }\n            }\n        }\n\n        // no point running this if the item is not interactive or does not have an interactive parent.\n        if (interactive) {\n            // if we are hit testing (as in we have no hit any objects yet)\n            // We also don't need to worry about hit testing if once of the displayObjects children\n            // has already been hit!\n            if (hitTest && !hit) {\n                if (displayObject.hitArea) {\n                    displayObject.worldTransform.applyInverse(point, this._tempPoint);\n                    hit = displayObject.hitArea.contains(this._tempPoint.x, this._tempPoint.y);\n                } else if (displayObject.containsPoint) {\n                    hit = displayObject.containsPoint(point);\n                }\n            }\n\n            if (displayObject.interactive) {\n                if (hit && !this.eventData.target) {\n                    this.eventData.target = displayObject;\n                    this.mouse.target = displayObject;\n                    this.pointer.target = displayObject;\n                }\n\n                func(displayObject, hit);\n            }\n        }\n\n        return hit;\n    };\n\n    /**\n     * Is called when the mouse button is pressed down on the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of a mouse button being pressed down\n     */\n\n\n    InteractionManager.prototype.onMouseDown = function onMouseDown(event) {\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        // Update internal mouse reference\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        if (this.autoPreventDefault) {\n            this.mouse.originalEvent.preventDefault();\n        }\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseDown, true);\n\n        var isRightButton = event.button === 2 || event.which === 3;\n\n        this.emit(isRightButton ? 'rightdown' : 'mousedown', this.eventData);\n    };\n\n    /**\n     * Processes the result of the mouse down check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processMouseDown = function processMouseDown(displayObject, hit) {\n        var e = this.mouse.originalEvent;\n\n        var isRightButton = e.button === 2 || e.which === 3;\n\n        if (hit) {\n            displayObject[isRightButton ? '_isRightDown' : '_isLeftDown'] = true;\n            this.dispatchEvent(displayObject, isRightButton ? 'rightdown' : 'mousedown', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the mouse button is released on the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of a mouse button being released\n     */\n\n\n    InteractionManager.prototype.onMouseUp = function onMouseUp(event) {\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        // Update internal mouse reference\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseUp, true);\n\n        var isRightButton = event.button === 2 || event.which === 3;\n\n        this.emit(isRightButton ? 'rightup' : 'mouseup', this.eventData);\n    };\n\n    /**\n     * Processes the result of the mouse up check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processMouseUp = function processMouseUp(displayObject, hit) {\n        var e = this.mouse.originalEvent;\n\n        var isRightButton = e.button === 2 || e.which === 3;\n        var isDown = isRightButton ? '_isRightDown' : '_isLeftDown';\n\n        if (hit) {\n            this.dispatchEvent(displayObject, isRightButton ? 'rightup' : 'mouseup', this.eventData);\n\n            if (displayObject[isDown]) {\n                displayObject[isDown] = false;\n                this.dispatchEvent(displayObject, isRightButton ? 'rightclick' : 'click', this.eventData);\n            }\n        } else if (displayObject[isDown]) {\n            displayObject[isDown] = false;\n            this.dispatchEvent(displayObject, isRightButton ? 'rightupoutside' : 'mouseupoutside', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the mouse moves across the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of the mouse moving\n     */\n\n\n    InteractionManager.prototype.onMouseMove = function onMouseMove(event) {\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.didMove = true;\n\n        this.cursor = this.defaultCursorStyle;\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseMove, true);\n\n        this.emit('mousemove', this.eventData);\n\n        if (this.currentCursorStyle !== this.cursor) {\n            this.currentCursorStyle = this.cursor;\n            this.interactionDOMElement.style.cursor = this.cursor;\n        }\n\n        // TODO BUG for parents interactive object (border order issue)\n    };\n\n    /**\n     * Processes the result of the mouse move check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processMouseMove = function processMouseMove(displayObject, hit) {\n        this.processMouseOverOut(displayObject, hit);\n\n        // only display on mouse over\n        if (!this.moveWhenInside || hit) {\n            this.dispatchEvent(displayObject, 'mousemove', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the mouse is moved out of the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of the mouse being moved out\n     */\n\n\n    InteractionManager.prototype.onMouseOut = function onMouseOut(event) {\n        this.mouseOverRenderer = false;\n\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        // Update internal mouse reference\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.interactionDOMElement.style.cursor = this.defaultCursorStyle;\n\n        // TODO optimize by not check EVERY TIME! maybe half as often? //\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseOverOut, false);\n\n        this.emit('mouseout', this.eventData);\n    };\n\n    /**\n     * Processes the result of the mouse over/out check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processMouseOverOut = function processMouseOverOut(displayObject, hit) {\n        if (hit && this.mouseOverRenderer) {\n            if (!displayObject._mouseOver) {\n                displayObject._mouseOver = true;\n                this.dispatchEvent(displayObject, 'mouseover', this.eventData);\n            }\n\n            if (displayObject.buttonMode) {\n                this.cursor = displayObject.defaultCursor;\n            }\n        } else if (displayObject._mouseOver) {\n            displayObject._mouseOver = false;\n            this.dispatchEvent(displayObject, 'mouseout', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the mouse enters the renderer element area\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of the mouse moving into the renderer view\n     */\n\n\n    InteractionManager.prototype.onMouseOver = function onMouseOver(event) {\n        this.mouseOverRenderer = true;\n\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        this.emit('mouseover', this.eventData);\n    };\n\n    /**\n     * Is called when the pointer button is pressed down on the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer button being pressed down\n     */\n\n\n    InteractionManager.prototype.onPointerDown = function onPointerDown(event) {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        // Update internal pointer reference\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        /**\n         * No need to prevent default on natural pointer events, as there are no side effects\n         * Normalized events, however, may have the double mousedown/touchstart issue on the native android browser,\n         * so still need to be prevented.\n         */\n        if (this.autoPreventDefault && (this.normalizeMouseEvents || this.normalizeTouchEvents)) {\n            this.pointer.originalEvent.preventDefault();\n        }\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerDown, true);\n\n        this.emit('pointerdown', this.eventData);\n    };\n\n    /**\n     * Processes the result of the pointer down check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processPointerDown = function processPointerDown(displayObject, hit) {\n        if (hit) {\n            displayObject._pointerDown = true;\n            this.dispatchEvent(displayObject, 'pointerdown', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the pointer button is released on the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer button being released\n     */\n\n\n    InteractionManager.prototype.onPointerUp = function onPointerUp(event) {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        // Update internal pointer reference\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerUp, true);\n\n        this.emit('pointerup', this.eventData);\n    };\n\n    /**\n     * Processes the result of the pointer up check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processPointerUp = function processPointerUp(displayObject, hit) {\n        if (hit) {\n            this.dispatchEvent(displayObject, 'pointerup', this.eventData);\n\n            if (displayObject._pointerDown) {\n                displayObject._pointerDown = false;\n                this.dispatchEvent(displayObject, 'pointertap', this.eventData);\n            }\n        } else if (displayObject._pointerDown) {\n            displayObject._pointerDown = false;\n            this.dispatchEvent(displayObject, 'pointerupoutside', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the pointer moves across the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer moving\n     */\n\n\n    InteractionManager.prototype.onPointerMove = function onPointerMove(event) {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerMove, true);\n\n        this.emit('pointermove', this.eventData);\n    };\n\n    /**\n     * Processes the result of the pointer move check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processPointerMove = function processPointerMove(displayObject, hit) {\n        if (!this.pointer.originalEvent.changedTouches) {\n            this.processPointerOverOut(displayObject, hit);\n        }\n\n        if (!this.moveWhenInside || hit) {\n            this.dispatchEvent(displayObject, 'pointermove', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the pointer is moved out of the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer being moved out\n     */\n\n\n    InteractionManager.prototype.onPointerOut = function onPointerOut(event) {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        // Update internal pointer reference\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerOverOut, false);\n\n        this.emit('pointerout', this.eventData);\n    };\n\n    /**\n     * Processes the result of the pointer over/out check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processPointerOverOut = function processPointerOverOut(displayObject, hit) {\n        if (hit && this.mouseOverRenderer) {\n            if (!displayObject._pointerOver) {\n                displayObject._pointerOver = true;\n                this.dispatchEvent(displayObject, 'pointerover', this.eventData);\n            }\n        } else if (displayObject._pointerOver) {\n            displayObject._pointerOver = false;\n            this.dispatchEvent(displayObject, 'pointerout', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the pointer is moved into the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer button being moved into the renderer view\n     */\n\n\n    InteractionManager.prototype.onPointerOver = function onPointerOver(event) {\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        this.emit('pointerover', this.eventData);\n    };\n\n    /**\n     * Is called when a touch is started on the renderer element\n     *\n     * @private\n     * @param {TouchEvent} event - The DOM event of a touch starting on the renderer view\n     */\n\n\n    InteractionManager.prototype.onTouchStart = function onTouchStart(event) {\n        if (this.autoPreventDefault) {\n            event.preventDefault();\n        }\n\n        var changedTouches = event.changedTouches;\n        var cLength = changedTouches.length;\n\n        for (var i = 0; i < cLength; i++) {\n            var touch = changedTouches[i];\n            var touchData = this.getTouchData(touch);\n\n            touchData.originalEvent = event;\n\n            this.eventData.data = touchData;\n            this.eventData._reset();\n\n            this.processInteractive(touchData.global, this.renderer._lastObjectRendered, this.processTouchStart, true);\n\n            this.emit('touchstart', this.eventData);\n\n            this.returnTouchData(touchData);\n        }\n    };\n\n    /**\n     * Processes the result of a touch check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processTouchStart = function processTouchStart(displayObject, hit) {\n        if (hit) {\n            displayObject._touchDown = true;\n            this.dispatchEvent(displayObject, 'touchstart', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when a touch ends on the renderer element\n     *\n     * @private\n     * @param {TouchEvent} event - The DOM event of a touch ending on the renderer view\n     */\n\n\n    InteractionManager.prototype.onTouchEnd = function onTouchEnd(event) {\n        if (this.autoPreventDefault) {\n            event.preventDefault();\n        }\n\n        var changedTouches = event.changedTouches;\n        var cLength = changedTouches.length;\n\n        for (var i = 0; i < cLength; i++) {\n            var touchEvent = changedTouches[i];\n\n            var touchData = this.getTouchData(touchEvent);\n\n            touchData.originalEvent = event;\n\n            // TODO this should be passed along.. no set\n            this.eventData.data = touchData;\n            this.eventData._reset();\n\n            this.processInteractive(touchData.global, this.renderer._lastObjectRendered, this.processTouchEnd, true);\n\n            this.emit('touchend', this.eventData);\n\n            this.returnTouchData(touchData);\n        }\n    };\n\n    /**\n     * Processes the result of the end of a touch and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processTouchEnd = function processTouchEnd(displayObject, hit) {\n        if (hit) {\n            this.dispatchEvent(displayObject, 'touchend', this.eventData);\n\n            if (displayObject._touchDown) {\n                displayObject._touchDown = false;\n                this.dispatchEvent(displayObject, 'tap', this.eventData);\n            }\n        } else if (displayObject._touchDown) {\n            displayObject._touchDown = false;\n            this.dispatchEvent(displayObject, 'touchendoutside', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when a touch is moved across the renderer element\n     *\n     * @private\n     * @param {TouchEvent} event - The DOM event of a touch moving accross the renderer view\n     */\n\n\n    InteractionManager.prototype.onTouchMove = function onTouchMove(event) {\n        if (this.autoPreventDefault) {\n            event.preventDefault();\n        }\n\n        var changedTouches = event.changedTouches;\n        var cLength = changedTouches.length;\n\n        for (var i = 0; i < cLength; i++) {\n            var touchEvent = changedTouches[i];\n\n            var touchData = this.getTouchData(touchEvent);\n\n            touchData.originalEvent = event;\n\n            this.eventData.data = touchData;\n            this.eventData._reset();\n\n            this.processInteractive(touchData.global, this.renderer._lastObjectRendered, this.processTouchMove, this.moveWhenInside);\n\n            this.emit('touchmove', this.eventData);\n\n            this.returnTouchData(touchData);\n        }\n    };\n\n    /**\n     * Processes the result of a touch move check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processTouchMove = function processTouchMove(displayObject, hit) {\n        if (!this.moveWhenInside || hit) {\n            this.dispatchEvent(displayObject, 'touchmove', this.eventData);\n        }\n    };\n\n    /**\n     * Grabs an interaction data object from the internal pool\n     *\n     * @private\n     * @param {Touch} touch - The touch data we need to pair with an interactionData object\n     * @return {PIXI.interaction.InteractionData} The built data object.\n     */\n\n\n    InteractionManager.prototype.getTouchData = function getTouchData(touch) {\n        var touchData = this.interactiveDataPool.pop() || new _InteractionData2.default();\n\n        touchData.identifier = touch.identifier;\n        this.mapPositionToPoint(touchData.global, touch.clientX, touch.clientY);\n\n        if (navigator.isCocoonJS) {\n            touchData.global.x = touchData.global.x / this.resolution;\n            touchData.global.y = touchData.global.y / this.resolution;\n        }\n\n        touch.globalX = touchData.global.x;\n        touch.globalY = touchData.global.y;\n\n        return touchData;\n    };\n\n    /**\n     * Returns an interaction data object to the internal pool\n     *\n     * @private\n     * @param {PIXI.interaction.InteractionData} touchData - The touch data object we want to return to the pool\n     */\n\n\n    InteractionManager.prototype.returnTouchData = function returnTouchData(touchData) {\n        this.interactiveDataPool.push(touchData);\n    };\n\n    /**\n     * Ensures that the original event object contains all data that a regular pointer event would have\n     *\n     * @private\n     * @param {TouchEvent|MouseEvent} event - The original event data from a touch or mouse event\n     */\n\n\n    InteractionManager.prototype.normalizeToPointerData = function normalizeToPointerData(event) {\n        if (this.normalizeTouchEvents && event.changedTouches) {\n            if (typeof event.button === 'undefined') event.button = event.touches.length ? 1 : 0;\n            if (typeof event.buttons === 'undefined') event.buttons = event.touches.length ? 1 : 0;\n            if (typeof event.isPrimary === 'undefined') event.isPrimary = event.touches.length === 1;\n            if (typeof event.width === 'undefined') event.width = event.changedTouches[0].radiusX || 1;\n            if (typeof event.height === 'undefined') event.height = event.changedTouches[0].radiusY || 1;\n            if (typeof event.tiltX === 'undefined') event.tiltX = 0;\n            if (typeof event.tiltY === 'undefined') event.tiltY = 0;\n            if (typeof event.pointerType === 'undefined') event.pointerType = 'touch';\n            if (typeof event.pointerId === 'undefined') event.pointerId = event.changedTouches[0].identifier || 0;\n            if (typeof event.pressure === 'undefined') event.pressure = event.changedTouches[0].force || 0.5;\n            if (typeof event.rotation === 'undefined') event.rotation = event.changedTouches[0].rotationAngle || 0;\n\n            if (typeof event.clientX === 'undefined') event.clientX = event.changedTouches[0].clientX;\n            if (typeof event.clientY === 'undefined') event.clientY = event.changedTouches[0].clientY;\n            if (typeof event.pageX === 'undefined') event.pageX = event.changedTouches[0].pageX;\n            if (typeof event.pageY === 'undefined') event.pageY = event.changedTouches[0].pageY;\n            if (typeof event.screenX === 'undefined') event.screenX = event.changedTouches[0].screenX;\n            if (typeof event.screenY === 'undefined') event.screenY = event.changedTouches[0].screenY;\n            if (typeof event.layerX === 'undefined') event.layerX = event.offsetX = event.clientX;\n            if (typeof event.layerY === 'undefined') event.layerY = event.offsetY = event.clientY;\n        } else if (this.normalizeMouseEvents) {\n            if (typeof event.isPrimary === 'undefined') event.isPrimary = true;\n            if (typeof event.width === 'undefined') event.width = 1;\n            if (typeof event.height === 'undefined') event.height = 1;\n            if (typeof event.tiltX === 'undefined') event.tiltX = 0;\n            if (typeof event.tiltY === 'undefined') event.tiltY = 0;\n            if (typeof event.pointerType === 'undefined') event.pointerType = 'mouse';\n            if (typeof event.pointerId === 'undefined') event.pointerId = 1;\n            if (typeof event.pressure === 'undefined') event.pressure = 0.5;\n            if (typeof event.rotation === 'undefined') event.rotation = 0;\n        }\n    };\n\n    /**\n     * Destroys the interaction manager\n     *\n     */\n\n\n    InteractionManager.prototype.destroy = function destroy() {\n        this.removeEvents();\n\n        this.removeAllListeners();\n\n        this.renderer = null;\n\n        this.mouse = null;\n\n        this.eventData = null;\n\n        this.interactiveDataPool = null;\n\n        this.interactionDOMElement = null;\n\n        this.onMouseDown = null;\n        this.processMouseDown = null;\n\n        this.onMouseUp = null;\n        this.processMouseUp = null;\n\n        this.onMouseMove = null;\n        this.processMouseMove = null;\n\n        this.onMouseOut = null;\n        this.processMouseOverOut = null;\n\n        this.onMouseOver = null;\n\n        this.onPointerDown = null;\n        this.processPointerDown = null;\n\n        this.onPointerUp = null;\n        this.processPointerUp = null;\n\n        this.onPointerMove = null;\n        this.processPointerMove = null;\n\n        this.onPointerOut = null;\n        this.processPointerOverOut = null;\n\n        this.onPointerOver = null;\n\n        this.onTouchStart = null;\n        this.processTouchStart = null;\n\n        this.onTouchEnd = null;\n        this.processTouchEnd = null;\n\n        this.onTouchMove = null;\n        this.processTouchMove = null;\n\n        this._tempPoint = null;\n    };\n\n    return InteractionManager;\n}(_eventemitter2.default);\n\nexports.default = InteractionManager;\n\n\ncore.WebGLRenderer.registerPlugin('interaction', InteractionManager);\ncore.CanvasRenderer.registerPlugin('interaction', InteractionManager);\n//# sourceMappingURL=InteractionManager.js.map\n\n/***/ },\n/* 148 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _InteractionData = __webpack_require__(62);\n\nObject.defineProperty(exports, 'InteractionData', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InteractionData).default;\n  }\n});\n\nvar _InteractionManager = __webpack_require__(147);\n\nObject.defineProperty(exports, 'InteractionManager', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InteractionManager).default;\n  }\n});\n\nvar _interactiveTarget = __webpack_require__(63);\n\nObject.defineProperty(exports, 'interactiveTarget', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_interactiveTarget).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 149 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _loader = __webpack_require__(150);\n\nObject.defineProperty(exports, 'Loader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_loader).default;\n  }\n});\n\nvar _bitmapFontParser = __webpack_require__(64);\n\nObject.defineProperty(exports, 'bitmapFontParser', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_bitmapFontParser).default;\n  }\n});\nObject.defineProperty(exports, 'parseBitmapFontData', {\n  enumerable: true,\n  get: function get() {\n    return _bitmapFontParser.parse;\n  }\n});\n\nvar _spritesheetParser = __webpack_require__(65);\n\nObject.defineProperty(exports, 'spritesheetParser', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_spritesheetParser).default;\n  }\n});\n\nvar _textureParser = __webpack_require__(66);\n\nObject.defineProperty(exports, 'textureParser', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_textureParser).default;\n  }\n});\n\nvar _resourceLoader = __webpack_require__(20);\n\nObject.defineProperty(exports, 'Resource', {\n  enumerable: true,\n  get: function get() {\n    return _resourceLoader.Resource;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 150 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _resourceLoader = __webpack_require__(20);\n\nvar _resourceLoader2 = _interopRequireDefault(_resourceLoader);\n\nvar _textureParser = __webpack_require__(66);\n\nvar _textureParser2 = _interopRequireDefault(_textureParser);\n\nvar _spritesheetParser = __webpack_require__(65);\n\nvar _spritesheetParser2 = _interopRequireDefault(_spritesheetParser);\n\nvar _bitmapFontParser = __webpack_require__(64);\n\nvar _bitmapFontParser2 = _interopRequireDefault(_bitmapFontParser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * The new loader, extends Resource Loader by Chad Engler : https://github.com/englercj/resource-loader\n *\n * ```js\n * let loader = PIXI.loader; // pixi exposes a premade instance for you to use.\n * //or\n * let loader = new PIXI.loaders.Loader(); // you can also create your own if you want\n *\n * loader.add('bunny',\"data/bunny.png\");\n *\n * loader.once('complete',onAssetsLoaded);\n *\n * loader.load();\n * ```\n *\n * @see https://github.com/englercj/resource-loader\n *\n * @class\n * @extends module:resource-loader.ResourceLoader\n * @memberof PIXI.loaders\n */\nvar Loader = function (_ResourceLoader) {\n    _inherits(Loader, _ResourceLoader);\n\n    /**\n     * @param {string} [baseUrl=''] - The base url for all resources loaded by this loader.\n     * @param {number} [concurrency=10] - The number of resources to load concurrently.\n     */\n    function Loader(baseUrl, concurrency) {\n        _classCallCheck(this, Loader);\n\n        var _this = _possibleConstructorReturn(this, _ResourceLoader.call(this, baseUrl, concurrency));\n\n        for (var i = 0; i < Loader._pixiMiddleware.length; ++i) {\n            _this.use(Loader._pixiMiddleware[i]());\n        }\n        return _this;\n    }\n\n    /**\n     * Adds a default middleware to the pixi loader.\n     *\n     * @static\n     * @param {Function} fn - The middleware to add.\n     */\n\n\n    Loader.addPixiMiddleware = function addPixiMiddleware(fn) {\n        Loader._pixiMiddleware.push(fn);\n    };\n\n    return Loader;\n}(_resourceLoader2.default);\n\nexports.default = Loader;\n\n\nLoader._pixiMiddleware = [\n// parse any blob into more usable objects (e.g. Image)\n_resourceLoader2.default.middleware.parsing.blob,\n// parse any Image objects into textures\n_textureParser2.default,\n// parse any spritesheet data into multiple textures\n_spritesheetParser2.default,\n// parse bitmap font data into multiple textures\n_bitmapFontParser2.default];\n\n// Add custom extentions\nvar Resource = _resourceLoader2.default.Resource;\n\nResource.setExtensionXhrType('fnt', Resource.XHR_RESPONSE_TYPE.DOCUMENT);\n//# sourceMappingURL=loader.js.map\n\n/***/ },\n/* 151 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Plane2 = __webpack_require__(67);\n\nvar _Plane3 = _interopRequireDefault(_Plane2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DEFAULT_BORDER_SIZE = 10;\n\n/**\n * The NineSlicePlane allows you to stretch a texture using 9-slice scaling. The corners will remain unscaled (useful\n * for buttons with rounded corners for example) and the other areas will be scaled horizontally and or vertically\n *\n *```js\n * let Plane9 = new PIXI.NineSlicePlane(PIXI.Texture.fromImage('BoxWithRoundedCorners.png'), 15, 15, 15, 15);\n *  ```\n * <pre>\n *      A                          B\n *    +---+----------------------+---+\n *  C | 1 |          2           | 3 |\n *    +---+----------------------+---+\n *    |   |                      |   |\n *    | 4 |          5           | 6 |\n *    |   |                      |   |\n *    +---+----------------------+---+\n *  D | 7 |          8           | 9 |\n *    +---+----------------------+---+\n\n *  When changing this objects width and/or height:\n *     areas 1 3 7 and 9 will remain unscaled.\n *     areas 2 and 8 will be stretched horizontally\n *     areas 4 and 6 will be stretched vertically\n *     area 5 will be stretched both horizontally and vertically\n * </pre>\n *\n * @class\n * @extends PIXI.mesh.Plane\n * @memberof PIXI.mesh\n *\n */\n\nvar NineSlicePlane = function (_Plane) {\n    _inherits(NineSlicePlane, _Plane);\n\n    /**\n     * @param {PIXI.Texture} texture - The texture to use on the NineSlicePlane.\n     * @param {int} [leftWidth=10] size of the left vertical bar (A)\n     * @param {int} [topHeight=10] size of the top horizontal bar (C)\n     * @param {int} [rightWidth=10] size of the right vertical bar (B)\n     * @param {int} [bottomHeight=10] size of the bottom horizontal bar (D)\n     */\n    function NineSlicePlane(texture, leftWidth, topHeight, rightWidth, bottomHeight) {\n        _classCallCheck(this, NineSlicePlane);\n\n        var _this = _possibleConstructorReturn(this, _Plane.call(this, texture, 4, 4));\n\n        var uvs = _this.uvs;\n\n        // right and bottom uv's are always 1\n        uvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\n        uvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\n\n        _this._origWidth = texture.width;\n        _this._origHeight = texture.height;\n        _this._uvw = 1 / _this._origWidth;\n        _this._uvh = 1 / _this._origHeight;\n\n        /**\n         * The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         * @override\n         */\n        _this.width = texture.width;\n\n        /**\n         * The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         * @override\n         */\n        _this.height = texture.height;\n\n        uvs[2] = uvs[10] = uvs[18] = uvs[26] = _this._uvw * leftWidth;\n        uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - _this._uvw * rightWidth;\n        uvs[9] = uvs[11] = uvs[13] = uvs[15] = _this._uvh * topHeight;\n        uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - _this._uvh * bottomHeight;\n\n        /**\n         * The width of the left column (a)\n         *\n         * @member {number}\n         */\n        _this.leftWidth = typeof leftWidth !== 'undefined' ? leftWidth : DEFAULT_BORDER_SIZE;\n\n        /**\n         * The width of the right column (b)\n         *\n         * @member {number}\n         */\n        _this.rightWidth = typeof rightWidth !== 'undefined' ? rightWidth : DEFAULT_BORDER_SIZE;\n\n        /**\n         * The height of the top row (c)\n         *\n         * @member {number}\n         */\n        _this.topHeight = typeof topHeight !== 'undefined' ? topHeight : DEFAULT_BORDER_SIZE;\n\n        /**\n         * The height of the bottom row (d)\n         *\n         * @member {number}\n         */\n        _this.bottomHeight = typeof bottomHeight !== 'undefined' ? bottomHeight : DEFAULT_BORDER_SIZE;\n        return _this;\n    }\n\n    /**\n     * Updates the horizontal vertices.\n     *\n     */\n\n\n    NineSlicePlane.prototype.updateHorizontalVertices = function updateHorizontalVertices() {\n        var vertices = this.vertices;\n\n        vertices[9] = vertices[11] = vertices[13] = vertices[15] = this._topHeight;\n        vertices[17] = vertices[19] = vertices[21] = vertices[23] = this._height - this._bottomHeight;\n        vertices[25] = vertices[27] = vertices[29] = vertices[31] = this._height;\n    };\n\n    /**\n     * Updates the vertical vertices.\n     *\n     */\n\n\n    NineSlicePlane.prototype.updateVerticalVertices = function updateVerticalVertices() {\n        var vertices = this.vertices;\n\n        vertices[2] = vertices[10] = vertices[18] = vertices[26] = this._leftWidth;\n        vertices[4] = vertices[12] = vertices[20] = vertices[28] = this._width - this._rightWidth;\n        vertices[6] = vertices[14] = vertices[22] = vertices[30] = this._width;\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer to render with.\n     */\n\n\n    NineSlicePlane.prototype._renderCanvas = function _renderCanvas(renderer) {\n        var context = renderer.context;\n\n        context.globalAlpha = this.worldAlpha;\n\n        var transform = this.worldTransform;\n        var res = renderer.resolution;\n\n        if (renderer.roundPixels) {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res | 0, transform.ty * res | 0);\n        } else {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res, transform.ty * res);\n        }\n\n        var base = this._texture.baseTexture;\n        var textureSource = base.source;\n        var w = base.width;\n        var h = base.height;\n\n        this.drawSegment(context, textureSource, w, h, 0, 1, 10, 11);\n        this.drawSegment(context, textureSource, w, h, 2, 3, 12, 13);\n        this.drawSegment(context, textureSource, w, h, 4, 5, 14, 15);\n        this.drawSegment(context, textureSource, w, h, 8, 9, 18, 19);\n        this.drawSegment(context, textureSource, w, h, 10, 11, 20, 21);\n        this.drawSegment(context, textureSource, w, h, 12, 13, 22, 23);\n        this.drawSegment(context, textureSource, w, h, 16, 17, 26, 27);\n        this.drawSegment(context, textureSource, w, h, 18, 19, 28, 29);\n        this.drawSegment(context, textureSource, w, h, 20, 21, 30, 31);\n    };\n\n    /**\n     * Renders one segment of the plane.\n     * to mimic the exact drawing behavior of stretching the image like WebGL does, we need to make sure\n     * that the source area is at least 1 pixel in size, otherwise nothing gets drawn when a slice size of 0 is used.\n     *\n     * @private\n     * @param {CanvasRenderingContext2D} context - The context to draw with.\n     * @param {CanvasImageSource} textureSource - The source to draw.\n     * @param {number} w - width of the texture\n     * @param {number} h - height of the texture\n     * @param {number} x1 - x index 1\n     * @param {number} y1 - y index 1\n     * @param {number} x2 - x index 2\n     * @param {number} y2 - y index 2\n     */\n\n\n    NineSlicePlane.prototype.drawSegment = function drawSegment(context, textureSource, w, h, x1, y1, x2, y2) {\n        // otherwise you get weird results when using slices of that are 0 wide or high.\n        var uvs = this.uvs;\n        var vertices = this.vertices;\n\n        var sw = (uvs[x2] - uvs[x1]) * w;\n        var sh = (uvs[y2] - uvs[y1]) * h;\n        var dw = vertices[x2] - vertices[x1];\n        var dh = vertices[y2] - vertices[y1];\n\n        // make sure the source is at least 1 pixel wide and high, otherwise nothing will be drawn.\n        if (sw < 1) {\n            sw = 1;\n        }\n\n        if (sh < 1) {\n            sh = 1;\n        }\n\n        // make sure destination is at least 1 pixel wide and high, otherwise you get\n        // lines when rendering close to original size.\n        if (dw < 1) {\n            dw = 1;\n        }\n\n        if (dh < 1) {\n            dh = 1;\n        }\n\n        context.drawImage(textureSource, uvs[x1] * w, uvs[y1] * h, sw, sh, vertices[x1], vertices[y1], dw, dh);\n    };\n\n    /**\n     * The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n     *\n     * @member {number}\n     * @memberof PIXI.NineSlicePlane#\n     */\n\n\n    _createClass(NineSlicePlane, [{\n        key: 'width',\n        get: function get() {\n            return this._width;\n        }\n\n        /**\n         * Sets the width.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._width = value;\n            this.updateVerticalVertices();\n        }\n\n        /**\n         * The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return this._height;\n        }\n\n        /**\n         * Sets the height.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._height = value;\n            this.updateHorizontalVertices();\n        }\n\n        /**\n         * The width of the left column\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'leftWidth',\n        get: function get() {\n            return this._leftWidth;\n        }\n\n        /**\n         * Sets the width of the left column.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._leftWidth = value;\n\n            var uvs = this.uvs;\n            var vertices = this.vertices;\n\n            uvs[2] = uvs[10] = uvs[18] = uvs[26] = this._uvw * value;\n            vertices[2] = vertices[10] = vertices[18] = vertices[26] = value;\n\n            this.dirty = true;\n        }\n\n        /**\n         * The width of the right column\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'rightWidth',\n        get: function get() {\n            return this._rightWidth;\n        }\n\n        /**\n         * Sets the width of the right column.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._rightWidth = value;\n\n            var uvs = this.uvs;\n            var vertices = this.vertices;\n\n            uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - this._uvw * value;\n            vertices[4] = vertices[12] = vertices[20] = vertices[28] = this._width - value;\n\n            this.dirty = true;\n        }\n\n        /**\n         * The height of the top row\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'topHeight',\n        get: function get() {\n            return this._topHeight;\n        }\n\n        /**\n         * Sets the height of the top row.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._topHeight = value;\n\n            var uvs = this.uvs;\n            var vertices = this.vertices;\n\n            uvs[9] = uvs[11] = uvs[13] = uvs[15] = this._uvh * value;\n            vertices[9] = vertices[11] = vertices[13] = vertices[15] = value;\n\n            this.dirty = true;\n        }\n\n        /**\n         * The height of the bottom row\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'bottomHeight',\n        get: function get() {\n            return this._bottomHeight;\n        }\n\n        /**\n         * Sets the height of the bottom row.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._bottomHeight = value;\n\n            var uvs = this.uvs;\n            var vertices = this.vertices;\n\n            uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - this._uvh * value;\n            vertices[17] = vertices[19] = vertices[21] = vertices[23] = this._height - value;\n\n            this.dirty = true;\n        }\n    }]);\n\n    return NineSlicePlane;\n}(_Plane3.default);\n\nexports.default = NineSlicePlane;\n//# sourceMappingURL=NineSlicePlane.js.map\n\n/***/ },\n/* 152 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Mesh2 = __webpack_require__(12);\n\nvar _Mesh3 = _interopRequireDefault(_Mesh2);\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The rope allows you to draw a texture across several points and them manipulate these points\n *\n *```js\n * for (let i = 0; i < 20; i++) {\n *     points.push(new PIXI.Point(i * 50, 0));\n * };\n * let rope = new PIXI.Rope(PIXI.Texture.fromImage(\"snake.png\"), points);\n *  ```\n *\n * @class\n * @extends PIXI.mesh.Mesh\n * @memberof PIXI.mesh\n *\n */\nvar Rope = function (_Mesh) {\n    _inherits(Rope, _Mesh);\n\n    /**\n     * @param {PIXI.Texture} texture - The texture to use on the rope.\n     * @param {PIXI.Point[]} points - An array of {@link PIXI.Point} objects to construct this rope.\n     */\n    function Rope(texture, points) {\n        _classCallCheck(this, Rope);\n\n        /*\n         * @member {PIXI.Point[]} An array of points that determine the rope\n         */\n        var _this = _possibleConstructorReturn(this, _Mesh.call(this, texture));\n\n        _this.points = points;\n\n        /*\n         * @member {Float32Array} An array of vertices used to construct this rope.\n         */\n        _this.vertices = new Float32Array(points.length * 4);\n\n        /*\n         * @member {Float32Array} The WebGL Uvs of the rope.\n         */\n        _this.uvs = new Float32Array(points.length * 4);\n\n        /*\n         * @member {Float32Array} An array containing the color components\n         */\n        _this.colors = new Float32Array(points.length * 2);\n\n        /*\n         * @member {Uint16Array} An array containing the indices of the vertices\n         */\n        _this.indices = new Uint16Array(points.length * 2);\n\n        /**\n         * Tracker for if the rope is ready to be drawn. Needed because Mesh ctor can\n         * call _onTextureUpdated which could call refresh too early.\n         *\n         * @member {boolean}\n         * @private\n         */\n        _this._ready = true;\n\n        _this.refresh();\n        return _this;\n    }\n\n    /**\n     * Refreshes\n     *\n     */\n\n\n    Rope.prototype.refresh = function refresh() {\n        var points = this.points;\n\n        // if too little points, or texture hasn't got UVs set yet just move on.\n        if (points.length < 1 || !this._texture._uvs) {\n            return;\n        }\n\n        // if the number of points has changed we will need to recreate the arraybuffers\n        if (this.vertices.length / 4 !== points.length) {\n            this.vertices = new Float32Array(points.length * 4);\n            this.uvs = new Float32Array(points.length * 4);\n            this.colors = new Float32Array(points.length * 2);\n            this.indices = new Uint16Array(points.length * 2);\n        }\n\n        var uvs = this.uvs;\n\n        var indices = this.indices;\n        var colors = this.colors;\n\n        var textureUvs = this._texture._uvs;\n        var offset = new core.Point(textureUvs.x0, textureUvs.y0);\n        var factor = new core.Point(textureUvs.x2 - textureUvs.x0, textureUvs.y2 - textureUvs.y0);\n\n        uvs[0] = 0 + offset.x;\n        uvs[1] = 0 + offset.y;\n        uvs[2] = 0 + offset.x;\n        uvs[3] = Number(factor.y) + offset.y;\n\n        colors[0] = 1;\n        colors[1] = 1;\n\n        indices[0] = 0;\n        indices[1] = 1;\n\n        var total = points.length;\n\n        for (var i = 1; i < total; i++) {\n            // time to do some smart drawing!\n            var index = i * 4;\n            var amount = i / (total - 1);\n\n            uvs[index] = amount * factor.x + offset.x;\n            uvs[index + 1] = 0 + offset.y;\n\n            uvs[index + 2] = amount * factor.x + offset.x;\n            uvs[index + 3] = Number(factor.y) + offset.y;\n\n            index = i * 2;\n            colors[index] = 1;\n            colors[index + 1] = 1;\n\n            index = i * 2;\n            indices[index] = index;\n            indices[index + 1] = index + 1;\n        }\n\n        // ensure that the changes are uploaded\n        this.dirty++;\n        this.indexDirty++;\n    };\n\n    /**\n     * Clear texture UVs when new texture is set\n     *\n     * @private\n     */\n\n\n    Rope.prototype._onTextureUpdate = function _onTextureUpdate() {\n        _Mesh.prototype._onTextureUpdate.call(this);\n\n        // wait for the Rope ctor to finish before calling refresh\n        if (this._ready) {\n            this.refresh();\n        }\n    };\n\n    /**\n     * Updates the object transform for rendering\n     *\n     * @private\n     */\n\n\n    Rope.prototype.updateTransform = function updateTransform() {\n        var points = this.points;\n\n        if (points.length < 1) {\n            return;\n        }\n\n        var lastPoint = points[0];\n        var nextPoint = void 0;\n        var perpX = 0;\n        var perpY = 0;\n\n        // this.count -= 0.2;\n\n        var vertices = this.vertices;\n        var total = points.length;\n\n        for (var i = 0; i < total; i++) {\n            var point = points[i];\n            var index = i * 4;\n\n            if (i < points.length - 1) {\n                nextPoint = points[i + 1];\n            } else {\n                nextPoint = point;\n            }\n\n            perpY = -(nextPoint.x - lastPoint.x);\n            perpX = nextPoint.y - lastPoint.y;\n\n            var ratio = (1 - i / (total - 1)) * 10;\n\n            if (ratio > 1) {\n                ratio = 1;\n            }\n\n            var perpLength = Math.sqrt(perpX * perpX + perpY * perpY);\n            var num = this._texture.height / 2; // (20 + Math.abs(Math.sin((i + this.count) * 0.3) * 50) )* ratio;\n\n            perpX /= perpLength;\n            perpY /= perpLength;\n\n            perpX *= num;\n            perpY *= num;\n\n            vertices[index] = point.x + perpX;\n            vertices[index + 1] = point.y + perpY;\n            vertices[index + 2] = point.x - perpX;\n            vertices[index + 3] = point.y - perpY;\n\n            lastPoint = point;\n        }\n\n        this.containerUpdateTransform();\n    };\n\n    return Rope;\n}(_Mesh3.default);\n\nexports.default = Rope;\n//# sourceMappingURL=Rope.js.map\n\n/***/ },\n/* 153 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _Mesh = __webpack_require__(12);\n\nvar _Mesh2 = _interopRequireDefault(_Mesh);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Renderer dedicated to meshes.\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar MeshSpriteRenderer = function () {\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The renderer this downport works for\n     */\n    function MeshSpriteRenderer(renderer) {\n        _classCallCheck(this, MeshSpriteRenderer);\n\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders the Mesh\n     *\n     * @param {PIXI.mesh.Mesh} mesh - the Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype.render = function render(mesh) {\n        var renderer = this.renderer;\n        var context = renderer.context;\n\n        var transform = mesh.worldTransform;\n        var res = renderer.resolution;\n\n        if (renderer.roundPixels) {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res | 0, transform.ty * res | 0);\n        } else {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res, transform.ty * res);\n        }\n\n        renderer.setBlendMode(mesh.blendMode);\n\n        if (mesh.drawMode === _Mesh2.default.DRAW_MODES.TRIANGLE_MESH) {\n            this._renderTriangleMesh(mesh);\n        } else {\n            this._renderTriangles(mesh);\n        }\n    };\n\n    /**\n     * Draws the object in Triangle Mesh mode\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype._renderTriangleMesh = function _renderTriangleMesh(mesh) {\n        // draw triangles!!\n        var length = mesh.vertices.length / 2;\n\n        for (var i = 0; i < length - 2; i++) {\n            // draw some triangles!\n            var index = i * 2;\n\n            this._renderDrawTriangle(mesh, index, index + 2, index + 4);\n        }\n    };\n\n    /**\n     * Draws the object in triangle mode using canvas\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the current mesh\n     */\n\n\n    MeshSpriteRenderer.prototype._renderTriangles = function _renderTriangles(mesh) {\n        // draw triangles!!\n        var indices = mesh.indices;\n        var length = indices.length;\n\n        for (var i = 0; i < length; i += 3) {\n            // draw some triangles!\n            var index0 = indices[i] * 2;\n            var index1 = indices[i + 1] * 2;\n            var index2 = indices[i + 2] * 2;\n\n            this._renderDrawTriangle(mesh, index0, index1, index2);\n        }\n    };\n\n    /**\n     * Draws one of the triangles that from the Mesh\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the current mesh\n     * @param {number} index0 - the index of the first vertex\n     * @param {number} index1 - the index of the second vertex\n     * @param {number} index2 - the index of the third vertex\n     */\n\n\n    MeshSpriteRenderer.prototype._renderDrawTriangle = function _renderDrawTriangle(mesh, index0, index1, index2) {\n        var context = this.renderer.context;\n        var uvs = mesh.uvs;\n        var vertices = mesh.vertices;\n        var texture = mesh._texture;\n\n        if (!texture.valid) {\n            return;\n        }\n\n        var base = texture.baseTexture;\n        var textureSource = base.source;\n        var textureWidth = base.width;\n        var textureHeight = base.height;\n\n        var u0 = uvs[index0] * base.width;\n        var u1 = uvs[index1] * base.width;\n        var u2 = uvs[index2] * base.width;\n        var v0 = uvs[index0 + 1] * base.height;\n        var v1 = uvs[index1 + 1] * base.height;\n        var v2 = uvs[index2 + 1] * base.height;\n\n        var x0 = vertices[index0];\n        var x1 = vertices[index1];\n        var x2 = vertices[index2];\n        var y0 = vertices[index0 + 1];\n        var y1 = vertices[index1 + 1];\n        var y2 = vertices[index2 + 1];\n\n        if (mesh.canvasPadding > 0) {\n            var paddingX = mesh.canvasPadding / mesh.worldTransform.a;\n            var paddingY = mesh.canvasPadding / mesh.worldTransform.d;\n            var centerX = (x0 + x1 + x2) / 3;\n            var centerY = (y0 + y1 + y2) / 3;\n\n            var normX = x0 - centerX;\n            var normY = y0 - centerY;\n\n            var dist = Math.sqrt(normX * normX + normY * normY);\n\n            x0 = centerX + normX / dist * (dist + paddingX);\n            y0 = centerY + normY / dist * (dist + paddingY);\n\n            //\n\n            normX = x1 - centerX;\n            normY = y1 - centerY;\n\n            dist = Math.sqrt(normX * normX + normY * normY);\n            x1 = centerX + normX / dist * (dist + paddingX);\n            y1 = centerY + normY / dist * (dist + paddingY);\n\n            normX = x2 - centerX;\n            normY = y2 - centerY;\n\n            dist = Math.sqrt(normX * normX + normY * normY);\n            x2 = centerX + normX / dist * (dist + paddingX);\n            y2 = centerY + normY / dist * (dist + paddingY);\n        }\n\n        context.save();\n        context.beginPath();\n\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n        context.lineTo(x2, y2);\n\n        context.closePath();\n\n        context.clip();\n\n        // Compute matrix transform\n        var delta = u0 * v1 + v0 * u2 + u1 * v2 - v1 * u2 - v0 * u1 - u0 * v2;\n        var deltaA = x0 * v1 + v0 * x2 + x1 * v2 - v1 * x2 - v0 * x1 - x0 * v2;\n        var deltaB = u0 * x1 + x0 * u2 + u1 * x2 - x1 * u2 - x0 * u1 - u0 * x2;\n        var deltaC = u0 * v1 * x2 + v0 * x1 * u2 + x0 * u1 * v2 - x0 * v1 * u2 - v0 * u1 * x2 - u0 * x1 * v2;\n        var deltaD = y0 * v1 + v0 * y2 + y1 * v2 - v1 * y2 - v0 * y1 - y0 * v2;\n        var deltaE = u0 * y1 + y0 * u2 + u1 * y2 - y1 * u2 - y0 * u1 - u0 * y2;\n        var deltaF = u0 * v1 * y2 + v0 * y1 * u2 + y0 * u1 * v2 - y0 * v1 * u2 - v0 * u1 * y2 - u0 * y1 * v2;\n\n        context.transform(deltaA / delta, deltaD / delta, deltaB / delta, deltaE / delta, deltaC / delta, deltaF / delta);\n\n        context.drawImage(textureSource, 0, 0, textureWidth * base.resolution, textureHeight * base.resolution, 0, 0, textureWidth, textureHeight);\n\n        context.restore();\n    };\n\n    /**\n     * Renders a flat Mesh\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - The Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype.renderMeshFlat = function renderMeshFlat(mesh) {\n        var context = this.renderer.context;\n        var vertices = mesh.vertices;\n        var length = vertices.length / 2;\n\n        // this.count++;\n\n        context.beginPath();\n\n        for (var i = 1; i < length - 2; ++i) {\n            // draw some triangles!\n            var index = i * 2;\n\n            var x0 = vertices[index];\n            var y0 = vertices[index + 1];\n\n            var x1 = vertices[index + 2];\n            var y1 = vertices[index + 3];\n\n            var x2 = vertices[index + 4];\n            var y2 = vertices[index + 5];\n\n            context.moveTo(x0, y0);\n            context.lineTo(x1, y1);\n            context.lineTo(x2, y2);\n        }\n\n        context.fillStyle = '#FF0000';\n        context.fill();\n        context.closePath();\n    };\n\n    /**\n     * destroy the the renderer.\n     *\n     */\n\n\n    MeshSpriteRenderer.prototype.destroy = function destroy() {\n        this.renderer = null;\n    };\n\n    return MeshSpriteRenderer;\n}();\n\nexports.default = MeshSpriteRenderer;\n\n\ncore.CanvasRenderer.registerPlugin('mesh', MeshSpriteRenderer);\n//# sourceMappingURL=CanvasMeshRenderer.js.map\n\n/***/ },\n/* 154 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _pixiGlCore = __webpack_require__(5);\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nvar _Mesh = __webpack_require__(12);\n\nvar _Mesh2 = _interopRequireDefault(_Mesh);\n\nvar _path = __webpack_require__(6);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * WebGL renderer plugin for tiling sprites\n */\nvar MeshRenderer = function (_core$ObjectRenderer) {\n    _inherits(MeshRenderer, _core$ObjectRenderer);\n\n    /**\n     * constructor for renderer\n     *\n     * @param {WebGLRenderer} renderer The renderer this tiling awesomeness works for.\n     */\n    function MeshRenderer(renderer) {\n        _classCallCheck(this, MeshRenderer);\n\n        var _this = _possibleConstructorReturn(this, _core$ObjectRenderer.call(this, renderer));\n\n        _this.shader = null;\n        return _this;\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */\n\n\n    MeshRenderer.prototype.onContextChange = function onContextChange() {\n        var gl = this.renderer.gl;\n\n        this.shader = new core.Shader(gl, 'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 translationMatrix;\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = aTextureCoord;\\n}\\n', 'varying vec2 vTextureCoord;\\nuniform float alpha;\\nuniform vec3 tint;\\n\\nuniform sampler2D uSampler;\\n\\nvoid main(void)\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord) * vec4(tint * alpha, alpha);\\n}\\n');\n    };\n\n    /**\n     * renders mesh\n     *\n     * @param {PIXI.mesh.Mesh} mesh mesh instance\n     */\n\n\n    MeshRenderer.prototype.render = function render(mesh) {\n        var renderer = this.renderer;\n        var gl = renderer.gl;\n        var texture = mesh._texture;\n\n        if (!texture.valid) {\n            return;\n        }\n\n        var glData = mesh._glDatas[renderer.CONTEXT_UID];\n\n        if (!glData) {\n            renderer.bindVao(null);\n\n            glData = {\n                shader: this.shader,\n                vertexBuffer: _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, mesh.vertices, gl.STREAM_DRAW),\n                uvBuffer: _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, mesh.uvs, gl.STREAM_DRAW),\n                indexBuffer: _pixiGlCore2.default.GLBuffer.createIndexBuffer(gl, mesh.indices, gl.STATIC_DRAW),\n                // build the vao object that will render..\n                vao: null,\n                dirty: mesh.dirty,\n                indexDirty: mesh.indexDirty\n            };\n\n            // build the vao object that will render..\n            glData.vao = new _pixiGlCore2.default.VertexArrayObject(gl).addIndex(glData.indexBuffer).addAttribute(glData.vertexBuffer, glData.shader.attributes.aVertexPosition, gl.FLOAT, false, 2 * 4, 0).addAttribute(glData.uvBuffer, glData.shader.attributes.aTextureCoord, gl.FLOAT, false, 2 * 4, 0);\n\n            mesh._glDatas[renderer.CONTEXT_UID] = glData;\n        }\n\n        if (mesh.dirty !== glData.dirty) {\n            glData.dirty = mesh.dirty;\n            glData.uvBuffer.upload(mesh.uvs);\n        }\n\n        if (mesh.indexDirty !== glData.indexDirty) {\n            glData.indexDirty = mesh.indexDirty;\n            glData.indexBuffer.upload(mesh.indices);\n        }\n\n        glData.vertexBuffer.upload(mesh.vertices);\n\n        renderer.bindShader(glData.shader);\n\n        glData.shader.uniforms.uSampler = renderer.bindTexture(texture);\n\n        renderer.state.setBlendMode(mesh.blendMode);\n\n        glData.shader.uniforms.translationMatrix = mesh.worldTransform.toArray(true);\n        glData.shader.uniforms.alpha = mesh.worldAlpha;\n        glData.shader.uniforms.tint = mesh.tintRgb;\n\n        var drawMode = mesh.drawMode === _Mesh2.default.DRAW_MODES.TRIANGLE_MESH ? gl.TRIANGLE_STRIP : gl.TRIANGLES;\n\n        renderer.bindVao(glData.vao);\n        glData.vao.draw(drawMode, mesh.indices.length, 0);\n    };\n\n    return MeshRenderer;\n}(core.ObjectRenderer);\n\nexports.default = MeshRenderer;\n\n\ncore.WebGLRenderer.registerPlugin('mesh', MeshRenderer);\n//# sourceMappingURL=MeshRenderer.js.map\n\n/***/ },\n/* 155 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The ParticleContainer class is a really fast version of the Container built solely for speed,\n * so use when you need a lot of sprites or particles. The tradeoff of the ParticleContainer is that advanced\n * functionality will not work. ParticleContainer implements only the basic object transform (position, scale, rotation).\n * Any other functionality like tinting, masking, etc will not work on sprites in this batch.\n *\n * It's extremely easy to use :\n *\n * ```js\n * let container = new ParticleContainer();\n *\n * for (let i = 0; i < 100; ++i)\n * {\n *     let sprite = new PIXI.Sprite.fromImage(\"myImage.png\");\n *     container.addChild(sprite);\n * }\n * ```\n *\n * And here you have a hundred sprites that will be renderer at the speed of light.\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI.particles\n */\nvar ParticleContainer = function (_core$Container) {\n    _inherits(ParticleContainer, _core$Container);\n\n    /**\n     * @param {number} [maxSize=15000] - The maximum number of particles that can be renderer by the container.\n     * @param {object} [properties] - The properties of children that should be uploaded to the gpu and applied.\n     * @param {boolean} [properties.scale=false] - When true, scale be uploaded and applied.\n     * @param {boolean} [properties.position=true] - When true, position be uploaded and applied.\n     * @param {boolean} [properties.rotation=false] - When true, rotation be uploaded and applied.\n     * @param {boolean} [properties.uvs=false] - When true, uvs be uploaded and applied.\n     * @param {boolean} [properties.alpha=false] - When true, alpha be uploaded and applied.\n     * @param {number} [batchSize=15000] - Number of particles per batch.\n     */\n    function ParticleContainer() {\n        var maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1500;\n        var properties = arguments[1];\n        var batchSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 16384;\n\n        _classCallCheck(this, ParticleContainer);\n\n        // Making sure the batch size is valid\n        // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n        // so max number of particles is 65536 / 4 = 16384\n        var _this = _possibleConstructorReturn(this, _core$Container.call(this));\n\n        var maxBatchSize = 16384;\n\n        if (batchSize > maxBatchSize) {\n            batchSize = maxBatchSize;\n        }\n\n        if (batchSize > maxSize) {\n            batchSize = maxSize;\n        }\n\n        /**\n         * Set properties to be dynamic (true) / static (false)\n         *\n         * @member {boolean[]}\n         * @private\n         */\n        _this._properties = [false, true, false, false, false];\n\n        /**\n         * @member {number}\n         * @private\n         */\n        _this._maxSize = maxSize;\n\n        /**\n         * @member {number}\n         * @private\n         */\n        _this._batchSize = batchSize;\n\n        /**\n         * @member {object<number, WebGLBuffer>}\n         * @private\n         */\n        _this._glBuffers = {};\n\n        /**\n         * @member {number}\n         * @private\n         */\n        _this._bufferToUpdate = 0;\n\n        /**\n         * @member {boolean}\n         *\n         */\n        _this.interactiveChildren = false;\n\n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL`\n         * to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         * @see PIXI.BLEND_MODES\n         */\n        _this.blendMode = core.BLEND_MODES.NORMAL;\n\n        /**\n         * Used for canvas renderering. If true then the elements will be positioned at the\n         * nearest pixel. This provides a nice speed boost.\n         *\n         * @member {boolean}\n         * @default true;\n         */\n        _this.roundPixels = true;\n\n        /**\n         * The texture used to render the children.\n         *\n         * @readonly\n         * @member {BaseTexture}\n         */\n        _this.baseTexture = null;\n\n        _this.setProperties(properties);\n        return _this;\n    }\n\n    /**\n     * Sets the private properties array to dynamic / static based on the passed properties object\n     *\n     * @param {object} properties - The properties to be uploaded\n     */\n\n\n    ParticleContainer.prototype.setProperties = function setProperties(properties) {\n        if (properties) {\n            this._properties[0] = 'scale' in properties ? !!properties.scale : this._properties[0];\n            this._properties[1] = 'position' in properties ? !!properties.position : this._properties[1];\n            this._properties[2] = 'rotation' in properties ? !!properties.rotation : this._properties[2];\n            this._properties[3] = 'uvs' in properties ? !!properties.uvs : this._properties[3];\n            this._properties[4] = 'alpha' in properties ? !!properties.alpha : this._properties[4];\n        }\n    };\n\n    /**\n     * Updates the object transform for rendering\n     *\n     * @private\n     */\n\n\n    ParticleContainer.prototype.updateTransform = function updateTransform() {\n        // TODO don't need to!\n        this.displayObjectUpdateTransform();\n        //  PIXI.Container.prototype.updateTransform.call( this );\n    };\n\n    /**\n     * Renders the container using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The webgl renderer\n     */\n\n\n    ParticleContainer.prototype.renderWebGL = function renderWebGL(renderer) {\n        var _this2 = this;\n\n        if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable) {\n            return;\n        }\n\n        if (!this.baseTexture) {\n            this.baseTexture = this.children[0]._texture.baseTexture;\n            if (!this.baseTexture.hasLoaded) {\n                this.baseTexture.once('update', function () {\n                    return _this2.onChildrenChange(0);\n                });\n            }\n        }\n\n        renderer.setObjectRenderer(renderer.plugins.particle);\n        renderer.plugins.particle.render(this);\n    };\n\n    /**\n     * Set the flag that static data should be updated to true\n     *\n     * @private\n     * @param {number} smallestChildIndex - The smallest child index\n     */\n\n\n    ParticleContainer.prototype.onChildrenChange = function onChildrenChange(smallestChildIndex) {\n        var bufferIndex = Math.floor(smallestChildIndex / this._batchSize);\n\n        if (bufferIndex < this._bufferToUpdate) {\n            this._bufferToUpdate = bufferIndex;\n        }\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer\n     */\n\n\n    ParticleContainer.prototype.renderCanvas = function renderCanvas(renderer) {\n        if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable) {\n            return;\n        }\n\n        var context = renderer.context;\n        var transform = this.worldTransform;\n        var isRotated = true;\n\n        var positionX = 0;\n        var positionY = 0;\n\n        var finalWidth = 0;\n        var finalHeight = 0;\n\n        var compositeOperation = renderer.blendModes[this.blendMode];\n\n        if (compositeOperation !== context.globalCompositeOperation) {\n            context.globalCompositeOperation = compositeOperation;\n        }\n\n        context.globalAlpha = this.worldAlpha;\n\n        this.displayObjectUpdateTransform();\n\n        for (var i = 0; i < this.children.length; ++i) {\n            var child = this.children[i];\n\n            if (!child.visible) {\n                continue;\n            }\n\n            var frame = child.texture.frame;\n\n            context.globalAlpha = this.worldAlpha * child.alpha;\n\n            if (child.rotation % (Math.PI * 2) === 0) {\n                // this is the fastest  way to optimise! - if rotation is 0 then we can avoid any kind of setTransform call\n                if (isRotated) {\n                    context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx * renderer.resolution, transform.ty * renderer.resolution);\n\n                    isRotated = false;\n                }\n\n                positionX = child.anchor.x * (-frame.width * child.scale.x) + child.position.x + 0.5;\n                positionY = child.anchor.y * (-frame.height * child.scale.y) + child.position.y + 0.5;\n\n                finalWidth = frame.width * child.scale.x;\n                finalHeight = frame.height * child.scale.y;\n            } else {\n                if (!isRotated) {\n                    isRotated = true;\n                }\n\n                child.displayObjectUpdateTransform();\n\n                var childTransform = child.worldTransform;\n\n                if (renderer.roundPixels) {\n                    context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx * renderer.resolution | 0, childTransform.ty * renderer.resolution | 0);\n                } else {\n                    context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx * renderer.resolution, childTransform.ty * renderer.resolution);\n                }\n\n                positionX = child.anchor.x * -frame.width + 0.5;\n                positionY = child.anchor.y * -frame.height + 0.5;\n\n                finalWidth = frame.width;\n                finalHeight = frame.height;\n            }\n\n            var resolution = child.texture.baseTexture.resolution;\n\n            context.drawImage(child.texture.baseTexture.source, frame.x * resolution, frame.y * resolution, frame.width * resolution, frame.height * resolution, positionX * resolution, positionY * resolution, finalWidth * resolution, finalHeight * resolution);\n        }\n    };\n\n    /**\n     * Destroys the container\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their\n     *  destroy method called as well. 'options' will be passed on to those calls.\n     */\n\n\n    ParticleContainer.prototype.destroy = function destroy(options) {\n        _core$Container.prototype.destroy.call(this, options);\n\n        if (this._buffers) {\n            for (var i = 0; i < this._buffers.length; ++i) {\n                this._buffers[i].destroy();\n            }\n        }\n\n        this._properties = null;\n        this._buffers = null;\n    };\n\n    return ParticleContainer;\n}(core.Container);\n\nexports.default = ParticleContainer;\n//# sourceMappingURL=ParticleContainer.js.map\n\n/***/ },\n/* 156 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _pixiGlCore = __webpack_require__(5);\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nvar _createIndicesForQuads = __webpack_require__(30);\n\nvar _createIndicesForQuads2 = _interopRequireDefault(_createIndicesForQuads);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that\n * they now share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's ParticleBuffer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleBuffer.java\n */\n\n/**\n * The particle buffer manages the static and dynamic buffers for a particle container.\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar ParticleBuffer = function () {\n    /**\n     * @param {WebGLRenderingContext} gl - The rendering context.\n     * @param {object} properties - The properties to upload.\n     * @param {boolean[]} dynamicPropertyFlags - Flags for which properties are dynamic.\n     * @param {number} size - The size of the batch.\n     */\n    function ParticleBuffer(gl, properties, dynamicPropertyFlags, size) {\n        _classCallCheck(this, ParticleBuffer);\n\n        /**\n         * The current WebGL drawing context.\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        /**\n         * Size of a single vertex.\n         *\n         * @member {number}\n         */\n        this.vertSize = 2;\n\n        /**\n         * Size of a single vertex in bytes.\n         *\n         * @member {number}\n         */\n        this.vertByteSize = this.vertSize * 4;\n\n        /**\n         * The number of particles the buffer can hold\n         *\n         * @member {number}\n         */\n        this.size = size;\n\n        /**\n         * A list of the properties that are dynamic.\n         *\n         * @member {object[]}\n         */\n        this.dynamicProperties = [];\n\n        /**\n         * A list of the properties that are static.\n         *\n         * @member {object[]}\n         */\n        this.staticProperties = [];\n\n        for (var i = 0; i < properties.length; ++i) {\n            var property = properties[i];\n\n            // Make copy of properties object so that when we edit the offset it doesn't\n            // change all other instances of the object literal\n            property = {\n                attribute: property.attribute,\n                size: property.size,\n                uploadFunction: property.uploadFunction,\n                offset: property.offset\n            };\n\n            if (dynamicPropertyFlags[i]) {\n                this.dynamicProperties.push(property);\n            } else {\n                this.staticProperties.push(property);\n            }\n        }\n\n        this.staticStride = 0;\n        this.staticBuffer = null;\n        this.staticData = null;\n\n        this.dynamicStride = 0;\n        this.dynamicBuffer = null;\n        this.dynamicData = null;\n\n        this.initBuffers();\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */\n\n\n    ParticleBuffer.prototype.initBuffers = function initBuffers() {\n        var gl = this.gl;\n        var dynamicOffset = 0;\n\n        /**\n         * Holds the indices of the geometry (quads) to draw\n         *\n         * @member {Uint16Array}\n         */\n        this.indices = (0, _createIndicesForQuads2.default)(this.size);\n        this.indexBuffer = _pixiGlCore2.default.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n        this.dynamicStride = 0;\n\n        for (var i = 0; i < this.dynamicProperties.length; ++i) {\n            var property = this.dynamicProperties[i];\n\n            property.offset = dynamicOffset;\n            dynamicOffset += property.size;\n            this.dynamicStride += property.size;\n        }\n\n        this.dynamicData = new Float32Array(this.size * this.dynamicStride * 4);\n        this.dynamicBuffer = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, this.dynamicData, gl.STREAM_DRAW);\n\n        // static //\n        var staticOffset = 0;\n\n        this.staticStride = 0;\n\n        for (var _i = 0; _i < this.staticProperties.length; ++_i) {\n            var _property = this.staticProperties[_i];\n\n            _property.offset = staticOffset;\n            staticOffset += _property.size;\n            this.staticStride += _property.size;\n        }\n\n        this.staticData = new Float32Array(this.size * this.staticStride * 4);\n        this.staticBuffer = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, this.staticData, gl.STATIC_DRAW);\n\n        this.vao = new _pixiGlCore2.default.VertexArrayObject(gl).addIndex(this.indexBuffer);\n\n        for (var _i2 = 0; _i2 < this.dynamicProperties.length; ++_i2) {\n            var _property2 = this.dynamicProperties[_i2];\n\n            this.vao.addAttribute(this.dynamicBuffer, _property2.attribute, gl.FLOAT, false, this.dynamicStride * 4, _property2.offset * 4);\n        }\n\n        for (var _i3 = 0; _i3 < this.staticProperties.length; ++_i3) {\n            var _property3 = this.staticProperties[_i3];\n\n            this.vao.addAttribute(this.staticBuffer, _property3.attribute, gl.FLOAT, false, this.staticStride * 4, _property3.offset * 4);\n        }\n    };\n\n    /**\n     * Uploads the dynamic properties.\n     *\n     * @param {PIXI.DisplayObject[]} children - The children to upload.\n     * @param {number} startIndex - The index to start at.\n     * @param {number} amount - The number to upload.\n     */\n\n\n    ParticleBuffer.prototype.uploadDynamic = function uploadDynamic(children, startIndex, amount) {\n        for (var i = 0; i < this.dynamicProperties.length; i++) {\n            var property = this.dynamicProperties[i];\n\n            property.uploadFunction(children, startIndex, amount, this.dynamicData, this.dynamicStride, property.offset);\n        }\n\n        this.dynamicBuffer.upload();\n    };\n\n    /**\n     * Uploads the static properties.\n     *\n     * @param {PIXI.DisplayObject[]} children - The children to upload.\n     * @param {number} startIndex - The index to start at.\n     * @param {number} amount - The number to upload.\n     */\n\n\n    ParticleBuffer.prototype.uploadStatic = function uploadStatic(children, startIndex, amount) {\n        for (var i = 0; i < this.staticProperties.length; i++) {\n            var property = this.staticProperties[i];\n\n            property.uploadFunction(children, startIndex, amount, this.staticData, this.staticStride, property.offset);\n        }\n\n        this.staticBuffer.upload();\n    };\n\n    /**\n     * Destroys the ParticleBuffer.\n     *\n     */\n\n\n    ParticleBuffer.prototype.destroy = function destroy() {\n        this.dynamicProperties = null;\n        this.dynamicData = null;\n        this.dynamicBuffer.destroy();\n\n        this.staticProperties = null;\n        this.staticData = null;\n        this.staticBuffer.destroy();\n    };\n\n    return ParticleBuffer;\n}();\n\nexports.default = ParticleBuffer;\n//# sourceMappingURL=ParticleBuffer.js.map\n\n/***/ },\n/* 157 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _ParticleShader = __webpack_require__(158);\n\nvar _ParticleShader2 = _interopRequireDefault(_ParticleShader);\n\nvar _ParticleBuffer = __webpack_require__(156);\n\nvar _ParticleBuffer2 = _interopRequireDefault(_ParticleBuffer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now\n * share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's ParticleRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleRenderer.java\n */\n\n/**\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar ParticleRenderer = function (_core$ObjectRenderer) {\n    _inherits(ParticleRenderer, _core$ObjectRenderer);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\n     */\n    function ParticleRenderer(renderer) {\n        _classCallCheck(this, ParticleRenderer);\n\n        // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n        // so max number of particles is 65536 / 4 = 16384\n        // and max number of element in the index buffer is 16384 * 6 = 98304\n        // Creating a full index buffer, overhead is 98304 * 2 = 196Ko\n        // let numIndices = 98304;\n\n        /**\n         * The default shader that is used if a sprite doesn't have a more specific one.\n         *\n         * @member {PIXI.Shader}\n         */\n        var _this = _possibleConstructorReturn(this, _core$ObjectRenderer.call(this, renderer));\n\n        _this.shader = null;\n\n        _this.indexBuffer = null;\n\n        _this.properties = null;\n\n        _this.tempMatrix = new core.Matrix();\n\n        _this.CONTEXT_UID = 0;\n        return _this;\n    }\n\n    /**\n     * When there is a WebGL context change\n     *\n     * @private\n     */\n\n\n    ParticleRenderer.prototype.onContextChange = function onContextChange() {\n        var gl = this.renderer.gl;\n\n        this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n\n        // setup default shader\n        this.shader = new _ParticleShader2.default(gl);\n\n        this.properties = [\n        // verticesData\n        {\n            attribute: this.shader.attributes.aVertexPosition,\n            size: 2,\n            uploadFunction: this.uploadVertices,\n            offset: 0\n        },\n        // positionData\n        {\n            attribute: this.shader.attributes.aPositionCoord,\n            size: 2,\n            uploadFunction: this.uploadPosition,\n            offset: 0\n        },\n        // rotationData\n        {\n            attribute: this.shader.attributes.aRotation,\n            size: 1,\n            uploadFunction: this.uploadRotation,\n            offset: 0\n        },\n        // uvsData\n        {\n            attribute: this.shader.attributes.aTextureCoord,\n            size: 2,\n            uploadFunction: this.uploadUvs,\n            offset: 0\n        },\n        // alphaData\n        {\n            attribute: this.shader.attributes.aColor,\n            size: 1,\n            uploadFunction: this.uploadAlpha,\n            offset: 0\n        }];\n    };\n\n    /**\n     * Starts a new particle batch.\n     *\n     */\n\n\n    ParticleRenderer.prototype.start = function start() {\n        this.renderer.bindShader(this.shader);\n    };\n\n    /**\n     * Renders the particle container object.\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     */\n\n\n    ParticleRenderer.prototype.render = function render(container) {\n        var children = container.children;\n        var maxSize = container._maxSize;\n        var batchSize = container._batchSize;\n        var renderer = this.renderer;\n        var totalChildren = children.length;\n\n        if (totalChildren === 0) {\n            return;\n        } else if (totalChildren > maxSize) {\n            totalChildren = maxSize;\n        }\n\n        var buffers = container._glBuffers[renderer.CONTEXT_UID];\n\n        if (!buffers) {\n            buffers = container._glBuffers[renderer.CONTEXT_UID] = this.generateBuffers(container);\n        }\n\n        // if the uvs have not updated then no point rendering just yet!\n        this.renderer.setBlendMode(container.blendMode);\n\n        var gl = renderer.gl;\n\n        var m = container.worldTransform.copy(this.tempMatrix);\n\n        m.prepend(renderer._activeRenderTarget.projectionMatrix);\n\n        this.shader.uniforms.projectionMatrix = m.toArray(true);\n        this.shader.uniforms.uAlpha = container.worldAlpha;\n\n        // make sure the texture is bound..\n        var baseTexture = children[0]._texture.baseTexture;\n\n        this.shader.uniforms.uSampler = renderer.bindTexture(baseTexture);\n\n        // now lets upload and render the buffers..\n        for (var i = 0, j = 0; i < totalChildren; i += batchSize, j += 1) {\n            var amount = totalChildren - i;\n\n            if (amount > batchSize) {\n                amount = batchSize;\n            }\n\n            var buffer = buffers[j];\n\n            // we always upload the dynamic\n            buffer.uploadDynamic(children, i, amount);\n\n            // we only upload the static content when we have to!\n            if (container._bufferToUpdate === j) {\n                buffer.uploadStatic(children, i, amount);\n                container._bufferToUpdate = j + 1;\n            }\n\n            // bind the buffer\n            renderer.bindVao(buffer.vao);\n            buffer.vao.draw(gl.TRIANGLES, amount * 6);\n        }\n    };\n\n    /**\n     * Creates one particle buffer for each child in the container we want to render and updates internal properties\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     * @return {PIXI.ParticleBuffer[]} The buffers\n     */\n\n\n    ParticleRenderer.prototype.generateBuffers = function generateBuffers(container) {\n        var gl = this.renderer.gl;\n        var buffers = [];\n        var size = container._maxSize;\n        var batchSize = container._batchSize;\n        var dynamicPropertyFlags = container._properties;\n\n        for (var i = 0; i < size; i += batchSize) {\n            buffers.push(new _ParticleBuffer2.default(gl, this.properties, dynamicPropertyFlags, batchSize));\n        }\n\n        return buffers;\n    };\n\n    /**\n     * Uploads the verticies.\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their vertices uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadVertices = function uploadVertices(children, startIndex, amount, array, stride, offset) {\n        var w0 = 0;\n        var w1 = 0;\n        var h0 = 0;\n        var h1 = 0;\n\n        for (var i = 0; i < amount; ++i) {\n            var sprite = children[startIndex + i];\n            var texture = sprite._texture;\n            var sx = sprite.scale.x;\n            var sy = sprite.scale.y;\n            var trim = texture.trim;\n            var orig = texture.orig;\n\n            if (trim) {\n                // if the sprite is trimmed and is not a tilingsprite then we need to add the\n                // extra space before transforming the sprite coords..\n                w1 = trim.x - sprite.anchor.x * orig.width;\n                w0 = w1 + trim.width;\n\n                h1 = trim.y - sprite.anchor.y * orig.height;\n                h0 = h1 + trim.height;\n            } else {\n                w0 = orig.width * (1 - sprite.anchor.x);\n                w1 = orig.width * -sprite.anchor.x;\n\n                h0 = orig.height * (1 - sprite.anchor.y);\n                h1 = orig.height * -sprite.anchor.y;\n            }\n\n            array[offset] = w1 * sx;\n            array[offset + 1] = h1 * sy;\n\n            array[offset + stride] = w0 * sx;\n            array[offset + stride + 1] = h1 * sy;\n\n            array[offset + stride * 2] = w0 * sx;\n            array[offset + stride * 2 + 1] = h0 * sy;\n\n            array[offset + stride * 3] = w1 * sx;\n            array[offset + stride * 3 + 1] = h0 * sy;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their positions uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadPosition = function uploadPosition(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; i++) {\n            var spritePosition = children[startIndex + i].position;\n\n            array[offset] = spritePosition.x;\n            array[offset + 1] = spritePosition.y;\n\n            array[offset + stride] = spritePosition.x;\n            array[offset + stride + 1] = spritePosition.y;\n\n            array[offset + stride * 2] = spritePosition.x;\n            array[offset + stride * 2 + 1] = spritePosition.y;\n\n            array[offset + stride * 3] = spritePosition.x;\n            array[offset + stride * 3 + 1] = spritePosition.y;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadRotation = function uploadRotation(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; i++) {\n            var spriteRotation = children[startIndex + i].rotation;\n\n            array[offset] = spriteRotation;\n            array[offset + stride] = spriteRotation;\n            array[offset + stride * 2] = spriteRotation;\n            array[offset + stride * 3] = spriteRotation;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadUvs = function uploadUvs(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; ++i) {\n            var textureUvs = children[startIndex + i]._texture._uvs;\n\n            if (textureUvs) {\n                array[offset] = textureUvs.x0;\n                array[offset + 1] = textureUvs.y0;\n\n                array[offset + stride] = textureUvs.x1;\n                array[offset + stride + 1] = textureUvs.y1;\n\n                array[offset + stride * 2] = textureUvs.x2;\n                array[offset + stride * 2 + 1] = textureUvs.y2;\n\n                array[offset + stride * 3] = textureUvs.x3;\n                array[offset + stride * 3 + 1] = textureUvs.y3;\n\n                offset += stride * 4;\n            } else {\n                // TODO you know this can be easier!\n                array[offset] = 0;\n                array[offset + 1] = 0;\n\n                array[offset + stride] = 0;\n                array[offset + stride + 1] = 0;\n\n                array[offset + stride * 2] = 0;\n                array[offset + stride * 2 + 1] = 0;\n\n                array[offset + stride * 3] = 0;\n                array[offset + stride * 3 + 1] = 0;\n\n                offset += stride * 4;\n            }\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadAlpha = function uploadAlpha(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; i++) {\n            var spriteAlpha = children[startIndex + i].alpha;\n\n            array[offset] = spriteAlpha;\n            array[offset + stride] = spriteAlpha;\n            array[offset + stride * 2] = spriteAlpha;\n            array[offset + stride * 3] = spriteAlpha;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     * Destroys the ParticleRenderer.\n     *\n     */\n\n\n    ParticleRenderer.prototype.destroy = function destroy() {\n        if (this.renderer.gl) {\n            this.renderer.gl.deleteBuffer(this.indexBuffer);\n        }\n\n        _core$ObjectRenderer.prototype.destroy.call(this);\n\n        this.shader.destroy();\n\n        this.indices = null;\n        this.tempMatrix = null;\n    };\n\n    return ParticleRenderer;\n}(core.ObjectRenderer);\n\nexports.default = ParticleRenderer;\n\n\ncore.WebGLRenderer.registerPlugin('particle', ParticleRenderer);\n//# sourceMappingURL=ParticleRenderer.js.map\n\n/***/ },\n/* 158 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _Shader2 = __webpack_require__(8);\n\nvar _Shader3 = _interopRequireDefault(_Shader2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @class\n * @extends PIXI.Shader\n * @memberof PIXI\n */\nvar ParticleShader = function (_Shader) {\n    _inherits(ParticleShader, _Shader);\n\n    /**\n     * @param {PIXI.Shader} gl - The webgl shader manager this shader works for.\n     */\n    function ParticleShader(gl) {\n        _classCallCheck(this, ParticleShader);\n\n        return _possibleConstructorReturn(this, _Shader.call(this, gl,\n        // vertex shader\n        ['attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'attribute float aColor;', 'attribute vec2 aPositionCoord;', 'attribute vec2 aScale;', 'attribute float aRotation;', 'uniform mat3 projectionMatrix;', 'varying vec2 vTextureCoord;', 'varying float vColor;', 'void main(void){', '   vec2 v = aVertexPosition;', '   v.x = (aVertexPosition.x) * cos(aRotation) - (aVertexPosition.y) * sin(aRotation);', '   v.y = (aVertexPosition.x) * sin(aRotation) + (aVertexPosition.y) * cos(aRotation);', '   v = v + aPositionCoord;', '   gl_Position = vec4((projectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);', '   vTextureCoord = aTextureCoord;', '   vColor = aColor;', '}'].join('\\n'),\n        // hello\n        ['varying vec2 vTextureCoord;', 'varying float vColor;', 'uniform sampler2D uSampler;', 'uniform float uAlpha;', 'void main(void){', '  vec4 color = texture2D(uSampler, vTextureCoord) * vColor * uAlpha;', '  if (color.a == 0.0) discard;', '  gl_FragColor = color;', '}'].join('\\n')));\n    }\n\n    return ParticleShader;\n}(_Shader3.default);\n\nexports.default = ParticleShader;\n//# sourceMappingURL=ParticleShader.js.map\n\n/***/ },\n/* 159 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\n// References:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\nif (!Math.sign) {\n    Math.sign = function mathSign(x) {\n        x = Number(x);\n\n        if (x === 0 || isNaN(x)) {\n            return x;\n        }\n\n        return x > 0 ? 1 : -1;\n    };\n}\n//# sourceMappingURL=Math.sign.js.map\n\n/***/ },\n/* 160 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _objectAssign = __webpack_require__(167);\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (!Object.assign) {\n    Object.assign = _objectAssign2.default;\n} // References:\n// https://github.com/sindresorhus/object-assign\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n//# sourceMappingURL=Object.assign.js.map\n\n/***/ },\n/* 161 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n__webpack_require__(160);\n\n__webpack_require__(162);\n\n__webpack_require__(159);\n\nif (!window.ArrayBuffer) {\n    window.ArrayBuffer = Array;\n}\n\nif (!window.Float32Array) {\n    window.Float32Array = Array;\n}\n\nif (!window.Uint32Array) {\n    window.Uint32Array = Array;\n}\n\nif (!window.Uint16Array) {\n    window.Uint16Array = Array;\n}\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 162 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n// References:\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// https://gist.github.com/1579671\n// http://updates.html5rocks.com/2012/05/requestAnimationFrame-API-now-with-sub-millisecond-precision\n// https://gist.github.com/timhall/4078614\n// https://github.com/Financial-Times/polyfill-service/tree/master/polyfills/requestAnimationFrame\n\n// Expected to be used with Browserfiy\n// Browserify automatically detects the use of `global` and passes the\n// correct reference of `global`, `self`, and finally `window`\n\nvar ONE_FRAME_TIME = 16;\n\n// Date.now\nif (!(Date.now && Date.prototype.getTime)) {\n    Date.now = function now() {\n        return new Date().getTime();\n    };\n}\n\n// performance.now\nif (!(global.performance && global.performance.now)) {\n    (function () {\n        var startTime = Date.now();\n\n        if (!global.performance) {\n            global.performance = {};\n        }\n\n        global.performance.now = function () {\n            return Date.now() - startTime;\n        };\n    })();\n}\n\n// requestAnimationFrame\nvar lastTime = Date.now();\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\nfor (var x = 0; x < vendors.length && !global.requestAnimationFrame; ++x) {\n    var p = vendors[x];\n\n    global.requestAnimationFrame = global[p + 'RequestAnimationFrame'];\n    global.cancelAnimationFrame = global[p + 'CancelAnimationFrame'] || global[p + 'CancelRequestAnimationFrame'];\n}\n\nif (!global.requestAnimationFrame) {\n    global.requestAnimationFrame = function (callback) {\n        if (typeof callback !== 'function') {\n            throw new TypeError(callback + 'is not a function');\n        }\n\n        var currentTime = Date.now();\n        var delay = ONE_FRAME_TIME + lastTime - currentTime;\n\n        if (delay < 0) {\n            delay = 0;\n        }\n\n        lastTime = currentTime;\n\n        return setTimeout(function () {\n            lastTime = Date.now();\n            callback(performance.now());\n        }, delay);\n    };\n}\n\nif (!global.cancelAnimationFrame) {\n    global.cancelAnimationFrame = function (id) {\n        return clearTimeout(id);\n    };\n}\n//# sourceMappingURL=requestAnimationFrame.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))\n\n/***/ },\n/* 163 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _BasePrepare2 = __webpack_require__(32);\n\nvar _BasePrepare3 = _interopRequireDefault(_BasePrepare2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CANVAS_START_SIZE = 16;\n\n/**\n * The prepare manager provides functionality to upload content to the GPU\n * This cannot be done directly for Canvas like in WebGL, but the effect can be achieved by drawing\n * textures to an offline canvas.\n * This draw call will force the texture to be moved onto the GPU.\n *\n * @class\n * @memberof PIXI\n */\n\nvar CanvasPrepare = function (_BasePrepare) {\n    _inherits(CanvasPrepare, _BasePrepare);\n\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - A reference to the current renderer\n     */\n    function CanvasPrepare(renderer) {\n        _classCallCheck(this, CanvasPrepare);\n\n        var _this = _possibleConstructorReturn(this, _BasePrepare.call(this, renderer));\n\n        _this.uploadHookHelper = _this;\n\n        /**\n        * An offline canvas to render textures to\n        * @type {HTMLCanvasElement}\n        * @private\n        */\n        _this.canvas = document.createElement('canvas');\n        _this.canvas.width = CANVAS_START_SIZE;\n        _this.canvas.height = CANVAS_START_SIZE;\n\n        /**\n         * The context to the canvas\n        * @type {CanvasRenderingContext2D}\n        * @private\n        */\n        _this.ctx = _this.canvas.getContext('2d');\n\n        // Add textures to upload\n        _this.register(findBaseTextures, uploadBaseTextures);\n        return _this;\n    }\n\n    /**\n     * Destroys the plugin, don't use after this.\n     *\n     */\n\n\n    CanvasPrepare.prototype.destroy = function destroy() {\n        _BasePrepare.prototype.destroy.call(this);\n        this.ctx = null;\n        this.canvas = null;\n    };\n\n    return CanvasPrepare;\n}(_BasePrepare3.default);\n\n/**\n * Built-in hook to upload PIXI.Texture objects to the GPU.\n *\n * @private\n * @param {*} prepare - Instance of CanvasPrepare\n * @param {*} item - Item to check\n * @return {boolean} If item was uploaded.\n */\n\n\nexports.default = CanvasPrepare;\nfunction uploadBaseTextures(prepare, item) {\n    if (item instanceof core.BaseTexture) {\n        var image = item.source;\n\n        // Sometimes images (like atlas images) report a size of zero, causing errors on windows phone.\n        // So if the width or height is equal to zero then use the canvas size\n        // Otherwise use whatever is smaller, the image dimensions or the canvas dimensions.\n        var imageWidth = image.width === 0 ? prepare.canvas.width : Math.min(prepare.canvas.width, image.width);\n        var imageHeight = image.height === 0 ? prepare.canvas.height : Math.min(prepare.canvas.height, image.height);\n\n        // Only a small subsections is required to be drawn to have the whole texture uploaded to the GPU\n        // A smaller draw can be faster.\n        prepare.ctx.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, prepare.canvas.width, prepare.canvas.height);\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find textures from Sprites.\n *\n * @private\n * @param {PIXI.DisplayObject} item  -Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Texture object was found.\n */\nfunction findBaseTextures(item, queue) {\n    // Objects with textures, like Sprites/Text\n    if (item instanceof core.BaseTexture) {\n        if (queue.indexOf(item) === -1) {\n            queue.push(item);\n        }\n\n        return true;\n    } else if (item._texture && item._texture instanceof core.Texture) {\n        var texture = item._texture.baseTexture;\n\n        if (queue.indexOf(texture) === -1) {\n            queue.push(texture);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\ncore.CanvasRenderer.registerPlugin('prepare', CanvasPrepare);\n//# sourceMappingURL=CanvasPrepare.js.map\n\n/***/ },\n/* 164 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * TimeLimiter limits the number of items handled by a {@link PIXI.BasePrepare} to a specified\n * number of milliseconds per frame.\n *\n * @class\n * @memberof PIXI\n */\nvar TimeLimiter = function () {\n  /**\n   * @param {number} maxMilliseconds - The maximum milliseconds that can be spent preparing items each frame.\n   */\n  function TimeLimiter(maxMilliseconds) {\n    _classCallCheck(this, TimeLimiter);\n\n    /**\n     * The maximum milliseconds that can be spent preparing items each frame.\n     * @private\n     */\n    this.maxMilliseconds = maxMilliseconds;\n    /**\n     * The start time of the current frame.\n     * @type {number}\n     * @private\n     */\n    this.frameStart = 0;\n  }\n\n  /**\n   * Resets any counting properties to start fresh on a new frame.\n   */\n\n\n  TimeLimiter.prototype.beginFrame = function beginFrame() {\n    this.frameStart = Date.now();\n  };\n\n  /**\n   * Checks to see if another item can be uploaded. This should only be called once per item.\n   * @return {boolean} If the item is allowed to be uploaded.\n   */\n\n\n  TimeLimiter.prototype.allowedToUpload = function allowedToUpload() {\n    return Date.now() - this.frameStart < this.maxMilliseconds;\n  };\n\n  return TimeLimiter;\n}();\n\nexports.default = TimeLimiter;\n//# sourceMappingURL=TimeLimiter.js.map\n\n/***/ },\n/* 165 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _core = __webpack_require__(0);\n\nvar core = _interopRequireWildcard(_core);\n\nvar _BasePrepare2 = __webpack_require__(32);\n\nvar _BasePrepare3 = _interopRequireDefault(_BasePrepare2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The prepare manager provides functionality to upload content to the GPU.\n *\n * @class\n * @memberof PIXI\n */\nvar WebGLPrepare = function (_BasePrepare) {\n    _inherits(WebGLPrepare, _BasePrepare);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    function WebGLPrepare(renderer) {\n        _classCallCheck(this, WebGLPrepare);\n\n        var _this = _possibleConstructorReturn(this, _BasePrepare.call(this, renderer));\n\n        _this.uploadHookHelper = _this.renderer;\n\n        // Add textures and graphics to upload\n        _this.register(findBaseTextures, uploadBaseTextures).register(findGraphics, uploadGraphics);\n        return _this;\n    }\n\n    return WebGLPrepare;\n}(_BasePrepare3.default);\n\n/**\n * Built-in hook to upload PIXI.Texture objects to the GPU.\n *\n * @private\n * @param {PIXI.WebGLRenderer} renderer - instance of the webgl renderer\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\n\n\nexports.default = WebGLPrepare;\nfunction uploadBaseTextures(renderer, item) {\n    if (item instanceof core.BaseTexture) {\n        // if the texture already has a GL texture, then the texture has been prepared or rendered\n        // before now. If the texture changed, then the changer should be calling texture.update() which\n        // reuploads the texture without need for preparing it again\n        if (!item._glTextures[renderer.CONTEXT_UID]) {\n            renderer.textureManager.updateTexture(item);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to upload PIXI.Graphics to the GPU.\n *\n * @private\n * @param {PIXI.WebGLRenderer} renderer - instance of the webgl renderer\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\nfunction uploadGraphics(renderer, item) {\n    if (item instanceof core.Graphics) {\n        // if the item is not dirty and already has webgl data, then it got prepared or rendered\n        // before now and we shouldn't waste time updating it again\n        if (item.dirty || item.clearDirty || !item._webGL[renderer.plugins.graphics.CONTEXT_UID]) {\n            renderer.plugins.graphics.updateGraphics(item);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find textures from Sprites.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Texture object was found.\n */\nfunction findBaseTextures(item, queue) {\n    // Objects with textures, like Sprites/Text\n    if (item instanceof core.BaseTexture) {\n        if (queue.indexOf(item) === -1) {\n            queue.push(item);\n        }\n\n        return true;\n    } else if (item._texture && item._texture instanceof core.Texture) {\n        var texture = item._texture.baseTexture;\n\n        if (queue.indexOf(texture) === -1) {\n            queue.push(texture);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find graphics.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Graphics object was found.\n */\nfunction findGraphics(item, queue) {\n    if (item instanceof core.Graphics) {\n        queue.push(item);\n\n        return true;\n    }\n\n    return false;\n}\n\ncore.WebGLRenderer.registerPlugin('prepare', WebGLPrepare);\n//# sourceMappingURL=WebGLPrepare.js.map\n\n/***/ },\n/* 166 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.2';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      value = Object(value);\n      return (symToStringTag && symToStringTag in value)\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      object = Object(object);\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(82)(module)))\n\n/***/ },\n/* 167 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ },\n/* 168 */\n/***/ function(module, exports) {\n\nvar EMPTY_ARRAY_BUFFER = new ArrayBuffer(0);\n\n/**\n * Helper class to create a webGL buffer\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param type {gl.ARRAY_BUFFER | gl.ELEMENT_ARRAY_BUFFER} @mat\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\n * @param drawType {gl.STATIC_DRAW|gl.DYNAMIC_DRAW|gl.STREAM_DRAW}\n */\nvar Buffer = function(gl, type, data, drawType)\n{\n\n\t/**\n     * The current WebGL rendering context\n     *\n     * @member {WebGLRenderingContext}\n     */\n\tthis.gl = gl;\n\n\t/**\n     * The WebGL buffer, created upon instantiation\n     *\n     * @member {WebGLBuffer}\n     */\n\tthis.buffer = gl.createBuffer(); \n\n\t/**\n     * The type of the buffer\n     *\n     * @member {gl.ARRAY_BUFFER|gl.ELEMENT_ARRAY_BUFFER}\n     */\n\tthis.type = type || gl.ARRAY_BUFFER;\n\n\t/**\n     * The draw type of the buffer\n     *\n     * @member {gl.STATIC_DRAW|gl.DYNAMIC_DRAW|gl.STREAM_DRAW}\n     */\n\tthis.drawType = drawType || gl.STATIC_DRAW;\n\n\t/**\n     * The data in the buffer, as a typed array\n     *\n     * @member {ArrayBuffer| SharedArrayBuffer|ArrayBufferView}\n     */\n\tthis.data = EMPTY_ARRAY_BUFFER;\n\n\tif(data)\n\t{\n\t\tthis.upload(data);\n\t}\n};\n\n/**\n * Uploads the buffer to the GPU\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data to upload\n * @param offset {Number} if only a subset of the data should be uploaded, this is the amount of data to subtract\n * @param dontBind {Boolean} whether to bind the buffer before uploading it\n */\nBuffer.prototype.upload = function(data, offset, dontBind)\n{\n\t// todo - needed?\n\tif(!dontBind) this.bind();\n\n\tvar gl = this.gl;\n\n\tdata = data || this.data;\n\toffset = offset || 0;\n\n\tif(this.data.byteLength >= data.byteLength)\n\t{\n\t\tgl.bufferSubData(this.type, offset, data);\n\t}\n\telse\n\t{\n\t\tgl.bufferData(this.type, data, this.drawType);\n\t}\n\n\tthis.data = data;\n};\n/**\n * Binds the buffer\n *\n */\nBuffer.prototype.bind = function()\n{\n\tvar gl = this.gl;\n\tgl.bindBuffer(this.type, this.buffer);\n};\n\nBuffer.createVertexBuffer = function(gl, data, drawType)\n{\n\treturn new Buffer(gl, gl.ARRAY_BUFFER, data, drawType);\n};\n\nBuffer.createIndexBuffer = function(gl, data, drawType)\n{\n\treturn new Buffer(gl, gl.ELEMENT_ARRAY_BUFFER, data, drawType);\n};\n\nBuffer.create = function(gl, type, data, drawType)\n{\n\treturn new Buffer(gl, type, data, drawType);\n};\n\n/**\n * Destroys the buffer\n *\n */\nBuffer.prototype.destroy = function(){\n\tthis.gl.deleteBuffer(this.buffer);\n};\n\nmodule.exports = Buffer;\n\n\n/***/ },\n/* 169 */\n/***/ function(module, exports, __webpack_require__) {\n\n\nvar Texture = __webpack_require__(73);\n\n/**\n * Helper class to create a webGL Framebuffer\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param width {Number} the width of the drawing area of the frame buffer\n * @param height {Number} the height of the drawing area of the frame buffer\n */\nvar Framebuffer = function(gl, width, height)\n{\n    /**\n     * The current WebGL rendering context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    /**\n     * The frame buffer\n     *\n     * @member {WebGLFramebuffer}\n     */\n    this.framebuffer = gl.createFramebuffer();\n\n    /**\n     * The stencil buffer\n     *\n     * @member {WebGLRenderbuffer}\n     */\n    this.stencil = null;\n\n    /**\n     * The stencil buffer\n     *\n     * @member {PIXI.glCore.GLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * The width of the drawing area of the buffer\n     *\n     * @member {Number}\n     */\n    this.width = width || 100;\n    /**\n     * The height of the drawing area of the buffer\n     *\n     * @member {Number}\n     */\n    this.height = height || 100;\n};\n\n/**\n * Adds a texture to the frame buffer\n * @param texture {PIXI.glCore.GLTexture}\n */\nFramebuffer.prototype.enableTexture = function(texture)\n{\n    var gl = this.gl;\n\n    this.texture = texture || new Texture(gl);\n\n    this.texture.bind();\n\n    //gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,  this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n    this.bind();\n\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n};\n\n/**\n * Initialises the stencil buffer\n */\nFramebuffer.prototype.enableStencil = function()\n{\n    if(this.stencil)return;\n\n    var gl = this.gl;\n\n    this.stencil = gl.createRenderbuffer();\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.stencil);\n\n    // TODO.. this is depth AND stencil?\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, this.stencil);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL,  this.width  , this.height );\n};\n\n/**\n * Erases the drawing area and fills it with a colour\n * @param  r {Number} the red value of the clearing colour\n * @param  g {Number} the green value of the clearing colour\n * @param  b {Number} the blue value of the clearing colour\n * @param  a {Number} the alpha value of the clearing colour\n */\nFramebuffer.prototype.clear = function( r, g, b, a )\n{\n    this.bind();\n\n    var gl = this.gl;\n\n    gl.clearColor(r, g, b, a);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n};\n\n/**\n * Binds the frame buffer to the WebGL context\n */\nFramebuffer.prototype.bind = function()\n{\n    var gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer );\n};\n\n/**\n * Unbinds the frame buffer to the WebGL context\n */\nFramebuffer.prototype.unbind = function()\n{\n    var gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null );\n};\n/**\n * Resizes the drawing area of the buffer to the given width and height\n * @param  width  {Number} the new width\n * @param  height {Number} the new height\n */\nFramebuffer.prototype.resize = function(width, height)\n{\n    var gl = this.gl;\n\n    this.width = width;\n    this.height = height;\n\n    if ( this.texture )\n    {\n        this.texture.uploadData(null, width, height);\n    }\n\n    if ( this.stencil )\n    {\n        // update the stencil buffer width and height\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this.stencil);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, width, height);\n    }\n};\n\n/**\n * Destroys this buffer\n */\nFramebuffer.prototype.destroy = function()\n{\n    var gl = this.gl;\n\n    //TODO\n    if(this.texture)\n    {\n        this.texture.destroy();\n    }\n\n    gl.deleteFramebuffer(this.framebuffer);\n\n    this.gl = null;\n\n    this.stencil = null;\n    this.texture = null;\n};\n\n/**\n * Creates a frame buffer with a texture containing the given data\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param width {Number} the width of the drawing area of the frame buffer\n * @param height {Number} the height of the drawing area of the frame buffer\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\n */\nFramebuffer.createRGBA = function(gl, width, height, data)\n{\n    var texture = Texture.fromData(gl, null, width, height);\n    texture.enableNearestScaling();\n    texture.enableWrapClamp();\n\n    //now create the framebuffer object and attach the texture to it.\n    var fbo = new Framebuffer(gl, width, height);\n    fbo.enableTexture(texture);\n\n    fbo.unbind();\n\n    return fbo;\n};\n\n/**\n * Creates a frame buffer with a texture containing the given data\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param width {Number} the width of the drawing area of the frame buffer\n * @param height {Number} the height of the drawing area of the frame buffer\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\n */\nFramebuffer.createFloat32 = function(gl, width, height, data)\n{\n    // create a new texture..\n    var texture = new Texture.fromData(gl, data, width, height);\n    texture.enableNearestScaling();\n    texture.enableWrapClamp();\n\n    //now create the framebuffer object and attach the texture to it.\n    var fbo = new Framebuffer(gl, width, height);\n    fbo.enableTexture(texture);\n\n    fbo.unbind();\n\n    return fbo;\n};\n\nmodule.exports = Framebuffer;\n\n\n/***/ },\n/* 170 */\n/***/ function(module, exports, __webpack_require__) {\n\n\nvar compileProgram = __webpack_require__(75),\n\textractAttributes = __webpack_require__(77),\n\textractUniforms = __webpack_require__(78),\n\tgenerateUniformAccessObject = __webpack_require__(79);\n\n/**\n * Helper class to create a webGL Shader\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n */\nvar Shader = function(gl, vertexSrc, fragmentSrc)\n{\n\t/**\n\t * The current WebGL rendering context\n\t *\n\t * @member {WebGLRenderingContext}\n\t */\n\tthis.gl = gl;\n\n\t/**\n\t * The shader program\n\t *\n\t * @member {WebGLProgram}\n\t */\n\t// First compile the program..\n\tthis.program = compileProgram(gl, vertexSrc, fragmentSrc);\n\n\n\t/**\n\t * The attributes of the shader as an object containing the following properties\n\t * {\n\t * \ttype,\n\t * \tsize,\n\t * \tlocation,\n\t * \tpointer\n\t * }\n\t * @member {Object}\n\t */\n\t// next extract the attributes\n\tthis.attributes = extractAttributes(gl, this.program);\n\n    var uniformData = extractUniforms(gl, this.program);\n\n\t/**\n\t * The uniforms of the shader as an object containing the following properties\n\t * {\n\t * \tgl,\n\t * \tdata\n\t * }\n\t * @member {Object}\n\t */\n    this.uniforms = generateUniformAccessObject( gl, uniformData );\n};\n/**\n * Uses this shader\n */\nShader.prototype.bind = function()\n{\n\tthis.gl.useProgram(this.program);\n};\n\n/**\n * Destroys this shader\n * TODO\n */\nShader.prototype.destroy = function()\n{\n\t// var gl = this.gl;\n};\n\nmodule.exports = Shader;\n\n\n/***/ },\n/* 171 */\n/***/ function(module, exports, __webpack_require__) {\n\n\n// state object//\nvar setVertexAttribArrays = __webpack_require__( 74 );\n\n/**\n * Helper class to work with WebGL VertexArrayObjects (vaos)\n * Only works if WebGL extensions are enabled (they usually are)\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n */\nfunction VertexArrayObject(gl, state)\n{\n    this.nativeVaoExtension = null;\n\n    if(!VertexArrayObject.FORCE_NATIVE)\n    {\n        this.nativeVaoExtension = gl.getExtension('OES_vertex_array_object') ||\n                                  gl.getExtension('MOZ_OES_vertex_array_object') ||\n                                  gl.getExtension('WEBKIT_OES_vertex_array_object');\n    }\n\n    this.nativeState = state;\n\n    if(this.nativeVaoExtension)\n    {\n        this.nativeVao = this.nativeVaoExtension.createVertexArrayOES();\n\n        var maxAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n        // VAO - overwrite the state..\n        this.nativeState = {\n            tempAttribState: new Array(maxAttribs),\n            attribState: new Array(maxAttribs)\n        };\n    }\n\n    /**\n     * The current WebGL rendering context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    /**\n     * An array of attributes\n     *\n     * @member {Array}\n     */\n    this.attributes = [];\n\n    /**\n     * @member {PIXI.glCore.GLBuffer}\n     */\n    this.indexBuffer = null;\n\n    /**\n     * A boolean flag\n     *\n     * @member {Boolean}\n     */\n    this.dirty = false;\n}\n\nVertexArrayObject.prototype.constructor = VertexArrayObject;\nmodule.exports = VertexArrayObject;\n\n/**\n* Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\n* If you find on older devices that things have gone a bit weird then set this to true.\n*/\n/**\n * Lets the VAO know if you should use the WebGL extension or the native methods.\n * Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\n * If you find on older devices that things have gone a bit weird then set this to true.\n * @static\n * @property {Boolean} FORCE_NATIVE\n */\nVertexArrayObject.FORCE_NATIVE = false;\n\n/**\n * Binds the buffer\n */\nVertexArrayObject.prototype.bind = function()\n{\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\n\n        if(this.dirty)\n        {\n            this.dirty = false;\n            this.activate();\n        }\n    }\n    else\n    {\n\n        this.activate();\n    }\n\n    return this;\n};\n\n/**\n * Unbinds the buffer\n */\nVertexArrayObject.prototype.unbind = function()\n{\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(null);\n    }\n\n    return this;\n};\n\n/**\n * Uses this vao\n */\nVertexArrayObject.prototype.activate = function()\n{\n\n    var gl = this.gl;\n    var lastBuffer = null;\n\n    for (var i = 0; i < this.attributes.length; i++)\n    {\n        var attrib = this.attributes[i];\n\n        if(lastBuffer !== attrib.buffer)\n        {\n            attrib.buffer.bind();\n            lastBuffer = attrib.buffer;\n        }\n\n        //attrib.attribute.pointer(attrib.type, attrib.normalized, attrib.stride, attrib.start);\n        gl.vertexAttribPointer(attrib.attribute.location,\n                               attrib.attribute.size, attrib.type || gl.FLOAT,\n                               attrib.normalized || false,\n                               attrib.stride || 0,\n                               attrib.start || 0);\n\n\n    }\n\n    setVertexAttribArrays(gl, this.attributes, this.nativeState);\n\n    this.indexBuffer.bind();\n\n    return this;\n};\n\n/**\n *\n * @param buffer     {PIXI.gl.GLBuffer}\n * @param attribute  {*}\n * @param type       {String}\n * @param normalized {Boolean}\n * @param stride     {Number}\n * @param start      {Number}\n */\nVertexArrayObject.prototype.addAttribute = function(buffer, attribute, type, normalized, stride, start)\n{\n    this.attributes.push({\n        buffer:     buffer,\n        attribute:  attribute,\n\n        location:   attribute.location,\n        type:       type || this.gl.FLOAT,\n        normalized: normalized || false,\n        stride:     stride || 0,\n        start:      start || 0\n    });\n\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n *\n * @param buffer   {PIXI.gl.GLBuffer}\n */\nVertexArrayObject.prototype.addIndex = function(buffer/*, options*/)\n{\n    this.indexBuffer = buffer;\n\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n * Unbinds this vao and disables it\n */\nVertexArrayObject.prototype.clear = function()\n{\n    // var gl = this.gl;\n\n    // TODO - should this function unbind after clear?\n    // for now, no but lets see what happens in the real world!\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\n    }\n\n    this.attributes.length = 0;\n    this.indexBuffer = null;\n\n    return this;\n};\n\n/**\n * @param type  {Number}\n * @param size  {Number}\n * @param start {Number}\n */\nVertexArrayObject.prototype.draw = function(type, size, start)\n{\n    var gl = this.gl;\n    gl.drawElements(type, size, gl.UNSIGNED_SHORT, start || 0);\n\n    return this;\n};\n\n/**\n * Destroy this vao\n */\nVertexArrayObject.prototype.destroy = function()\n{\n    // lose references\n    this.gl = null;\n    this.indexBuffer = null;\n    this.attributes = null;\n    this.nativeState = null;\n\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.deleteVertexArrayOES(this.nativeVao);\n    }\n\n    this.nativeVaoExtension = null;\n    this.nativeVao = null;\n};\n\n\n/***/ },\n/* 172 */\n/***/ function(module, exports) {\n\n\n/**\n * Helper class to create a webGL Context\n *\n * @class\n * @memberof PIXI.glCore\n * @param canvas {HTMLCanvasElement} the canvas element that we will get the context from\n * @param options {Object} An options object that gets passed in to the canvas element containing the context attributes,\n *                         see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/getContext for the options available\n * @return {WebGLRenderingContext} the WebGL context\n */\nvar createContext = function(canvas, options)\n{\n    var gl = canvas.getContext('webgl', options) || \n         canvas.getContext('experimental-webgl', options);\n\n    if (!gl)\n    {\n        // fail, not able to get a context\n        throw new Error('This browser does not support webGL. Try using the canvas renderer');\n    }\n\n    return gl;\n};\n\nmodule.exports = createContext;\n\n\n/***/ },\n/* 173 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n    compileProgram: __webpack_require__(75),\n    defaultValue: __webpack_require__(76),\n    extractAttributes: __webpack_require__(77),\n    extractUniforms: __webpack_require__(78),\n    generateUniformAccessObject: __webpack_require__(79),\n    mapSize: __webpack_require__(80),\n    mapType: __webpack_require__(33)  \n};\n\n/***/ },\n/* 174 */\n/***/ function(module, exports) {\n\n(function() {\n\nif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\treturn;\n}\n\nPrism.hooks.add('complete', function (env) {\n\tif (!env.code) {\n\t\treturn;\n\t}\n\n\t// works only for <code> wrapped inside <pre> (not inline)\n\tvar pre = env.element.parentNode;\n\tvar clsReg = /\\s*\\bline-numbers\\b\\s*/;\n\tif (\n\t\t!pre || !/pre/i.test(pre.nodeName) ||\n\t\t\t// Abort only if nor the <pre> nor the <code> have the class\n\t\t(!clsReg.test(pre.className) && !clsReg.test(env.element.className))\n\t) {\n\t\treturn;\n\t}\n\n\tif (env.element.querySelector(\".line-numbers-rows\")) {\n\t\t// Abort if line numbers already exists\n\t\treturn;\n\t}\n\n\tif (clsReg.test(env.element.className)) {\n\t\t// Remove the class \"line-numbers\" from the <code>\n\t\tenv.element.className = env.element.className.replace(clsReg, '');\n\t}\n\tif (!clsReg.test(pre.className)) {\n\t\t// Add the class \"line-numbers\" to the <pre>\n\t\tpre.className += ' line-numbers';\n\t}\n\n\tvar match = env.code.match(/\\n(?!$)/g);\n\tvar linesNum = match ? match.length + 1 : 1;\n\tvar lineNumbersWrapper;\n\n\tvar lines = new Array(linesNum + 1);\n\tlines = lines.join('<span></span>');\n\n\tlineNumbersWrapper = document.createElement('span');\n\tlineNumbersWrapper.className = 'line-numbers-rows';\n\tlineNumbersWrapper.innerHTML = lines;\n\n\tif (pre.hasAttribute('data-start')) {\n\t\tpre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n\t}\n\n\tenv.element.appendChild(lineNumbersWrapper);\n\n});\n\n}());\n\n/***/ },\n/* 175 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-(\\w+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = _self.Prism = {\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o) {\n\t\t\tvar type = _.util.type(o);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tvar clone = {};\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\t// Check for existence for IE8\n\t\t\t\t\treturn o.map && o.map(function(v) { return _.util.clone(v); });\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || document.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tparent = element.parentNode;\n\n\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code || !env.grammar) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = evt.data;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar tokens = _.tokenize(text, grammar);\n\t\treturn Token.stringify(_.util.encode(tokens), language);\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar Token = _.Token;\n\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\ttokenloop: for (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\tfor (var i=0; i<strarr.length; i++) { // Don’t cache length as it changes during the loop\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\tbreak tokenloop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t    delNum = 1;\n\n\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens\n\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {\n\t\t\t\t\t\t// Reconstruct the original text using the next two tokens\n\t\t\t\t\t\tvar nextToken = strarr[i + 1].matchedStr || strarr[i + 1],\n\t\t\t\t\t\t    combStr = str + nextToken;\n\n\t\t\t\t\t\tif (i < strarr.length - 2) {\n\t\t\t\t\t\t\tcombStr += strarr[i + 2].matchedStr || strarr[i + 2];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Try the pattern again on the reconstructed text\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\t\t\t\t\t\tmatch = pattern.exec(combStr);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0);\n\t\t\t\t\t\t// To be a valid candidate, the new match has to start inside of str\n\t\t\t\t\t\tif (from >= str.length) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar to = match.index + match[0].length,\n\t\t\t\t\t\t    len = str.length + nextToken.length;\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = 3;\n\n\t\t\t\t\t\tif (to <= len) {\n\t\t\t\t\t\t\tif (strarr[i + 1].greedy) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelNum = 2;\n\t\t\t\t\t\t\tcombStr = combStr.slice(0, len);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr = combStr;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1].length;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.matchedStr = matchedStr || null;\n\tthis.greedy = !!greedy;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (env.type == 'comment') {\n\t\tenv.attributes['spellcheck'] = 'true';\n\t}\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\n\tfor (var name in env.attributes) {\n\t\tattributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _self.Prism;\n\t}\n \t// In worker\n\t_self.addEventListener('message', function(evt) {\n\t\tvar message = JSON.parse(evt.data),\n\t\t    lang = message.language,\n\t\t    code = message.code,\n\t\t    immediateClose = message.immediateClose;\n\n\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\tif (immediateClose) {\n\t\t\t_self.close();\n\t\t}\n\t}, false);\n\n\treturn _self.Prism;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\trequestAnimationFrame(_.highlightAll, 0);\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\w\\W]*?-->/,\n\t'prolog': /<\\?[\\w\\W]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\w\\W]+?>/,\n\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=.$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[=>\"']/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\nPrism.languages.css = {\n\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n\t'string': /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t'important': /\\B!important\\b/i,\n\t'function': /[-a-z0-9]+(?=\\()/i,\n\t'punctuation': /[(){};:]/\n};\n\nPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'style': {\n\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.css,\n\t\t\talias: 'language-css'\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'style-attr': {\n\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t}, Prism.languages.markup.tag);\n}\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /(\\.|\\\\)/\n\t\t}\n\t},\n\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(true|false)\\b/,\n\t'function': /[a-z0-9_]+(?=\\()/i,\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript'\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\tself.Prism.fileHighlight = function() {\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tif(Array.prototype.forEach) { // Check to prevent error in IE8\n\t\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\t\tvar language, parent = pre;\n\t\t\t\tvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n\t\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t\t}\n\n\t\t\t\tif (!language) {\n\t\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t\t}\n\n\t\t\t\tvar code = document.createElement('code');\n\t\t\t\tcode.className = 'language-' + language;\n\n\t\t\t\tpre.textContent = '';\n\n\t\t\t\tcode.textContent = 'Loading…';\n\n\t\t\t\tpre.appendChild(code);\n\n\t\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\t\txhr.open('GET', src, true);\n\n\t\t\t\txhr.onreadystatechange = function () {\n\t\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\txhr.send(null);\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\n\n})();\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))\n\n/***/ },\n/* 176 */\n/***/ function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 177 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn punycode;\n\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(82)(module), __webpack_require__(13)))\n\n/***/ },\n/* 178 */\n/***/ function(module, exports) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n/***/ },\n/* 179 */\n/***/ function(module, exports) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n/***/ },\n/* 180 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.decode = exports.parse = __webpack_require__(178);\nexports.encode = exports.stringify = __webpack_require__(179);\n\n\n/***/ },\n/* 181 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar parseUri        = __webpack_require__(72);\nvar async           = __webpack_require__(81);\nvar Resource        = __webpack_require__(34);\nvar EventEmitter    = __webpack_require__(7);\n\n// some constants\nvar DEFAULT_CONCURRENCY = 10;\nvar MAX_PROGRESS = 100;\n\n/**\n * Manages the state and loading of multiple resources to load.\n *\n * @class\n * @param {string} [baseUrl=''] - The base url for all resources loaded by this loader.\n * @param {number} [concurrency=10] - The number of resources to load concurrently.\n */\nfunction Loader(baseUrl, concurrency) {\n    EventEmitter.call(this);\n\n    concurrency = concurrency || DEFAULT_CONCURRENCY;\n\n    /**\n     * The base url for all resources loaded by this loader.\n     *\n     * @member {string}\n     */\n    this.baseUrl = baseUrl || '';\n\n    /**\n     * The progress percent of the loader going through the queue.\n     *\n     * @member {number}\n     */\n    this.progress = 0;\n\n    /**\n     * Loading state of the loader, true if it is currently loading resources.\n     *\n     * @member {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * The percentage of total progress that a single resource represents.\n     *\n     * @member {number}\n     */\n    this._progressChunk = 0;\n\n    /**\n     * The middleware to run before loading each resource.\n     *\n     * @member {function[]}\n     */\n    this._beforeMiddleware = [];\n\n    /**\n     * The middleware to run after loading each resource.\n     *\n     * @member {function[]}\n     */\n    this._afterMiddleware = [];\n\n    /**\n     * The `_loadResource` function bound with this object context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundLoadResource = this._loadResource.bind(this);\n\n    /**\n     * The resource buffer that fills until `load` is called to start loading resources.\n     *\n     * @private\n     * @member {Resource[]}\n     */\n    this._buffer = [];\n\n    /**\n     * Used to track load completion.\n     *\n     * @private\n     * @member {number}\n     */\n    this._numToLoad = 0;\n\n    /**\n     * The resources waiting to be loaded.\n     *\n     * @private\n     * @member {Resource[]}\n     */\n    this._queue = async.queue(this._boundLoadResource, concurrency);\n\n    /**\n     * All the resources for this loader keyed by name.\n     *\n     * @member {object<string, Resource>}\n     */\n    this.resources = {};\n\n    /**\n     * Emitted once per loaded or errored resource.\n     *\n     * @event progress\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted once per errored resource.\n     *\n     * @event error\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted once per loaded resource.\n     *\n     * @event load\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted when the loader begins to process the queue.\n     *\n     * @event start\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted when the queued resources all load.\n     *\n     * @event complete\n     * @memberof Loader#\n     */\n}\n\nLoader.prototype = Object.create(EventEmitter.prototype);\nLoader.prototype.constructor = Loader;\nmodule.exports = Loader;\n\n/**\n * Adds a resource (or multiple resources) to the loader queue.\n *\n * This function can take a wide variety of different parameters. The only thing that is always\n * required the url to load. All the following will work:\n *\n * ```js\n * loader\n *     // normal param syntax\n *     .add('key', 'http://...', function () {})\n *     .add('http://...', function () {})\n *     .add('http://...')\n *\n *     // object syntax\n *     .add({\n *         name: 'key2',\n *         url: 'http://...'\n *     }, function () {})\n *     .add({\n *         url: 'http://...'\n *     }, function () {})\n *     .add({\n *         name: 'key3',\n *         url: 'http://...'\n *         onComplete: function () {}\n *     })\n *     .add({\n *         url: 'https://...',\n *         onComplete: function () {},\n *         crossOrigin: true\n *     })\n *\n *     // you can also pass an array of objects or urls or both\n *     .add([\n *         { name: 'key4', url: 'http://...', onComplete: function () {} },\n *         { url: 'http://...', onComplete: function () {} },\n *         'http://...'\n *     ])\n *\n *     // and you can use both params and options\n *     .add('key', 'http://...', { crossOrigin: true }, function () {})\n *     .add('http://...', { crossOrigin: true }, function () {});\n * ```\n *\n * @alias enqueue\n * @param {string} [name] - The name of the resource to load, if not passed the url is used.\n * @param {string} [url] - The url for this resource, relative to the baseUrl of this loader.\n * @param {object} [options] - The options for the load.\n * @param {boolean} [options.crossOrigin] - Is this request cross-origin? Default is to determine automatically.\n * @param {Resource.XHR_LOAD_TYPE} [options.loadType=Resource.LOAD_TYPE.XHR] - How should this resource be loaded?\n * @param {Resource.XHR_RESPONSE_TYPE} [options.xhrType=Resource.XHR_RESPONSE_TYPE.DEFAULT] - How should the data being\n *      loaded be interpreted when using XHR?\n * @param {function} [cb] - Function to call when this specific resource completes loading.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.add = Loader.prototype.enqueue = function (name, url, options, cb) {\n    // special case of an array of objects or urls\n    if (Array.isArray(name)) {\n        for (var i = 0; i < name.length; ++i) {\n            this.add(name[i]);\n        }\n\n        return this;\n    }\n\n    // if an object is passed instead of params\n    if (typeof name === 'object') {\n        cb = url || name.callback || name.onComplete;\n        options = name;\n        url = name.url;\n        name = name.name || name.key || name.url;\n    }\n\n    // case where no name is passed shift all args over by one.\n    if (typeof url !== 'string') {\n        cb = options;\n        options = url;\n        url = name;\n    }\n\n    // now that we shifted make sure we have a proper url.\n    if (typeof url !== 'string') {\n        throw new Error('No url passed to add resource to loader.');\n    }\n\n    // options are optional so people might pass a function and no options\n    if (typeof options === 'function') {\n        cb = options;\n        options = null;\n    }\n\n    // check if resource already exists.\n    if (this.resources[name]) {\n        throw new Error('Resource with name \"' + name + '\" already exists.');\n    }\n\n    // add base url if this isn't an absolute url\n    url = this._prepareUrl(url);\n\n    // create the store the resource\n    this.resources[name] = new Resource(name, url, options);\n\n    if (typeof cb === 'function') {\n        this.resources[name].once('afterMiddleware', cb);\n    }\n\n    this._numToLoad++;\n\n    // if already loading add it to the worker queue\n    if (this._queue.started) {\n        this._queue.push(this.resources[name]);\n        this._progressChunk = (MAX_PROGRESS - this.progress) / (this._queue.length() + this._queue.running());\n    }\n    // otherwise buffer it to be added to the queue later\n    else {\n        this._buffer.push(this.resources[name]);\n        this._progressChunk = MAX_PROGRESS / this._buffer.length;\n    }\n\n    return this;\n};\n\n/**\n * Sets up a middleware function that will run *before* the\n * resource is loaded.\n *\n * @alias pre\n * @method before\n * @param {function} fn - The middleware function to register.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.before = Loader.prototype.pre = function (fn) {\n    this._beforeMiddleware.push(fn);\n\n    return this;\n};\n\n/**\n * Sets up a middleware function that will run *after* the\n * resource is loaded.\n *\n * @alias use\n * @method after\n * @param {function} fn - The middleware function to register.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.after = Loader.prototype.use = function (fn) {\n    this._afterMiddleware.push(fn);\n\n    return this;\n};\n\n/**\n * Resets the queue of the loader to prepare for a new load.\n *\n * @return {Loader} Returns itself.\n */\nLoader.prototype.reset = function () {\n    // this.baseUrl = baseUrl || '';\n\n    this.progress = 0;\n\n    this.loading = false;\n\n    this._progressChunk = 0;\n\n    // this._beforeMiddleware.length = 0;\n    // this._afterMiddleware.length = 0;\n\n    this._buffer.length = 0;\n\n    this._numToLoad = 0;\n\n    this._queue.kill();\n    this._queue.started = false;\n\n    // abort all resource loads\n    for (var k in this.resources) {\n        var res = this.resources[k];\n\n        res.off('complete', this._onLoad, this);\n\n        if (res.isLoading) {\n            res.abort();\n        }\n    }\n\n    this.resources = {};\n\n    return this;\n};\n\n/**\n * Starts loading the queued resources.\n *\n * @fires start\n * @param {function} [cb] - Optional callback that will be bound to the `complete` event.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.load = function (cb) {\n    // register complete callback if they pass one\n    if (typeof cb === 'function') {\n        this.once('complete', cb);\n    }\n\n    // if the queue has already started we are done here\n    if (this._queue.started) {\n        return this;\n    }\n\n    // notify of start\n    this.emit('start', this);\n\n    // update loading state\n    this.loading = true;\n\n    // start the internal queue\n    for (var i = 0; i < this._buffer.length; ++i) {\n        this._queue.push(this._buffer[i]);\n    }\n\n    // empty the buffer\n    this._buffer.length = 0;\n\n    return this;\n};\n\n/**\n * Prepares a url for usage based on the configuration of this object\n *\n * @private\n * @param {string} url - The url to prepare.\n * @return {string} The prepared url.\n */\nLoader.prototype._prepareUrl = function (url) {\n    var parsedUrl = parseUri(url, { strictMode: true });\n\n    // absolute url, just use it as is.\n    if (parsedUrl.protocol || !parsedUrl.path || parsedUrl.path.indexOf('//') === 0) {\n        return url;\n    }\n\n    // if baseUrl doesn't end in slash and url doesn't start with slash, then add a slash inbetween\n    if (this.baseUrl.length\n        && this.baseUrl.lastIndexOf('/') !== this.baseUrl.length - 1\n        && url.charAt(0) !== '/'\n    ) {\n        return this.baseUrl + '/' + url;\n    }\n\n    return this.baseUrl + url;\n};\n\n/**\n * Loads a single resource.\n *\n * @private\n * @param {Resource} resource - The resource to load.\n * @param {function} dequeue - The function to call when we need to dequeue this item.\n */\nLoader.prototype._loadResource = function (resource, dequeue) {\n    var self = this;\n\n    resource._dequeue = dequeue;\n\n    // run before middleware\n    async.eachSeries(\n        this._beforeMiddleware,\n        function (fn, next) {\n            fn.call(self, resource, function () {\n                // if the before middleware marks the resource as complete,\n                // break and don't process any more before middleware\n                next(resource.isComplete ? {} : null);\n            });\n        },\n        function () {\n            // resource.on('progress', self.emit.bind(self, 'progress'));\n\n            if (resource.isComplete) {\n                self._onLoad(resource);\n            }\n            else {\n                resource.once('complete', self._onLoad, self);\n                resource.load();\n            }\n        }\n    );\n};\n\n/**\n * Called once each resource has loaded.\n *\n * @fires complete\n * @private\n */\nLoader.prototype._onComplete = function () {\n    this.loading = false;\n\n    this.emit('complete', this, this.resources);\n};\n\n/**\n * Called each time a resources is loaded.\n *\n * @fires progress\n * @fires error\n * @fires load\n * @private\n * @param {Resource} resource - The resource that was loaded\n */\nLoader.prototype._onLoad = function (resource) {\n    var self = this;\n\n    // run middleware, this *must* happen before dequeue so sub-assets get added properly\n    async.eachSeries(\n        this._afterMiddleware,\n        function (fn, next) {\n            fn.call(self, resource, next);\n        },\n        function () {\n            resource.emit('afterMiddleware', resource);\n\n            self._numToLoad--;\n\n            self.progress += self._progressChunk;\n            self.emit('progress', self, resource);\n\n            if (resource.error) {\n                self.emit('error', resource.error, self, resource);\n            }\n            else {\n                self.emit('load', self, resource);\n            }\n\n            // do completion check\n            if (self._numToLoad === 0) {\n                self.progress = 100;\n                self._onComplete();\n            }\n        }\n    );\n\n    // remove this resource from the async queue\n    resource._dequeue();\n};\n\nLoader.LOAD_TYPE = Resource.LOAD_TYPE;\nLoader.XHR_RESPONSE_TYPE = Resource.XHR_RESPONSE_TYPE;\n\n\n/***/ },\n/* 182 */\n/***/ function(module, exports) {\n\n\"use strict\";\n/* eslint no-magic-numbers: 0 */\n'use strict';\n\nmodule.exports = {\n    // private property\n    _keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\n    encodeBinary: function (input) {\n        var output = '';\n        var bytebuffer;\n        var encodedCharIndexes = new Array(4);\n        var inx = 0;\n        var jnx = 0;\n        var paddingBytes = 0;\n\n        while (inx < input.length) {\n            // Fill byte buffer array\n            bytebuffer = new Array(3);\n\n            for (jnx = 0; jnx < bytebuffer.length; jnx++) {\n                if (inx < input.length) {\n                    // throw away high-order byte, as documented at:\n                    // https://developer.mozilla.org/En/Using_XMLHttpRequest#Handling_binary_data\n                    bytebuffer[jnx] = input.charCodeAt(inx++) & 0xff;\n                }\n                else {\n                    bytebuffer[jnx] = 0;\n                }\n            }\n\n            // Get each encoded character, 6 bits at a time\n            // index 1: first 6 bits\n            encodedCharIndexes[0] = bytebuffer[0] >> 2;\n            // index 2: second 6 bits (2 least significant bits from input byte 1 + 4 most significant bits from byte 2)\n            encodedCharIndexes[1] = ((bytebuffer[0] & 0x3) << 4) | (bytebuffer[1] >> 4);\n            // index 3: third 6 bits (4 least significant bits from input byte 2 + 2 most significant bits from byte 3)\n            encodedCharIndexes[2] = ((bytebuffer[1] & 0x0f) << 2) | (bytebuffer[2] >> 6);\n            // index 3: forth 6 bits (6 least significant bits from input byte 3)\n            encodedCharIndexes[3] = bytebuffer[2] & 0x3f;\n\n            // Determine whether padding happened, and adjust accordingly\n            paddingBytes = inx - (input.length - 1);\n            switch (paddingBytes) {\n                case 2:\n                    // Set last 2 characters to padding char\n                    encodedCharIndexes[3] = 64;\n                    encodedCharIndexes[2] = 64;\n                    break;\n\n                case 1:\n                    // Set last character to padding char\n                    encodedCharIndexes[3] = 64;\n                    break;\n\n                default:\n                    break; // No padding - proceed\n            }\n\n            // Now we will grab each appropriate character out of our keystring\n            // based on our index array and append it to the output string\n            for (jnx = 0; jnx < encodedCharIndexes.length; jnx++) {\n                output += this._keyStr.charAt(encodedCharIndexes[jnx]);\n            }\n        }\n\n        return output;\n    }\n};\n\n\n/***/ },\n/* 183 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\n// a simple in-memory cache for resources\nvar cache = {};\n\nmodule.exports = function () {\n    return function (resource, next) {\n        // if cached, then set data and complete the resource\n        if (cache[resource.url]) {\n            resource.data = cache[resource.url];\n            resource.complete(); // marks resource load complete and stops processing before middlewares\n        }\n        // if not cached, wait for complete and store it in the cache.\n        else {\n            resource.once('complete', function () {\n                cache[this.url] = this.data;\n            });\n        }\n\n        next();\n    };\n};\n\n\n/***/ },\n/* 184 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar Resource = __webpack_require__(34);\nvar b64 = __webpack_require__(182);\n\nvar Url = window.URL || window.webkitURL;\n\n// a middleware for transforming XHR loaded Blobs into more useful objects\n\nmodule.exports = function () {\n    return function (resource, next) {\n        if (!resource.data) {\n            next();\n\n            return;\n        }\n\n        // if this was an XHR load of a blob\n        if (resource.xhr && resource.xhrType === Resource.XHR_RESPONSE_TYPE.BLOB) {\n            // if there is no blob support we probably got a binary string back\n            if (!window.Blob || typeof resource.data === 'string') {\n                var type = resource.xhr.getResponseHeader('content-type');\n\n                // this is an image, convert the binary string into a data url\n                if (type && type.indexOf('image') === 0) {\n                    resource.data = new Image();\n                    resource.data.src = 'data:' + type + ';base64,' + b64.encodeBinary(resource.xhr.responseText);\n\n                    resource.isImage = true;\n\n                    // wait until the image loads and then callback\n                    resource.data.onload = function () {\n                        resource.data.onload = null;\n\n                        next();\n                    };\n\n                    // next will be called on load\n                    return;\n                }\n            }\n            // if content type says this is an image, then we should transform the blob into an Image object\n            else if (resource.data.type.indexOf('image') === 0) {\n                var src = Url.createObjectURL(resource.data);\n\n                resource.blob = resource.data;\n                resource.data = new Image();\n                resource.data.src = src;\n\n                resource.isImage = true;\n\n                // cleanup the no longer used blob after the image loads\n                resource.data.onload = function () {\n                    Url.revokeObjectURL(src);\n                    resource.data.onload = null;\n\n                    next();\n                };\n\n                // next will be called on load.\n                return;\n            }\n        }\n\n        next();\n    };\n};\n\n\n/***/ },\n/* 185 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = __webpack_require__(177);\nvar util = __webpack_require__(186);\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = __webpack_require__(180);\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n/***/ },\n/* 186 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n/***/ },\n/* 187 */,\n/* 188 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(84);\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// theme.53d80d38.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/get-slinky/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 188);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 53d80d3846a95af953c1","'use strict';\n\nexports.__esModule = true;\nexports.Filter = exports.SpriteMaskFilter = exports.Quad = exports.RenderTarget = exports.ObjectRenderer = exports.WebGLManager = exports.Shader = exports.CanvasRenderTarget = exports.TextureUvs = exports.VideoBaseTexture = exports.BaseRenderTexture = exports.RenderTexture = exports.BaseTexture = exports.Texture = exports.CanvasGraphicsRenderer = exports.GraphicsRenderer = exports.GraphicsData = exports.Graphics = exports.TextStyle = exports.Text = exports.SpriteRenderer = exports.CanvasTinter = exports.CanvasSpriteRenderer = exports.Sprite = exports.TransformBase = exports.TransformStatic = exports.Transform = exports.Container = exports.DisplayObject = exports.glCore = exports.WebGLRenderer = exports.CanvasRenderer = exports.ticker = exports.utils = exports.settings = undefined;\n\nvar _const = require('./const');\n\nObject.keys(_const).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _const[key];\n    }\n  });\n});\n\nvar _math = require('./math');\n\nObject.keys(_math).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _math[key];\n    }\n  });\n});\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nObject.defineProperty(exports, 'glCore', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_pixiGlCore).default;\n  }\n});\n\nvar _DisplayObject = require('./display/DisplayObject');\n\nObject.defineProperty(exports, 'DisplayObject', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_DisplayObject).default;\n  }\n});\n\nvar _Container = require('./display/Container');\n\nObject.defineProperty(exports, 'Container', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Container).default;\n  }\n});\n\nvar _Transform = require('./display/Transform');\n\nObject.defineProperty(exports, 'Transform', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Transform).default;\n  }\n});\n\nvar _TransformStatic = require('./display/TransformStatic');\n\nObject.defineProperty(exports, 'TransformStatic', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TransformStatic).default;\n  }\n});\n\nvar _TransformBase = require('./display/TransformBase');\n\nObject.defineProperty(exports, 'TransformBase', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TransformBase).default;\n  }\n});\n\nvar _Sprite = require('./sprites/Sprite');\n\nObject.defineProperty(exports, 'Sprite', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Sprite).default;\n  }\n});\n\nvar _CanvasSpriteRenderer = require('./sprites/canvas/CanvasSpriteRenderer');\n\nObject.defineProperty(exports, 'CanvasSpriteRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasSpriteRenderer).default;\n  }\n});\n\nvar _CanvasTinter = require('./sprites/canvas/CanvasTinter');\n\nObject.defineProperty(exports, 'CanvasTinter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasTinter).default;\n  }\n});\n\nvar _SpriteRenderer = require('./sprites/webgl/SpriteRenderer');\n\nObject.defineProperty(exports, 'SpriteRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SpriteRenderer).default;\n  }\n});\n\nvar _Text = require('./text/Text');\n\nObject.defineProperty(exports, 'Text', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Text).default;\n  }\n});\n\nvar _TextStyle = require('./text/TextStyle');\n\nObject.defineProperty(exports, 'TextStyle', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TextStyle).default;\n  }\n});\n\nvar _Graphics = require('./graphics/Graphics');\n\nObject.defineProperty(exports, 'Graphics', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Graphics).default;\n  }\n});\n\nvar _GraphicsData = require('./graphics/GraphicsData');\n\nObject.defineProperty(exports, 'GraphicsData', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_GraphicsData).default;\n  }\n});\n\nvar _GraphicsRenderer = require('./graphics/webgl/GraphicsRenderer');\n\nObject.defineProperty(exports, 'GraphicsRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_GraphicsRenderer).default;\n  }\n});\n\nvar _CanvasGraphicsRenderer = require('./graphics/canvas/CanvasGraphicsRenderer');\n\nObject.defineProperty(exports, 'CanvasGraphicsRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasGraphicsRenderer).default;\n  }\n});\n\nvar _Texture = require('./textures/Texture');\n\nObject.defineProperty(exports, 'Texture', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Texture).default;\n  }\n});\n\nvar _BaseTexture = require('./textures/BaseTexture');\n\nObject.defineProperty(exports, 'BaseTexture', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BaseTexture).default;\n  }\n});\n\nvar _RenderTexture = require('./textures/RenderTexture');\n\nObject.defineProperty(exports, 'RenderTexture', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_RenderTexture).default;\n  }\n});\n\nvar _BaseRenderTexture = require('./textures/BaseRenderTexture');\n\nObject.defineProperty(exports, 'BaseRenderTexture', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BaseRenderTexture).default;\n  }\n});\n\nvar _VideoBaseTexture = require('./textures/VideoBaseTexture');\n\nObject.defineProperty(exports, 'VideoBaseTexture', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_VideoBaseTexture).default;\n  }\n});\n\nvar _TextureUvs = require('./textures/TextureUvs');\n\nObject.defineProperty(exports, 'TextureUvs', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TextureUvs).default;\n  }\n});\n\nvar _CanvasRenderTarget = require('./renderers/canvas/utils/CanvasRenderTarget');\n\nObject.defineProperty(exports, 'CanvasRenderTarget', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasRenderTarget).default;\n  }\n});\n\nvar _Shader = require('./Shader');\n\nObject.defineProperty(exports, 'Shader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Shader).default;\n  }\n});\n\nvar _WebGLManager = require('./renderers/webgl/managers/WebGLManager');\n\nObject.defineProperty(exports, 'WebGLManager', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_WebGLManager).default;\n  }\n});\n\nvar _ObjectRenderer = require('./renderers/webgl/utils/ObjectRenderer');\n\nObject.defineProperty(exports, 'ObjectRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ObjectRenderer).default;\n  }\n});\n\nvar _RenderTarget = require('./renderers/webgl/utils/RenderTarget');\n\nObject.defineProperty(exports, 'RenderTarget', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_RenderTarget).default;\n  }\n});\n\nvar _Quad = require('./renderers/webgl/utils/Quad');\n\nObject.defineProperty(exports, 'Quad', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Quad).default;\n  }\n});\n\nvar _SpriteMaskFilter = require('./renderers/webgl/filters/spriteMask/SpriteMaskFilter');\n\nObject.defineProperty(exports, 'SpriteMaskFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SpriteMaskFilter).default;\n  }\n});\n\nvar _Filter = require('./renderers/webgl/filters/Filter');\n\nObject.defineProperty(exports, 'Filter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Filter).default;\n  }\n});\nexports.autoDetectRenderer = autoDetectRenderer;\n\nvar _utils = require('./utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _ticker = require('./ticker');\n\nvar ticker = _interopRequireWildcard(_ticker);\n\nvar _settings = require('./settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _CanvasRenderer = require('./renderers/canvas/CanvasRenderer');\n\nvar _CanvasRenderer2 = _interopRequireDefault(_CanvasRenderer);\n\nvar _WebGLRenderer = require('./renderers/webgl/WebGLRenderer');\n\nvar _WebGLRenderer2 = _interopRequireDefault(_WebGLRenderer);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.settings = _settings2.default;\nexports.utils = utils;\nexports.ticker = ticker;\nexports.CanvasRenderer = _CanvasRenderer2.default;\nexports.WebGLRenderer = _WebGLRenderer2.default; /**\n                                                  * @namespace PIXI\n                                                  */\n\n/**\n * This helper function will automatically detect which renderer you should be using.\n * WebGL is the preferred renderer as it is a lot faster. If webGL is not supported by\n * the browser then this function will return a canvas renderer\n *\n * @memberof PIXI\n * @function autoDetectRenderer\n * @param {number} [width=800] - the width of the renderers view\n * @param {number} [height=600] - the height of the renderers view\n * @param {object} [options] - The optional renderer parameters\n * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation, enable this if you\n *      need to call toDataUrl on the webgl context\n * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer, retina would be 2\n * @param {boolean} [noWebGL=false] - prevents selection of WebGL renderer, even if such is present\n * @return {PIXI.WebGLRenderer|PIXI.CanvasRenderer} Returns WebGL renderer if available, otherwise CanvasRenderer\n */\nfunction autoDetectRenderer() {\n  var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 800;\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 600;\n  var options = arguments[2];\n  var noWebGL = arguments[3];\n\n  if (!noWebGL && utils.isWebGLSupported()) {\n    return new _WebGLRenderer2.default(width, height, options);\n  }\n\n  return new _CanvasRenderer2.default(width, height, options);\n}\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/index.js\n// module id = 0\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n/**\n * String of the current PIXI version.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {string}\n */\nvar VERSION = exports.VERSION = '4.2.2';\n\n/**\n * Two Pi.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {number}\n */\nvar PI_2 = exports.PI_2 = Math.PI * 2;\n\n/**\n * Conversion factor for converting radians to degrees.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {number}\n */\nvar RAD_TO_DEG = exports.RAD_TO_DEG = 180 / Math.PI;\n\n/**\n * Conversion factor for converting degrees to radians.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {number}\n */\nvar DEG_TO_RAD = exports.DEG_TO_RAD = Math.PI / 180;\n\n/**\n * Constant to identify the Renderer Type.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} UNKNOWN - Unknown render type.\n * @property {number} WEBGL - WebGL render type.\n * @property {number} CANVAS - Canvas render type.\n */\nvar RENDERER_TYPE = exports.RENDERER_TYPE = {\n  UNKNOWN: 0,\n  WEBGL: 1,\n  CANVAS: 2\n};\n\n/**\n * Various blend modes supported by PIXI.\n *\n * IMPORTANT - The WebGL renderer only supports the NORMAL, ADD, MULTIPLY and SCREEN blend modes.\n * Anything else will silently act like NORMAL.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} NORMAL\n * @property {number} ADD\n * @property {number} MULTIPLY\n * @property {number} SCREEN\n * @property {number} OVERLAY\n * @property {number} DARKEN\n * @property {number} LIGHTEN\n * @property {number} COLOR_DODGE\n * @property {number} COLOR_BURN\n * @property {number} HARD_LIGHT\n * @property {number} SOFT_LIGHT\n * @property {number} DIFFERENCE\n * @property {number} EXCLUSION\n * @property {number} HUE\n * @property {number} SATURATION\n * @property {number} COLOR\n * @property {number} LUMINOSITY\n */\nvar BLEND_MODES = exports.BLEND_MODES = {\n  NORMAL: 0,\n  ADD: 1,\n  MULTIPLY: 2,\n  SCREEN: 3,\n  OVERLAY: 4,\n  DARKEN: 5,\n  LIGHTEN: 6,\n  COLOR_DODGE: 7,\n  COLOR_BURN: 8,\n  HARD_LIGHT: 9,\n  SOFT_LIGHT: 10,\n  DIFFERENCE: 11,\n  EXCLUSION: 12,\n  HUE: 13,\n  SATURATION: 14,\n  COLOR: 15,\n  LUMINOSITY: 16\n};\n\n/**\n * Various webgl draw modes. These can be used to specify which GL drawMode to use\n * under certain situations and renderers.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} POINTS\n * @property {number} LINES\n * @property {number} LINE_LOOP\n * @property {number} LINE_STRIP\n * @property {number} TRIANGLES\n * @property {number} TRIANGLE_STRIP\n * @property {number} TRIANGLE_FAN\n */\nvar DRAW_MODES = exports.DRAW_MODES = {\n  POINTS: 0,\n  LINES: 1,\n  LINE_LOOP: 2,\n  LINE_STRIP: 3,\n  TRIANGLES: 4,\n  TRIANGLE_STRIP: 5,\n  TRIANGLE_FAN: 6\n};\n\n/**\n * The scale modes that are supported by pixi.\n *\n * The PIXI.settings.SCALE_MODE scale mode affects the default scaling mode of future operations.\n * It can be re-assigned to either LINEAR or NEAREST, depending upon suitability.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} LINEAR Smooth scaling\n * @property {number} NEAREST Pixelating scaling\n */\nvar SCALE_MODES = exports.SCALE_MODES = {\n  LINEAR: 0,\n  NEAREST: 1\n};\n\n/**\n * The wrap modes that are supported by pixi.\n *\n * The PIXI.settings.WRAP_MODE wrap mode affects the default wraping mode of future operations.\n * It can be re-assigned to either CLAMP or REPEAT, depending upon suitability.\n * If the texture is non power of two then clamp will be used regardless as webGL can\n * only use REPEAT if the texture is po2.\n *\n * This property only affects WebGL.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} CLAMP - The textures uvs are clamped\n * @property {number} REPEAT - The texture uvs tile and repeat\n * @property {number} MIRRORED_REPEAT - The texture uvs tile and repeat with mirroring\n */\nvar WRAP_MODES = exports.WRAP_MODES = {\n  CLAMP: 0,\n  REPEAT: 1,\n  MIRRORED_REPEAT: 2\n};\n\n/**\n * The gc modes that are supported by pixi.\n *\n * The PIXI.settings.GC_MODE Garbage Collection mode for pixi textures is AUTO\n * If set to GC_MODE, the renderer will occasianally check textures usage. If they are not\n * used for a specified period of time they will be removed from the GPU. They will of course\n * be uploaded again when they are required. This is a silent behind the scenes process that\n * should ensure that the GPU does not  get filled up.\n *\n * Handy for mobile devices!\n * This property only affects WebGL.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} AUTO - Garbage collection will happen periodically automatically\n * @property {number} MANUAL - Garbage collection will need to be called manually\n */\nvar GC_MODES = exports.GC_MODES = {\n  AUTO: 0,\n  MANUAL: 1\n};\n\n/**\n * Regexp for image type by extension.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {RegExp|string}\n * @example `image.png`\n */\nvar URL_FILE_EXTENSION = exports.URL_FILE_EXTENSION = /\\.(\\w{3,4})(?:$|\\?|#)/i;\n\n/**\n * Regexp for data URI.\n * Based on: https://github.com/ragingwind/data-uri-regex\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {RegExp|string}\n * @example `data:image/png;base64`\n */\nvar DATA_URI = exports.DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;(charset=[\\w-]+|base64))?,(.*)/i;\n\n/**\n * Regexp for SVG size.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {RegExp|string}\n * @example `<svg width=\"100\" height=\"100\"></svg>`\n */\nvar SVG_SIZE = exports.SVG_SIZE = /<svg[^>]*(?:\\s(width|height)=('|\")(\\d*(?:\\.\\d+)?)(?:px)?('|\"))[^>]*(?:\\s(width|height)=('|\")(\\d*(?:\\.\\d+)?)(?:px)?('|\"))[^>]*>/i; // eslint-disable-line max-len\n\n/**\n * Constants that identify shapes, mainly to prevent `instanceof` calls.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} POLY\n * @property {number} RECT\n * @property {number} CIRC\n * @property {number} ELIP\n * @property {number} RREC\n */\nvar SHAPES = exports.SHAPES = {\n  POLY: 0,\n  RECT: 1,\n  CIRC: 2,\n  ELIP: 3,\n  RREC: 4\n};\n\n/**\n * Constants that specify float precision in shaders.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {string} LOW='lowp'\n * @property {string} MEDIUM='mediump'\n * @property {string} HIGH='highp'\n */\nvar PRECISION = exports.PRECISION = {\n  LOW: 'lowp',\n  MEDIUM: 'mediump',\n  HIGH: 'highp'\n};\n\n/**\n * Constants that specify the transform type.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} STATIC\n * @property {number} DYNAMIC\n */\nvar TRANSFORM_MODE = exports.TRANSFORM_MODE = {\n  STATIC: 0,\n  DYNAMIC: 1\n};\n\n/**\n * Constants that define the type of gradient on text.\n *\n * @static\n * @constant\n * @memberof PIXI\n * @type {object}\n * @property {number} LINEAR_VERTICAL\n * @property {number} LINEAR_HORIZONTAL\n */\nvar TEXT_GRADIENT = exports.TEXT_GRADIENT = {\n  LINEAR_VERTICAL: 0,\n  LINEAR_HORIZONTAL: 1\n};\n//# sourceMappingURL=const.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/const.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.BaseTextureCache = exports.TextureCache = exports.pluginTarget = exports.EventEmitter = exports.isMobile = undefined;\nexports.uid = uid;\nexports.hex2rgb = hex2rgb;\nexports.hex2string = hex2string;\nexports.rgb2hex = rgb2hex;\nexports.getResolutionOfUrl = getResolutionOfUrl;\nexports.decomposeDataUri = decomposeDataUri;\nexports.getUrlFileExtension = getUrlFileExtension;\nexports.getSvgSize = getSvgSize;\nexports.skipHello = skipHello;\nexports.sayHello = sayHello;\nexports.isWebGLSupported = isWebGLSupported;\nexports.sign = sign;\nexports.removeItems = removeItems;\n\nvar _const = require('../const');\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _pluginTarget = require('./pluginTarget');\n\nvar _pluginTarget2 = _interopRequireDefault(_pluginTarget);\n\nvar _ismobilejs = require('ismobilejs');\n\nvar isMobile = _interopRequireWildcard(_ismobilejs);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar nextUid = 0;\nvar saidHello = false;\n\n/**\n * @namespace PIXI.utils\n */\nexports.isMobile = isMobile;\nexports.EventEmitter = _eventemitter2.default;\nexports.pluginTarget = _pluginTarget2.default;\n\n/**\n * Gets the next unique identifier\n *\n * @memberof PIXI.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */\n\nfunction uid() {\n    return ++nextUid;\n}\n\n/**\n * Converts a hex color number to an [R, G, B] array\n *\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The number to convert\n * @param  {number[]} [out=[]] If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color.\n */\nfunction hex2rgb(hex, out) {\n    out = out || [];\n\n    out[0] = (hex >> 16 & 0xFF) / 255;\n    out[1] = (hex >> 8 & 0xFF) / 255;\n    out[2] = (hex & 0xFF) / 255;\n\n    return out;\n}\n\n/**\n * Converts a hex color number to a string.\n *\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex\n * @return {string} The string color.\n */\nfunction hex2string(hex) {\n    hex = hex.toString(16);\n    hex = '000000'.substr(0, 6 - hex.length) + hex;\n\n    return '#' + hex;\n}\n\n/**\n * Converts a color as an [R, G, B] array to a hex number\n *\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - rgb array\n * @return {number} The color number\n */\nfunction rgb2hex(rgb) {\n    return (rgb[0] * 255 << 16) + (rgb[1] * 255 << 8) + rgb[2] * 255;\n}\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @return {number} resolution / device pixel ratio of an asset\n */\nfunction getResolutionOfUrl(url) {\n    var resolution = _settings2.default.RETINA_PREFIX.exec(url);\n\n    if (resolution) {\n        return parseFloat(resolution[1]);\n    }\n\n    return 1;\n}\n\n/**\n * Typedef for decomposeDataUri return object.\n *\n * @typedef {object} DecomposedDataUri\n * @property {mediaType} Media type, eg. `image`\n * @property {subType} Sub type, eg. `png`\n * @property {encoding} Data encoding, eg. `base64`\n * @property {data} The actual data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nfunction decomposeDataUri(dataUri) {\n    var dataUriMatch = _const.DATA_URI.exec(dataUri);\n\n    if (dataUriMatch) {\n        return {\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n            encoding: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n            data: dataUriMatch[4]\n        };\n    }\n\n    return undefined;\n}\n\n/**\n * Get type of the image by regexp for extension. Returns undefined for unknown extensions.\n *\n * @memberof PIXI.utils\n * @function getUrlFileExtension\n * @param {string} url - the image path\n * @return {string|undefined} image extension\n */\nfunction getUrlFileExtension(url) {\n    var extension = _const.URL_FILE_EXTENSION.exec(url);\n\n    if (extension) {\n        return extension[1].toLowerCase();\n    }\n\n    return undefined;\n}\n\n/**\n * Typedef for Size object.\n *\n * @typedef {object} Size\n * @property {width} Width component\n * @property {height} Height component\n */\n\n/**\n * Get size from an svg string using regexp.\n *\n * @memberof PIXI.utils\n * @function getSvgSize\n * @param {string} svgString - a serialized svg element\n * @return {Size|undefined} image extension\n */\nfunction getSvgSize(svgString) {\n    var sizeMatch = _const.SVG_SIZE.exec(svgString);\n    var size = {};\n\n    if (sizeMatch) {\n        size[sizeMatch[1]] = Math.round(parseFloat(sizeMatch[3]));\n        size[sizeMatch[5]] = Math.round(parseFloat(sizeMatch[7]));\n    }\n\n    return size;\n}\n\n/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof PIXI.utils\n */\nfunction skipHello() {\n    saidHello = true;\n}\n\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever makes you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\nfunction sayHello(type) {\n    if (saidHello) {\n        return;\n    }\n\n    if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n        var args = ['\\n %c %c %c Pixi.js ' + _const.VERSION + ' - \\u2730 ' + type + ' \\u2730  %c  %c  http://www.pixijs.com/  %c %c \\u2665%c\\u2665%c\\u2665 \\n\\n', 'background: #ff66a5; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'color: #ff66a5; background: #030307; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'background: #ffc3dc; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;'];\n\n        window.console.log.apply(console, args);\n    } else if (window.console) {\n        window.console.log('Pixi.js ' + _const.VERSION + ' - ' + type + ' - http://www.pixijs.com/');\n    }\n\n    saidHello = true;\n}\n\n/**\n * Helper for checking for webgl support\n *\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @return {boolean} is webgl supported\n */\nfunction isWebGLSupported() {\n    var contextOptions = { stencil: true, failIfMajorPerformanceCaveat: true };\n\n    try {\n        if (!window.WebGLRenderingContext) {\n            return false;\n        }\n\n        var canvas = document.createElement('canvas');\n        var gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\n\n        var success = !!(gl && gl.getContextAttributes().stencil);\n\n        if (gl) {\n            var loseContext = gl.getExtension('WEBGL_lose_context');\n\n            if (loseContext) {\n                loseContext.loseContext();\n            }\n        }\n\n        gl = null;\n\n        return success;\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * Returns sign of number\n *\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nfunction sign(n) {\n    if (n === 0) return 0;\n\n    return n < 0 ? -1 : 1;\n}\n\n/**\n * Remove a range of items from an array\n *\n * @memberof PIXI.utils\n * @function removeItems\n * @param {Array<*>} arr The target array\n * @param {number} startIdx The index to begin removing from (inclusive)\n * @param {number} removeCount How many items to remove\n */\nfunction removeItems(arr, startIdx, removeCount) {\n    var length = arr.length;\n\n    if (startIdx >= length || removeCount === 0) {\n        return;\n    }\n\n    removeCount = startIdx + removeCount > length ? length - startIdx : removeCount;\n\n    var len = length - removeCount;\n\n    for (var i = startIdx; i < len; ++i) {\n        arr[i] = arr[i + removeCount];\n    }\n\n    arr.length = len;\n}\n\n/**\n * @todo Describe property usage\n *\n * @memberof PIXI.utils\n * @private\n */\nvar TextureCache = exports.TextureCache = {};\n\n/**\n * @todo Describe property usage\n *\n * @memberof PIXI.utils\n * @private\n */\nvar BaseTextureCache = exports.BaseTextureCache = {};\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/utils/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Point = require('./Point');\n\nObject.defineProperty(exports, 'Point', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Point).default;\n  }\n});\n\nvar _ObservablePoint = require('./ObservablePoint');\n\nObject.defineProperty(exports, 'ObservablePoint', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ObservablePoint).default;\n  }\n});\n\nvar _Matrix = require('./Matrix');\n\nObject.defineProperty(exports, 'Matrix', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Matrix).default;\n  }\n});\n\nvar _GroupD = require('./GroupD8');\n\nObject.defineProperty(exports, 'GroupD8', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_GroupD).default;\n  }\n});\n\nvar _Circle = require('./shapes/Circle');\n\nObject.defineProperty(exports, 'Circle', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Circle).default;\n  }\n});\n\nvar _Ellipse = require('./shapes/Ellipse');\n\nObject.defineProperty(exports, 'Ellipse', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Ellipse).default;\n  }\n});\n\nvar _Polygon = require('./shapes/Polygon');\n\nObject.defineProperty(exports, 'Polygon', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Polygon).default;\n  }\n});\n\nvar _Rectangle = require('./shapes/Rectangle');\n\nObject.defineProperty(exports, 'Rectangle', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Rectangle).default;\n  }\n});\n\nvar _RoundedRectangle = require('./shapes/RoundedRectangle');\n\nObject.defineProperty(exports, 'RoundedRectangle', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_RoundedRectangle).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/math/index.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _maxRecommendedTextures = require('./utils/maxRecommendedTextures');\n\nvar _maxRecommendedTextures2 = _interopRequireDefault(_maxRecommendedTextures);\n\nvar _canUploadSameBuffer = require('./utils/canUploadSameBuffer');\n\nvar _canUploadSameBuffer2 = _interopRequireDefault(_canUploadSameBuffer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @namespace PIXI.settings\n */\nexports.default = {\n\n  /**\n   * Target frames per millisecond.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 0.06\n   */\n  TARGET_FPMS: 0.06,\n\n  /**\n   * If set to true WebGL will attempt make textures mimpaped by default.\n   * Mipmapping will only succeed if the base texture uploaded has power of two dimensions.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {boolean}\n   * @default true\n   */\n  MIPMAP_TEXTURES: true,\n\n  /**\n   * Default resolution / device pixel ratio of the renderer.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 1\n   */\n  RESOLUTION: 1,\n\n  /**\n   * Default filter resolution.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 1\n   */\n  FILTER_RESOLUTION: 1,\n\n  /**\n   * The maximum textures that this device supports.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 32\n   */\n  SPRITE_MAX_TEXTURES: (0, _maxRecommendedTextures2.default)(32),\n\n  // TODO: maybe change to SPRITE.BATCH_SIZE: 2000\n  // TODO: maybe add PARTICLE.BATCH_SIZE: 15000\n\n  /**\n   * The default sprite batch size.\n   *\n   * The default aims to balance desktop and mobile devices.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 4096\n   */\n  SPRITE_BATCH_SIZE: 4096,\n\n  /**\n   * The prefix that denotes a URL is for a retina asset.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {RegExp|string}\n   * @example `@2x`\n   * @default /@(.+)x/\n   */\n  RETINA_PREFIX: /@(.+)x/,\n\n  /**\n   * The default render options if none are supplied to {@link PIXI.WebGLRenderer}\n   * or {@link PIXI.CanvasRenderer}.\n   *\n   * @static\n   * @constant\n   * @memberof PIXI.settings\n   * @type {object}\n   * @property {HTMLCanvasElement} view=null\n   * @property {number} resolution=1\n   * @property {boolean} antialias=false\n   * @property {boolean} forceFXAA=false\n   * @property {boolean} autoResize=false\n   * @property {boolean} transparent=false\n   * @property {number} backgroundColor=0x000000\n   * @property {boolean} clearBeforeRender=true\n   * @property {boolean} preserveDrawingBuffer=false\n   * @property {boolean} roundPixels=false\n   */\n  RENDER_OPTIONS: {\n    view: null,\n    antialias: false,\n    forceFXAA: false,\n    autoResize: false,\n    transparent: false,\n    backgroundColor: 0x000000,\n    clearBeforeRender: true,\n    preserveDrawingBuffer: false,\n    roundPixels: false\n  },\n\n  /**\n   * Default transform type.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default PIXI.TRANSFORM_MODE.STATIC\n   */\n  TRANSFORM_MODE: 0,\n\n  /**\n   * Default Garbage Collection mode.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default PIXI.GC_MODES.AUTO\n   */\n  GC_MODE: 0,\n\n  /**\n   * Default Garbage Collection max idle.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 3600\n   */\n  GC_MAX_IDLE: 60 * 60,\n\n  /**\n   * Default Garbage Collection maximum check count.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default 600\n   */\n  GC_MAX_CHECK_COUNT: 60 * 10,\n\n  /**\n   * Default wrap modes that are supported by pixi.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default PIXI.WRAP_MODES.CLAMP\n   */\n  WRAP_MODE: 0,\n\n  /**\n   * The scale modes that are supported by pixi.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {number}\n   * @default PIXI.SCALE_MODES.LINEAR\n   */\n  SCALE_MODE: 0,\n\n  /**\n   * Default specify float precision in shaders.\n   *\n   * @static\n   * @memberof PIXI.settings\n   * @type {string}\n   * @default PIXI.PRECISION.MEDIUM\n   */\n  PRECISION: 'mediump',\n\n  /**\n   * Can we upload the same buffer in a single frame?\n   *\n   * @static\n   * @constant\n   * @memberof PIXI\n   * @type {boolean}\n   */\n  CAN_UPLOAD_SAME_BUFFER: (0, _canUploadSameBuffer2.default)()\n\n};\n//# sourceMappingURL=settings.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/settings.js\n// module id = 4\n// module chunks = 0","var gl = {\n    createContext:          require('./createContext'),\n    setVertexAttribArrays:  require('./setVertexAttribArrays'),\n    GLBuffer:               require('./GLBuffer'),\n    GLFramebuffer:          require('./GLFramebuffer'),\n    GLShader:               require('./GLShader'),\n    GLTexture:              require('./GLTexture'),\n    VertexArrayObject:      require('./VertexArrayObject'),\n    shader:                 require('./shader')\n};\n\n// Export for Node-compatible environments\nif (typeof module !== 'undefined' && module.exports)\n{\n    // Export the module\n    module.exports = gl;\n}\n\n// Add to the browser window pixi.gl\nif (typeof window !== 'undefined')\n{\n    // add the window object\n    window.PIXI = window.PIXI || {};\n    window.PIXI.glCore = gl;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/index.js\n// module id = 5\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/path-browserify/index.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eventemitter3/index.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nvar _settings = require('./settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar PRECISION = _settings2.default.PRECISION;\n\n\nfunction checkPrecision(src) {\n    if (src instanceof Array) {\n        if (src[0].substring(0, 9) !== 'precision') {\n            var copy = src.slice(0);\n\n            copy.unshift('precision ' + PRECISION + ' float;');\n\n            return copy;\n        }\n    } else if (src.substring(0, 9) !== 'precision') {\n        return 'precision ' + PRECISION + ' float;\\n' + src;\n    }\n\n    return src;\n}\n\n/**\n * Wrapper class, webGL Shader for Pixi.\n * Adds precision string if vertexSrc or fragmentSrc have no mention of it.\n *\n * @class\n * @extends GLShader\n * @memberof PIXI\n */\n\nvar Shader = function (_GLShader) {\n    _inherits(Shader, _GLShader);\n\n    /**\n     *\n     * @param {WebGLRenderingContext} gl - The current WebGL rendering context\n     * @param {string|string[]} vertexSrc - The vertex shader source as an array of strings.\n     * @param {string|string[]} fragmentSrc - The fragment shader source as an array of strings.\n     */\n    function Shader(gl, vertexSrc, fragmentSrc) {\n        _classCallCheck(this, Shader);\n\n        return _possibleConstructorReturn(this, _GLShader.call(this, gl, checkPrecision(vertexSrc), checkPrecision(fragmentSrc)));\n    }\n\n    return Shader;\n}(_pixiGlCore.GLShader);\n\nexports.default = Shader;\n//# sourceMappingURL=Shader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/Shader.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class\n * @memberof PIXI\n */\nvar WebGLManager = function () {\n  /**\n   * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n   */\n  function WebGLManager(renderer) {\n    _classCallCheck(this, WebGLManager);\n\n    /**\n     * The renderer this manager works for.\n     *\n     * @member {PIXI.WebGLRenderer}\n     */\n    this.renderer = renderer;\n\n    this.renderer.on('context', this.onContextChange, this);\n  }\n\n  /**\n   * Generic method called when there is a WebGL context change.\n   *\n   */\n\n\n  WebGLManager.prototype.onContextChange = function onContextChange() {}\n  // do some codes init!\n\n\n  /**\n   * Generic destroy methods to be overridden by the subclass\n   *\n   */\n  ;\n\n  WebGLManager.prototype.destroy = function destroy() {\n    this.renderer.off('context', this.onContextChange, this);\n\n    this.renderer = null;\n  };\n\n  return WebGLManager;\n}();\n\nexports.default = WebGLManager;\n//# sourceMappingURL=WebGLManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/managers/WebGLManager.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _utils = require('../utils');\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _determineCrossOrigin = require('../utils/determineCrossOrigin');\n\nvar _determineCrossOrigin2 = _interopRequireDefault(_determineCrossOrigin);\n\nvar _bitTwiddle = require('bit-twiddle');\n\nvar _bitTwiddle2 = _interopRequireDefault(_bitTwiddle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RESOLUTION = _settings2.default.RESOLUTION,\n    MIPMAP_TEXTURES = _settings2.default.MIPMAP_TEXTURES,\n    SCALE_MODE = _settings2.default.SCALE_MODE,\n    WRAP_MODE = _settings2.default.WRAP_MODE;\n\n/**\n * A texture stores the information that represents an image. All textures have a base texture.\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n */\n\nvar BaseTexture = function (_EventEmitter) {\n    _inherits(BaseTexture, _EventEmitter);\n\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} [source] - the source object of the texture.\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture\n     */\n    function BaseTexture(source, scaleMode, resolution) {\n        _classCallCheck(this, BaseTexture);\n\n        var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n        _this.uid = (0, _utils.uid)();\n\n        _this.touched = 0;\n\n        /**\n         * The resolution / device pixel ratio of the texture\n         *\n         * @member {number}\n         * @default 1\n         */\n        _this.resolution = resolution || RESOLUTION;\n\n        /**\n         * The width of the base texture set when the image has loaded\n         *\n         * @readonly\n         * @member {number}\n         */\n        _this.width = 100;\n\n        /**\n         * The height of the base texture set when the image has loaded\n         *\n         * @readonly\n         * @member {number}\n         */\n        _this.height = 100;\n\n        // TODO docs\n        // used to store the actual dimensions of the source\n        /**\n         * Used to store the actual width of the source of this texture\n         *\n         * @readonly\n         * @member {number}\n         */\n        _this.realWidth = 100;\n        /**\n         * Used to store the actual height of the source of this texture\n         *\n         * @readonly\n         * @member {number}\n         */\n        _this.realHeight = 100;\n\n        /**\n         * The scale mode to apply when scaling this texture\n         *\n         * @member {number}\n         * @default PIXI.settings.SCALE_MODE\n         * @see PIXI.SCALE_MODES\n         */\n        _this.scaleMode = scaleMode || SCALE_MODE;\n\n        /**\n         * Set to true once the base texture has successfully loaded.\n         *\n         * This is never true if the underlying source fails to load or has no texture data.\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        _this.hasLoaded = false;\n\n        /**\n         * Set to true if the source is currently loading.\n         *\n         * If an Image source is loading the 'loaded' or 'error' event will be\n         * dispatched when the operation ends. An underyling source that is\n         * immediately-available bypasses loading entirely.\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        _this.isLoading = false;\n\n        /**\n         * The image source that is used to create the texture.\n         *\n         * TODO: Make this a setter that calls loadSource();\n         *\n         * @readonly\n         * @member {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.source = null; // set in loadSource, if at all\n\n        /**\n         * The image source that is used to create the texture. This is used to\n         * store the original Svg source when it is replaced with a canvas element.\n         *\n         * TODO: Currently not in use but could be used when re-scaling svg.\n         *\n         * @readonly\n         * @member {Image}\n         */\n        _this.origSource = null; // set in loadSvg, if at all\n\n        /**\n         * Type of image defined in source, eg. `png` or `svg`\n         *\n         * @readonly\n         * @member {string}\n         */\n        _this.imageType = null; // set in updateImageType\n\n        /**\n         * Scale for source image. Used with Svg images to scale them before rasterization.\n         *\n         * @readonly\n         * @member {number}\n         */\n        _this.sourceScale = 1.0;\n\n        /**\n         * Controls if RGB channels should be pre-multiplied by Alpha  (WebGL only)\n         * All blend modes, and shaders written for default value. Change it on your own risk.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        _this.premultipliedAlpha = true;\n\n        /**\n         * The image url of the texture\n         *\n         * @member {string}\n         */\n        _this.imageUrl = null;\n\n        /**\n         * Whether or not the texture is a power of two, try to use power of two textures as much\n         * as you can\n         *\n         * @private\n         * @member {boolean}\n         */\n        _this.isPowerOfTwo = false;\n\n        // used for webGL\n\n        /**\n         *\n         * Set this to true if a mipmap of this texture needs to be generated. This value needs\n         * to be set before the texture is used\n         * Also the texture must be a power of two size to work\n         *\n         * @member {boolean}\n         * @see PIXI.MIPMAP_TEXTURES\n         */\n        _this.mipmap = MIPMAP_TEXTURES;\n\n        /**\n         *\n         * WebGL Texture wrap mode\n         *\n         * @member {number}\n         * @see PIXI.WRAP_MODES\n         */\n        _this.wrapMode = WRAP_MODE;\n\n        /**\n         * A map of renderer IDs to webgl textures\n         *\n         * @private\n         * @member {object<number, WebGLTexture>}\n         */\n        _this._glTextures = {};\n\n        _this._enabled = 0;\n        _this._virtalBoundId = -1;\n\n        // if no source passed don't try to load\n        if (source) {\n            _this.loadSource(source);\n        }\n\n        /**\n         * Fired when a not-immediately-available source finishes loading.\n         *\n         * @protected\n         * @event loaded\n         * @memberof PIXI.BaseTexture#\n         */\n\n        /**\n         * Fired when a not-immediately-available source fails to load.\n         *\n         * @protected\n         * @event error\n         * @memberof PIXI.BaseTexture#\n         */\n        return _this;\n    }\n\n    /**\n     * Updates the texture on all the webgl renderers, this also assumes the src has changed.\n     *\n     * @fires update\n     */\n\n\n    BaseTexture.prototype.update = function update() {\n        // Svg size is handled during load\n        if (this.imageType !== 'svg') {\n            this.realWidth = this.source.naturalWidth || this.source.videoWidth || this.source.width;\n            this.realHeight = this.source.naturalHeight || this.source.videoHeight || this.source.height;\n\n            this.width = this.realWidth / this.resolution;\n            this.height = this.realHeight / this.resolution;\n\n            this.isPowerOfTwo = _bitTwiddle2.default.isPow2(this.realWidth) && _bitTwiddle2.default.isPow2(this.realHeight);\n        }\n\n        this.emit('update', this);\n    };\n\n    /**\n     * Load a source.\n     *\n     * If the source is not-immediately-available, such as an image that needs to be\n     * downloaded, then the 'loaded' or 'error' event will be dispatched in the future\n     * and `hasLoaded` will remain false after this call.\n     *\n     * The logic state after calling `loadSource` directly or indirectly (eg. `fromImage`, `new BaseTexture`) is:\n     *\n     *     if (texture.hasLoaded) {\n     *        // texture ready for use\n     *     } else if (texture.isLoading) {\n     *        // listen to 'loaded' and/or 'error' events on texture\n     *     } else {\n     *        // not loading, not going to load UNLESS the source is reloaded\n     *        // (it may still make sense to listen to the events)\n     *     }\n     *\n     * @protected\n     * @param {HTMLImageElement|HTMLCanvasElement} source - the source object of the texture.\n     */\n\n\n    BaseTexture.prototype.loadSource = function loadSource(source) {\n        var _this2 = this;\n\n        var wasLoading = this.isLoading;\n\n        this.hasLoaded = false;\n        this.isLoading = false;\n\n        if (wasLoading && this.source) {\n            this.source.onload = null;\n            this.source.onerror = null;\n        }\n\n        var firstSourceLoaded = !this.source;\n\n        this.source = source;\n\n        // Apply source if loaded. Otherwise setup appropriate loading monitors.\n        if ((source.src && source.complete || source.getContext) && source.width && source.height) {\n            this._updateImageType();\n\n            if (this.imageType === 'svg') {\n                this._loadSvgSource();\n            } else {\n                this._sourceLoaded();\n            }\n\n            if (firstSourceLoaded) {\n                // send loaded event if previous source was null and we have been passed a pre-loaded IMG element\n                this.emit('loaded', this);\n            }\n        } else if (!source.getContext) {\n            var _ret = function () {\n                // Image fail / not ready\n                _this2.isLoading = true;\n\n                var scope = _this2;\n\n                source.onload = function () {\n                    scope._updateImageType();\n                    source.onload = null;\n                    source.onerror = null;\n\n                    if (!scope.isLoading) {\n                        return;\n                    }\n\n                    scope.isLoading = false;\n                    scope._sourceLoaded();\n\n                    if (scope.imageType === 'svg') {\n                        scope._loadSvgSource();\n\n                        return;\n                    }\n\n                    scope.emit('loaded', scope);\n                };\n\n                source.onerror = function () {\n                    source.onload = null;\n                    source.onerror = null;\n\n                    if (!scope.isLoading) {\n                        return;\n                    }\n\n                    scope.isLoading = false;\n                    scope.emit('error', scope);\n                };\n\n                // Per http://www.w3.org/TR/html5/embedded-content-0.html#the-img-element\n                //   \"The value of `complete` can thus change while a script is executing.\"\n                // So complete needs to be re-checked after the callbacks have been added..\n                // NOTE: complete will be true if the image has no src so best to check if the src is set.\n                if (source.complete && source.src) {\n                    // ..and if we're complete now, no need for callbacks\n                    source.onload = null;\n                    source.onerror = null;\n\n                    if (scope.imageType === 'svg') {\n                        scope._loadSvgSource();\n\n                        return {\n                            v: void 0\n                        };\n                    }\n\n                    _this2.isLoading = false;\n\n                    if (source.width && source.height) {\n                        _this2._sourceLoaded();\n\n                        // If any previous subscribers possible\n                        if (wasLoading) {\n                            _this2.emit('loaded', _this2);\n                        }\n                    }\n                    // If any previous subscribers possible\n                    else if (wasLoading) {\n                            _this2.emit('error', _this2);\n                        }\n                }\n            }();\n\n            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n        }\n    };\n\n    /**\n     * Updates type of the source image.\n     */\n\n\n    BaseTexture.prototype._updateImageType = function _updateImageType() {\n        if (!this.imageUrl) {\n            return;\n        }\n\n        var dataUri = (0, _utils.decomposeDataUri)(this.imageUrl);\n        var imageType = void 0;\n\n        if (dataUri && dataUri.mediaType === 'image') {\n            // Check for subType validity\n            var firstSubType = dataUri.subType.split('+')[0];\n\n            imageType = (0, _utils.getUrlFileExtension)('.' + firstSubType);\n\n            if (!imageType) {\n                throw new Error('Invalid image type in data URI.');\n            }\n        } else {\n            imageType = (0, _utils.getUrlFileExtension)(this.imageUrl);\n\n            if (!imageType) {\n                imageType = 'png';\n            }\n        }\n\n        this.imageType = imageType;\n    };\n\n    /**\n     * Checks if `source` is an SVG image and whether it's loaded via a URL or a data URI. Then calls\n     * `_loadSvgSourceUsingDataUri` or `_loadSvgSourceUsingXhr`.\n     */\n\n\n    BaseTexture.prototype._loadSvgSource = function _loadSvgSource() {\n        if (this.imageType !== 'svg') {\n            // Do nothing if source is not svg\n            return;\n        }\n\n        var dataUri = (0, _utils.decomposeDataUri)(this.imageUrl);\n\n        if (dataUri) {\n            this._loadSvgSourceUsingDataUri(dataUri);\n        } else {\n            // We got an URL, so we need to do an XHR to check the svg size\n            this._loadSvgSourceUsingXhr();\n        }\n    };\n\n    /**\n     * Reads an SVG string from data URI and then calls `_loadSvgSourceUsingString`.\n     *\n     * @param {string} dataUri - The data uri to load from.\n     */\n\n\n    BaseTexture.prototype._loadSvgSourceUsingDataUri = function _loadSvgSourceUsingDataUri(dataUri) {\n        var svgString = void 0;\n\n        if (dataUri.encoding === 'base64') {\n            if (!atob) {\n                throw new Error('Your browser doesn\\'t support base64 conversions.');\n            }\n            svgString = atob(dataUri.data);\n        } else {\n            svgString = dataUri.data;\n        }\n\n        this._loadSvgSourceUsingString(svgString);\n    };\n\n    /**\n     * Loads an SVG string from `imageUrl` using XHR and then calls `_loadSvgSourceUsingString`.\n     */\n\n\n    BaseTexture.prototype._loadSvgSourceUsingXhr = function _loadSvgSourceUsingXhr() {\n        var _this3 = this;\n\n        var svgXhr = new XMLHttpRequest();\n\n        // This throws error on IE, so SVG Document can't be used\n        // svgXhr.responseType = 'document';\n\n        // This is not needed since we load the svg as string (breaks IE too)\n        // but overrideMimeType() can be used to force the response to be parsed as XML\n        // svgXhr.overrideMimeType('image/svg+xml');\n\n        svgXhr.onload = function () {\n            if (svgXhr.readyState !== svgXhr.DONE || svgXhr.status !== 200) {\n                throw new Error('Failed to load SVG using XHR.');\n            }\n\n            _this3._loadSvgSourceUsingString(svgXhr.response);\n        };\n\n        svgXhr.onerror = function () {\n            return _this3.emit('error', _this3);\n        };\n\n        svgXhr.open('GET', this.imageUrl, true);\n        svgXhr.send();\n    };\n\n    /**\n     * Loads texture using an SVG string. The original SVG Image is stored as `origSource` and the\n     * created canvas is the new `source`. The SVG is scaled using `sourceScale`. Called by\n     * `_loadSvgSourceUsingXhr` or `_loadSvgSourceUsingDataUri`.\n     *\n     * @param  {string} svgString SVG source as string\n     *\n     * @fires loaded\n     */\n\n\n    BaseTexture.prototype._loadSvgSourceUsingString = function _loadSvgSourceUsingString(svgString) {\n        var svgSize = (0, _utils.getSvgSize)(svgString);\n\n        var svgWidth = svgSize.width;\n        var svgHeight = svgSize.height;\n\n        if (!svgWidth || !svgHeight) {\n            throw new Error('The SVG image must have width and height defined (in pixels), canvas API needs them.');\n        }\n\n        // Scale realWidth and realHeight\n        this.realWidth = Math.round(svgWidth * this.sourceScale);\n        this.realHeight = Math.round(svgHeight * this.sourceScale);\n\n        this.width = this.realWidth / this.resolution;\n        this.height = this.realHeight / this.resolution;\n\n        // Check pow2 after scale\n        this.isPowerOfTwo = _bitTwiddle2.default.isPow2(this.realWidth) && _bitTwiddle2.default.isPow2(this.realHeight);\n\n        // Create a canvas element\n        var canvas = document.createElement('canvas');\n\n        canvas.width = this.realWidth;\n        canvas.height = this.realHeight;\n        canvas._pixiId = 'canvas_' + (0, _utils.uid)();\n\n        // Draw the Svg to the canvas\n        canvas.getContext('2d').drawImage(this.source, 0, 0, svgWidth, svgHeight, 0, 0, this.realWidth, this.realHeight);\n\n        // Replace the original source image with the canvas\n        this.origSource = this.source;\n        this.source = canvas;\n\n        // Add also the canvas in cache (destroy clears by `imageUrl` and `source._pixiId`)\n        _utils.BaseTextureCache[canvas._pixiId] = this;\n\n        this.isLoading = false;\n        this._sourceLoaded();\n        this.emit('loaded', this);\n    };\n\n    /**\n     * Used internally to update the width, height, and some other tracking vars once\n     * a source has successfully loaded.\n     *\n     * @private\n     */\n\n\n    BaseTexture.prototype._sourceLoaded = function _sourceLoaded() {\n        this.hasLoaded = true;\n        this.update();\n    };\n\n    /**\n     * Destroys this base texture\n     *\n     */\n\n\n    BaseTexture.prototype.destroy = function destroy() {\n        if (this.imageUrl) {\n            delete _utils.BaseTextureCache[this.imageUrl];\n            delete _utils.TextureCache[this.imageUrl];\n\n            this.imageUrl = null;\n\n            if (!navigator.isCocoonJS) {\n                this.source.src = '';\n            }\n        }\n        // An svg source has both `imageUrl` and `__pixiId`, so no `else if` here\n        if (this.source && this.source._pixiId) {\n            delete _utils.BaseTextureCache[this.source._pixiId];\n        }\n\n        this.source = null;\n\n        this.dispose();\n    };\n\n    /**\n     * Frees the texture from WebGL memory without destroying this texture object.\n     * This means you can still use the texture later which will upload it to GPU\n     * memory again.\n     *\n     */\n\n\n    BaseTexture.prototype.dispose = function dispose() {\n        this.emit('dispose', this);\n    };\n\n    /**\n     * Changes the source image of the texture.\n     * The original source must be an Image element.\n     *\n     * @param {string} newSrc - the path of the image\n     */\n\n\n    BaseTexture.prototype.updateSourceImage = function updateSourceImage(newSrc) {\n        this.source.src = newSrc;\n\n        this.loadSource(this.source);\n    };\n\n    /**\n     * Helper function that creates a base texture from the given image url.\n     * If the image is not in the base texture cache it will be created and loaded.\n     *\n     * @static\n     * @param {string} imageUrl - The image url of the texture\n     * @param {boolean} [crossorigin=(auto)] - Should use anonymous CORS? Defaults to true if the URL is not a data-URI.\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [sourceScale=(auto)] - Scale for the original image, used with Svg images.\n     * @return {PIXI.BaseTexture} The new base texture.\n     */\n\n\n    BaseTexture.fromImage = function fromImage(imageUrl, crossorigin, scaleMode, sourceScale) {\n        var baseTexture = _utils.BaseTextureCache[imageUrl];\n\n        if (!baseTexture) {\n            // new Image() breaks tex loading in some versions of Chrome.\n            // See https://code.google.com/p/chromium/issues/detail?id=238071\n            var image = new Image(); // document.createElement('img');\n\n            if (crossorigin === undefined && imageUrl.indexOf('data:') !== 0) {\n                image.crossOrigin = (0, _determineCrossOrigin2.default)(imageUrl);\n            }\n\n            baseTexture = new BaseTexture(image, scaleMode);\n            baseTexture.imageUrl = imageUrl;\n\n            if (sourceScale) {\n                baseTexture.sourceScale = sourceScale;\n            }\n\n            // if there is an @2x at the end of the url we are going to assume its a highres image\n            baseTexture.resolution = (0, _utils.getResolutionOfUrl)(imageUrl);\n\n            image.src = imageUrl; // Setting this triggers load\n\n            _utils.BaseTextureCache[imageUrl] = baseTexture;\n        }\n\n        return baseTexture;\n    };\n\n    /**\n     * Helper function that creates a base texture from the given canvas element.\n     *\n     * @static\n     * @param {HTMLCanvasElement} canvas - The canvas element source of the texture\n     * @param {number} scaleMode - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.BaseTexture} The new base texture.\n     */\n\n\n    BaseTexture.fromCanvas = function fromCanvas(canvas, scaleMode) {\n        if (!canvas._pixiId) {\n            canvas._pixiId = 'canvas_' + (0, _utils.uid)();\n        }\n\n        var baseTexture = _utils.BaseTextureCache[canvas._pixiId];\n\n        if (!baseTexture) {\n            baseTexture = new BaseTexture(canvas, scaleMode);\n            _utils.BaseTextureCache[canvas._pixiId] = baseTexture;\n        }\n\n        return baseTexture;\n    };\n\n    return BaseTexture;\n}(_eventemitter2.default);\n\nexports.default = BaseTexture;\n//# sourceMappingURL=BaseTexture.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/textures/BaseTexture.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTexture = require('./BaseTexture');\n\nvar _BaseTexture2 = _interopRequireDefault(_BaseTexture);\n\nvar _VideoBaseTexture = require('./VideoBaseTexture');\n\nvar _VideoBaseTexture2 = _interopRequireDefault(_VideoBaseTexture);\n\nvar _TextureUvs = require('./TextureUvs');\n\nvar _TextureUvs2 = _interopRequireDefault(_TextureUvs);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _math = require('../math');\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A texture stores the information that represents an image or part of an image. It cannot be added\n * to the display list directly. Instead use it as the texture for a Sprite. If no frame is provided\n * then the whole image is used.\n *\n * You can directly create a texture from an image and then reuse it multiple times like this :\n *\n * ```js\n * let texture = PIXI.Texture.fromImage('assets/image.png');\n * let sprite1 = new PIXI.Sprite(texture);\n * let sprite2 = new PIXI.Sprite(texture);\n * ```\n *\n * Textures made from SVGs, loaded or not, cannot be used before the file finishes processing.\n * You can check for this by checking the sprite's _textureID property.\n * ```js\n * var texture = PIXI.Texture.fromImage('assets/image.svg');\n * var sprite1 = new PIXI.Sprite(texture);\n * //sprite1._textureID should not be undefined if the texture has finished processing the SVG file\n * ```\n * You can use a ticker or rAF to ensure your sprites load the finished textures after processing. See issue #3068.\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n */\nvar Texture = function (_EventEmitter) {\n    _inherits(Texture, _EventEmitter);\n\n    /**\n     * @param {PIXI.BaseTexture} baseTexture - The base texture source to create the texture from\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     * @param {PIXI.Rectangle} [orig] - The area of original texture\n     * @param {PIXI.Rectangle} [trim] - Trimmed rectangle of original texture\n     * @param {number} [rotate] - indicates how the texture was rotated by texture packer. See {@link PIXI.GroupD8}\n     */\n    function Texture(baseTexture, frame, orig, trim, rotate) {\n        _classCallCheck(this, Texture);\n\n        /**\n         * Does this Texture have any frame data assigned to it?\n         *\n         * @member {boolean}\n         */\n        var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n        _this.noFrame = false;\n\n        if (!frame) {\n            _this.noFrame = true;\n            frame = new _math.Rectangle(0, 0, 1, 1);\n        }\n\n        if (baseTexture instanceof Texture) {\n            baseTexture = baseTexture.baseTexture;\n        }\n\n        /**\n         * The base texture that this texture uses.\n         *\n         * @member {PIXI.BaseTexture}\n         */\n        _this.baseTexture = baseTexture;\n\n        /**\n         * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n         * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this._frame = frame;\n\n        /**\n         * This is the trimmed area of original texture, before it was put in atlas\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this.trim = trim;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        _this.valid = false;\n\n        /**\n         * This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)\n         *\n         * @member {boolean}\n         */\n        _this.requiresUpdate = false;\n\n        /**\n         * The WebGL UV data cache.\n         *\n         * @member {PIXI.TextureUvs}\n         * @private\n         */\n        _this._uvs = null;\n\n        /**\n         * This is the area of original texture, before it was put in atlas\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this.orig = orig || frame; // new Rectangle(0, 0, 1, 1);\n\n        _this._rotate = Number(rotate || 0);\n\n        if (rotate === true) {\n            // this is old texturepacker legacy, some games/libraries are passing \"true\" for rotated textures\n            _this._rotate = 2;\n        } else if (_this._rotate % 2 !== 0) {\n            throw new Error('attempt to use diamond-shaped UVs. If you are sure, set rotation manually');\n        }\n\n        if (baseTexture.hasLoaded) {\n            if (_this.noFrame) {\n                frame = new _math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n\n                // if there is no frame we should monitor for any base texture changes..\n                baseTexture.on('update', _this.onBaseTextureUpdated, _this);\n            }\n            _this.frame = frame;\n        } else {\n            baseTexture.once('loaded', _this.onBaseTextureLoaded, _this);\n        }\n\n        /**\n         * Fired when the texture is updated. This happens if the frame or the baseTexture is updated.\n         *\n         * @event update\n         * @memberof PIXI.Texture#\n         * @protected\n         */\n\n        _this._updateID = 0;\n\n        /**\n         * Extra field for extra plugins. May contain clamp settings and some matrices\n         * @type {Object}\n         */\n        _this.transform = null;\n        return _this;\n    }\n\n    /**\n     * Updates this texture on the gpu.\n     *\n     */\n\n\n    Texture.prototype.update = function update() {\n        this.baseTexture.update();\n    };\n\n    /**\n     * Called when the base texture is loaded\n     *\n     * @private\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */\n\n\n    Texture.prototype.onBaseTextureLoaded = function onBaseTextureLoaded(baseTexture) {\n        this._updateID++;\n\n        // TODO this code looks confusing.. boo to abusing getters and setters!\n        if (this.noFrame) {\n            this.frame = new _math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n        } else {\n            this.frame = this._frame;\n        }\n\n        this.baseTexture.on('update', this.onBaseTextureUpdated, this);\n        this.emit('update', this);\n    };\n\n    /**\n     * Called when the base texture is updated\n     *\n     * @private\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */\n\n\n    Texture.prototype.onBaseTextureUpdated = function onBaseTextureUpdated(baseTexture) {\n        this._updateID++;\n\n        this._frame.width = baseTexture.width;\n        this._frame.height = baseTexture.height;\n\n        this.emit('update', this);\n    };\n\n    /**\n     * Destroys this texture\n     *\n     * @param {boolean} [destroyBase=false] Whether to destroy the base texture as well\n     */\n\n\n    Texture.prototype.destroy = function destroy(destroyBase) {\n        if (this.baseTexture) {\n            if (destroyBase) {\n                // delete the texture if it exists in the texture cache..\n                // this only needs to be removed if the base texture is actually destroyed too..\n                if (_utils.TextureCache[this.baseTexture.imageUrl]) {\n                    delete _utils.TextureCache[this.baseTexture.imageUrl];\n                }\n\n                this.baseTexture.destroy();\n            }\n\n            this.baseTexture.off('update', this.onBaseTextureUpdated, this);\n            this.baseTexture.off('loaded', this.onBaseTextureLoaded, this);\n\n            this.baseTexture = null;\n        }\n\n        this._frame = null;\n        this._uvs = null;\n        this.trim = null;\n        this.orig = null;\n\n        this.valid = false;\n\n        this.off('dispose', this.dispose, this);\n        this.off('update', this.update, this);\n    };\n\n    /**\n     * Creates a new texture object that acts the same as this one.\n     *\n     * @return {PIXI.Texture} The new texture\n     */\n\n\n    Texture.prototype.clone = function clone() {\n        return new Texture(this.baseTexture, this.frame, this.orig, this.trim, this.rotate);\n    };\n\n    /**\n     * Updates the internal WebGL UV cache.\n     *\n     * @protected\n     */\n\n\n    Texture.prototype._updateUvs = function _updateUvs() {\n        if (!this._uvs) {\n            this._uvs = new _TextureUvs2.default();\n        }\n\n        this._uvs.set(this._frame, this.baseTexture, this.rotate);\n\n        this._updateID++;\n    };\n\n    /**\n     * Helper function that creates a Texture object from the given image url.\n     * If the image is not in the texture cache it will be  created and loaded.\n     *\n     * @static\n     * @param {string} imageUrl - The image url of the texture\n     * @param {boolean} [crossorigin] - Whether requests should be treated as crossorigin\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [sourceScale=(auto)] - Scale for the original image, used with SVG images.\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromImage = function fromImage(imageUrl, crossorigin, scaleMode, sourceScale) {\n        var texture = _utils.TextureCache[imageUrl];\n\n        if (!texture) {\n            texture = new Texture(_BaseTexture2.default.fromImage(imageUrl, crossorigin, scaleMode, sourceScale));\n            _utils.TextureCache[imageUrl] = texture;\n        }\n\n        return texture;\n    };\n\n    /**\n     * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromFrame = function fromFrame(frameId) {\n        var texture = _utils.TextureCache[frameId];\n\n        if (!texture) {\n            throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache');\n        }\n\n        return texture;\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the given canvas element.\n     *\n     * @static\n     * @param {HTMLCanvasElement} canvas - The canvas element source of the texture\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromCanvas = function fromCanvas(canvas, scaleMode) {\n        return new Texture(_BaseTexture2.default.fromCanvas(canvas, scaleMode));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the given video element.\n     *\n     * @static\n     * @param {HTMLVideoElement|string} video - The URL or actual element of the video\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromVideo = function fromVideo(video, scaleMode) {\n        if (typeof video === 'string') {\n            return Texture.fromVideoUrl(video, scaleMode);\n        }\n\n        return new Texture(_VideoBaseTexture2.default.fromVideo(video, scaleMode));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the video url.\n     *\n     * @static\n     * @param {string} videoUrl - URL of the video\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.fromVideoUrl = function fromVideoUrl(videoUrl, scaleMode) {\n        return new Texture(_VideoBaseTexture2.default.fromUrl(videoUrl, scaleMode));\n    };\n\n    /**\n     * Helper function that creates a new Texture based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|PIXI.BaseTexture|HTMLCanvasElement|HTMLVideoElement} source - Source to create texture from\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Texture.from = function from(source) {\n        // TODO auto detect cross origin..\n        // TODO pass in scale mode?\n        if (typeof source === 'string') {\n            var texture = _utils.TextureCache[source];\n\n            if (!texture) {\n                // check if its a video..\n                var isVideo = source.match(/\\.(mp4|webm|ogg|h264|avi|mov)$/) !== null;\n\n                if (isVideo) {\n                    return Texture.fromVideoUrl(source);\n                }\n\n                return Texture.fromImage(source);\n            }\n\n            return texture;\n        } else if (source instanceof HTMLImageElement) {\n            return new Texture(new _BaseTexture2.default(source));\n        } else if (source instanceof HTMLCanvasElement) {\n            return Texture.fromCanvas(source);\n        } else if (source instanceof HTMLVideoElement) {\n            return Texture.fromVideo(source);\n        } else if (source instanceof _BaseTexture2.default) {\n            return new Texture(source);\n        }\n\n        // lets assume its a texture!\n        return source;\n    };\n\n    /**\n     * Adds a texture to the global TextureCache. This cache is shared across the whole PIXI object.\n     *\n     * @static\n     * @param {PIXI.Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the texture will be stored against.\n     */\n\n\n    Texture.addTextureToCache = function addTextureToCache(texture, id) {\n        _utils.TextureCache[id] = texture;\n    };\n\n    /**\n     * Remove a texture from the global TextureCache.\n     *\n     * @static\n     * @param {string} id - The id of the texture to be removed\n     * @return {PIXI.Texture} The texture that was removed\n     */\n\n\n    Texture.removeTextureFromCache = function removeTextureFromCache(id) {\n        var texture = _utils.TextureCache[id];\n\n        delete _utils.TextureCache[id];\n        delete _utils.BaseTextureCache[id];\n\n        return texture;\n    };\n\n    /**\n     * The frame specifies the region of the base texture that this texture uses.\n     *\n     * @member {PIXI.Rectangle}\n     * @memberof PIXI.Texture#\n     */\n\n\n    _createClass(Texture, [{\n        key: 'frame',\n        get: function get() {\n            return this._frame;\n        }\n\n        /**\n         * Set the frame.\n         *\n         * @param {Rectangle} frame - The new frame to set.\n         */\n        ,\n        set: function set(frame) {\n            this._frame = frame;\n\n            this.noFrame = false;\n\n            if (frame.x + frame.width > this.baseTexture.width || frame.y + frame.height > this.baseTexture.height) {\n                throw new Error('Texture Error: frame does not fit inside the base Texture dimensions ' + this);\n            }\n\n            // this.valid = frame && frame.width && frame.height && this.baseTexture.source && this.baseTexture.hasLoaded;\n            this.valid = frame && frame.width && frame.height && this.baseTexture.hasLoaded;\n\n            if (!this.trim && !this.rotate) {\n                this.orig = frame;\n            }\n\n            if (this.valid) {\n                this._updateUvs();\n            }\n        }\n\n        /**\n         * Indicates whether the texture is rotated inside the atlas\n         * set to 2 to compensate for texture packer rotation\n         * set to 6 to compensate for spine packer rotation\n         * can be used to rotate or mirror sprites\n         * See {@link PIXI.GroupD8} for explanation\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'rotate',\n        get: function get() {\n            return this._rotate;\n        }\n\n        /**\n         * Set the rotation\n         *\n         * @param {number} rotate - The new rotation to set.\n         */\n        ,\n        set: function set(rotate) {\n            this._rotate = rotate;\n            if (this.valid) {\n                this._updateUvs();\n            }\n        }\n\n        /**\n         * The width of the Texture in pixels.\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'width',\n        get: function get() {\n            return this.orig ? this.orig.width : 0;\n        }\n\n        /**\n         * The height of the Texture in pixels.\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return this.orig ? this.orig.height : 0;\n        }\n    }]);\n\n    return Texture;\n}(_eventemitter2.default);\n\n/**\n * An empty texture, used often to not have to create multiple empty textures.\n * Can not be destroyed.\n *\n * @static\n * @constant\n */\n\n\nexports.default = Texture;\nTexture.EMPTY = new Texture(new _BaseTexture2.default());\nTexture.EMPTY.destroy = function _emptyDestroy() {/* empty */};\nTexture.EMPTY.on = function _emptyOn() {/* empty */};\nTexture.EMPTY.once = function _emptyOnce() {/* empty */};\nTexture.EMPTY.emit = function _emptyEmit() {/* empty */};\n//# sourceMappingURL=Texture.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/textures/Texture.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tempPoint = new core.Point();\nvar tempPolygon = new core.Polygon();\n\n/**\n * Base mesh class\n * @class\n * @extends PIXI.Container\n * @memberof PIXI.mesh\n */\n\nvar Mesh = function (_core$Container) {\n  _inherits(Mesh, _core$Container);\n\n  /**\n   * @param {PIXI.Texture} texture - The texture to use\n   * @param {Float32Array} [vertices] - if you want to specify the vertices\n   * @param {Float32Array} [uvs] - if you want to specify the uvs\n   * @param {Uint16Array} [indices] - if you want to specify the indices\n   * @param {number} [drawMode] - the drawMode, can be any of the Mesh.DRAW_MODES consts\n   */\n  function Mesh(texture, vertices, uvs, indices, drawMode) {\n    _classCallCheck(this, Mesh);\n\n    /**\n     * The texture of the Mesh\n     *\n     * @member {PIXI.Texture}\n     * @private\n     */\n    var _this = _possibleConstructorReturn(this, _core$Container.call(this));\n\n    _this._texture = null;\n\n    /**\n     * The Uvs of the Mesh\n     *\n     * @member {Float32Array}\n     */\n    _this.uvs = uvs || new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n\n    /**\n     * An array of vertices\n     *\n     * @member {Float32Array}\n     */\n    _this.vertices = vertices || new Float32Array([0, 0, 100, 0, 100, 100, 0, 100]);\n\n    /*\n     * @member {Uint16Array} An array containing the indices of the vertices\n     */\n    //  TODO auto generate this based on draw mode!\n    _this.indices = indices || new Uint16Array([0, 1, 3, 2]);\n\n    /**\n     * Version of mesh uvs are dirty or not\n     *\n     * @member {number}\n     */\n    _this.dirty = 0;\n\n    /**\n     * Version of mesh indices\n     *\n     * @member {number}\n     */\n    _this.indexDirty = 0;\n\n    /**\n     * The blend mode to be applied to the sprite. Set to `PIXI.BLEND_MODES.NORMAL` to remove\n     * any blend mode.\n     *\n     * @member {number}\n     * @default PIXI.BLEND_MODES.NORMAL\n     * @see PIXI.BLEND_MODES\n     */\n    _this.blendMode = core.BLEND_MODES.NORMAL;\n\n    /**\n     * Triangles in canvas mode are automatically antialiased, use this value to force triangles\n     * to overlap a bit with each other.\n     *\n     * @member {number}\n     */\n    _this.canvasPadding = 0;\n\n    /**\n     * The way the Mesh should be drawn, can be any of the {@link PIXI.mesh.Mesh.DRAW_MODES} consts\n     *\n     * @member {number}\n     * @see PIXI.mesh.Mesh.DRAW_MODES\n     */\n    _this.drawMode = drawMode || Mesh.DRAW_MODES.TRIANGLE_MESH;\n\n    // run texture setter;\n    _this.texture = texture;\n\n    /**\n     * The default shader that is used if a mesh doesn't have a more specific one.\n     *\n     * @member {PIXI.Shader}\n     */\n    _this.shader = null;\n\n    /**\n     * The tint applied to the mesh. This is a [r,g,b] value. A value of [1,1,1] will remove any\n     * tint effect.\n     *\n     * @member {number}\n     * @memberof PIXI.mesh.Mesh#\n     */\n    _this.tintRgb = new Float32Array([1, 1, 1]);\n\n    /**\n     * A map of renderer IDs to webgl render data\n     *\n     * @private\n     * @member {object<number, object>}\n     */\n    _this._glDatas = {};\n    return _this;\n  }\n\n  /**\n   * Renders the object using the WebGL renderer\n   *\n   * @private\n   * @param {PIXI.WebGLRenderer} renderer - a reference to the WebGL renderer\n   */\n\n\n  Mesh.prototype._renderWebGL = function _renderWebGL(renderer) {\n    renderer.setObjectRenderer(renderer.plugins.mesh);\n    renderer.plugins.mesh.render(this);\n  };\n\n  /**\n   * Renders the object using the Canvas renderer\n   *\n   * @private\n   * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n   */\n\n\n  Mesh.prototype._renderCanvas = function _renderCanvas(renderer) {\n    renderer.plugins.mesh.render(this);\n  };\n\n  /**\n   * When the texture is updated, this event will fire to update the scale and frame\n   *\n   * @private\n   */\n\n\n  Mesh.prototype._onTextureUpdate = function _onTextureUpdate() {}\n  /* empty */\n\n\n  /**\n   * Returns the bounds of the mesh as a rectangle. The bounds calculation takes the worldTransform into account.\n   *\n   */\n  ;\n\n  Mesh.prototype._calculateBounds = function _calculateBounds() {\n    // TODO - we can cache local bounds and use them if they are dirty (like graphics)\n    this._bounds.addVertices(this.transform, this.vertices, 0, this.vertices.length);\n  };\n\n  /**\n   * Tests if a point is inside this mesh. Works only for TRIANGLE_MESH\n   *\n   * @param {PIXI.Point} point - the point to test\n   * @return {boolean} the result of the test\n   */\n\n\n  Mesh.prototype.containsPoint = function containsPoint(point) {\n    if (!this.getBounds().contains(point.x, point.y)) {\n      return false;\n    }\n\n    this.worldTransform.applyInverse(point, tempPoint);\n\n    var vertices = this.vertices;\n    var points = tempPolygon.points;\n    var indices = this.indices;\n    var len = this.indices.length;\n    var step = this.drawMode === Mesh.DRAW_MODES.TRIANGLES ? 3 : 1;\n\n    for (var i = 0; i + 2 < len; i += step) {\n      var ind0 = indices[i] * 2;\n      var ind1 = indices[i + 1] * 2;\n      var ind2 = indices[i + 2] * 2;\n\n      points[0] = vertices[ind0];\n      points[1] = vertices[ind0 + 1];\n      points[2] = vertices[ind1];\n      points[3] = vertices[ind1 + 1];\n      points[4] = vertices[ind2];\n      points[5] = vertices[ind2 + 1];\n\n      if (tempPolygon.contains(tempPoint.x, tempPoint.y)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * The texture that the mesh uses.\n   *\n   * @member {PIXI.Texture}\n   * @memberof PIXI.mesh.Mesh#\n   */\n\n\n  _createClass(Mesh, [{\n    key: 'texture',\n    get: function get() {\n      return this._texture;\n    }\n\n    /**\n     * Sets the texture the mesh uses.\n     *\n     * @param {Texture} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      if (this._texture === value) {\n        return;\n      }\n\n      this._texture = value;\n\n      if (value) {\n        // wait for the texture to load\n        if (value.baseTexture.hasLoaded) {\n          this._onTextureUpdate();\n        } else {\n          value.once('update', this._onTextureUpdate, this);\n        }\n      }\n    }\n\n    /**\n     * The tint applied to the mesh. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n     *\n     * @member {number}\n     * @memberof PIXI.mesh.Mesh#\n     * @default 0xFFFFFF\n     */\n\n  }, {\n    key: 'tint',\n    get: function get() {\n      return core.utils.rgb2hex(this.tintRgb);\n    }\n\n    /**\n     * Sets the tint the mesh uses.\n     *\n     * @param {number} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      this.tintRgb = core.utils.hex2rgb(value, this.tintRgb);\n    }\n  }]);\n\n  return Mesh;\n}(core.Container);\n\n/**\n * Different drawing buffer modes supported\n *\n * @static\n * @constant\n * @type {object}\n * @property {number} TRIANGLE_MESH\n * @property {number} TRIANGLES\n */\n\n\nexports.default = Mesh;\nMesh.DRAW_MODES = {\n  TRIANGLE_MESH: 0,\n  TRIANGLES: 1\n};\n//# sourceMappingURL=Mesh.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/mesh/Mesh.js\n// module id = 12\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('../utils');\n\nvar _DisplayObject2 = require('./DisplayObject');\n\nvar _DisplayObject3 = _interopRequireDefault(_DisplayObject2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A Container represents a collection of display objects.\n * It is the base class of all display objects that act as a container for other objects.\n *\n *```js\n * let container = new PIXI.Container();\n * container.addChild(sprite);\n * ```\n *\n * @class\n * @extends PIXI.DisplayObject\n * @memberof PIXI\n */\nvar Container = function (_DisplayObject) {\n    _inherits(Container, _DisplayObject);\n\n    /**\n     *\n     */\n    function Container() {\n        _classCallCheck(this, Container);\n\n        /**\n         * The array of children of this container.\n         *\n         * @member {PIXI.DisplayObject[]}\n         * @readonly\n         */\n        var _this = _possibleConstructorReturn(this, _DisplayObject.call(this));\n\n        _this.children = [];\n        return _this;\n    }\n\n    /**\n     * Overridable method that can be used by Container subclasses whenever the children array is modified\n     *\n     * @private\n     */\n\n\n    Container.prototype.onChildrenChange = function onChildrenChange() {}\n    /* empty */\n\n\n    /**\n     * Adds one or more children to the container.\n     *\n     * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n     *\n     * @param {...PIXI.DisplayObject} child - The DisplayObject(s) to add to the container\n     * @return {PIXI.DisplayObject} The first child that was added.\n     */\n    ;\n\n    Container.prototype.addChild = function addChild(child) {\n        var argumentsLength = arguments.length;\n\n        // if there is only one argument we can bypass looping through the them\n        if (argumentsLength > 1) {\n            // loop through the arguments property and add all children\n            // use it the right way (.length and [i]) so that this function can still be optimised by JS runtimes\n            for (var i = 0; i < argumentsLength; i++) {\n                this.addChild(arguments[i]);\n            }\n        } else {\n            // if the child has a parent then lets remove it as Pixi objects can only exist in one place\n            if (child.parent) {\n                child.parent.removeChild(child);\n            }\n\n            child.parent = this;\n\n            // ensure a transform will be recalculated..\n            this.transform._parentID = -1;\n            this._boundsID++;\n\n            this.children.push(child);\n\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(this.children.length - 1);\n            child.emit('added', this);\n        }\n\n        return child;\n    };\n\n    /**\n     * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown\n     *\n     * @param {PIXI.DisplayObject} child - The child to add\n     * @param {number} index - The index to place the child in\n     * @return {PIXI.DisplayObject} The child that was added.\n     */\n\n\n    Container.prototype.addChildAt = function addChildAt(child, index) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error(child + 'addChildAt: The index ' + index + ' supplied is out of bounds ' + this.children.length);\n        }\n\n        if (child.parent) {\n            child.parent.removeChild(child);\n        }\n\n        child.parent = this;\n\n        this.children.splice(index, 0, child);\n\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('added', this);\n\n        return child;\n    };\n\n    /**\n     * Swaps the position of 2 Display Objects within this container.\n     *\n     * @param {PIXI.DisplayObject} child - First display object to swap\n     * @param {PIXI.DisplayObject} child2 - Second display object to swap\n     */\n\n\n    Container.prototype.swapChildren = function swapChildren(child, child2) {\n        if (child === child2) {\n            return;\n        }\n\n        var index1 = this.getChildIndex(child);\n        var index2 = this.getChildIndex(child2);\n\n        this.children[index1] = child2;\n        this.children[index2] = child;\n        this.onChildrenChange(index1 < index2 ? index1 : index2);\n    };\n\n    /**\n     * Returns the index position of a child DisplayObject instance\n     *\n     * @param {PIXI.DisplayObject} child - The DisplayObject instance to identify\n     * @return {number} The index position of the child display object to identify\n     */\n\n\n    Container.prototype.getChildIndex = function getChildIndex(child) {\n        var index = this.children.indexOf(child);\n\n        if (index === -1) {\n            throw new Error('The supplied DisplayObject must be a child of the caller');\n        }\n\n        return index;\n    };\n\n    /**\n     * Changes the position of an existing child in the display object container\n     *\n     * @param {PIXI.DisplayObject} child - The child DisplayObject instance for which you want to change the index number\n     * @param {number} index - The resulting index number for the child display object\n     */\n\n\n    Container.prototype.setChildIndex = function setChildIndex(child, index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('The supplied index is out of bounds');\n        }\n\n        var currentIndex = this.getChildIndex(child);\n\n        (0, _utils.removeItems)(this.children, currentIndex, 1); // remove from old position\n        this.children.splice(index, 0, child); // add at new position\n        this.onChildrenChange(index);\n    };\n\n    /**\n     * Returns the child at the specified index\n     *\n     * @param {number} index - The index to get the child at\n     * @return {PIXI.DisplayObject} The child at the given index, if any.\n     */\n\n\n    Container.prototype.getChildAt = function getChildAt(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('getChildAt: Index (' + index + ') does not exist.');\n        }\n\n        return this.children[index];\n    };\n\n    /**\n     * Removes one or more children from the container.\n     *\n     * @param {...PIXI.DisplayObject} child - The DisplayObject(s) to remove\n     * @return {PIXI.DisplayObject} The first child that was removed.\n     */\n\n\n    Container.prototype.removeChild = function removeChild(child) {\n        var argumentsLength = arguments.length;\n\n        // if there is only one argument we can bypass looping through the them\n        if (argumentsLength > 1) {\n            // loop through the arguments property and add all children\n            // use it the right way (.length and [i]) so that this function can still be optimised by JS runtimes\n            for (var i = 0; i < argumentsLength; i++) {\n                this.removeChild(arguments[i]);\n            }\n        } else {\n            var index = this.children.indexOf(child);\n\n            if (index === -1) return null;\n\n            child.parent = null;\n            (0, _utils.removeItems)(this.children, index, 1);\n\n            // ensure a transform will be recalculated..\n            this.transform._parentID = -1;\n            this._boundsID++;\n\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(index);\n            child.emit('removed', this);\n        }\n\n        return child;\n    };\n\n    /**\n     * Removes a child from the specified index position.\n     *\n     * @param {number} index - The index to get the child from\n     * @return {PIXI.DisplayObject} The child that was removed.\n     */\n\n\n    Container.prototype.removeChildAt = function removeChildAt(index) {\n        var child = this.getChildAt(index);\n\n        child.parent = null;\n        (0, _utils.removeItems)(this.children, index, 1);\n\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('removed', this);\n\n        return child;\n    };\n\n    /**\n     * Removes all children from this container that are within the begin and end indexes.\n     *\n     * @param {number} [beginIndex=0] - The beginning position.\n     * @param {number} [endIndex=this.children.length] - The ending position. Default value is size of the container.\n     * @returns {DisplayObject[]} List of removed children\n     */\n\n\n    Container.prototype.removeChildren = function removeChildren() {\n        var beginIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var endIndex = arguments[1];\n\n        var begin = beginIndex;\n        var end = typeof endIndex === 'number' ? endIndex : this.children.length;\n        var range = end - begin;\n        var removed = void 0;\n\n        if (range > 0 && range <= end) {\n            removed = this.children.splice(begin, range);\n\n            for (var i = 0; i < removed.length; ++i) {\n                removed[i].parent = null;\n            }\n\n            this.onChildrenChange(beginIndex);\n\n            for (var _i = 0; _i < removed.length; ++_i) {\n                removed[_i].emit('removed', this);\n            }\n\n            return removed;\n        } else if (range === 0 && this.children.length === 0) {\n            return [];\n        }\n\n        throw new RangeError('removeChildren: numeric values are outside the acceptable range.');\n    };\n\n    /**\n     * Updates the transform on all children of this container for rendering\n     *\n     * @private\n     */\n\n\n    Container.prototype.updateTransform = function updateTransform() {\n        this._boundsID++;\n\n        this.transform.updateTransform(this.parent.transform);\n\n        // TODO: check render flags, how to process stuff here\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n        for (var i = 0, j = this.children.length; i < j; ++i) {\n            var child = this.children[i];\n\n            if (child.visible) {\n                child.updateTransform();\n            }\n        }\n    };\n\n    /**\n     * Recalculates the bounds of the container.\n     *\n     */\n\n\n    Container.prototype.calculateBounds = function calculateBounds() {\n        this._bounds.clear();\n\n        this._calculateBounds();\n\n        for (var i = 0; i < this.children.length; i++) {\n            var child = this.children[i];\n\n            if (!child.visible || !child.renderable) {\n                continue;\n            }\n\n            child.calculateBounds();\n\n            // TODO: filter+mask, need to mask both somehow\n            if (child._mask) {\n                child._mask.calculateBounds();\n                this._bounds.addBoundsMask(child._bounds, child._mask._bounds);\n            } else if (child.filterArea) {\n                this._bounds.addBoundsArea(child._bounds, child.filterArea);\n            } else {\n                this._bounds.addBounds(child._bounds);\n            }\n        }\n\n        this._lastBoundsID = this._boundsID;\n    };\n\n    /**\n     * Recalculates the bounds of the object. Override this to\n     * calculate the bounds of the specific object (not including children).\n     *\n     */\n\n\n    Container.prototype._calculateBounds = function _calculateBounds() {}\n    // FILL IN//\n\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n    ;\n\n    Container.prototype.renderWebGL = function renderWebGL(renderer) {\n        // if the object is not visible or the alpha is 0 then no need to render this element\n        if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n            return;\n        }\n\n        // do a quick check to see if this element has a mask or a filter.\n        if (this._mask || this._filters) {\n            this.renderAdvancedWebGL(renderer);\n        } else {\n            this._renderWebGL(renderer);\n\n            // simple render children!\n            for (var i = 0, j = this.children.length; i < j; ++i) {\n                this.children[i].renderWebGL(renderer);\n            }\n        }\n    };\n\n    /**\n     * Render the object using the WebGL renderer and advanced features.\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    Container.prototype.renderAdvancedWebGL = function renderAdvancedWebGL(renderer) {\n        renderer.flush();\n\n        var filters = this._filters;\n        var mask = this._mask;\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (filters) {\n            if (!this._enabledFilters) {\n                this._enabledFilters = [];\n            }\n\n            this._enabledFilters.length = 0;\n\n            for (var i = 0; i < filters.length; i++) {\n                if (filters[i].enabled) {\n                    this._enabledFilters.push(filters[i]);\n                }\n            }\n\n            if (this._enabledFilters.length) {\n                renderer.filterManager.pushFilter(this, this._enabledFilters);\n            }\n        }\n\n        if (mask) {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // now loop through the children and make sure they get rendered\n        for (var _i2 = 0, j = this.children.length; _i2 < j; _i2++) {\n            this.children[_i2].renderWebGL(renderer);\n        }\n\n        renderer.flush();\n\n        if (mask) {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (filters && this._enabledFilters && this._enabledFilters.length) {\n            renderer.filterManager.popFilter();\n        }\n    };\n\n    /**\n     * To be overridden by the subclasses.\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    Container.prototype._renderWebGL = function _renderWebGL(renderer) // eslint-disable-line no-unused-vars\n    {}\n    // this is where content itself gets rendered...\n\n\n    /**\n     * To be overridden by the subclass\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n    ;\n\n    Container.prototype._renderCanvas = function _renderCanvas(renderer) // eslint-disable-line no-unused-vars\n    {}\n    // this is where content itself gets rendered...\n\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n    ;\n\n    Container.prototype.renderCanvas = function renderCanvas(renderer) {\n        // if not visible or the alpha is 0 then no need to render this\n        if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n            return;\n        }\n\n        if (this._mask) {\n            renderer.maskManager.pushMask(this._mask);\n        }\n\n        this._renderCanvas(renderer);\n        for (var i = 0, j = this.children.length; i < j; ++i) {\n            this.children[i].renderCanvas(renderer);\n        }\n\n        if (this._mask) {\n            renderer.maskManager.popMask(renderer);\n        }\n    };\n\n    /**\n     * Removes all internal references and listeners as well as removes children from the display list.\n     * Do not use a Container after calling `destroy`.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     */\n\n\n    Container.prototype.destroy = function destroy(options) {\n        _DisplayObject.prototype.destroy.call(this);\n\n        var destroyChildren = typeof options === 'boolean' ? options : options && options.children;\n\n        var oldChildren = this.removeChildren(0, this.children.length);\n\n        if (destroyChildren) {\n            for (var i = 0; i < oldChildren.length; ++i) {\n                oldChildren[i].destroy(options);\n            }\n        }\n    };\n\n    /**\n     * The width of the Container, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Container#\n     */\n\n\n    _createClass(Container, [{\n        key: 'width',\n        get: function get() {\n            return this.scale.x * this.getLocalBounds().width;\n        }\n\n        /**\n         * Sets the width of the container by modifying the scale.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            var width = this.getLocalBounds().width;\n\n            if (width !== 0) {\n                this.scale.x = value / width;\n            } else {\n                this.scale.x = 1;\n            }\n\n            this._width = value;\n        }\n\n        /**\n         * The height of the Container, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         * @memberof PIXI.Container#\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return this.scale.y * this.getLocalBounds().height;\n        }\n\n        /**\n         * Sets the height of the container by modifying the scale.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            var height = this.getLocalBounds().height;\n\n            if (height !== 0) {\n                this.scale.y = value / height;\n            } else {\n                this.scale.y = 1;\n            }\n\n            this._height = value;\n        }\n    }]);\n\n    return Container;\n}(_DisplayObject3.default);\n\n// performance increase to avoid using call.. (10x faster)\n\n\nexports.default = Container;\nContainer.prototype.containerUpdateTransform = Container.prototype.updateTransform;\n//# sourceMappingURL=Container.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/display/Container.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = buildLine;\n\nvar _math = require('../../../math');\n\nvar _utils = require('../../../utils');\n\n/**\n * Builds a line to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildLine(graphicsData, webGLData) {\n    // TODO OPTIMISE!\n    var points = graphicsData.points;\n\n    if (points.length === 0) {\n        return;\n    }\n    // if the line width is an odd number add 0.5 to align to a whole pixel\n    // commenting this out fixes #711 and #1620\n    // if (graphicsData.lineWidth%2)\n    // {\n    //     for (i = 0; i < points.length; i++)\n    //     {\n    //         points[i] += 0.5;\n    //     }\n    // }\n\n    // get first and last point.. figure out the middle!\n    var firstPoint = new _math.Point(points[0], points[1]);\n    var lastPoint = new _math.Point(points[points.length - 2], points[points.length - 1]);\n\n    // if the first point is the last point - gonna have issues :)\n    if (firstPoint.x === lastPoint.x && firstPoint.y === lastPoint.y) {\n        // need to clone as we are going to slightly modify the shape..\n        points = points.slice();\n\n        points.pop();\n        points.pop();\n\n        lastPoint = new _math.Point(points[points.length - 2], points[points.length - 1]);\n\n        var midPointX = lastPoint.x + (firstPoint.x - lastPoint.x) * 0.5;\n        var midPointY = lastPoint.y + (firstPoint.y - lastPoint.y) * 0.5;\n\n        points.unshift(midPointX, midPointY);\n        points.push(midPointX, midPointY);\n    }\n\n    var verts = webGLData.points;\n    var indices = webGLData.indices;\n    var length = points.length / 2;\n    var indexCount = points.length;\n    var indexStart = verts.length / 6;\n\n    // DRAW the Line\n    var width = graphicsData.lineWidth / 2;\n\n    // sort color\n    var color = (0, _utils.hex2rgb)(graphicsData.lineColor);\n    var alpha = graphicsData.lineAlpha;\n    var r = color[0] * alpha;\n    var g = color[1] * alpha;\n    var b = color[2] * alpha;\n\n    var p1x = points[0];\n    var p1y = points[1];\n    var p2x = points[2];\n    var p2y = points[3];\n    var p3x = 0;\n    var p3y = 0;\n\n    var perpx = -(p1y - p2y);\n    var perpy = p1x - p2x;\n    var perp2x = 0;\n    var perp2y = 0;\n    var perp3x = 0;\n    var perp3y = 0;\n\n    var dist = Math.sqrt(perpx * perpx + perpy * perpy);\n\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    // start\n    verts.push(p1x - perpx, p1y - perpy, r, g, b, alpha);\n\n    verts.push(p1x + perpx, p1y + perpy, r, g, b, alpha);\n\n    for (var i = 1; i < length - 1; ++i) {\n        p1x = points[(i - 1) * 2];\n        p1y = points[(i - 1) * 2 + 1];\n\n        p2x = points[i * 2];\n        p2y = points[i * 2 + 1];\n\n        p3x = points[(i + 1) * 2];\n        p3y = points[(i + 1) * 2 + 1];\n\n        perpx = -(p1y - p2y);\n        perpy = p1x - p2x;\n\n        dist = Math.sqrt(perpx * perpx + perpy * perpy);\n        perpx /= dist;\n        perpy /= dist;\n        perpx *= width;\n        perpy *= width;\n\n        perp2x = -(p2y - p3y);\n        perp2y = p2x - p3x;\n\n        dist = Math.sqrt(perp2x * perp2x + perp2y * perp2y);\n        perp2x /= dist;\n        perp2y /= dist;\n        perp2x *= width;\n        perp2y *= width;\n\n        var a1 = -perpy + p1y - (-perpy + p2y);\n        var b1 = -perpx + p2x - (-perpx + p1x);\n        var c1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);\n        var a2 = -perp2y + p3y - (-perp2y + p2y);\n        var b2 = -perp2x + p2x - (-perp2x + p3x);\n        var c2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);\n\n        var denom = a1 * b2 - a2 * b1;\n\n        if (Math.abs(denom) < 0.1) {\n            denom += 10.1;\n            verts.push(p2x - perpx, p2y - perpy, r, g, b, alpha);\n\n            verts.push(p2x + perpx, p2y + perpy, r, g, b, alpha);\n\n            continue;\n        }\n\n        var px = (b1 * c2 - b2 * c1) / denom;\n        var py = (a2 * c1 - a1 * c2) / denom;\n        var pdist = (px - p2x) * (px - p2x) + (py - p2y) * (py - p2y);\n\n        if (pdist > 196 * width * width) {\n            perp3x = perpx - perp2x;\n            perp3y = perpy - perp2y;\n\n            dist = Math.sqrt(perp3x * perp3x + perp3y * perp3y);\n            perp3x /= dist;\n            perp3y /= dist;\n            perp3x *= width;\n            perp3y *= width;\n\n            verts.push(p2x - perp3x, p2y - perp3y);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x + perp3x, p2y + perp3y);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - perp3x, p2y - perp3y);\n            verts.push(r, g, b, alpha);\n\n            indexCount++;\n        } else {\n            verts.push(px, py);\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - (px - p2x), p2y - (py - p2y));\n            verts.push(r, g, b, alpha);\n        }\n    }\n\n    p1x = points[(length - 2) * 2];\n    p1y = points[(length - 2) * 2 + 1];\n\n    p2x = points[(length - 1) * 2];\n    p2y = points[(length - 1) * 2 + 1];\n\n    perpx = -(p1y - p2y);\n    perpy = p1x - p2x;\n\n    dist = Math.sqrt(perpx * perpx + perpy * perpy);\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    verts.push(p2x - perpx, p2y - perpy);\n    verts.push(r, g, b, alpha);\n\n    verts.push(p2x + perpx, p2y + perpy);\n    verts.push(r, g, b, alpha);\n\n    indices.push(indexStart);\n\n    for (var _i = 0; _i < indexCount; ++_i) {\n        indices.push(indexStart++);\n    }\n\n    indices.push(indexStart - 1);\n}\n//# sourceMappingURL=buildLine.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/webgl/utils/buildLine.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _SystemRenderer2 = require('../SystemRenderer');\n\nvar _SystemRenderer3 = _interopRequireDefault(_SystemRenderer2);\n\nvar _CanvasMaskManager = require('./utils/CanvasMaskManager');\n\nvar _CanvasMaskManager2 = _interopRequireDefault(_CanvasMaskManager);\n\nvar _CanvasRenderTarget = require('./utils/CanvasRenderTarget');\n\nvar _CanvasRenderTarget2 = _interopRequireDefault(_CanvasRenderTarget);\n\nvar _mapCanvasBlendModesToPixi = require('./utils/mapCanvasBlendModesToPixi');\n\nvar _mapCanvasBlendModesToPixi2 = _interopRequireDefault(_mapCanvasBlendModesToPixi);\n\nvar _utils = require('../../utils');\n\nvar _const = require('../../const');\n\nvar _settings = require('../../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The CanvasRenderer draws the scene and all its content onto a 2d canvas. This renderer should\n * be used for browsers that do not support WebGL. Don't forget to add the CanvasRenderer.view to\n * your DOM or you will not see anything :)\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.SystemRenderer\n */\nvar CanvasRenderer = function (_SystemRenderer) {\n    _inherits(CanvasRenderer, _SystemRenderer);\n\n    /**\n     * @param {number} [width=800] - the width of the canvas view\n     * @param {number} [height=600] - the height of the canvas view\n     * @param {object} [options] - The optional renderer parameters\n     * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n     * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n     * @param {boolean} [options.autoResize=false] - If the render view is automatically resized, default false\n     * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer. The\n     *  resolution of the renderer retina would be 2.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the CanvasRenderer will clear the canvas or\n     *      not before the new render pass.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     * @param {boolean} [options.roundPixels=false] - If true Pixi will Math.floor() x/y values when rendering,\n     *  stopping pixel interpolation.\n     */\n    function CanvasRenderer(width, height) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        _classCallCheck(this, CanvasRenderer);\n\n        var _this = _possibleConstructorReturn(this, _SystemRenderer.call(this, 'Canvas', width, height, options));\n\n        _this.type = _const.RENDERER_TYPE.CANVAS;\n\n        /**\n         * The canvas 2d context that everything is drawn with.\n         *\n         * @member {CanvasRenderingContext2D}\n         */\n        _this.rootContext = _this.view.getContext('2d', { alpha: _this.transparent });\n\n        /**\n         * Boolean flag controlling canvas refresh.\n         *\n         * @member {boolean}\n         */\n        _this.refresh = true;\n\n        /**\n         * Instance of a CanvasMaskManager, handles masking when using the canvas renderer.\n         *\n         * @member {PIXI.CanvasMaskManager}\n         */\n        _this.maskManager = new _CanvasMaskManager2.default(_this);\n\n        /**\n         * The canvas property used to set the canvas smoothing property.\n         *\n         * @member {string}\n         */\n        _this.smoothProperty = 'imageSmoothingEnabled';\n\n        if (!_this.rootContext.imageSmoothingEnabled) {\n            if (_this.rootContext.webkitImageSmoothingEnabled) {\n                _this.smoothProperty = 'webkitImageSmoothingEnabled';\n            } else if (_this.rootContext.mozImageSmoothingEnabled) {\n                _this.smoothProperty = 'mozImageSmoothingEnabled';\n            } else if (_this.rootContext.oImageSmoothingEnabled) {\n                _this.smoothProperty = 'oImageSmoothingEnabled';\n            } else if (_this.rootContext.msImageSmoothingEnabled) {\n                _this.smoothProperty = 'msImageSmoothingEnabled';\n            }\n        }\n\n        _this.initPlugins();\n\n        _this.blendModes = (0, _mapCanvasBlendModesToPixi2.default)();\n        _this._activeBlendMode = null;\n\n        _this.context = null;\n        _this.renderingToScreen = false;\n\n        _this.resize(width, height);\n        return _this;\n    }\n\n    /**\n     * Renders the object to this canvas view\n     *\n     * @param {PIXI.DisplayObject} displayObject - The object to be rendered\n     * @param {PIXI.RenderTexture} [renderTexture] - A render texture to be rendered to.\n     *  If unset, it will render to the root context.\n     * @param {boolean} [clear=false] - Whether to clear the canvas before drawing\n     * @param {PIXI.Transform} [transform] - A transformation to be applied\n     * @param {boolean} [skipUpdateTransform=false] - Whether to skip the update transform\n     */\n\n\n    CanvasRenderer.prototype.render = function render(displayObject, renderTexture, clear, transform, skipUpdateTransform) {\n        if (!this.view) {\n            return;\n        }\n\n        // can be handy to know!\n        this.renderingToScreen = !renderTexture;\n\n        this.emit('prerender');\n\n        if (renderTexture) {\n            renderTexture = renderTexture.baseTexture || renderTexture;\n\n            if (!renderTexture._canvasRenderTarget) {\n                renderTexture._canvasRenderTarget = new _CanvasRenderTarget2.default(renderTexture.width, renderTexture.height, renderTexture.resolution);\n                renderTexture.source = renderTexture._canvasRenderTarget.canvas;\n                renderTexture.valid = true;\n            }\n\n            this.context = renderTexture._canvasRenderTarget.context;\n            this.resolution = renderTexture._canvasRenderTarget.resolution;\n        } else {\n            this.context = this.rootContext;\n        }\n\n        var context = this.context;\n\n        if (!renderTexture) {\n            this._lastObjectRendered = displayObject;\n        }\n\n        if (!skipUpdateTransform) {\n            // update the scene graph\n            var cacheParent = displayObject.parent;\n            var tempWt = this._tempDisplayObjectParent.transform.worldTransform;\n\n            if (transform) {\n                transform.copy(tempWt);\n            } else {\n                tempWt.identity();\n            }\n\n            displayObject.parent = this._tempDisplayObjectParent;\n            displayObject.updateTransform();\n            displayObject.parent = cacheParent;\n            // displayObject.hitArea = //TODO add a temp hit area\n        }\n\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.globalAlpha = 1;\n        context.globalCompositeOperation = this.blendModes[_const.BLEND_MODES.NORMAL];\n\n        if (navigator.isCocoonJS && this.view.screencanvas) {\n            context.fillStyle = 'black';\n            context.clear();\n        }\n\n        if (clear !== undefined ? clear : this.clearBeforeRender) {\n            if (this.renderingToScreen) {\n                if (this.transparent) {\n                    context.clearRect(0, 0, this.width, this.height);\n                } else {\n                    context.fillStyle = this._backgroundColorString;\n                    context.fillRect(0, 0, this.width, this.height);\n                }\n            } // else {\n            // TODO: implement background for CanvasRenderTarget or RenderTexture?\n            // }\n        }\n\n        // TODO RENDER TARGET STUFF HERE..\n        var tempContext = this.context;\n\n        this.context = context;\n        displayObject.renderCanvas(this);\n        this.context = tempContext;\n\n        this.emit('postrender');\n    };\n\n    /**\n     * Sets the blend mode of the renderer.\n     *\n     * @param {number} blendMode - See {@link PIXI.BLEND_MODES} for valid values.\n     */\n\n\n    CanvasRenderer.prototype.setBlendMode = function setBlendMode(blendMode) {\n        if (this._activeBlendMode === blendMode) {\n            return;\n        }\n\n        this._activeBlendMode = blendMode;\n        this.context.globalCompositeOperation = this.blendModes[blendMode];\n    };\n\n    /**\n     * Removes everything from the renderer and optionally removes the Canvas DOM element.\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     */\n\n\n    CanvasRenderer.prototype.destroy = function destroy(removeView) {\n        this.destroyPlugins();\n\n        // call the base destroy\n        _SystemRenderer.prototype.destroy.call(this, removeView);\n\n        this.context = null;\n\n        this.refresh = true;\n\n        this.maskManager.destroy();\n        this.maskManager = null;\n\n        this.smoothProperty = null;\n    };\n\n    /**\n     * Resizes the canvas view to the specified width and height.\n     *\n     * @extends PIXI.SystemRenderer#resize\n     *\n     * @param {number} width - The new width of the canvas view\n     * @param {number} height - The new height of the canvas view\n     */\n\n\n    CanvasRenderer.prototype.resize = function resize(width, height) {\n        _SystemRenderer.prototype.resize.call(this, width, height);\n\n        // reset the scale mode.. oddly this seems to be reset when the canvas is resized.\n        // surely a browser bug?? Let pixi fix that for you..\n        if (this.smoothProperty) {\n            this.rootContext[this.smoothProperty] = _settings2.default.SCALE_MODE === _const.SCALE_MODES.LINEAR;\n        }\n    };\n\n    return CanvasRenderer;\n}(_SystemRenderer3.default);\n\nexports.default = CanvasRenderer;\n\n\n_utils.pluginTarget.mixin(CanvasRenderer);\n//# sourceMappingURL=CanvasRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/canvas/CanvasRenderer.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLManager2 = require('../managers/WebGLManager');\n\nvar _WebGLManager3 = _interopRequireDefault(_WebGLManager2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Base for a common object renderer that can be used as a system renderer plugin.\n *\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nvar ObjectRenderer = function (_WebGLManager) {\n  _inherits(ObjectRenderer, _WebGLManager);\n\n  function ObjectRenderer() {\n    _classCallCheck(this, ObjectRenderer);\n\n    return _possibleConstructorReturn(this, _WebGLManager.apply(this, arguments));\n  }\n\n  /**\n   * Starts the renderer and sets the shader\n   *\n   */\n  ObjectRenderer.prototype.start = function start() {}\n  // set the shader..\n\n\n  /**\n   * Stops the renderer\n   *\n   */\n  ;\n\n  ObjectRenderer.prototype.stop = function stop() {\n    this.flush();\n  };\n\n  /**\n   * Stub method for rendering content and emptying the current batch.\n   *\n   */\n\n\n  ObjectRenderer.prototype.flush = function flush() {}\n  // flush!\n\n\n  /**\n   * Renders an object\n   *\n   * @param {PIXI.DisplayObject} object - The object to render.\n   */\n  ;\n\n  ObjectRenderer.prototype.render = function render(object) // eslint-disable-line no-unused-vars\n  {\n    // render the object\n  };\n\n  return ObjectRenderer;\n}(_WebGLManager3.default);\n\nexports.default = ObjectRenderer;\n//# sourceMappingURL=ObjectRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/utils/ObjectRenderer.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _math = require('../../../math');\n\nvar _const = require('../../../const');\n\nvar _settings = require('../../../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RESOLUTION = _settings2.default.RESOLUTION,\n    SCALE_MODE = _settings2.default.SCALE_MODE;\n\n/**\n * @class\n * @memberof PIXI\n */\n\nvar RenderTarget = function () {\n  /**\n   * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n   * @param {number} [width=0] - the horizontal range of the filter\n   * @param {number} [height=0] - the vertical range of the filter\n   * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n   * @param {number} [resolution=1] - The current resolution / device pixel ratio\n   * @param {boolean} [root=false] - Whether this object is the root element or not\n   */\n  function RenderTarget(gl, width, height, scaleMode, resolution, root) {\n    _classCallCheck(this, RenderTarget);\n\n    // TODO Resolution could go here ( eg low res blurs )\n\n    /**\n     * The current WebGL drawing context.\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    // next time to create a frame buffer and texture\n\n    /**\n     * A frame buffer\n     *\n     * @member {PIXI.glCore.GLFramebuffer}\n     */\n    this.frameBuffer = null;\n\n    /**\n     * The texture\n     *\n     * @member {PIXI.glCore.GLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * The background colour of this render target, as an array of [r,g,b,a] values\n     *\n     * @member {number[]}\n     */\n    this.clearColor = [0, 0, 0, 0];\n\n    /**\n     * The size of the object as a rectangle\n     *\n     * @member {PIXI.Rectangle}\n     */\n    this.size = new _math.Rectangle(0, 0, 1, 1);\n\n    /**\n     * The current resolution / device pixel ratio\n     *\n     * @member {number}\n     * @default 1\n     */\n    this.resolution = resolution || RESOLUTION;\n\n    /**\n     * The projection matrix\n     *\n     * @member {PIXI.Matrix}\n     */\n    this.projectionMatrix = new _math.Matrix();\n\n    /**\n     * The object's transform\n     *\n     * @member {PIXI.Matrix}\n     */\n    this.transform = null;\n\n    /**\n     * The frame.\n     *\n     * @member {PIXI.Rectangle}\n     */\n    this.frame = null;\n\n    /**\n     * The stencil buffer stores masking data for the render target\n     *\n     * @member {glCore.GLBuffer}\n     */\n    this.defaultFrame = new _math.Rectangle();\n    this.destinationFrame = null;\n    this.sourceFrame = null;\n\n    /**\n     * The stencil buffer stores masking data for the render target\n     *\n     * @member {glCore.GLBuffer}\n     */\n    this.stencilBuffer = null;\n\n    /**\n     * The data structure for the stencil masks\n     *\n     * @member {PIXI.Graphics[]}\n     */\n    this.stencilMaskStack = [];\n\n    /**\n     * Stores filter data for the render target\n     *\n     * @member {object[]}\n     */\n    this.filterData = null;\n\n    /**\n     * The scale mode.\n     *\n     * @member {number}\n     * @default PIXI.settings.SCALE_MODE\n     * @see PIXI.SCALE_MODES\n     */\n    this.scaleMode = scaleMode || SCALE_MODE;\n\n    /**\n     * Whether this object is the root element or not\n     *\n     * @member {boolean}\n     */\n    this.root = root;\n\n    if (!this.root) {\n      this.frameBuffer = _pixiGlCore.GLFramebuffer.createRGBA(gl, 100, 100);\n\n      if (this.scaleMode === _const.SCALE_MODES.NEAREST) {\n        this.frameBuffer.texture.enableNearestScaling();\n      } else {\n        this.frameBuffer.texture.enableLinearScaling();\n      }\n      /*\n          A frame buffer needs a target to render to..\n          create a texture and bind it attach it to the framebuffer..\n       */\n\n      // this is used by the base texture\n      this.texture = this.frameBuffer.texture;\n    } else {\n      // make it a null framebuffer..\n      this.frameBuffer = new _pixiGlCore.GLFramebuffer(gl, 100, 100);\n      this.frameBuffer.framebuffer = null;\n    }\n\n    this.setFrame();\n\n    this.resize(width, height);\n  }\n\n  /**\n   * Clears the filter texture.\n   *\n   * @param {number[]} [clearColor=this.clearColor] - Array of [r,g,b,a] to clear the framebuffer\n   */\n\n\n  RenderTarget.prototype.clear = function clear(clearColor) {\n    var cc = clearColor || this.clearColor;\n\n    this.frameBuffer.clear(cc[0], cc[1], cc[2], cc[3]); // r,g,b,a);\n  };\n\n  /**\n   * Binds the stencil buffer.\n   *\n   */\n\n\n  RenderTarget.prototype.attachStencilBuffer = function attachStencilBuffer() {\n    // TODO check if stencil is done?\n    /**\n     * The stencil buffer is used for masking in pixi\n     * lets create one and then add attach it to the framebuffer..\n     */\n    if (!this.root) {\n      this.frameBuffer.enableStencil();\n    }\n  };\n\n  /**\n   * Sets the frame of the render target.\n   *\n   * @param {Rectangle} destinationFrame - The destination frame.\n   * @param {Rectangle} sourceFrame - The source frame.\n   */\n\n\n  RenderTarget.prototype.setFrame = function setFrame(destinationFrame, sourceFrame) {\n    this.destinationFrame = destinationFrame || this.destinationFrame || this.defaultFrame;\n    this.sourceFrame = sourceFrame || this.sourceFrame || destinationFrame;\n  };\n\n  /**\n   * Binds the buffers and initialises the viewport.\n   *\n   */\n\n\n  RenderTarget.prototype.activate = function activate() {\n    // TOOD refactor usage of frame..\n    var gl = this.gl;\n\n    // make sure the texture is unbound!\n    this.frameBuffer.bind();\n\n    this.calculateProjection(this.destinationFrame, this.sourceFrame);\n\n    if (this.transform) {\n      this.projectionMatrix.append(this.transform);\n    }\n\n    // TODO add a check as them may be the same!\n    if (this.destinationFrame !== this.sourceFrame) {\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(this.destinationFrame.x | 0, this.destinationFrame.y | 0, this.destinationFrame.width * this.resolution | 0, this.destinationFrame.height * this.resolution | 0);\n    } else {\n      gl.disable(gl.SCISSOR_TEST);\n    }\n\n    // TODO - does not need to be updated all the time??\n    gl.viewport(this.destinationFrame.x | 0, this.destinationFrame.y | 0, this.destinationFrame.width * this.resolution | 0, this.destinationFrame.height * this.resolution | 0);\n  };\n\n  /**\n   * Updates the projection matrix based on a projection frame (which is a rectangle)\n   *\n   * @param {Rectangle} destinationFrame - The destination frame.\n   * @param {Rectangle} sourceFrame - The source frame.\n   */\n\n\n  RenderTarget.prototype.calculateProjection = function calculateProjection(destinationFrame, sourceFrame) {\n    var pm = this.projectionMatrix;\n\n    sourceFrame = sourceFrame || destinationFrame;\n\n    pm.identity();\n\n    // TODO: make dest scale source\n    if (!this.root) {\n      pm.a = 1 / destinationFrame.width * 2;\n      pm.d = 1 / destinationFrame.height * 2;\n\n      pm.tx = -1 - sourceFrame.x * pm.a;\n      pm.ty = -1 - sourceFrame.y * pm.d;\n    } else {\n      pm.a = 1 / destinationFrame.width * 2;\n      pm.d = -1 / destinationFrame.height * 2;\n\n      pm.tx = -1 - sourceFrame.x * pm.a;\n      pm.ty = 1 - sourceFrame.y * pm.d;\n    }\n  };\n\n  /**\n   * Resizes the texture to the specified width and height\n   *\n   * @param {number} width - the new width of the texture\n   * @param {number} height - the new height of the texture\n   */\n\n\n  RenderTarget.prototype.resize = function resize(width, height) {\n    width = width | 0;\n    height = height | 0;\n\n    if (this.size.width === width && this.size.height === height) {\n      return;\n    }\n\n    this.size.width = width;\n    this.size.height = height;\n\n    this.defaultFrame.width = width;\n    this.defaultFrame.height = height;\n\n    this.frameBuffer.resize(width * this.resolution, height * this.resolution);\n\n    var projectionFrame = this.frame || this.size;\n\n    this.calculateProjection(projectionFrame);\n  };\n\n  /**\n   * Destroys the render target.\n   *\n   */\n\n\n  RenderTarget.prototype.destroy = function destroy() {\n    this.frameBuffer.destroy();\n\n    this.frameBuffer = null;\n    this.texture = null;\n  };\n\n  return RenderTarget;\n}();\n\nexports.default = RenderTarget;\n//# sourceMappingURL=RenderTarget.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/utils/RenderTarget.js\n// module id = 18\n// module chunks = 0","/**\n * isMobile.js v0.4.0\n *\n * A simple library to detect Apple phones and tablets,\n * Android phones and tablets, other mobile devices (like blackberry, mini-opera and windows phone),\n * and any kind of seven inch device, via user agent sniffing.\n *\n * @author: Kai Mallea (kmallea@gmail.com)\n *\n * @license: http://creativecommons.org/publicdomain/zero/1.0/\n */\n(function (global) {\n\n    var apple_phone         = /iPhone/i,\n        apple_ipod          = /iPod/i,\n        apple_tablet        = /iPad/i,\n        android_phone       = /(?=.*\\bAndroid\\b)(?=.*\\bMobile\\b)/i, // Match 'Android' AND 'Mobile'\n        android_tablet      = /Android/i,\n        amazon_phone        = /(?=.*\\bAndroid\\b)(?=.*\\bSD4930UR\\b)/i,\n        amazon_tablet       = /(?=.*\\bAndroid\\b)(?=.*\\b(?:KFOT|KFTT|KFJWI|KFJWA|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|KFARWI|KFASWI|KFSAWI|KFSAWA)\\b)/i,\n        windows_phone       = /IEMobile/i,\n        windows_tablet      = /(?=.*\\bWindows\\b)(?=.*\\bARM\\b)/i, // Match 'Windows' AND 'ARM'\n        other_blackberry    = /BlackBerry/i,\n        other_blackberry_10 = /BB10/i,\n        other_opera         = /Opera Mini/i,\n        other_chrome        = /(CriOS|Chrome)(?=.*\\bMobile\\b)/i,\n        other_firefox       = /(?=.*\\bFirefox\\b)(?=.*\\bMobile\\b)/i, // Match 'Firefox' AND 'Mobile'\n        seven_inch = new RegExp(\n            '(?:' +         // Non-capturing group\n\n            'Nexus 7' +     // Nexus 7\n\n            '|' +           // OR\n\n            'BNTV250' +     // B&N Nook Tablet 7 inch\n\n            '|' +           // OR\n\n            'Kindle Fire' + // Kindle Fire\n\n            '|' +           // OR\n\n            'Silk' +        // Kindle Fire, Silk Accelerated\n\n            '|' +           // OR\n\n            'GT-P1000' +    // Galaxy Tab 7 inch\n\n            ')',            // End non-capturing group\n\n            'i');           // Case-insensitive matching\n\n    var match = function(regex, userAgent) {\n        return regex.test(userAgent);\n    };\n\n    var IsMobileClass = function(userAgent) {\n        var ua = userAgent || navigator.userAgent;\n\n        // Facebook mobile app's integrated browser adds a bunch of strings that\n        // match everything. Strip it out if it exists.\n        var tmp = ua.split('[FBAN');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n        // iPhone\" string. Same probable happens on other tablet platforms.\n        // This will confuse detection so strip it out if it exists.\n        tmp = ua.split('Twitter');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        this.apple = {\n            phone:  match(apple_phone, ua),\n            ipod:   match(apple_ipod, ua),\n            tablet: !match(apple_phone, ua) && match(apple_tablet, ua),\n            device: match(apple_phone, ua) || match(apple_ipod, ua) || match(apple_tablet, ua)\n        };\n        this.amazon = {\n            phone:  match(amazon_phone, ua),\n            tablet: !match(amazon_phone, ua) && match(amazon_tablet, ua),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua)\n        };\n        this.android = {\n            phone:  match(amazon_phone, ua) || match(android_phone, ua),\n            tablet: !match(amazon_phone, ua) && !match(android_phone, ua) && (match(amazon_tablet, ua) || match(android_tablet, ua)),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua) || match(android_phone, ua) || match(android_tablet, ua)\n        };\n        this.windows = {\n            phone:  match(windows_phone, ua),\n            tablet: match(windows_tablet, ua),\n            device: match(windows_phone, ua) || match(windows_tablet, ua)\n        };\n        this.other = {\n            blackberry:   match(other_blackberry, ua),\n            blackberry10: match(other_blackberry_10, ua),\n            opera:        match(other_opera, ua),\n            firefox:      match(other_firefox, ua),\n            chrome:       match(other_chrome, ua),\n            device:       match(other_blackberry, ua) || match(other_blackberry_10, ua) || match(other_opera, ua) || match(other_firefox, ua) || match(other_chrome, ua)\n        };\n        this.seven_inch = match(seven_inch, ua);\n        this.any = this.apple.device || this.android.device || this.windows.device || this.other.device || this.seven_inch;\n\n        // excludes 'other' devices and ipods, targeting touchscreen phones\n        this.phone = this.apple.phone || this.android.phone || this.windows.phone;\n\n        // excludes 7 inch devices, classifying as phone or tablet is left to the user\n        this.tablet = this.apple.tablet || this.android.tablet || this.windows.tablet;\n\n        if (typeof window === 'undefined') {\n            return this;\n        }\n    };\n\n    var instantiate = function() {\n        var IM = new IsMobileClass();\n        IM.Class = IsMobileClass;\n        return IM;\n    };\n\n    if (typeof module !== 'undefined' && module.exports && typeof window === 'undefined') {\n        //node\n        module.exports = IsMobileClass;\n    } else if (typeof module !== 'undefined' && module.exports && typeof window !== 'undefined') {\n        //browserify\n        module.exports = instantiate();\n    } else if (typeof define === 'function' && define.amd) {\n        //AMD\n        define('isMobile', [], global.isMobile = instantiate());\n    } else {\n        global.isMobile = instantiate();\n    }\n\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ismobilejs/isMobile.js\n// module id = 19\n// module chunks = 0","/* eslint global-require: 0 */\n'use strict';\n\nmodule.exports = require('./Loader');\nmodule.exports.Resource = require('./Resource');\nmodule.exports.middleware = {\n    caching: {\n        memory: require('./middlewares/caching/memory')\n    },\n    parsing: {\n        blob: require('./middlewares/parsing/blob')\n    }\n};\n\nmodule.exports.async = require('./async');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/index.js\n// module id = 20\n// module chunks = 0","/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bit-twiddle/twiddle.js\n// module id = 21\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _math = require('../math');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Generic class to deal with traditional 2D matrix transforms\n *\n * @class\n * @memberof PIXI\n */\nvar TransformBase = function () {\n  /**\n   *\n   */\n  function TransformBase() {\n    _classCallCheck(this, TransformBase);\n\n    /**\n     * The global matrix transform. It can be swapped temporarily by some functions like getLocalBounds()\n     *\n     * @member {PIXI.Matrix}\n     */\n    this.worldTransform = new _math.Matrix();\n\n    /**\n     * The local matrix transform\n     *\n     * @member {PIXI.Matrix}\n     */\n    this.localTransform = new _math.Matrix();\n\n    this._worldID = 0;\n    this._parentID = 0;\n  }\n\n  /**\n   * TransformBase does not have decomposition, so this function wont do anything\n   */\n\n\n  TransformBase.prototype.updateLocalTransform = function updateLocalTransform() {}\n  // empty\n\n\n  /**\n   * Updates the values of the object and applies the parent's transform.\n   *\n   * @param {PIXI.TransformBase} parentTransform - The transform of the parent of this object\n   */\n  ;\n\n  TransformBase.prototype.updateTransform = function updateTransform(parentTransform) {\n    var pt = parentTransform.worldTransform;\n    var wt = this.worldTransform;\n    var lt = this.localTransform;\n\n    // concat the parent matrix with the objects transform.\n    wt.a = lt.a * pt.a + lt.b * pt.c;\n    wt.b = lt.a * pt.b + lt.b * pt.d;\n    wt.c = lt.c * pt.a + lt.d * pt.c;\n    wt.d = lt.c * pt.b + lt.d * pt.d;\n    wt.tx = lt.tx * pt.a + lt.ty * pt.c + pt.tx;\n    wt.ty = lt.tx * pt.b + lt.ty * pt.d + pt.ty;\n\n    this._worldID++;\n  };\n\n  return TransformBase;\n}();\n\n/**\n * Updates the values of the object and applies the parent's transform.\n * @param  parentTransform {PIXI.Transform} The transform of the parent of this object\n *\n */\n\n\nexports.default = TransformBase;\nTransformBase.prototype.updateWorldTransform = TransformBase.prototype.updateTransform;\n\nTransformBase.IDENTITY = new TransformBase();\n//# sourceMappingURL=TransformBase.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/display/TransformBase.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The pixi Matrix class as an object, which makes it a lot faster,\n * here is a representation of it :\n * | a | b | tx|\n * | c | d | ty|\n * | 0 | 0 | 1 |\n *\n * @class\n * @memberof PIXI\n */\nvar Matrix = function () {\n    /**\n     *\n     */\n    function Matrix() {\n        _classCallCheck(this, Matrix);\n\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.a = 1;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.b = 0;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.c = 0;\n\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.d = 1;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.tx = 0;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.ty = 0;\n\n        this.array = null;\n    }\n\n    /**\n     * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n     *\n     * a = array[0]\n     * b = array[1]\n     * c = array[3]\n     * d = array[4]\n     * tx = array[2]\n     * ty = array[5]\n     *\n     * @param {number[]} array - The array that the matrix will be populated from.\n     */\n\n\n    Matrix.prototype.fromArray = function fromArray(array) {\n        this.a = array[0];\n        this.b = array[1];\n        this.c = array[3];\n        this.d = array[4];\n        this.tx = array[2];\n        this.ty = array[5];\n    };\n\n    /**\n     * sets the matrix properties\n     *\n     * @param {number} a - Matrix component\n     * @param {number} b - Matrix component\n     * @param {number} c - Matrix component\n     * @param {number} d - Matrix component\n     * @param {number} tx - Matrix component\n     * @param {number} ty - Matrix component\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.set = function set(a, b, c, d, tx, ty) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n\n        return this;\n    };\n\n    /**\n     * Creates an array from the current Matrix object.\n     *\n     * @param {boolean} transpose - Whether we need to transpose the matrix or not\n     * @param {Float32Array} [out=new Float32Array(9)] - If provided the array will be assigned to out\n     * @return {number[]} the newly created array which contains the matrix\n     */\n\n\n    Matrix.prototype.toArray = function toArray(transpose, out) {\n        if (!this.array) {\n            this.array = new Float32Array(9);\n        }\n\n        var array = out || this.array;\n\n        if (transpose) {\n            array[0] = this.a;\n            array[1] = this.b;\n            array[2] = 0;\n            array[3] = this.c;\n            array[4] = this.d;\n            array[5] = 0;\n            array[6] = this.tx;\n            array[7] = this.ty;\n            array[8] = 1;\n        } else {\n            array[0] = this.a;\n            array[1] = this.c;\n            array[2] = this.tx;\n            array[3] = this.b;\n            array[4] = this.d;\n            array[5] = this.ty;\n            array[6] = 0;\n            array[7] = 0;\n            array[8] = 1;\n        }\n\n        return array;\n    };\n\n    /**\n     * Get a new position with the current transformation applied.\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n     *\n     * @param {PIXI.Point} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, transformed through this matrix\n     */\n\n\n    Matrix.prototype.apply = function apply(pos, newPos) {\n        newPos = newPos || new _Point2.default();\n\n        var x = pos.x;\n        var y = pos.y;\n\n        newPos.x = this.a * x + this.c * y + this.tx;\n        newPos.y = this.b * x + this.d * y + this.ty;\n\n        return newPos;\n    };\n\n    /**\n     * Get a new position with the inverse of the current transformation applied.\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n     *\n     * @param {PIXI.Point} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, inverse-transformed through this matrix\n     */\n\n\n    Matrix.prototype.applyInverse = function applyInverse(pos, newPos) {\n        newPos = newPos || new _Point2.default();\n\n        var id = 1 / (this.a * this.d + this.c * -this.b);\n\n        var x = pos.x;\n        var y = pos.y;\n\n        newPos.x = this.d * id * x + -this.c * id * y + (this.ty * this.c - this.tx * this.d) * id;\n        newPos.y = this.a * id * y + -this.b * id * x + (-this.ty * this.a + this.tx * this.b) * id;\n\n        return newPos;\n    };\n\n    /**\n     * Translates the matrix on the x and y.\n     *\n     * @param {number} x How much to translate x by\n     * @param {number} y How much to translate y by\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.translate = function translate(x, y) {\n        this.tx += x;\n        this.ty += y;\n\n        return this;\n    };\n\n    /**\n     * Applies a scale transformation to the matrix.\n     *\n     * @param {number} x The amount to scale horizontally\n     * @param {number} y The amount to scale vertically\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.scale = function scale(x, y) {\n        this.a *= x;\n        this.d *= y;\n        this.c *= x;\n        this.b *= y;\n        this.tx *= x;\n        this.ty *= y;\n\n        return this;\n    };\n\n    /**\n     * Applies a rotation transformation to the matrix.\n     *\n     * @param {number} angle - The angle in radians.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.rotate = function rotate(angle) {\n        var cos = Math.cos(angle);\n        var sin = Math.sin(angle);\n\n        var a1 = this.a;\n        var c1 = this.c;\n        var tx1 = this.tx;\n\n        this.a = a1 * cos - this.b * sin;\n        this.b = a1 * sin + this.b * cos;\n        this.c = c1 * cos - this.d * sin;\n        this.d = c1 * sin + this.d * cos;\n        this.tx = tx1 * cos - this.ty * sin;\n        this.ty = tx1 * sin + this.ty * cos;\n\n        return this;\n    };\n\n    /**\n     * Appends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to append.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.append = function append(matrix) {\n        var a1 = this.a;\n        var b1 = this.b;\n        var c1 = this.c;\n        var d1 = this.d;\n\n        this.a = matrix.a * a1 + matrix.b * c1;\n        this.b = matrix.a * b1 + matrix.b * d1;\n        this.c = matrix.c * a1 + matrix.d * c1;\n        this.d = matrix.c * b1 + matrix.d * d1;\n\n        this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n        this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n\n        return this;\n    };\n\n    /**\n     * Sets the matrix based on all the available properties\n     *\n     * @param {number} x - Position on the x axis\n     * @param {number} y - Position on the y axis\n     * @param {number} pivotX - Pivot on the x axis\n     * @param {number} pivotY - Pivot on the y axis\n     * @param {number} scaleX - Scale on the x axis\n     * @param {number} scaleY - Scale on the y axis\n     * @param {number} rotation - Rotation in radians\n     * @param {number} skewX - Skew on the x axis\n     * @param {number} skewY - Skew on the y axis\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.setTransform = function setTransform(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY) {\n        var sr = Math.sin(rotation);\n        var cr = Math.cos(rotation);\n        var cy = Math.cos(skewY);\n        var sy = Math.sin(skewY);\n        var nsx = -Math.sin(skewX);\n        var cx = Math.cos(skewX);\n\n        var a = cr * scaleX;\n        var b = sr * scaleX;\n        var c = -sr * scaleY;\n        var d = cr * scaleY;\n\n        this.a = cy * a + sy * c;\n        this.b = cy * b + sy * d;\n        this.c = nsx * a + cx * c;\n        this.d = nsx * b + cx * d;\n\n        this.tx = x + (pivotX * a + pivotY * c);\n        this.ty = y + (pivotX * b + pivotY * d);\n\n        return this;\n    };\n\n    /**\n     * Prepends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to prepend\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.prepend = function prepend(matrix) {\n        var tx1 = this.tx;\n\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n            var a1 = this.a;\n            var c1 = this.c;\n\n            this.a = a1 * matrix.a + this.b * matrix.c;\n            this.b = a1 * matrix.b + this.b * matrix.d;\n            this.c = c1 * matrix.a + this.d * matrix.c;\n            this.d = c1 * matrix.b + this.d * matrix.d;\n        }\n\n        this.tx = tx1 * matrix.a + this.ty * matrix.c + matrix.tx;\n        this.ty = tx1 * matrix.b + this.ty * matrix.d + matrix.ty;\n\n        return this;\n    };\n\n    /**\n     * Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.\n     *\n     * @param {PIXI.Transform|PIXI.TransformStatic} transform - The transform to apply the properties to.\n     * @return {PIXI.Transform|PIXI.TransformStatic} The transform with the newly applied properties\n     */\n\n\n    Matrix.prototype.decompose = function decompose(transform) {\n        // sort out rotation / skew..\n        var a = this.a;\n        var b = this.b;\n        var c = this.c;\n        var d = this.d;\n\n        var skewX = Math.atan2(-c, d);\n        var skewY = Math.atan2(b, a);\n\n        var delta = Math.abs(1 - skewX / skewY);\n\n        if (delta < 0.00001) {\n            transform.rotation = skewY;\n\n            if (a < 0 && d >= 0) {\n                transform.rotation += transform.rotation <= 0 ? Math.PI : -Math.PI;\n            }\n\n            transform.skew.x = transform.skew.y = 0;\n        } else {\n            transform.skew.x = skewX;\n            transform.skew.y = skewY;\n        }\n\n        // next set scale\n        transform.scale.x = Math.sqrt(a * a + b * b);\n        transform.scale.y = Math.sqrt(c * c + d * d);\n\n        // next set position\n        transform.position.x = this.tx;\n        transform.position.y = this.ty;\n\n        return transform;\n    };\n\n    /**\n     * Inverts this matrix\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.invert = function invert() {\n        var a1 = this.a;\n        var b1 = this.b;\n        var c1 = this.c;\n        var d1 = this.d;\n        var tx1 = this.tx;\n        var n = a1 * d1 - b1 * c1;\n\n        this.a = d1 / n;\n        this.b = -b1 / n;\n        this.c = -c1 / n;\n        this.d = a1 / n;\n        this.tx = (c1 * this.ty - d1 * tx1) / n;\n        this.ty = -(a1 * this.ty - b1 * tx1) / n;\n\n        return this;\n    };\n\n    /**\n     * Resets this Matix to an identity (default) matrix.\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.identity = function identity() {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n\n        return this;\n    };\n\n    /**\n     * Creates a new Matrix object with the same values as this one.\n     *\n     * @return {PIXI.Matrix} A copy of this matrix. Good for chaining method calls.\n     */\n\n\n    Matrix.prototype.clone = function clone() {\n        var matrix = new Matrix();\n\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    };\n\n    /**\n     * Changes the values of the given matrix to be the same as the ones in this matrix\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to copy from.\n     * @return {PIXI.Matrix} The matrix given in parameter with its values updated.\n     */\n\n\n    Matrix.prototype.copy = function copy(matrix) {\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    };\n\n    /**\n     * A default (identity) matrix\n     *\n     * @static\n     * @const\n     */\n\n\n    _createClass(Matrix, null, [{\n        key: 'IDENTITY',\n        get: function get() {\n            return new Matrix();\n        }\n\n        /**\n         * A temp matrix\n         *\n         * @static\n         * @const\n         */\n\n    }, {\n        key: 'TEMP_MATRIX',\n        get: function get() {\n            return new Matrix();\n        }\n    }]);\n\n    return Matrix;\n}();\n\nexports.default = Matrix;\n//# sourceMappingURL=Matrix.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/math/Matrix.js\n// module id = 23\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n *\n * @class\n * @memberof PIXI\n */\nvar Point = function () {\n  /**\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=0] - position of the point on the y axis\n   */\n  function Point() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, Point);\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.x = x;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.y = y;\n  }\n\n  /**\n   * Creates a clone of this point\n   *\n   * @return {PIXI.Point} a copy of the point\n   */\n\n\n  Point.prototype.clone = function clone() {\n    return new Point(this.x, this.y);\n  };\n\n  /**\n   * Copies x and y from the given point\n   *\n   * @param {PIXI.Point} p - The point to copy.\n   */\n\n\n  Point.prototype.copy = function copy(p) {\n    this.set(p.x, p.y);\n  };\n\n  /**\n   * Returns true if the given point is equal to this point\n   *\n   * @param {PIXI.Point} p - The point to check\n   * @returns {boolean} Whether the given point equal to this point\n   */\n\n\n  Point.prototype.equals = function equals(p) {\n    return p.x === this.x && p.y === this.y;\n  };\n\n  /**\n   * Sets the point to a new x and y position.\n   * If y is omitted, both x and y will be set to x.\n   *\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=0] - position of the point on the y axis\n   */\n\n\n  Point.prototype.set = function set(x, y) {\n    this.x = x || 0;\n    this.y = y || (y !== 0 ? this.x : 0);\n  };\n\n  return Point;\n}();\n\nexports.default = Point;\n//# sourceMappingURL=Point.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/math/Point.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _const = require('../../const');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Rectangle object is an area defined by its position, as indicated by its top-left corner\n * point (x, y) and by its width and its height.\n *\n * @class\n * @memberof PIXI\n */\nvar Rectangle = function () {\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rectangle\n     * @param {number} [width=0] - The overall width of this rectangle\n     * @param {number} [height=0] - The overall height of this rectangle\n     */\n    function Rectangle() {\n        var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n        _classCallCheck(this, Rectangle);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = width;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = height;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.RECT\n         * @see PIXI.SHAPES\n         */\n        this.type = _const.SHAPES.RECT;\n    }\n\n    /**\n     * returns the left edge of the rectangle\n     *\n     * @member {number}\n     * @memberof PIXI.Rectangle#\n     */\n\n\n    /**\n     * Creates a clone of this Rectangle\n     *\n     * @return {PIXI.Rectangle} a copy of the rectangle\n     */\n    Rectangle.prototype.clone = function clone() {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    };\n\n    /**\n     * Copies another rectangle to this one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to copy.\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n\n\n    Rectangle.prototype.copy = function copy(rectangle) {\n        this.x = rectangle.x;\n        this.y = rectangle.y;\n        this.width = rectangle.width;\n        this.height = rectangle.height;\n\n        return this;\n    };\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rectangle\n     */\n\n\n    Rectangle.prototype.contains = function contains(x, y) {\n        if (this.width <= 0 || this.height <= 0) {\n            return false;\n        }\n\n        if (x >= this.x && x < this.x + this.width) {\n            if (y >= this.y && y < this.y + this.height) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * Pads the rectangle making it grow in all directions.\n     *\n     * @param {number} paddingX - The horizontal padding amount.\n     * @param {number} paddingY - The vertical padding amount.\n     */\n\n\n    Rectangle.prototype.pad = function pad(paddingX, paddingY) {\n        paddingX = paddingX || 0;\n        paddingY = paddingY || (paddingY !== 0 ? paddingX : 0);\n\n        this.x -= paddingX;\n        this.y -= paddingY;\n\n        this.width += paddingX * 2;\n        this.height += paddingY * 2;\n    };\n\n    /**\n     * Fits this rectangle around the passed one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to fit.\n     */\n\n\n    Rectangle.prototype.fit = function fit(rectangle) {\n        if (this.x < rectangle.x) {\n            this.width += this.x;\n            if (this.width < 0) {\n                this.width = 0;\n            }\n\n            this.x = rectangle.x;\n        }\n\n        if (this.y < rectangle.y) {\n            this.height += this.y;\n            if (this.height < 0) {\n                this.height = 0;\n            }\n            this.y = rectangle.y;\n        }\n\n        if (this.x + this.width > rectangle.x + rectangle.width) {\n            this.width = rectangle.width - this.x;\n            if (this.width < 0) {\n                this.width = 0;\n            }\n        }\n\n        if (this.y + this.height > rectangle.y + rectangle.height) {\n            this.height = rectangle.height - this.y;\n            if (this.height < 0) {\n                this.height = 0;\n            }\n        }\n    };\n\n    /**\n     * Enlarges this rectangle to include the passed rectangle.\n     *\n     * @param {PIXI.Rectangle} rect - The rectangle to include.\n     */\n\n\n    Rectangle.prototype.enlarge = function enlarge(rect) {\n        if (rect === Rectangle.EMPTY) {\n            return;\n        }\n\n        var x1 = Math.min(this.x, rect.x);\n        var x2 = Math.max(this.x + this.width, rect.x + rect.width);\n        var y1 = Math.min(this.y, rect.y);\n        var y2 = Math.max(this.y + this.height, rect.y + rect.height);\n\n        this.x = x1;\n        this.width = x2 - x1;\n        this.y = y1;\n        this.height = y2 - y1;\n    };\n\n    _createClass(Rectangle, [{\n        key: 'left',\n        get: function get() {\n            return this.x;\n        }\n\n        /**\n         * returns the right edge of the rectangle\n         *\n         * @member {number}\n         * @memberof PIXI.Rectangle\n         */\n\n    }, {\n        key: 'right',\n        get: function get() {\n            return this.x + this.width;\n        }\n\n        /**\n         * returns the top edge of the rectangle\n         *\n         * @member {number}\n         * @memberof PIXI.Rectangle\n         */\n\n    }, {\n        key: 'top',\n        get: function get() {\n            return this.y;\n        }\n\n        /**\n         * returns the bottom edge of the rectangle\n         *\n         * @member {number}\n         * @memberof PIXI.Rectangle\n         */\n\n    }, {\n        key: 'bottom',\n        get: function get() {\n            return this.y + this.height;\n        }\n\n        /**\n         * A constant empty rectangle.\n         *\n         * @static\n         * @constant\n         */\n\n    }], [{\n        key: 'EMPTY',\n        get: function get() {\n            return new Rectangle(0, 0, 0, 0);\n        }\n    }]);\n\n    return Rectangle;\n}();\n\nexports.default = Rectangle;\n//# sourceMappingURL=Rectangle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/math/shapes/Rectangle.js\n// module id = 25\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _SystemRenderer2 = require('../SystemRenderer');\n\nvar _SystemRenderer3 = _interopRequireDefault(_SystemRenderer2);\n\nvar _MaskManager = require('./managers/MaskManager');\n\nvar _MaskManager2 = _interopRequireDefault(_MaskManager);\n\nvar _StencilManager = require('./managers/StencilManager');\n\nvar _StencilManager2 = _interopRequireDefault(_StencilManager);\n\nvar _FilterManager = require('./managers/FilterManager');\n\nvar _FilterManager2 = _interopRequireDefault(_FilterManager);\n\nvar _RenderTarget = require('./utils/RenderTarget');\n\nvar _RenderTarget2 = _interopRequireDefault(_RenderTarget);\n\nvar _ObjectRenderer = require('./utils/ObjectRenderer');\n\nvar _ObjectRenderer2 = _interopRequireDefault(_ObjectRenderer);\n\nvar _TextureManager = require('./TextureManager');\n\nvar _TextureManager2 = _interopRequireDefault(_TextureManager);\n\nvar _BaseTexture = require('../../textures/BaseTexture');\n\nvar _BaseTexture2 = _interopRequireDefault(_BaseTexture);\n\nvar _TextureGarbageCollector = require('./TextureGarbageCollector');\n\nvar _TextureGarbageCollector2 = _interopRequireDefault(_TextureGarbageCollector);\n\nvar _WebGLState = require('./WebGLState');\n\nvar _WebGLState2 = _interopRequireDefault(_WebGLState);\n\nvar _mapWebGLDrawModesToPixi = require('./utils/mapWebGLDrawModesToPixi');\n\nvar _mapWebGLDrawModesToPixi2 = _interopRequireDefault(_mapWebGLDrawModesToPixi);\n\nvar _validateContext = require('./utils/validateContext');\n\nvar _validateContext2 = _interopRequireDefault(_validateContext);\n\nvar _utils = require('../../utils');\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nvar _const = require('../../const');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CONTEXT_UID = 0;\n\n/**\n * The WebGLRenderer draws the scene and all its content onto a webGL enabled canvas. This renderer\n * should be used for browsers that support webGL. This Render works by automatically managing webGLBatchs.\n * So no need for Sprite Batches or Sprite Clouds.\n * Don't forget to add the view to your DOM or you will not see anything :)\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.SystemRenderer\n */\n\nvar WebGLRenderer = function (_SystemRenderer) {\n    _inherits(WebGLRenderer, _SystemRenderer);\n\n    /**\n     *\n     * @param {number} [width=0] - the width of the canvas view\n     * @param {number} [height=0] - the height of the canvas view\n     * @param {object} [options] - The optional renderer parameters\n     * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n     * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n     * @param {boolean} [options.autoResize=false] - If the render view is automatically resized, default false\n     * @param {boolean} [options.antialias=false] - sets antialias. If not available natively then FXAA\n     *  antialiasing is used\n     * @param {boolean} [options.forceFXAA=false] - forces FXAA antialiasing to be used over native.\n     *  FXAA is faster, but may not always look as great\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer.\n     *  The resolution of the renderer retina would be 2.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the CanvasRenderer will clear\n     *  the canvas or not before the new render pass. If you wish to set this to false, you *must* set\n     *  preserveDrawingBuffer to `true`.\n     * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation,\n     *  enable this if you need to call toDataUrl on the webgl context.\n     * @param {boolean} [options.roundPixels=false] - If true Pixi will Math.floor() x/y values when\n     *  rendering, stopping pixel interpolation.\n     */\n    function WebGLRenderer(width, height) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        _classCallCheck(this, WebGLRenderer);\n\n        /**\n         * The type of this renderer as a standardised const\n         *\n         * @member {number}\n         * @see PIXI.RENDERER_TYPE\n         */\n        var _this = _possibleConstructorReturn(this, _SystemRenderer.call(this, 'WebGL', width, height, options));\n\n        _this.type = _const.RENDERER_TYPE.WEBGL;\n\n        _this.handleContextLost = _this.handleContextLost.bind(_this);\n        _this.handleContextRestored = _this.handleContextRestored.bind(_this);\n\n        _this.view.addEventListener('webglcontextlost', _this.handleContextLost, false);\n        _this.view.addEventListener('webglcontextrestored', _this.handleContextRestored, false);\n\n        /**\n         * The options passed in to create a new webgl context.\n         *\n         * @member {object}\n         * @private\n         */\n        _this._contextOptions = {\n            alpha: _this.transparent,\n            antialias: options.antialias,\n            premultipliedAlpha: _this.transparent && _this.transparent !== 'notMultiplied',\n            stencil: true,\n            preserveDrawingBuffer: options.preserveDrawingBuffer\n        };\n\n        _this._backgroundColorRgba[3] = _this.transparent ? 0 : 1;\n\n        /**\n         * Manages the masks using the stencil buffer.\n         *\n         * @member {PIXI.MaskManager}\n         */\n        _this.maskManager = new _MaskManager2.default(_this);\n\n        /**\n         * Manages the stencil buffer.\n         *\n         * @member {PIXI.StencilManager}\n         */\n        _this.stencilManager = new _StencilManager2.default(_this);\n\n        /**\n         * An empty renderer.\n         *\n         * @member {PIXI.ObjectRenderer}\n         */\n        _this.emptyRenderer = new _ObjectRenderer2.default(_this);\n\n        /**\n         * The currently active ObjectRenderer.\n         *\n         * @member {PIXI.ObjectRenderer}\n         */\n        _this.currentRenderer = _this.emptyRenderer;\n\n        _this.initPlugins();\n\n        /**\n         * The current WebGL rendering context, it is created here\n         *\n         * @member {WebGLRenderingContext}\n         */\n        // initialize the context so it is ready for the managers.\n        if (options.context) {\n            // checks to see if a context is valid..\n            (0, _validateContext2.default)(options.context);\n        }\n\n        _this.gl = options.context || _pixiGlCore2.default.createContext(_this.view, _this._contextOptions);\n\n        _this.CONTEXT_UID = CONTEXT_UID++;\n\n        /**\n         * The currently active ObjectRenderer.\n         *\n         * @member {PIXI.WebGLState}\n         */\n        _this.state = new _WebGLState2.default(_this.gl);\n\n        _this.renderingToScreen = true;\n\n        /**\n         * Holds the current state of textures bound to the GPU.\n         * @type {Array}\n         */\n        _this.boundTextures = null;\n\n        _this._initContext();\n        /**\n         * Manages the filters.\n         *\n         * @member {PIXI.FilterManager}\n         */\n        _this.filterManager = new _FilterManager2.default(_this);\n        // map some webGL blend and drawmodes..\n        _this.drawModes = (0, _mapWebGLDrawModesToPixi2.default)(_this.gl);\n\n        /**\n         * Holds the current shader\n         *\n         * @member {PIXI.Shader}\n         */\n        _this._activeShader = null;\n\n        _this._activeVao = null;\n\n        /**\n         * Holds the current render target\n         *\n         * @member {PIXI.RenderTarget}\n         */\n        _this._activeRenderTarget = null;\n\n        _this._nextTextureLocation = 0;\n\n        _this.setBlendMode(0);\n        return _this;\n    }\n\n    /**\n     * Creates the WebGL context\n     *\n     * @private\n     */\n\n\n    WebGLRenderer.prototype._initContext = function _initContext() {\n        var gl = this.gl;\n\n        // restore a context if it was previously lost\n        if (gl.isContextLost() && gl.getExtension('WEBGL_lose_context')) {\n            gl.getExtension('WEBGL_lose_context').restoreContext();\n        }\n\n        var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n        this.boundTextures = new Array(maxTextures);\n        this.emptyTextures = new Array(maxTextures);\n\n        // create a texture manager...\n        this.textureManager = new _TextureManager2.default(this);\n        this.textureGC = new _TextureGarbageCollector2.default(this);\n\n        this.state.resetToDefault();\n\n        this.rootRenderTarget = new _RenderTarget2.default(gl, this.width, this.height, null, this.resolution, true);\n        this.rootRenderTarget.clearColor = this._backgroundColorRgba;\n\n        this.bindRenderTarget(this.rootRenderTarget);\n\n        // now lets fill up the textures with empty ones!\n        var emptyGLTexture = new _pixiGlCore2.default.GLTexture.fromData(gl, null, 1, 1);\n\n        var tempObj = { _glTextures: {} };\n\n        tempObj._glTextures[this.CONTEXT_UID] = {};\n\n        for (var i = 0; i < maxTextures; i++) {\n            var empty = new _BaseTexture2.default();\n\n            empty._glTextures[this.CONTEXT_UID] = emptyGLTexture;\n\n            this.boundTextures[i] = tempObj;\n            this.emptyTextures[i] = empty;\n            this.bindTexture(null, i);\n        }\n\n        this.emit('context', gl);\n\n        // setup the width/height properties and gl viewport\n        this.resize(this.width, this.height);\n    };\n\n    /**\n     * Renders the object to its webGL view\n     *\n     * @param {PIXI.DisplayObject} displayObject - the object to be rendered\n     * @param {PIXI.RenderTexture} renderTexture - The render texture to render to.\n     * @param {boolean} [clear] - Should the canvas be cleared before the new render\n     * @param {PIXI.Transform} [transform] - A transform to apply to the render texture before rendering.\n     * @param {boolean} [skipUpdateTransform] - Should we skip the update transform pass?\n     */\n\n\n    WebGLRenderer.prototype.render = function render(displayObject, renderTexture, clear, transform, skipUpdateTransform) {\n        // can be handy to know!\n        this.renderingToScreen = !renderTexture;\n\n        this.emit('prerender');\n\n        // no point rendering if our context has been blown up!\n        if (!this.gl || this.gl.isContextLost()) {\n            return;\n        }\n\n        this._nextTextureLocation = 0;\n\n        if (!renderTexture) {\n            this._lastObjectRendered = displayObject;\n        }\n\n        if (!skipUpdateTransform) {\n            // update the scene graph\n            var cacheParent = displayObject.parent;\n\n            displayObject.parent = this._tempDisplayObjectParent;\n            displayObject.updateTransform();\n            displayObject.parent = cacheParent;\n            // displayObject.hitArea = //TODO add a temp hit area\n        }\n\n        this.bindRenderTexture(renderTexture, transform);\n\n        this.currentRenderer.start();\n\n        if (clear !== undefined ? clear : this.clearBeforeRender) {\n            this._activeRenderTarget.clear();\n        }\n\n        displayObject.renderWebGL(this);\n\n        // apply transform..\n        this.currentRenderer.flush();\n\n        // this.setObjectRenderer(this.emptyRenderer);\n\n        this.textureGC.update();\n\n        this.emit('postrender');\n    };\n\n    /**\n     * Changes the current renderer to the one given in parameter\n     *\n     * @param {PIXI.ObjectRenderer} objectRenderer - The object renderer to use.\n     */\n\n\n    WebGLRenderer.prototype.setObjectRenderer = function setObjectRenderer(objectRenderer) {\n        if (this.currentRenderer === objectRenderer) {\n            return;\n        }\n\n        this.currentRenderer.stop();\n        this.currentRenderer = objectRenderer;\n        this.currentRenderer.start();\n    };\n\n    /**\n     * This should be called if you wish to do some custom rendering\n     * It will basically render anything that may be batched up such as sprites\n     *\n     */\n\n\n    WebGLRenderer.prototype.flush = function flush() {\n        this.setObjectRenderer(this.emptyRenderer);\n    };\n\n    /**\n     * Resizes the webGL view to the specified width and height.\n     *\n     * @param {number} width - the new width of the webGL view\n     * @param {number} height - the new height of the webGL view\n     */\n\n\n    WebGLRenderer.prototype.resize = function resize(width, height) {\n        //  if(width * this.resolution === this.width && height * this.resolution === this.height)return;\n\n        _SystemRenderer3.default.prototype.resize.call(this, width, height);\n\n        this.rootRenderTarget.resize(width, height);\n\n        if (this._activeRenderTarget === this.rootRenderTarget) {\n            this.rootRenderTarget.activate();\n\n            if (this._activeShader) {\n                this._activeShader.uniforms.projectionMatrix = this.rootRenderTarget.projectionMatrix.toArray(true);\n            }\n        }\n    };\n\n    /**\n     * Resizes the webGL view to the specified width and height.\n     *\n     * @param {number} blendMode - the desired blend mode\n     */\n\n\n    WebGLRenderer.prototype.setBlendMode = function setBlendMode(blendMode) {\n        this.state.setBlendMode(blendMode);\n    };\n\n    /**\n     * Erases the active render target and fills the drawing area with a colour\n     *\n     * @param {number} [clearColor] - The colour\n     */\n\n\n    WebGLRenderer.prototype.clear = function clear(clearColor) {\n        this._activeRenderTarget.clear(clearColor);\n    };\n\n    /**\n     * Sets the transform of the active render target to the given matrix\n     *\n     * @param {PIXI.Matrix} matrix - The transformation matrix\n     */\n\n\n    WebGLRenderer.prototype.setTransform = function setTransform(matrix) {\n        this._activeRenderTarget.transform = matrix;\n    };\n\n    /**\n     * Binds a render texture for rendering\n     *\n     * @param {PIXI.RenderTexture} renderTexture - The render texture to render\n     * @param {PIXI.Transform} transform - The transform to be applied to the render texture\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.bindRenderTexture = function bindRenderTexture(renderTexture, transform) {\n        var renderTarget = void 0;\n\n        if (renderTexture) {\n            var baseTexture = renderTexture.baseTexture;\n\n            if (!baseTexture._glRenderTargets[this.CONTEXT_UID]) {\n                // bind the current texture\n                this.textureManager.updateTexture(baseTexture, 0);\n            }\n\n            this.unbindTexture(baseTexture);\n\n            renderTarget = baseTexture._glRenderTargets[this.CONTEXT_UID];\n            renderTarget.setFrame(renderTexture.frame);\n        } else {\n            renderTarget = this.rootRenderTarget;\n        }\n\n        renderTarget.transform = transform;\n        this.bindRenderTarget(renderTarget);\n\n        return this;\n    };\n\n    /**\n     * Changes the current render target to the one given in parameter\n     *\n     * @param {PIXI.RenderTarget} renderTarget - the new render target\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.bindRenderTarget = function bindRenderTarget(renderTarget) {\n        if (renderTarget !== this._activeRenderTarget) {\n            this._activeRenderTarget = renderTarget;\n            renderTarget.activate();\n\n            if (this._activeShader) {\n                this._activeShader.uniforms.projectionMatrix = renderTarget.projectionMatrix.toArray(true);\n            }\n\n            this.stencilManager.setMaskStack(renderTarget.stencilMaskStack);\n        }\n\n        return this;\n    };\n\n    /**\n     * Changes the current shader to the one given in parameter\n     *\n     * @param {PIXI.Shader} shader - the new shader\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.bindShader = function bindShader(shader) {\n        // TODO cache\n        if (this._activeShader !== shader) {\n            this._activeShader = shader;\n            shader.bind();\n\n            // automatically set the projection matrix\n            shader.uniforms.projectionMatrix = this._activeRenderTarget.projectionMatrix.toArray(true);\n        }\n\n        return this;\n    };\n\n    /**\n     * Binds the texture. This will return the location of the bound texture.\n     * It may not be the same as the one you pass in. This is due to optimisation that prevents\n     * needless binding of textures. For example if the texture is already bound it will return the\n     * current location of the texture instead of the one provided. To bypass this use force location\n     *\n     * @param {PIXI.Texture} texture - the new texture\n     * @param {number} location - the suggested texture location\n     * @param {boolean} forceLocation - force the location\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.bindTexture = function bindTexture(texture, location, forceLocation) {\n        texture = texture || this.emptyTextures[location];\n        texture = texture.baseTexture || texture;\n        texture.touched = this.textureGC.count;\n\n        if (!forceLocation) {\n            // TODO - maybe look into adding boundIds.. save us the loop?\n            for (var i = 0; i < this.boundTextures.length; i++) {\n                if (this.boundTextures[i] === texture) {\n                    return i;\n                }\n            }\n\n            if (location === undefined) {\n                this._nextTextureLocation++;\n                this._nextTextureLocation %= this.boundTextures.length;\n                location = this.boundTextures.length - this._nextTextureLocation - 1;\n            }\n        } else {\n            location = location || 0;\n        }\n\n        var gl = this.gl;\n        var glTexture = texture._glTextures[this.CONTEXT_UID];\n\n        if (!glTexture) {\n            // this will also bind the texture..\n            this.textureManager.updateTexture(texture, location);\n        } else {\n            // bind the current texture\n            this.boundTextures[location] = texture;\n            gl.activeTexture(gl.TEXTURE0 + location);\n            gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n        }\n\n        return location;\n    };\n\n    /**\n    * unbinds the texture ...\n    *\n    * @param {PIXI.Texture} texture - the texture to unbind\n    * @return {PIXI.WebGLRenderer} Returns itself.\n    */\n\n\n    WebGLRenderer.prototype.unbindTexture = function unbindTexture(texture) {\n        var gl = this.gl;\n\n        texture = texture.baseTexture || texture;\n\n        for (var i = 0; i < this.boundTextures.length; i++) {\n            if (this.boundTextures[i] === texture) {\n                this.boundTextures[i] = this.emptyTextures[i];\n\n                gl.activeTexture(gl.TEXTURE0 + i);\n                gl.bindTexture(gl.TEXTURE_2D, this.emptyTextures[i]._glTextures[this.CONTEXT_UID].texture);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Creates a new VAO from this renderer's context and state.\n     *\n     * @return {VertexArrayObject} The new VAO.\n     */\n\n\n    WebGLRenderer.prototype.createVao = function createVao() {\n        return new _pixiGlCore2.default.VertexArrayObject(this.gl, this.state.attribState);\n    };\n\n    /**\n     * Changes the current Vao to the one given in parameter\n     *\n     * @param {PIXI.VertexArrayObject} vao - the new Vao\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.bindVao = function bindVao(vao) {\n        if (this._activeVao === vao) {\n            return this;\n        }\n\n        if (vao) {\n            vao.bind();\n        } else if (this._activeVao) {\n            // TODO this should always be true i think?\n            this._activeVao.unbind();\n        }\n\n        this._activeVao = vao;\n\n        return this;\n    };\n\n    /**\n     * Resets the WebGL state so you can render things however you fancy!\n     *\n     * @return {PIXI.WebGLRenderer} Returns itself.\n     */\n\n\n    WebGLRenderer.prototype.reset = function reset() {\n        this.setObjectRenderer(this.emptyRenderer);\n\n        this._activeShader = null;\n        this._activeRenderTarget = this.rootRenderTarget;\n\n        // bind the main frame buffer (the screen);\n        this.rootRenderTarget.activate();\n\n        this.state.resetToDefault();\n\n        return this;\n    };\n\n    /**\n     * Handles a lost webgl context\n     *\n     * @private\n     * @param {WebGLContextEvent} event - The context lost event.\n     */\n\n\n    WebGLRenderer.prototype.handleContextLost = function handleContextLost(event) {\n        event.preventDefault();\n    };\n\n    /**\n     * Handles a restored webgl context\n     *\n     * @private\n     */\n\n\n    WebGLRenderer.prototype.handleContextRestored = function handleContextRestored() {\n        this._initContext();\n        this.textureManager.removeAll();\n    };\n\n    /**\n     * Removes everything from the renderer (event listeners, spritebatch, etc...)\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     *  See: https://github.com/pixijs/pixi.js/issues/2233\n     */\n\n\n    WebGLRenderer.prototype.destroy = function destroy(removeView) {\n        this.destroyPlugins();\n\n        // remove listeners\n        this.view.removeEventListener('webglcontextlost', this.handleContextLost);\n        this.view.removeEventListener('webglcontextrestored', this.handleContextRestored);\n\n        this.textureManager.destroy();\n\n        // call base destroy\n        _SystemRenderer.prototype.destroy.call(this, removeView);\n\n        this.uid = 0;\n\n        // destroy the managers\n        this.maskManager.destroy();\n        this.stencilManager.destroy();\n        this.filterManager.destroy();\n\n        this.maskManager = null;\n        this.filterManager = null;\n        this.textureManager = null;\n        this.currentRenderer = null;\n\n        this.handleContextLost = null;\n        this.handleContextRestored = null;\n\n        this._contextOptions = null;\n        this.gl.useProgram(null);\n\n        if (this.gl.getExtension('WEBGL_lose_context')) {\n            this.gl.getExtension('WEBGL_lose_context').loseContext();\n        }\n\n        this.gl = null;\n\n        // this = null;\n    };\n\n    return WebGLRenderer;\n}(_SystemRenderer3.default);\n\nexports.default = WebGLRenderer;\n\n\n_utils.pluginTarget.mixin(WebGLRenderer);\n//# sourceMappingURL=WebGLRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/WebGLRenderer.js\n// module id = 26\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _math = require('../math');\n\nvar _utils = require('../utils');\n\nvar _const = require('../const');\n\nvar _Texture = require('../textures/Texture');\n\nvar _Texture2 = _interopRequireDefault(_Texture);\n\nvar _Container2 = require('../display/Container');\n\nvar _Container3 = _interopRequireDefault(_Container2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tempPoint = new _math.Point();\n\n/**\n * The Sprite object is the base for all textured objects that are rendered to the screen\n *\n * A sprite can be created directly from an image like this:\n *\n * ```js\n * let sprite = new PIXI.Sprite.fromImage('assets/image.png');\n * ```\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\n\nvar Sprite = function (_Container) {\n    _inherits(Sprite, _Container);\n\n    /**\n     * @param {PIXI.Texture} texture - The texture for this sprite\n     */\n    function Sprite(texture) {\n        _classCallCheck(this, Sprite);\n\n        /**\n         * The anchor sets the origin point of the texture.\n         * The default is 0,0 this means the texture's origin is the top left\n         * Setting the anchor to 0.5,0.5 means the texture's origin is centered\n         * Setting the anchor to 1,1 would mean the texture's origin point will be the bottom right corner\n         *\n         * @member {PIXI.ObservablePoint}\n         * @private\n         */\n        var _this = _possibleConstructorReturn(this, _Container.call(this));\n\n        _this._anchor = new _math.ObservablePoint(_this._onAnchorUpdate, _this);\n\n        /**\n         * The texture that the sprite is using\n         *\n         * @private\n         * @member {PIXI.Texture}\n         */\n        _this._texture = null;\n\n        /**\n         * The width of the sprite (this is initially set by the texture)\n         *\n         * @private\n         * @member {number}\n         */\n        _this._width = 0;\n\n        /**\n         * The height of the sprite (this is initially set by the texture)\n         *\n         * @private\n         * @member {number}\n         */\n        _this._height = 0;\n\n        /**\n         * The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n         *\n         * @private\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        _this._tint = null;\n        _this._tintRGB = null;\n        _this.tint = 0xFFFFFF;\n\n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         * @see PIXI.BLEND_MODES\n         */\n        _this.blendMode = _const.BLEND_MODES.NORMAL;\n\n        /**\n         * The shader that will be used to render the sprite. Set to null to remove a current shader.\n         *\n         * @member {PIXI.Filter|PIXI.Shader}\n         */\n        _this.shader = null;\n\n        /**\n         * An internal cached value of the tint.\n         *\n         * @private\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        _this.cachedTint = 0xFFFFFF;\n\n        // call texture setter\n        _this.texture = texture || _Texture2.default.EMPTY;\n\n        /**\n         * this is used to store the vertex data of the sprite (basically a quad)\n         *\n         * @private\n         * @member {Float32Array}\n         */\n        _this.vertexData = new Float32Array(8);\n\n        /**\n         * This is used to calculate the bounds of the object IF it is a trimmed sprite\n         *\n         * @private\n         * @member {Float32Array}\n         */\n        _this.vertexTrimmedData = null;\n\n        _this._transformID = -1;\n        _this._textureID = -1;\n        return _this;\n    }\n\n    /**\n     * When the texture is updated, this event will fire to update the scale and frame\n     *\n     * @private\n     */\n\n\n    Sprite.prototype._onTextureUpdate = function _onTextureUpdate() {\n        this._textureID = -1;\n\n        // so if _width is 0 then width was not set..\n        if (this._width) {\n            this.scale.x = (0, _utils.sign)(this.scale.x) * this._width / this.texture.orig.width;\n        }\n\n        if (this._height) {\n            this.scale.y = (0, _utils.sign)(this.scale.y) * this._height / this.texture.orig.height;\n        }\n    };\n\n    /**\n     * Called when the anchor position updates.\n     *\n     * @private\n     */\n\n\n    Sprite.prototype._onAnchorUpdate = function _onAnchorUpdate() {\n        this._transformID = -1;\n    };\n\n    /**\n     * calculates worldTransform * vertices, store it in vertexData\n     */\n\n\n    Sprite.prototype.calculateVertices = function calculateVertices() {\n        if (this._transformID === this.transform._worldID && this._textureID === this._texture._updateID) {\n            return;\n        }\n\n        this._transformID = this.transform._worldID;\n        this._textureID = this._texture._updateID;\n\n        // set the vertex data\n\n        var texture = this._texture;\n        var wt = this.transform.worldTransform;\n        var a = wt.a;\n        var b = wt.b;\n        var c = wt.c;\n        var d = wt.d;\n        var tx = wt.tx;\n        var ty = wt.ty;\n        var vertexData = this.vertexData;\n        var trim = texture.trim;\n        var orig = texture.orig;\n        var anchor = this._anchor;\n\n        var w0 = 0;\n        var w1 = 0;\n        var h0 = 0;\n        var h1 = 0;\n\n        if (trim) {\n            // if the sprite is trimmed and is not a tilingsprite then we need to add the extra\n            // space before transforming the sprite coords.\n            w1 = trim.x - anchor._x * orig.width;\n            w0 = w1 + trim.width;\n\n            h1 = trim.y - anchor._y * orig.height;\n            h0 = h1 + trim.height;\n        } else {\n            w0 = orig.width * (1 - anchor._x);\n            w1 = orig.width * -anchor._x;\n\n            h0 = orig.height * (1 - anchor._y);\n            h1 = orig.height * -anchor._y;\n        }\n\n        // xy\n        vertexData[0] = a * w1 + c * h1 + tx;\n        vertexData[1] = d * h1 + b * w1 + ty;\n\n        // xy\n        vertexData[2] = a * w0 + c * h1 + tx;\n        vertexData[3] = d * h1 + b * w0 + ty;\n\n        // xy\n        vertexData[4] = a * w0 + c * h0 + tx;\n        vertexData[5] = d * h0 + b * w0 + ty;\n\n        // xy\n        vertexData[6] = a * w1 + c * h0 + tx;\n        vertexData[7] = d * h0 + b * w1 + ty;\n    };\n\n    /**\n     * calculates worldTransform * vertices for a non texture with a trim. store it in vertexTrimmedData\n     * This is used to ensure that the true width and height of a trimmed texture is respected\n     */\n\n\n    Sprite.prototype.calculateTrimmedVertices = function calculateTrimmedVertices() {\n        if (!this.vertexTrimmedData) {\n            this.vertexTrimmedData = new Float32Array(8);\n        }\n\n        // lets do some special trim code!\n        var texture = this._texture;\n        var vertexData = this.vertexTrimmedData;\n        var orig = texture.orig;\n        var anchor = this._anchor;\n\n        // lets calculate the new untrimmed bounds..\n        var wt = this.transform.worldTransform;\n        var a = wt.a;\n        var b = wt.b;\n        var c = wt.c;\n        var d = wt.d;\n        var tx = wt.tx;\n        var ty = wt.ty;\n\n        var w0 = orig.width * (1 - anchor._x);\n        var w1 = orig.width * -anchor._x;\n\n        var h0 = orig.height * (1 - anchor._y);\n        var h1 = orig.height * -anchor._y;\n\n        // xy\n        vertexData[0] = a * w1 + c * h1 + tx;\n        vertexData[1] = d * h1 + b * w1 + ty;\n\n        // xy\n        vertexData[2] = a * w0 + c * h1 + tx;\n        vertexData[3] = d * h1 + b * w0 + ty;\n\n        // xy\n        vertexData[4] = a * w0 + c * h0 + tx;\n        vertexData[5] = d * h0 + b * w0 + ty;\n\n        // xy\n        vertexData[6] = a * w1 + c * h0 + tx;\n        vertexData[7] = d * h0 + b * w1 + ty;\n    };\n\n    /**\n    *\n    * Renders the object using the WebGL renderer\n    *\n    * @private\n    * @param {PIXI.WebGLRenderer} renderer - The webgl renderer to use.\n    */\n\n\n    Sprite.prototype._renderWebGL = function _renderWebGL(renderer) {\n        this.calculateVertices();\n\n        renderer.setObjectRenderer(renderer.plugins.sprite);\n        renderer.plugins.sprite.render(this);\n    };\n\n    /**\n    * Renders the object using the Canvas renderer\n    *\n    * @private\n    * @param {PIXI.CanvasRenderer} renderer - The renderer\n    */\n\n\n    Sprite.prototype._renderCanvas = function _renderCanvas(renderer) {\n        renderer.plugins.sprite.render(this);\n    };\n\n    /**\n     * Updates the bounds of the sprite.\n     *\n     * @private\n     */\n\n\n    Sprite.prototype._calculateBounds = function _calculateBounds() {\n        var trim = this._texture.trim;\n        var orig = this._texture.orig;\n\n        // First lets check to see if the current texture has a trim..\n        if (!trim || trim.width === orig.width && trim.height === orig.height) {\n            // no trim! lets use the usual calculations..\n            this.calculateVertices();\n            this._bounds.addQuad(this.vertexData);\n        } else {\n            // lets calculate a special trimmed bounds...\n            this.calculateTrimmedVertices();\n            this._bounds.addQuad(this.vertexTrimmedData);\n        }\n    };\n\n    /**\n     * Gets the local bounds of the sprite object.\n     *\n     * @param {Rectangle} rect - The output rectangle.\n     * @return {Rectangle} The bounds.\n     */\n\n\n    Sprite.prototype.getLocalBounds = function getLocalBounds(rect) {\n        // we can do a fast local bounds if the sprite has no children!\n        if (this.children.length === 0) {\n            this._bounds.minX = this._texture.orig.width * -this._anchor._x;\n            this._bounds.minY = this._texture.orig.height * -this._anchor._y;\n            this._bounds.maxX = this._texture.orig.width * (1 - this._anchor._x);\n            this._bounds.maxY = this._texture.orig.height * (1 - this._anchor._x);\n\n            if (!rect) {\n                if (!this._localBoundsRect) {\n                    this._localBoundsRect = new _math.Rectangle();\n                }\n\n                rect = this._localBoundsRect;\n            }\n\n            return this._bounds.getRectangle(rect);\n        }\n\n        return _Container.prototype.getLocalBounds.call(this, rect);\n    };\n\n    /**\n     * Tests if a point is inside this sprite\n     *\n     * @param {PIXI.Point} point - the point to test\n     * @return {boolean} the result of the test\n     */\n\n\n    Sprite.prototype.containsPoint = function containsPoint(point) {\n        this.worldTransform.applyInverse(point, tempPoint);\n\n        var width = this._texture.orig.width;\n        var height = this._texture.orig.height;\n        var x1 = -width * this.anchor.x;\n        var y1 = 0;\n\n        if (tempPoint.x > x1 && tempPoint.x < x1 + width) {\n            y1 = -height * this.anchor.y;\n\n            if (tempPoint.y > y1 && tempPoint.y < y1 + height) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * Destroys this sprite and optionally its texture and children\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *      method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Should it destroy the current texture of the sprite as well\n     * @param {boolean} [options.baseTexture=false] - Should it destroy the base texture of the sprite as well\n     */\n\n\n    Sprite.prototype.destroy = function destroy(options) {\n        _Container.prototype.destroy.call(this, options);\n\n        this._anchor = null;\n\n        var destroyTexture = typeof options === 'boolean' ? options : options && options.texture;\n\n        if (destroyTexture) {\n            var destroyBaseTexture = typeof options === 'boolean' ? options : options && options.baseTexture;\n\n            this._texture.destroy(!!destroyBaseTexture);\n        }\n\n        this._texture = null;\n        this.shader = null;\n    };\n\n    // some helper functions..\n\n    /**\n     * Helper function that creates a new sprite based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|PIXI.BaseTexture|HTMLCanvasElement|HTMLVideoElement} source Source to create texture from\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    Sprite.from = function from(source) {\n        return new Sprite(_Texture2.default.from(source));\n    };\n\n    /**\n     * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @return {PIXI.Sprite} A new Sprite using a texture from the texture cache matching the frameId\n     */\n\n\n    Sprite.fromFrame = function fromFrame(frameId) {\n        var texture = _utils.TextureCache[frameId];\n\n        if (!texture) {\n            throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache');\n        }\n\n        return new Sprite(texture);\n    };\n\n    /**\n     * Helper function that creates a sprite that will contain a texture based on an image url\n     * If the image is not in the texture cache it will be loaded\n     *\n     * @static\n     * @param {string} imageId - The image url of the texture\n     * @param {boolean} [crossorigin=(auto)] - if you want to specify the cross-origin parameter\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - if you want to specify the scale mode,\n     *  see {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.Sprite} A new Sprite using a texture from the texture cache matching the image id\n     */\n\n\n    Sprite.fromImage = function fromImage(imageId, crossorigin, scaleMode) {\n        return new Sprite(_Texture2.default.fromImage(imageId, crossorigin, scaleMode));\n    };\n\n    /**\n     * The width of the sprite, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Sprite#\n     */\n\n\n    _createClass(Sprite, [{\n        key: 'width',\n        get: function get() {\n            return Math.abs(this.scale.x) * this.texture.orig.width;\n        }\n\n        /**\n         * Sets the width of the sprite by modifying the scale.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            var s = (0, _utils.sign)(this.scale.x) || 1;\n\n            this.scale.x = s * value / this.texture.orig.width;\n            this._width = value;\n        }\n\n        /**\n         * The height of the sprite, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         * @memberof PIXI.Sprite#\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return Math.abs(this.scale.y) * this.texture.orig.height;\n        }\n\n        /**\n         * Sets the height of the sprite by modifying the scale.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            var s = (0, _utils.sign)(this.scale.y) || 1;\n\n            this.scale.y = s * value / this.texture.orig.height;\n            this._height = value;\n        }\n\n        /**\n         * The anchor sets the origin point of the texture.\n         * The default is 0,0 this means the texture's origin is the top left\n         * Setting the anchor to 0.5,0.5 means the texture's origin is centered\n         * Setting the anchor to 1,1 would mean the texture's origin point will be the bottom right corner\n         *\n         * @member {PIXI.ObservablePoint}\n         * @memberof PIXI.Sprite#\n         */\n\n    }, {\n        key: 'anchor',\n        get: function get() {\n            return this._anchor;\n        }\n\n        /**\n         * Copies the anchor to the sprite.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._anchor.copy(value);\n        }\n\n        /**\n         * The tint applied to the sprite. This is a hex value. A value of\n         * 0xFFFFFF will remove any tint effect.\n         *\n         * @member {number}\n         * @memberof PIXI.Sprite#\n         * @default 0xFFFFFF\n         */\n\n    }, {\n        key: 'tint',\n        get: function get() {\n            return this._tint;\n        }\n\n        /**\n         * Sets the tint of the sprite.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._tint = value;\n            this._tintRGB = (value >> 16) + (value & 0xff00) + ((value & 0xff) << 16);\n        }\n\n        /**\n         * The texture that the sprite is using\n         *\n         * @member {PIXI.Texture}\n         * @memberof PIXI.Sprite#\n         */\n\n    }, {\n        key: 'texture',\n        get: function get() {\n            return this._texture;\n        }\n\n        /**\n         * Sets the texture of the sprite.\n         *\n         * @param {PIXI.Texture} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (this._texture === value) {\n                return;\n            }\n\n            this._texture = value;\n            this.cachedTint = 0xFFFFFF;\n\n            this._textureID = -1;\n\n            if (value) {\n                // wait for the texture to load\n                if (value.baseTexture.hasLoaded) {\n                    this._onTextureUpdate();\n                } else {\n                    value.once('update', this._onTextureUpdate, this);\n                }\n            }\n        }\n    }]);\n\n    return Sprite;\n}(_Container3.default);\n\nexports.default = Sprite;\n//# sourceMappingURL=Sprite.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/sprites/Sprite.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../../utils');\n\nvar _canUseNewCanvasBlendModes = require('../../renderers/canvas/utils/canUseNewCanvasBlendModes');\n\nvar _canUseNewCanvasBlendModes2 = _interopRequireDefault(_canUseNewCanvasBlendModes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Utility methods for Sprite/Texture tinting.\n *\n * @namespace PIXI.CanvasTinter\n */\nvar CanvasTinter = {\n    /**\n     * Basically this method just needs a sprite and a color and tints the sprite with the given color.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Sprite} sprite - the sprite to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @return {HTMLCanvasElement} The tinted canvas\n     */\n    getTintedTexture: function getTintedTexture(sprite, color) {\n        var texture = sprite.texture;\n\n        color = CanvasTinter.roundColor(color);\n\n        var stringColor = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\n\n        texture.tintCache = texture.tintCache || {};\n\n        if (texture.tintCache[stringColor]) {\n            return texture.tintCache[stringColor];\n        }\n\n        // clone texture..\n        var canvas = CanvasTinter.canvas || document.createElement('canvas');\n\n        // CanvasTinter.tintWithPerPixel(texture, stringColor, canvas);\n        CanvasTinter.tintMethod(texture, color, canvas);\n\n        if (CanvasTinter.convertTintToImage) {\n            // is this better?\n            var tintImage = new Image();\n\n            tintImage.src = canvas.toDataURL();\n\n            texture.tintCache[stringColor] = tintImage;\n        } else {\n            texture.tintCache[stringColor] = canvas;\n            // if we are not converting the texture to an image then we need to lose the reference to the canvas\n            CanvasTinter.canvas = null;\n        }\n\n        return canvas;\n    },\n\n    /**\n     * Tint a texture using the 'multiply' operation.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithMultiply: function tintWithMultiply(texture, color, canvas) {\n        var context = canvas.getContext('2d');\n        var crop = texture._frame.clone();\n        var resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n\n        context.fillStyle = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\n\n        context.fillRect(0, 0, crop.width, crop.height);\n\n        context.globalCompositeOperation = 'multiply';\n\n        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);\n\n        context.globalCompositeOperation = 'destination-atop';\n\n        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);\n    },\n\n    /**\n     * Tint a texture using the 'overlay' operation.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithOverlay: function tintWithOverlay(texture, color, canvas) {\n        var context = canvas.getContext('2d');\n        var crop = texture._frame.clone();\n        var resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n\n        context.globalCompositeOperation = 'copy';\n        context.fillStyle = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\n        context.fillRect(0, 0, crop.width, crop.height);\n\n        context.globalCompositeOperation = 'destination-atop';\n        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);\n\n        // context.globalCompositeOperation = 'copy';\n    },\n\n\n    /**\n     * Tint a texture pixel per pixel.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithPerPixel: function tintWithPerPixel(texture, color, canvas) {\n        var context = canvas.getContext('2d');\n        var crop = texture._frame.clone();\n        var resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n\n        context.globalCompositeOperation = 'copy';\n        context.drawImage(texture.baseTexture.source, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);\n\n        var rgbValues = (0, _utils.hex2rgb)(color);\n        var r = rgbValues[0];\n        var g = rgbValues[1];\n        var b = rgbValues[2];\n\n        var pixelData = context.getImageData(0, 0, crop.width, crop.height);\n\n        var pixels = pixelData.data;\n\n        for (var i = 0; i < pixels.length; i += 4) {\n            pixels[i + 0] *= r;\n            pixels[i + 1] *= g;\n            pixels[i + 2] *= b;\n        }\n\n        context.putImageData(pixelData, 0, 0);\n    },\n\n    /**\n     * Rounds the specified color according to the CanvasTinter.cacheStepsPerColorChannel.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @param {number} color - the color to round, should be a hex color\n     * @return {number} The rounded color.\n     */\n    roundColor: function roundColor(color) {\n        var step = CanvasTinter.cacheStepsPerColorChannel;\n\n        var rgbValues = (0, _utils.hex2rgb)(color);\n\n        rgbValues[0] = Math.min(255, rgbValues[0] / step * step);\n        rgbValues[1] = Math.min(255, rgbValues[1] / step * step);\n        rgbValues[2] = Math.min(255, rgbValues[2] / step * step);\n\n        return (0, _utils.rgb2hex)(rgbValues);\n    },\n\n    /**\n     * Number of steps which will be used as a cap when rounding colors.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {number}\n     */\n    cacheStepsPerColorChannel: 8,\n\n    /**\n     * Tint cache boolean flag.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {boolean}\n     */\n    convertTintToImage: false,\n\n    /**\n     * Whether or not the Canvas BlendModes are supported, consequently the ability to tint using the multiply method.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {boolean}\n     */\n    canUseMultiply: (0, _canUseNewCanvasBlendModes2.default)(),\n\n    /**\n     * The tinting method that will be used.\n     *\n     * @memberof PIXI.CanvasTinter\n     * @type {tintMethodFunctionType}\n     */\n    tintMethod: 0\n};\n\nCanvasTinter.tintMethod = CanvasTinter.canUseMultiply ? CanvasTinter.tintWithMultiply : CanvasTinter.tintWithPerPixel;\n\n/**\n * The tintMethod type.\n *\n * @memberof PIXI.CanvasTinter\n * @callback tintMethodFunctionType\n * @param texture {PIXI.Texture} the texture to tint\n * @param color {number} the color to use to tint the sprite with\n * @param canvas {HTMLCanvasElement} the current canvas\n */\n\nexports.default = CanvasTinter;\n//# sourceMappingURL=CanvasTinter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/sprites/canvas/CanvasTinter.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _BaseRenderTexture = require('./BaseRenderTexture');\n\nvar _BaseRenderTexture2 = _interopRequireDefault(_BaseRenderTexture);\n\nvar _Texture2 = require('./Texture');\n\nvar _Texture3 = _interopRequireDefault(_Texture2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A RenderTexture is a special texture that allows any Pixi display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A RenderTexture takes a snapshot of any Display Object given to its render method. The position\n * and rotation of the given Display Objects is ignored. For example:\n *\n * ```js\n * let renderer = PIXI.autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let renderTexture = PIXI.RenderTexture.create(800, 600);\n * let sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * renderer.render(sprite, renderTexture);\n * ```\n *\n * The Sprite in this case will be rendered to a position of 0,0. To render this sprite at its actual\n * position a Container should be used:\n *\n * ```js\n * let doc = new PIXI.Container();\n *\n * doc.addChild(sprite);\n *\n * renderer.render(doc, renderTexture);  // Renders to center of renderTexture\n * ```\n *\n * @class\n * @extends PIXI.Texture\n * @memberof PIXI\n */\nvar RenderTexture = function (_Texture) {\n    _inherits(RenderTexture, _Texture);\n\n    /**\n     * @param {PIXI.BaseRenderTexture} baseRenderTexture - The renderer used for this RenderTexture\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     */\n    function RenderTexture(baseRenderTexture, frame) {\n        _classCallCheck(this, RenderTexture);\n\n        // support for legacy..\n        var _legacyRenderer = null;\n\n        if (!(baseRenderTexture instanceof _BaseRenderTexture2.default)) {\n            /* eslint-disable prefer-rest-params, no-console */\n            var width = arguments[1];\n            var height = arguments[2];\n            var scaleMode = arguments[3] || 0;\n            var resolution = arguments[4] || 1;\n\n            // we have an old render texture..\n            console.warn('Please use RenderTexture.create(' + width + ', ' + height + ') instead of the ctor directly.');\n            _legacyRenderer = arguments[0];\n            /* eslint-enable prefer-rest-params, no-console */\n\n            frame = null;\n            baseRenderTexture = new _BaseRenderTexture2.default(width, height, scaleMode, resolution);\n        }\n\n        /**\n         * The base texture object that this texture uses\n         *\n         * @member {BaseTexture}\n         */\n\n        var _this = _possibleConstructorReturn(this, _Texture.call(this, baseRenderTexture, frame));\n\n        _this.legacyRenderer = _legacyRenderer;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        _this.valid = true;\n\n        _this._updateUvs();\n        return _this;\n    }\n\n    /**\n     * Resizes the RenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     * @param {boolean} doNotResizeBaseTexture - Should the baseTexture.width and height values be resized as well?\n     */\n\n\n    RenderTexture.prototype.resize = function resize(width, height, doNotResizeBaseTexture) {\n        // TODO - could be not required..\n        this.valid = width > 0 && height > 0;\n\n        this._frame.width = this.orig.width = width;\n        this._frame.height = this.orig.height = height;\n\n        if (!doNotResizeBaseTexture) {\n            this.baseTexture.resize(width, height);\n        }\n\n        this._updateUvs();\n    };\n\n    /**\n     * A short hand way of creating a render texture.\n     *\n     * @param {number} [width=100] - The width of the render texture\n     * @param {number} [height=100] - The height of the render texture\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture being generated\n     * @return {PIXI.RenderTexture} The new render texture\n     */\n\n\n    RenderTexture.create = function create(width, height, scaleMode, resolution) {\n        return new RenderTexture(new _BaseRenderTexture2.default(width, height, scaleMode, resolution));\n    };\n\n    return RenderTexture;\n}(_Texture3.default);\n\nexports.default = RenderTexture;\n//# sourceMappingURL=RenderTexture.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/textures/RenderTexture.js\n// module id = 29\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\nexports.default = createIndicesForQuads;\n/**\n * Generic Mask Stack data structure\n *\n * @memberof PIXI\n * @function createIndicesForQuads\n * @private\n * @param {number} size - Number of quads\n * @return {Uint16Array} indices\n */\nfunction createIndicesForQuads(size) {\n    // the total number of indices in our array, there are 6 points per quad.\n\n    var totalIndices = size * 6;\n\n    var indices = new Uint16Array(totalIndices);\n\n    // fill the indices with the quads to draw\n    for (var i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n        indices[i + 0] = j + 0;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 0;\n        indices[i + 4] = j + 2;\n        indices[i + 5] = j + 3;\n    }\n\n    return indices;\n}\n//# sourceMappingURL=createIndicesForQuads.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/utils/createIndicesForQuads.js\n// module id = 30\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.BitmapText = exports.TilingSpriteRenderer = exports.TilingSprite = exports.AnimatedSprite = exports.TextureTransform = undefined;\n\nvar _TextureTransform = require('./TextureTransform');\n\nObject.defineProperty(exports, 'TextureTransform', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TextureTransform).default;\n  }\n});\n\nvar _AnimatedSprite = require('./AnimatedSprite');\n\nObject.defineProperty(exports, 'AnimatedSprite', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_AnimatedSprite).default;\n  }\n});\n\nvar _TilingSprite = require('./TilingSprite');\n\nObject.defineProperty(exports, 'TilingSprite', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TilingSprite).default;\n  }\n});\n\nvar _TilingSpriteRenderer = require('./webgl/TilingSpriteRenderer');\n\nObject.defineProperty(exports, 'TilingSpriteRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TilingSpriteRenderer).default;\n  }\n});\n\nvar _BitmapText = require('./BitmapText');\n\nObject.defineProperty(exports, 'BitmapText', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BitmapText).default;\n  }\n});\n\nrequire('./cacheAsBitmap');\n\nrequire('./getChildByName');\n\nrequire('./getGlobalPosition');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// imported for side effect of extending the prototype only, contains no exports\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extras/index.js\n// module id = 31\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _CountLimiter = require('./limiters/CountLimiter');\n\nvar _CountLimiter2 = _interopRequireDefault(_CountLimiter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SharedTicker = core.ticker.shared;\n\n/**\n * Default number of uploads per frame using prepare plugin.\n *\n * @static\n * @memberof PIXI.settings\n * @name UPLOADS_PER_FRAME\n * @type {number}\n * @default 4\n */\ncore.settings.UPLOADS_PER_FRAME = 4;\n\n/**\n * The prepare manager provides functionality to upload content to the GPU. BasePrepare handles\n * basic queuing functionality and is extended by {@link PIXI.prepare.WebGLPrepare} and {@link PIXI.prepare.CanvasPrepare}\n * to provide preparation capabilities specific to their respective renderers.\n *\n * @abstract\n * @class\n * @memberof PIXI\n */\n\nvar BasePrepare = function () {\n    /**\n     * @param {PIXI.SystemRenderer} renderer - A reference to the current renderer\n     */\n    function BasePrepare(renderer) {\n        var _this = this;\n\n        _classCallCheck(this, BasePrepare);\n\n        /**\n         * The limiter to be used to control how quickly items are prepared.\n         * @type {PIXI.prepare.CountLimiter|PIXI.prepare.TimeLimiter}\n         */\n        this.limiter = new _CountLimiter2.default(core.settings.UPLOADS_PER_FRAME);\n\n        /**\n         * Reference to the renderer.\n         * @type {PIXI.SystemRenderer}\n         * @protected\n         */\n        this.renderer = renderer;\n\n        /**\n         * The only real difference between CanvasPrepare and WebGLPrepare is what they pass\n         * to upload hooks. That different parameter is stored here.\n         * @type {PIXI.prepare.CanvasPrepare|PIXI.WebGLRenderer}\n         * @protected\n         */\n        this.uploadHookHelper = null;\n\n        /**\n         * Collection of items to uploads at once.\n         * @type {Array<*>}\n         * @private\n         */\n        this.queue = [];\n\n        /**\n         * Collection of additional hooks for finding assets.\n         * @type {Array<Function>}\n         * @private\n         */\n        this.addHooks = [];\n\n        /**\n         * Collection of additional hooks for processing assets.\n         * @type {Array<Function>}\n         * @private\n         */\n        this.uploadHooks = [];\n\n        /**\n         * Callback to call after completed.\n         * @type {Array<Function>}\n         * @private\n         */\n        this.completes = [];\n\n        /**\n         * If prepare is ticking (running).\n         * @type {boolean}\n         * @private\n         */\n        this.ticking = false;\n\n        /**\n         * 'bound' call for prepareItems().\n         * @type {Function}\n         * @private\n         */\n        this.delayedTick = function () {\n            // unlikely, but in case we were destroyed between tick() and delayedTick()\n            if (!_this.queue) {\n                return;\n            }\n            _this.prepareItems();\n        };\n\n        this.register(findText, drawText);\n        this.register(findTextStyle, calculateTextStyle);\n    }\n\n    /**\n     * Upload all the textures and graphics to the GPU.\n     *\n     * @param {Function|PIXI.DisplayObject|PIXI.Container} item - Either\n     *        the container or display object to search for items to upload or\n     *        the callback function, if items have been added using `prepare.add`.\n     * @param {Function} [done] - Optional callback when all queued uploads have completed\n     */\n\n\n    BasePrepare.prototype.upload = function upload(item, done) {\n        if (typeof item === 'function') {\n            done = item;\n            item = null;\n        }\n\n        // If a display object, search for items\n        // that we could upload\n        if (item) {\n            this.add(item);\n        }\n\n        // Get the items for upload from the display\n        if (this.queue.length) {\n            if (done) {\n                this.completes.push(done);\n            }\n\n            if (!this.ticking) {\n                this.ticking = true;\n                SharedTicker.addOnce(this.tick, this);\n            }\n        } else if (done) {\n            done();\n        }\n    };\n\n    /**\n     * Handle tick update\n     *\n     * @private\n     */\n\n\n    BasePrepare.prototype.tick = function tick() {\n        setTimeout(this.delayedTick, 0);\n    };\n\n    /**\n     * Actually prepare items. This is handled outside of the tick because it will take a while\n     * and we do NOT want to block the current animation frame from rendering.\n     *\n     * @private\n     */\n\n\n    BasePrepare.prototype.prepareItems = function prepareItems() {\n        this.limiter.beginFrame();\n        // Upload the graphics\n        while (this.queue.length && this.limiter.allowedToUpload()) {\n            var item = this.queue[0];\n            var uploaded = false;\n\n            for (var i = 0, len = this.uploadHooks.length; i < len; i++) {\n                if (this.uploadHooks[i](this.uploadHookHelper, item)) {\n                    this.queue.shift();\n                    uploaded = true;\n                    break;\n                }\n            }\n\n            if (!uploaded) {\n                this.queue.shift();\n            }\n        }\n\n        // We're finished\n        if (!this.queue.length) {\n            this.ticking = false;\n\n            var completes = this.completes.slice(0);\n\n            this.completes.length = 0;\n\n            for (var _i = 0, _len = completes.length; _i < _len; _i++) {\n                completes[_i]();\n            }\n        } else {\n            // if we are not finished, on the next rAF do this again\n            SharedTicker.addOnce(this.tick, this);\n        }\n    };\n\n    /**\n     * Adds hooks for finding and uploading items.\n     *\n     * @param {Function} [addHook] - Function call that takes two parameters: `item:*, queue:Array`\n              function must return `true` if it was able to add item to the queue.\n     * @param {Function} [uploadHook] - Function call that takes two parameters: `prepare:CanvasPrepare, item:*` and\n     *        function must return `true` if it was able to handle upload of item.\n     * @return {PIXI.CanvasPrepare} Instance of plugin for chaining.\n     */\n\n\n    BasePrepare.prototype.register = function register(addHook, uploadHook) {\n        if (addHook) {\n            this.addHooks.push(addHook);\n        }\n\n        if (uploadHook) {\n            this.uploadHooks.push(uploadHook);\n        }\n\n        return this;\n    };\n\n    /**\n     * Manually add an item to the uploading queue.\n     *\n     * @param {PIXI.DisplayObject|PIXI.Container|*} item - Object to add to the queue\n     * @return {PIXI.CanvasPrepare} Instance of plugin for chaining.\n     */\n\n\n    BasePrepare.prototype.add = function add(item) {\n        // Add additional hooks for finding elements on special\n        // types of objects that\n        for (var i = 0, len = this.addHooks.length; i < len; i++) {\n            if (this.addHooks[i](item, this.queue)) {\n                break;\n            }\n        }\n\n        // Get childen recursively\n        if (item instanceof core.Container) {\n            for (var _i2 = item.children.length - 1; _i2 >= 0; _i2--) {\n                this.add(item.children[_i2]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Destroys the plugin, don't use after this.\n     *\n     */\n\n\n    BasePrepare.prototype.destroy = function destroy() {\n        if (this.ticking) {\n            SharedTicker.remove(this.tick, this);\n        }\n        this.ticking = false;\n        this.addHooks = null;\n        this.uploadHooks = null;\n        this.renderer = null;\n        this.completes = null;\n        this.queue = null;\n        this.limiter = null;\n        this.uploadHookHelper = null;\n    };\n\n    return BasePrepare;\n}();\n\n/**\n * Built-in hook to draw PIXI.Text to its texture.\n *\n * @private\n * @param {PIXI.WebGLRenderer|PIXI.CanvasPrepare} helper - Not used by this upload handler\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\n\n\nexports.default = BasePrepare;\nfunction drawText(helper, item) {\n    if (item instanceof core.Text) {\n        // updating text will return early if it is not dirty\n        item.updateText(true);\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to calculate a text style for a PIXI.Text object.\n *\n * @private\n * @param {PIXI.WebGLRenderer|PIXI.CanvasPrepare} helper - Not used by this upload handler\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\nfunction calculateTextStyle(helper, item) {\n    if (item instanceof core.TextStyle) {\n        var font = core.Text.getFontStyle(item);\n\n        if (!core.Text.fontPropertiesCache[font]) {\n            core.Text.calculateFontProperties(font);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find Text objects.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Text object was found.\n */\nfunction findText(item, queue) {\n    if (item instanceof core.Text) {\n        // push the text style to prepare it - this can be really expensive\n        if (queue.indexOf(item.style) === -1) {\n            queue.push(item.style);\n        }\n        // also push the text object so that we can render it (to canvas/texture) if needed\n        if (queue.indexOf(item) === -1) {\n            queue.push(item);\n        }\n        // also push the Text's texture for upload to GPU\n        var texture = item._texture.baseTexture;\n\n        if (queue.indexOf(texture) === -1) {\n            queue.push(texture);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find TextStyle objects.\n *\n * @private\n * @param {PIXI.TextStyle} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.TextStyle object was found.\n */\nfunction findTextStyle(item, queue) {\n    if (item instanceof core.TextStyle) {\n        if (queue.indexOf(item) === -1) {\n            queue.push(item);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n//# sourceMappingURL=BasePrepare.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/prepare/BasePrepare.js\n// module id = 32\n// module chunks = 0","\n\nvar mapSize = function(gl, type) \n{\n    if(!GL_TABLE) \n    {\n        var typeNames = Object.keys(GL_TO_GLSL_TYPES);\n\n        GL_TABLE = {};\n\n        for(var i = 0; i < typeNames.length; ++i) \n        {\n            var tn = typeNames[i];\n            GL_TABLE[ gl[tn] ] = GL_TO_GLSL_TYPES[tn];\n        }\n    }\n\n  return GL_TABLE[type];\n};\n\nvar GL_TABLE = null;\n\nvar GL_TO_GLSL_TYPES = {\n  'FLOAT':       'float',\n  'FLOAT_VEC2':  'vec2',\n  'FLOAT_VEC3':  'vec3',\n  'FLOAT_VEC4':  'vec4',\n\n  'INT':         'int',\n  'INT_VEC2':    'ivec2',\n  'INT_VEC3':    'ivec3',\n  'INT_VEC4':    'ivec4',\n  \n  'BOOL':        'bool',\n  'BOOL_VEC2':   'bvec2',\n  'BOOL_VEC3':   'bvec3',\n  'BOOL_VEC4':   'bvec4',\n  \n  'FLOAT_MAT2':  'mat2',\n  'FLOAT_MAT3':  'mat3',\n  'FLOAT_MAT4':  'mat4',\n  \n  'SAMPLER_2D':  'sampler2D'  \n};\n\nmodule.exports = mapSize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/shader/mapType.js\n// module id = 33\n// module chunks = 0","'use strict';\n\nvar EventEmitter    = require('eventemitter3');\nvar parseUri        = require('parse-uri');\n\n// tests is CORS is supported in XHR, if not we need to use XDR\nvar useXdr = !!(window.XDomainRequest && !('withCredentials' in (new XMLHttpRequest())));\nvar tempAnchor = null;\n\n// some status constants\nvar STATUS_NONE = 0;\nvar STATUS_OK = 200;\nvar STATUS_EMPTY = 204;\n\n/**\n * Manages the state and loading of a single resource represented by\n * a single URL.\n *\n * @class\n * @param {string} name - The name of the resource to load.\n * @param {string|string[]} url - The url for this resource, for audio/video loads you can pass an array of sources.\n * @param {object} [options] - The options for the load.\n * @param {string|boolean} [options.crossOrigin] - Is this request cross-origin? Default is to determine automatically.\n * @param {Resource.LOAD_TYPE} [options.loadType=Resource.LOAD_TYPE.XHR] - How should this resource be loaded?\n * @param {Resource.XHR_RESPONSE_TYPE} [options.xhrType=Resource.XHR_RESPONSE_TYPE.DEFAULT] - How should the data being\n *      loaded be interpreted when using XHR?\n * @param {object} [options.metadata] - Extra info for middleware.\n */\nfunction Resource(name, url, options) {\n    EventEmitter.call(this);\n\n    options = options || {};\n\n    if (typeof name !== 'string' || typeof url !== 'string') {\n        throw new Error('Both name and url are required for constructing a resource.');\n    }\n\n    /**\n     * The name of this resource.\n     *\n     * @member {string}\n     * @readonly\n     */\n    this.name = name;\n\n    /**\n     * The url used to load this resource.\n     *\n     * @member {string}\n     * @readonly\n     */\n    this.url = url;\n\n    /**\n     * Stores whether or not this url is a data url.\n     *\n     * @member {boolean}\n     * @readonly\n     */\n    this.isDataUrl = this.url.indexOf('data:') === 0;\n\n    /**\n     * The data that was loaded by the resource.\n     *\n     * @member {any}\n     */\n    this.data = null;\n\n    /**\n     * Is this request cross-origin? If unset, determined automatically.\n     *\n     * @member {string}\n     */\n    this.crossOrigin = options.crossOrigin === true ? 'anonymous' : options.crossOrigin;\n\n    /**\n     * The method of loading to use for this resource.\n     *\n     * @member {Resource.LOAD_TYPE}\n     */\n    this.loadType = options.loadType || this._determineLoadType();\n\n    /**\n     * The type used to load the resource via XHR. If unset, determined automatically.\n     *\n     * @member {string}\n     */\n    this.xhrType = options.xhrType;\n\n    /**\n     * Extra info for middleware, and controlling specifics about how the resource loads.\n     *\n     * Note that if you pass in a `loadElement`, the Resource class takes ownership of it.\n     * Meaning it will modify it as it sees fit.\n     *\n     * @member {object}\n     * @property {HTMLImageElement|HTMLAudioElement|HTMLVideoElement} [loadElement=null] - The\n     *  element to use for loading, instead of creating one.\n     * @property {boolean} [skipSource=false] - Skips adding source(s) to the load element. This\n     *  is useful if you want to pass in a `loadElement` that you already added load sources\n     *  to.\n     */\n    this.metadata = options.metadata || {};\n\n    /**\n     * The error that occurred while loading (if any).\n     *\n     * @member {Error}\n     * @readonly\n     */\n    this.error = null;\n\n    /**\n     * The XHR object that was used to load this resource. This is only set\n     * when `loadType` is `Resource.LOAD_TYPE.XHR`.\n     *\n     * @member {XMLHttpRequest}\n     */\n    this.xhr = null;\n\n    /**\n     * Describes if this resource was loaded as json. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isJson = false;\n\n    /**\n     * Describes if this resource was loaded as xml. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isXml = false;\n\n    /**\n     * Describes if this resource was loaded as an image tag. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isImage = false;\n\n    /**\n     * Describes if this resource was loaded as an audio tag. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isAudio = false;\n\n    /**\n     * Describes if this resource was loaded as a video tag. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isVideo = false;\n\n    /**\n     * Describes if this resource has finished loading. Is true when the resource has completely\n     * loaded.\n     *\n     * @member {boolean}\n     */\n    this.isComplete = false;\n\n    /**\n     * Describes if this resource is currently loading. Is true when the resource starts loading,\n     * and is false again when complete.\n     *\n     * @member {boolean}\n     */\n    this.isLoading = false;\n\n    /**\n     * The `dequeue` method that will be used a storage place for the async queue dequeue method\n     * used privately by the loader.\n     *\n     * @private\n     * @member {function}\n     */\n    this._dequeue = null;\n\n    /**\n     * The `complete` function bound to this resource's context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundComplete = this.complete.bind(this);\n\n    /**\n     * The `_onError` function bound to this resource's context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundOnError = this._onError.bind(this);\n\n    /**\n     * The `_onProgress` function bound to this resource's context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundOnProgress = this._onProgress.bind(this);\n\n    // xhr callbacks\n    this._boundXhrOnError = this._xhrOnError.bind(this);\n    this._boundXhrOnAbort = this._xhrOnAbort.bind(this);\n    this._boundXhrOnLoad = this._xhrOnLoad.bind(this);\n    this._boundXdrOnTimeout = this._xdrOnTimeout.bind(this);\n\n    /**\n     * Emitted when the resource beings to load.\n     *\n     * @event start\n     * @memberof Resource#\n     */\n\n    /**\n     * Emitted each time progress of this resource load updates.\n     * Not all resources types and loader systems can support this event\n     * so sometimes it may not be available. If the resource\n     * is being loaded on a modern browser, using XHR, and the remote server\n     * properly sets Content-Length headers, then this will be available.\n     *\n     * @event progress\n     * @memberof Resource#\n     */\n\n    /**\n     * Emitted once this resource has loaded, if there was an error it will\n     * be in the `error` property.\n     *\n     * @event complete\n     * @memberof Resource#\n     */\n}\n\nResource.prototype = Object.create(EventEmitter.prototype);\nResource.prototype.constructor = Resource;\nmodule.exports = Resource;\n\n/**\n * Marks the resource as complete.\n *\n * @fires complete\n */\nResource.prototype.complete = function () {\n    // TODO: Clean this up in a wrapper or something...gross....\n    if (this.data && this.data.removeEventListener) {\n        this.data.removeEventListener('error', this._boundOnError, false);\n        this.data.removeEventListener('load', this._boundComplete, false);\n        this.data.removeEventListener('progress', this._boundOnProgress, false);\n        this.data.removeEventListener('canplaythrough', this._boundComplete, false);\n    }\n\n    if (this.xhr) {\n        if (this.xhr.removeEventListener) {\n            this.xhr.removeEventListener('error', this._boundXhrOnError, false);\n            this.xhr.removeEventListener('abort', this._boundXhrOnAbort, false);\n            this.xhr.removeEventListener('progress', this._boundOnProgress, false);\n            this.xhr.removeEventListener('load', this._boundXhrOnLoad, false);\n        }\n        else {\n            this.xhr.onerror = null;\n            this.xhr.ontimeout = null;\n            this.xhr.onprogress = null;\n            this.xhr.onload = null;\n        }\n    }\n\n    if (this.isComplete) {\n        throw new Error('Complete called again for an already completed resource.');\n    }\n\n    this.isComplete = true;\n    this.isLoading = false;\n\n    this.emit('complete', this);\n};\n\n/**\n * Aborts the loading of this resource, with an optional message.\n *\n * @param {string} message - The message to use for the error\n */\nResource.prototype.abort = function (message) {\n    // abort can be called multiple times, ignore subsequent calls.\n    if (this.error) {\n        return;\n    }\n\n    // store error\n    this.error = new Error(message);\n\n    // abort the actual loading\n    if (this.xhr) {\n        this.xhr.abort();\n    }\n    else if (this.xdr) {\n        this.xdr.abort();\n    }\n    else if (this.data) {\n        // single source\n        if (typeof this.data.src !== 'undefined') {\n            this.data.src = '';\n        }\n        // multi-source\n        else {\n            while (this.data.firstChild) {\n                this.data.removeChild(this.data.firstChild);\n            }\n        }\n    }\n\n    // done now.\n    this.complete();\n};\n\n/**\n * Kicks off loading of this resource. This method is asynchronous.\n *\n * @fires start\n * @param {function} [cb] - Optional callback to call once the resource is loaded.\n */\nResource.prototype.load = function (cb) {\n    if (this.isLoading) {\n        return;\n    }\n\n    if (this.isComplete) {\n        if (cb) {\n            var self = this;\n\n            setTimeout(function () {\n                cb(self);\n            }, 1);\n        }\n\n        return;\n    }\n    else if (cb) {\n        this.once('complete', cb);\n    }\n\n    this.isLoading = true;\n\n    this.emit('start', this);\n\n    // if unset, determine the value\n    if (this.crossOrigin === false || typeof this.crossOrigin !== 'string') {\n        this.crossOrigin = this._determineCrossOrigin(this.url);\n    }\n\n    switch (this.loadType) {\n        case Resource.LOAD_TYPE.IMAGE:\n            this._loadElement('image');\n            break;\n\n        case Resource.LOAD_TYPE.AUDIO:\n            this._loadSourceElement('audio');\n            break;\n\n        case Resource.LOAD_TYPE.VIDEO:\n            this._loadSourceElement('video');\n            break;\n\n        case Resource.LOAD_TYPE.XHR:\n            /* falls through */\n        default:\n            if (useXdr && this.crossOrigin) {\n                this._loadXdr();\n            }\n            else {\n                this._loadXhr();\n            }\n            break;\n    }\n};\n\n/**\n * Loads this resources using an element that has a single source,\n * like an HTMLImageElement.\n *\n * @private\n * @param {string} type - The type of element to use.\n */\nResource.prototype._loadElement = function (type) {\n    if (this.metadata.loadElement) {\n        this.data = this.metadata.loadElement;\n    }\n    else if (type === 'image' && typeof window.Image !== 'undefined') {\n        this.data = new Image();\n    }\n    else {\n        this.data = document.createElement(type);\n    }\n\n    if (this.crossOrigin) {\n        this.data.crossOrigin = this.crossOrigin;\n    }\n\n    if (!this.metadata.skipSource) {\n        this.data.src = this.url;\n    }\n\n    var typeName = 'is' + type[0].toUpperCase() + type.substring(1);\n\n    if (this[typeName] === false) {\n        this[typeName] = true;\n    }\n\n    this.data.addEventListener('error', this._boundOnError, false);\n    this.data.addEventListener('load', this._boundComplete, false);\n    this.data.addEventListener('progress', this._boundOnProgress, false);\n};\n\n/**\n * Loads this resources using an element that has multiple sources,\n * like an HTMLAudioElement or HTMLVideoElement.\n *\n * @private\n * @param {string} type - The type of element to use.\n */\nResource.prototype._loadSourceElement = function (type) {\n    if (this.metadata.loadElement) {\n        this.data = this.metadata.loadElement;\n    }\n    else if (type === 'audio' && typeof window.Audio !== 'undefined') {\n        this.data = new Audio();\n    }\n    else {\n        this.data = document.createElement(type);\n    }\n\n    if (this.data === null) {\n        this.abort('Unsupported element ' + type);\n\n        return;\n    }\n\n    if (!this.metadata.skipSource) {\n        // support for CocoonJS Canvas+ runtime, lacks document.createElement('source')\n        if (navigator.isCocoonJS) {\n            this.data.src = Array.isArray(this.url) ? this.url[0] : this.url;\n        }\n        else if (Array.isArray(this.url)) {\n            for (var i = 0; i < this.url.length; ++i) {\n                this.data.appendChild(this._createSource(type, this.url[i]));\n            }\n        }\n        else {\n            this.data.appendChild(this._createSource(type, this.url));\n        }\n    }\n\n    this['is' + type[0].toUpperCase() + type.substring(1)] = true;\n\n    this.data.addEventListener('error', this._boundOnError, false);\n    this.data.addEventListener('load', this._boundComplete, false);\n    this.data.addEventListener('progress', this._boundOnProgress, false);\n    this.data.addEventListener('canplaythrough', this._boundComplete, false);\n\n    this.data.load();\n};\n\n/**\n * Loads this resources using an XMLHttpRequest.\n *\n * @private\n */\nResource.prototype._loadXhr = function () {\n    // if unset, determine the value\n    if (typeof this.xhrType !== 'string') {\n        this.xhrType = this._determineXhrType();\n    }\n\n    var xhr = this.xhr = new XMLHttpRequest();\n\n    // set the request type and url\n    xhr.open('GET', this.url, true);\n\n    // load json as text and parse it ourselves. We do this because some browsers\n    // *cough* safari *cough* can't deal with it.\n    if (this.xhrType === Resource.XHR_RESPONSE_TYPE.JSON || this.xhrType === Resource.XHR_RESPONSE_TYPE.DOCUMENT) {\n        xhr.responseType = Resource.XHR_RESPONSE_TYPE.TEXT;\n    }\n    else {\n        xhr.responseType = this.xhrType;\n    }\n\n    xhr.addEventListener('error', this._boundXhrOnError, false);\n    xhr.addEventListener('abort', this._boundXhrOnAbort, false);\n    xhr.addEventListener('progress', this._boundOnProgress, false);\n    xhr.addEventListener('load', this._boundXhrOnLoad, false);\n\n    xhr.send();\n};\n\n/**\n * Loads this resources using an XDomainRequest. This is here because we need to support IE9 (gross).\n *\n * @private\n */\nResource.prototype._loadXdr = function () {\n    // if unset, determine the value\n    if (typeof this.xhrType !== 'string') {\n        this.xhrType = this._determineXhrType();\n    }\n\n    var xdr = this.xhr = new XDomainRequest();\n\n    // XDomainRequest has a few quirks. Occasionally it will abort requests\n    // A way to avoid this is to make sure ALL callbacks are set even if not used\n    // More info here: http://stackoverflow.com/questions/15786966/xdomainrequest-aborts-post-on-ie-9\n    xdr.timeout = 5000;\n\n    xdr.onerror = this._boundXhrOnError;\n    xdr.ontimeout = this._boundXdrOnTimeout;\n    xdr.onprogress = this._boundOnProgress;\n    xdr.onload = this._boundXhrOnLoad;\n\n    xdr.open('GET', this.url, true);\n\n    // Note: The xdr.send() call is wrapped in a timeout to prevent an\n    // issue with the interface where some requests are lost if multiple\n    // XDomainRequests are being sent at the same time.\n    // Some info here: https://github.com/photonstorm/phaser/issues/1248\n    setTimeout(function () {\n        xdr.send();\n    }, 0);\n};\n\n/**\n * Creates a source used in loading via an element.\n *\n * @private\n * @param {string} type - The element type (video or audio).\n * @param {string} url - The source URL to load from.\n * @param {string} [mime] - The mime type of the video\n * @return {HTMLSourceElement} The source element.\n */\nResource.prototype._createSource = function (type, url, mime) {\n    if (!mime) {\n        mime = type + '/' + url.substr(url.lastIndexOf('.') + 1);\n    }\n\n    var source = document.createElement('source');\n\n    source.src = url;\n    source.type = mime;\n\n    return source;\n};\n\n/**\n * Called if a load errors out.\n *\n * @param {Event} event - The error event from the element that emits it.\n * @private\n */\nResource.prototype._onError = function (event) {\n    this.abort('Failed to load element using ' + event.target.nodeName);\n};\n\n/**\n * Called if a load progress event fires for xhr/xdr.\n *\n * @fires progress\n * @private\n * @param {XMLHttpRequestProgressEvent|Event} event - Progress event.\n */\nResource.prototype._onProgress = function (event) {\n    if (event && event.lengthComputable) {\n        this.emit('progress', this, event.loaded / event.total);\n    }\n};\n\n/**\n * Called if an error event fires for xhr/xdr.\n *\n * @private\n * @param {XMLHttpRequestErrorEvent|Event} event - Error event.\n */\nResource.prototype._xhrOnError = function () {\n    var xhr = this.xhr;\n\n    this.abort(reqType(xhr) + ' Request failed. Status: ' + xhr.status + ', text: \"' + xhr.statusText + '\"');\n};\n\n/**\n * Called if an abort event fires for xhr.\n *\n * @private\n * @param {XMLHttpRequestAbortEvent} event - Abort Event\n */\nResource.prototype._xhrOnAbort = function () {\n    this.abort(reqType(this.xhr) + ' Request was aborted by the user.');\n};\n\n/**\n * Called if a timeout event fires for xdr.\n *\n * @private\n * @param {Event} event - Timeout event.\n */\nResource.prototype._xdrOnTimeout = function () {\n    this.abort(reqType(this.xhr) + ' Request timed out.');\n};\n\n/**\n * Called when data successfully loads from an xhr/xdr request.\n *\n * @private\n * @param {XMLHttpRequestLoadEvent|Event} event - Load event\n */\nResource.prototype._xhrOnLoad = function () {\n    var xhr = this.xhr;\n    var status = typeof xhr.status === 'undefined' ? xhr.status : STATUS_OK; // XDR has no `.status`, assume 200.\n\n    // status can be 0 when using the file:// protocol, also check if a response was found\n    if (status === STATUS_OK || status === STATUS_EMPTY || (status === STATUS_NONE && xhr.responseText.length > 0)) {\n        // if text, just return it\n        if (this.xhrType === Resource.XHR_RESPONSE_TYPE.TEXT) {\n            this.data = xhr.responseText;\n        }\n        // if json, parse into json object\n        else if (this.xhrType === Resource.XHR_RESPONSE_TYPE.JSON) {\n            try {\n                this.data = JSON.parse(xhr.responseText);\n                this.isJson = true;\n            }\n            catch (e) {\n                this.abort('Error trying to parse loaded json:', e);\n\n                return;\n            }\n        }\n        // if xml, parse into an xml document or div element\n        else if (this.xhrType === Resource.XHR_RESPONSE_TYPE.DOCUMENT) {\n            try {\n                if (window.DOMParser) {\n                    var domparser = new DOMParser();\n\n                    this.data = domparser.parseFromString(xhr.responseText, 'text/xml');\n                }\n                else {\n                    var div = document.createElement('div');\n\n                    div.innerHTML = xhr.responseText;\n                    this.data = div;\n                }\n                this.isXml = true;\n            }\n            catch (e) {\n                this.abort('Error trying to parse loaded xml:', e);\n\n                return;\n            }\n        }\n        // other types just return the response\n        else {\n            this.data = xhr.response || xhr.responseText;\n        }\n    }\n    else {\n        this.abort('[' + xhr.status + ']' + xhr.statusText + ':' + xhr.responseURL);\n\n        return;\n    }\n\n    this.complete();\n};\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n *\n * @private\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nResource.prototype._determineCrossOrigin = function (url, loc) {\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0) {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || window.location;\n\n    if (!tempAnchor) {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    url = parseUri(tempAnchor.href, { strictMode: true });\n\n    var samePort = (!url.port && loc.port === '') || (url.port === loc.port);\n    var protocol = url.protocol ? url.protocol + ':' : '';\n\n    // if cross origin\n    if (url.host !== loc.hostname || !samePort || protocol !== loc.protocol) {\n        return 'anonymous';\n    }\n\n    return '';\n};\n\n/**\n * Determines the responseType of an XHR request based on the extension of the\n * resource being loaded.\n *\n * @private\n * @return {Resource.XHR_RESPONSE_TYPE} The responseType to use.\n */\nResource.prototype._determineXhrType = function () {\n    return Resource._xhrTypeMap[this._getExtension()] || Resource.XHR_RESPONSE_TYPE.TEXT;\n};\n\nResource.prototype._determineLoadType = function () {\n    return Resource._loadTypeMap[this._getExtension()] || Resource.LOAD_TYPE.XHR;\n};\n\nResource.prototype._getExtension = function () {\n    var url = this.url;\n    var ext = '';\n\n    if (this.isDataUrl) {\n        var slashIndex = url.indexOf('/');\n\n        ext = url.substring(slashIndex + 1, url.indexOf(';', slashIndex));\n    }\n    else {\n        var queryStart = url.indexOf('?');\n\n        if (queryStart !== -1) {\n            url = url.substring(0, queryStart);\n        }\n\n        ext = url.substring(url.lastIndexOf('.') + 1);\n    }\n\n    return ext.toLowerCase();\n};\n\n/**\n * Determines the mime type of an XHR request based on the responseType of\n * resource being loaded.\n *\n * @private\n * @param {Resource.XHR_RESPONSE_TYPE} type - The type to get a mime type for.\n * @return {string} The mime type to use.\n */\nResource.prototype._getMimeFromXhrType = function (type) {\n    switch (type) {\n        case Resource.XHR_RESPONSE_TYPE.BUFFER:\n            return 'application/octet-binary';\n\n        case Resource.XHR_RESPONSE_TYPE.BLOB:\n            return 'application/blob';\n\n        case Resource.XHR_RESPONSE_TYPE.DOCUMENT:\n            return 'application/xml';\n\n        case Resource.XHR_RESPONSE_TYPE.JSON:\n            return 'application/json';\n\n        case Resource.XHR_RESPONSE_TYPE.DEFAULT:\n        case Resource.XHR_RESPONSE_TYPE.TEXT:\n            /* falls through */\n        default:\n            return 'text/plain';\n\n    }\n};\n\n/**\n * Quick helper to get string xhr type.\n *\n * @ignore\n * @param {XMLHttpRequest|XDomainRequest} xhr - The request to check.\n * @return {string} The type.\n */\nfunction reqType(xhr) {\n    return xhr.toString().replace('object ', '');\n}\n\n/**\n * The types of loading a resource can use.\n *\n * @static\n * @readonly\n * @enum {number}\n */\nResource.LOAD_TYPE = {\n    /** Uses XMLHttpRequest to load the resource. */\n    XHR:    1,\n    /** Uses an `Image` object to load the resource. */\n    IMAGE:  2,\n    /** Uses an `Audio` object to load the resource. */\n    AUDIO:  3,\n    /** Uses a `Video` object to load the resource. */\n    VIDEO:  4\n};\n\n/**\n * The XHR ready states, used internally.\n *\n * @static\n * @readonly\n * @enum {string}\n */\nResource.XHR_RESPONSE_TYPE = {\n    /** defaults to text */\n    DEFAULT:    'text',\n    /** ArrayBuffer */\n    BUFFER:     'arraybuffer',\n    /** Blob */\n    BLOB:       'blob',\n    /** Document */\n    DOCUMENT:   'document',\n    /** Object */\n    JSON:       'json',\n    /** String */\n    TEXT:       'text'\n};\n\nResource._loadTypeMap = {\n    gif:      Resource.LOAD_TYPE.IMAGE,\n    png:      Resource.LOAD_TYPE.IMAGE,\n    bmp:      Resource.LOAD_TYPE.IMAGE,\n    jpg:      Resource.LOAD_TYPE.IMAGE,\n    jpeg:     Resource.LOAD_TYPE.IMAGE,\n    tif:      Resource.LOAD_TYPE.IMAGE,\n    tiff:     Resource.LOAD_TYPE.IMAGE,\n    webp:     Resource.LOAD_TYPE.IMAGE,\n    tga:      Resource.LOAD_TYPE.IMAGE,\n    'svg+xml':  Resource.LOAD_TYPE.IMAGE\n};\n\nResource._xhrTypeMap = {\n    // xml\n    xhtml:    Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    html:     Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    htm:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    xml:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    tmx:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    tsx:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    svg:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n\n    // images\n    gif:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    png:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    bmp:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    jpg:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    jpeg:     Resource.XHR_RESPONSE_TYPE.BLOB,\n    tif:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    tiff:     Resource.XHR_RESPONSE_TYPE.BLOB,\n    webp:     Resource.XHR_RESPONSE_TYPE.BLOB,\n    tga:      Resource.XHR_RESPONSE_TYPE.BLOB,\n\n    // json\n    json:     Resource.XHR_RESPONSE_TYPE.JSON,\n\n    // text\n    text:     Resource.XHR_RESPONSE_TYPE.TEXT,\n    txt:      Resource.XHR_RESPONSE_TYPE.TEXT\n};\n\n/**\n * Sets the load type to be used for a specific extension.\n *\n * @static\n * @param {string} extname - The extension to set the type for, e.g. \"png\" or \"fnt\"\n * @param {Resource.LOAD_TYPE} loadType - The load type to set it to.\n */\nResource.setExtensionLoadType = function (extname, loadType) {\n    setExtMap(Resource._loadTypeMap, extname, loadType);\n};\n\n/**\n * Sets the load type to be used for a specific extension.\n *\n * @static\n * @param {string} extname - The extension to set the type for, e.g. \"png\" or \"fnt\"\n * @param {Resource.XHR_RESPONSE_TYPE} xhrType - The xhr type to set it to.\n */\nResource.setExtensionXhrType = function (extname, xhrType) {\n    setExtMap(Resource._xhrTypeMap, extname, xhrType);\n};\n\nfunction setExtMap(map, extname, val) {\n    if (extname && extname.indexOf('.') === 0) {\n        extname = extname.substring(1);\n    }\n\n    if (!extname) {\n        return;\n    }\n\n    map[extname] = val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/Resource.js\n// module id = 34\n// module chunks = 0","'use strict';\n\nmodule.exports = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, size;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and size are later used to transform coords into integers for z-order calculation\n        size = Math.max(maxX - minX, maxY - minY);\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, size);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) return null;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, size, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && size) indexCurve(ear, minX, minY, size);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (size ? isEarHashed(ear, minX, minY, size) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, size, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, size, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, size);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, size) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, size),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, size);\n\n    // first look for points inside the triangle in increasing z-order\n    var p = ear.nextZ;\n\n    while (p && p.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.nextZ;\n    }\n\n    // then look for points in decreasing z-order\n    p = ear.prevZ;\n\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, size) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, size);\n                earcutLinked(c, triangles, dim, minX, minY, size);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, size) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, size);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize === 0) {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                } else if (qSize === 0 || !q) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else if (p.z <= q.z) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and size of the data bounding box\nfunction zOrder(x, y, minX, minY, size) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) / size;\n    y = 32767 * (y - minY) / size;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/earcut/src/earcut.js\n// module id = 35\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n/**\n * Default property values of accessible objects\n * used by {@link PIXI.accessibility.AccessibilityManager}.\n *\n * @mixin\n * @name accessibleTarget\n * @memberof PIXI\n * @example\n *      function MyObject() {}\n *\n *      Object.assign(\n *          MyObject.prototype,\n *          PIXI.accessibility.accessibleTarget\n *      );\n */\nexports.default = {\n  /**\n   *  Flag for if the object is accessible. If true AccessibilityManager will overlay a\n   *   shadow div with attributes set\n   *\n   * @member {boolean}\n   */\n  accessible: false,\n\n  /**\n   * Sets the title attribute of the shadow div\n   * If accessibleTitle AND accessibleHint has not been this will default to 'displayObject [tabIndex]'\n   *\n   * @member {string}\n   */\n  accessibleTitle: null,\n\n  /**\n   * Sets the aria-label attribute of the shadow div\n   *\n   * @member {string}\n   */\n  accessibleHint: null,\n\n  /**\n   * @todo Needs docs.\n   */\n  tabIndex: 0,\n\n  /**\n   * @todo Needs docs.\n   */\n  _accessibleActive: false,\n\n  /**\n   * @todo Needs docs.\n   */\n  _accessibleDiv: false\n};\n//# sourceMappingURL=accessibleTarget.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/accessibility/accessibleTarget.js\n// module id = 36\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _math = require('../math');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 'Builder' pattern for bounds rectangles\n * Axis-Aligned Bounding Box\n * It is not a shape! Its mutable thing, no 'EMPTY' or that kind of problems\n *\n * @class\n * @memberof PIXI\n */\nvar Bounds = function () {\n    /**\n     *\n     */\n    function Bounds() {\n        _classCallCheck(this, Bounds);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minX = Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minY = Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxX = -Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxY = -Infinity;\n\n        this.rect = null;\n    }\n\n    /**\n     * Checks if bounds are empty.\n     *\n     * @return {boolean} True if empty.\n     */\n\n\n    Bounds.prototype.isEmpty = function isEmpty() {\n        return this.minX > this.maxX || this.minY > this.maxY;\n    };\n\n    /**\n     * Clears the bounds and resets.\n     *\n     */\n\n\n    Bounds.prototype.clear = function clear() {\n        this.updateID++;\n\n        this.minX = Infinity;\n        this.minY = Infinity;\n        this.maxX = -Infinity;\n        this.maxY = -Infinity;\n    };\n\n    /**\n     * Can return Rectangle.EMPTY constant, either construct new rectangle, either use your rectangle\n     * It is not guaranteed that it will return tempRect\n     *\n     * @param {PIXI.Rectangle} rect - temporary object will be used if AABB is not empty\n     * @returns {PIXI.Rectangle} A rectangle of the bounds\n     */\n\n\n    Bounds.prototype.getRectangle = function getRectangle(rect) {\n        if (this.minX > this.maxX || this.minY > this.maxY) {\n            return _math.Rectangle.EMPTY;\n        }\n\n        rect = rect || new _math.Rectangle(0, 0, 1, 1);\n\n        rect.x = this.minX;\n        rect.y = this.minY;\n        rect.width = this.maxX - this.minX;\n        rect.height = this.maxY - this.minY;\n\n        return rect;\n    };\n\n    /**\n     * This function should be inlined when its possible.\n     *\n     * @param {PIXI.Point} point - The point to add.\n     */\n\n\n    Bounds.prototype.addPoint = function addPoint(point) {\n        this.minX = Math.min(this.minX, point.x);\n        this.maxX = Math.max(this.maxX, point.x);\n        this.minY = Math.min(this.minY, point.y);\n        this.maxY = Math.max(this.maxY, point.y);\n    };\n\n    /**\n     * Adds a quad, not transformed\n     *\n     * @param {Float32Array} vertices - The verts to add.\n     */\n\n\n    Bounds.prototype.addQuad = function addQuad(vertices) {\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n\n        var x = vertices[0];\n        var y = vertices[1];\n\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[2];\n        y = vertices[3];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[4];\n        y = vertices[5];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[6];\n        y = vertices[7];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    };\n\n    /**\n     * Adds sprite frame, transformed.\n     *\n     * @param {PIXI.TransformBase} transform - TODO\n     * @param {number} x0 - TODO\n     * @param {number} y0 - TODO\n     * @param {number} x1 - TODO\n     * @param {number} y1 - TODO\n     */\n\n\n    Bounds.prototype.addFrame = function addFrame(transform, x0, y0, x1, y1) {\n        var matrix = transform.worldTransform;\n        var a = matrix.a;\n        var b = matrix.b;\n        var c = matrix.c;\n        var d = matrix.d;\n        var tx = matrix.tx;\n        var ty = matrix.ty;\n\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n\n        var x = a * x0 + c * y0 + tx;\n        var y = b * x0 + d * y0 + ty;\n\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = a * x1 + c * y0 + tx;\n        y = b * x1 + d * y0 + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = a * x0 + c * y1 + tx;\n        y = b * x0 + d * y1 + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = a * x1 + c * y1 + tx;\n        y = b * x1 + d * y1 + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    };\n\n    /**\n     * Add an array of vertices\n     *\n     * @param {PIXI.TransformBase} transform - TODO\n     * @param {Float32Array} vertices - TODO\n     * @param {number} beginOffset - TODO\n     * @param {number} endOffset - TODO\n     */\n\n\n    Bounds.prototype.addVertices = function addVertices(transform, vertices, beginOffset, endOffset) {\n        var matrix = transform.worldTransform;\n        var a = matrix.a;\n        var b = matrix.b;\n        var c = matrix.c;\n        var d = matrix.d;\n        var tx = matrix.tx;\n        var ty = matrix.ty;\n\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n\n        for (var i = beginOffset; i < endOffset; i += 2) {\n            var rawX = vertices[i];\n            var rawY = vertices[i + 1];\n            var x = a * rawX + c * rawY + tx;\n            var y = d * rawY + b * rawX + ty;\n\n            minX = x < minX ? x : minX;\n            minY = y < minY ? y : minY;\n            maxX = x > maxX ? x : maxX;\n            maxY = y > maxY ? y : maxY;\n        }\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    };\n\n    /**\n     * Adds other Bounds\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     */\n\n\n    Bounds.prototype.addBounds = function addBounds(bounds) {\n        var minX = this.minX;\n        var minY = this.minY;\n        var maxX = this.maxX;\n        var maxY = this.maxY;\n\n        this.minX = bounds.minX < minX ? bounds.minX : minX;\n        this.minY = bounds.minY < minY ? bounds.minY : minY;\n        this.maxX = bounds.maxX > maxX ? bounds.maxX : maxX;\n        this.maxY = bounds.maxY > maxY ? bounds.maxY : maxY;\n    };\n\n    /**\n     * Adds other Bounds, masked with Bounds\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     * @param {PIXI.Bounds} mask - TODO\n     */\n\n\n    Bounds.prototype.addBoundsMask = function addBoundsMask(bounds, mask) {\n        var _minX = bounds.minX > mask.minX ? bounds.minX : mask.minX;\n        var _minY = bounds.minY > mask.minY ? bounds.minY : mask.minY;\n        var _maxX = bounds.maxX < mask.maxX ? bounds.maxX : mask.maxX;\n        var _maxY = bounds.maxY < mask.maxY ? bounds.maxY : mask.maxY;\n\n        if (_minX <= _maxX && _minY <= _maxY) {\n            var minX = this.minX;\n            var minY = this.minY;\n            var maxX = this.maxX;\n            var maxY = this.maxY;\n\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    };\n\n    /**\n     * Adds other Bounds, masked with Rectangle\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     * @param {PIXI.Rectangle} area - TODO\n     */\n\n\n    Bounds.prototype.addBoundsArea = function addBoundsArea(bounds, area) {\n        var _minX = bounds.minX > area.x ? bounds.minX : area.x;\n        var _minY = bounds.minY > area.y ? bounds.minY : area.y;\n        var _maxX = bounds.maxX < area.x + area.width ? bounds.maxX : area.x + area.width;\n        var _maxY = bounds.maxY < area.y + area.height ? bounds.maxY : area.y + area.height;\n\n        if (_minX <= _maxX && _minY <= _maxY) {\n            var minX = this.minX;\n            var minY = this.minY;\n            var maxX = this.maxX;\n            var maxY = this.maxY;\n\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    };\n\n    return Bounds;\n}();\n\nexports.default = Bounds;\n//# sourceMappingURL=Bounds.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/display/Bounds.js\n// module id = 37\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _const = require('../const');\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _TransformStatic = require('./TransformStatic');\n\nvar _TransformStatic2 = _interopRequireDefault(_TransformStatic);\n\nvar _Transform = require('./Transform');\n\nvar _Transform2 = _interopRequireDefault(_Transform);\n\nvar _Bounds = require('./Bounds');\n\nvar _Bounds2 = _interopRequireDefault(_Bounds);\n\nvar _math = require('../math');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// _tempDisplayObjectParent = new DisplayObject();\n\n/**\n * The base class for all objects that are rendered on the screen.\n * This is an abstract class and should not be used on its own rather it should be extended.\n *\n * @class\n * @extends EventEmitter\n * @mixes PIXI.interaction.interactiveTarget\n * @memberof PIXI\n */\nvar DisplayObject = function (_EventEmitter) {\n    _inherits(DisplayObject, _EventEmitter);\n\n    /**\n     *\n     */\n    function DisplayObject() {\n        _classCallCheck(this, DisplayObject);\n\n        var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n        var TransformClass = _settings2.default.TRANSFORM_MODE === _const.TRANSFORM_MODE.STATIC ? _TransformStatic2.default : _Transform2.default;\n\n        _this.tempDisplayObjectParent = null;\n\n        // TODO: need to create Transform from factory\n        /**\n         * World transform and local transform of this object.\n         * This will become read-only later, please do not assign anything there unless you know what are you doing\n         *\n         * @member {PIXI.TransformBase}\n         */\n        _this.transform = new TransformClass();\n\n        /**\n         * The opacity of the object.\n         *\n         * @member {number}\n         */\n        _this.alpha = 1;\n\n        /**\n         * The visibility of the object. If false the object will not be drawn, and\n         * the updateTransform function will not be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds or call updateTransform manually\n         *\n         * @member {boolean}\n         */\n        _this.visible = true;\n\n        /**\n         * Can this object be rendered, if false the object will not be drawn but the updateTransform\n         * methods will still be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds manually\n         *\n         * @member {boolean}\n         */\n        _this.renderable = true;\n\n        /**\n         * The display object container that contains this display object.\n         *\n         * @member {PIXI.Container}\n         * @readonly\n         */\n        _this.parent = null;\n\n        /**\n         * The multiplied alpha of the displayObject\n         *\n         * @member {number}\n         * @readonly\n         */\n        _this.worldAlpha = 1;\n\n        /**\n         * The area the filter is applied to. This is used as more of an optimisation\n         * rather than figuring out the dimensions of the displayObject each frame you can set this rectangle\n         *\n         * Also works as an interaction mask\n         *\n         * @member {PIXI.Rectangle}\n         */\n        _this.filterArea = null;\n\n        _this._filters = null;\n        _this._enabledFilters = null;\n\n        /**\n         * The bounds object, this is used to calculate and store the bounds of the displayObject\n         *\n         * @member {PIXI.Rectangle}\n         * @private\n         */\n        _this._bounds = new _Bounds2.default();\n        _this._boundsID = 0;\n        _this._lastBoundsID = -1;\n        _this._boundsRect = null;\n        _this._localBoundsRect = null;\n\n        /**\n         * The original, cached mask of the object\n         *\n         * @member {PIXI.Rectangle}\n         * @private\n         */\n        _this._mask = null;\n        return _this;\n    }\n\n    /**\n     * @private\n     * @member {PIXI.DisplayObject}\n     */\n\n\n    /**\n     * Updates the object transform for rendering\n     *\n     * TODO - Optimization pass!\n     */\n    DisplayObject.prototype.updateTransform = function updateTransform() {\n        this.transform.updateTransform(this.parent.transform);\n        // multiply the alphas..\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n        this._bounds.updateID++;\n    };\n\n    /**\n     * recursively updates transform of all objects from the root to this one\n     * internal function for toLocal()\n     */\n\n\n    DisplayObject.prototype._recursivePostUpdateTransform = function _recursivePostUpdateTransform() {\n        if (this.parent) {\n            this.parent._recursivePostUpdateTransform();\n            this.transform.updateTransform(this.parent.transform);\n        } else {\n            this.transform.updateTransform(this._tempDisplayObjectParent.transform);\n        }\n    };\n\n    /**\n     * Retrieves the bounds of the displayObject as a rectangle object.\n     *\n     * @param {boolean} skipUpdate - setting to true will stop the transforms of the scene graph from\n     *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n     *  nice performance boost\n     * @param {PIXI.Rectangle} rect - Optional rectangle to store the result of the bounds calculation\n     * @return {PIXI.Rectangle} the rectangular bounding area\n     */\n\n\n    DisplayObject.prototype.getBounds = function getBounds(skipUpdate, rect) {\n        if (!skipUpdate) {\n            if (!this.parent) {\n                this.parent = this._tempDisplayObjectParent;\n                this.updateTransform();\n                this.parent = null;\n            } else {\n                this._recursivePostUpdateTransform();\n                this.updateTransform();\n            }\n        }\n\n        if (this._boundsID !== this._lastBoundsID) {\n            this.calculateBounds();\n        }\n\n        if (!rect) {\n            if (!this._boundsRect) {\n                this._boundsRect = new _math.Rectangle();\n            }\n\n            rect = this._boundsRect;\n        }\n\n        return this._bounds.getRectangle(rect);\n    };\n\n    /**\n     * Retrieves the local bounds of the displayObject as a rectangle object\n     *\n     * @param {PIXI.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation\n     * @return {PIXI.Rectangle} the rectangular bounding area\n     */\n\n\n    DisplayObject.prototype.getLocalBounds = function getLocalBounds(rect) {\n        var transformRef = this.transform;\n        var parentRef = this.parent;\n\n        this.parent = null;\n        this.transform = this._tempDisplayObjectParent.transform;\n\n        if (!rect) {\n            if (!this._localBoundsRect) {\n                this._localBoundsRect = new _math.Rectangle();\n            }\n\n            rect = this._localBoundsRect;\n        }\n\n        var bounds = this.getBounds(false, rect);\n\n        this.parent = parentRef;\n        this.transform = transformRef;\n\n        return bounds;\n    };\n\n    /**\n     * Calculates the global position of the display object\n     *\n     * @param {PIXI.Point} position - The world origin to calculate from\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point)\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform.\n     * @return {PIXI.Point} A point object representing the position of this object\n     */\n\n\n    DisplayObject.prototype.toGlobal = function toGlobal(position, point) {\n        var skipUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (!skipUpdate) {\n            this._recursivePostUpdateTransform();\n\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent) {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            } else {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        // don't need to update the lot\n        return this.worldTransform.apply(position, point);\n    };\n\n    /**\n     * Calculates the local position of the display object relative to another point\n     *\n     * @param {PIXI.Point} position - The world origin to calculate from\n     * @param {PIXI.DisplayObject} [from] - The DisplayObject to calculate the global position from\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point)\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform\n     * @return {PIXI.Point} A point object representing the position of this object\n     */\n\n\n    DisplayObject.prototype.toLocal = function toLocal(position, from, point, skipUpdate) {\n        if (from) {\n            position = from.toGlobal(position, point, skipUpdate);\n        }\n\n        if (!skipUpdate) {\n            this._recursivePostUpdateTransform();\n\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent) {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            } else {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        // simply apply the matrix..\n        return this.worldTransform.applyInverse(position, point);\n    };\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    DisplayObject.prototype.renderWebGL = function renderWebGL(renderer) // eslint-disable-line no-unused-vars\n    {}\n    // OVERWRITE;\n\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n    ;\n\n    DisplayObject.prototype.renderCanvas = function renderCanvas(renderer) // eslint-disable-line no-unused-vars\n    {}\n    // OVERWRITE;\n\n\n    /**\n     * Set the parent Container of this DisplayObject\n     *\n     * @param {PIXI.Container} container - The Container to add this DisplayObject to\n     * @return {PIXI.Container} The Container that this DisplayObject was added to\n     */\n    ;\n\n    DisplayObject.prototype.setParent = function setParent(container) {\n        if (!container || !container.addChild) {\n            throw new Error('setParent: Argument must be a Container');\n        }\n\n        container.addChild(this);\n\n        return container;\n    };\n\n    /**\n     * Convenience function to set the position, scale, skew and pivot at once.\n     *\n     * @param {number} [x=0] - The X position\n     * @param {number} [y=0] - The Y position\n     * @param {number} [scaleX=1] - The X scale value\n     * @param {number} [scaleY=1] - The Y scale value\n     * @param {number} [rotation=0] - The rotation\n     * @param {number} [skewX=0] - The X skew value\n     * @param {number} [skewY=0] - The Y skew value\n     * @param {number} [pivotX=0] - The X pivot value\n     * @param {number} [pivotY=0] - The Y pivot value\n     * @return {PIXI.DisplayObject} The DisplayObject instance\n     */\n\n\n    DisplayObject.prototype.setTransform = function setTransform() {\n        var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var scaleX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var scaleY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var rotation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n        var skewX = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n        var skewY = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n        var pivotX = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n        var pivotY = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;\n\n        this.position.x = x;\n        this.position.y = y;\n        this.scale.x = !scaleX ? 1 : scaleX;\n        this.scale.y = !scaleY ? 1 : scaleY;\n        this.rotation = rotation;\n        this.skew.x = skewX;\n        this.skew.y = skewY;\n        this.pivot.x = pivotX;\n        this.pivot.y = pivotY;\n\n        return this;\n    };\n\n    /**\n     * Base destroy method for generic display objects. This will automatically\n     * remove the display object from its parent Container as well as remove\n     * all current event listeners and internal references. Do not use a DisplayObject\n     * after calling `destroy`.\n     *\n     */\n\n\n    DisplayObject.prototype.destroy = function destroy() {\n        this.removeAllListeners();\n        if (this.parent) {\n            this.parent.removeChild(this);\n        }\n        this.transform = null;\n\n        this.parent = null;\n\n        this._bounds = null;\n        this._currentBounds = null;\n        this._mask = null;\n\n        this.filterArea = null;\n\n        this.interactive = false;\n        this.interactiveChildren = false;\n    };\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     * An alias to position.x\n     *\n     * @member {number}\n     * @memberof PIXI.DisplayObject#\n     */\n\n\n    _createClass(DisplayObject, [{\n        key: '_tempDisplayObjectParent',\n        get: function get() {\n            if (this.tempDisplayObjectParent === null) {\n                this.tempDisplayObjectParent = new DisplayObject();\n            }\n\n            return this.tempDisplayObjectParent;\n        }\n    }, {\n        key: 'x',\n        get: function get() {\n            return this.position.x;\n        }\n\n        /**\n         * Sets the X position of the object.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.position.x = value;\n        }\n\n        /**\n         * The position of the displayObject on the y axis relative to the local coordinates of the parent.\n         * An alias to position.y\n         *\n         * @member {number}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'y',\n        get: function get() {\n            return this.position.y;\n        }\n\n        /**\n         * Sets the Y position of the object.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.position.y = value;\n        }\n\n        /**\n         * Current transform of the object based on world (parent) factors\n         *\n         * @member {PIXI.Matrix}\n         * @memberof PIXI.DisplayObject#\n         * @readonly\n         */\n\n    }, {\n        key: 'worldTransform',\n        get: function get() {\n            return this.transform.worldTransform;\n        }\n\n        /**\n         * Current transform of the object based on local factors: position, scale, other stuff\n         *\n         * @member {PIXI.Matrix}\n         * @memberof PIXI.DisplayObject#\n         * @readonly\n         */\n\n    }, {\n        key: 'localTransform',\n        get: function get() {\n            return this.transform.localTransform;\n        }\n\n        /**\n         * The coordinate of the object relative to the local coordinates of the parent.\n         * Assignment by value since pixi-v4.\n         *\n         * @member {PIXI.Point|PIXI.ObservablePoint}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'position',\n        get: function get() {\n            return this.transform.position;\n        }\n\n        /**\n         * Copies the point to the position of the object.\n         *\n         * @param {PIXI.Point} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.position.copy(value);\n        }\n\n        /**\n         * The scale factor of the object.\n         * Assignment by value since pixi-v4.\n         *\n         * @member {PIXI.Point|PIXI.ObservablePoint}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'scale',\n        get: function get() {\n            return this.transform.scale;\n        }\n\n        /**\n         * Copies the point to the scale of the object.\n         *\n         * @param {PIXI.Point} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.scale.copy(value);\n        }\n\n        /**\n         * The pivot point of the displayObject that it rotates around\n         * Assignment by value since pixi-v4.\n         *\n         * @member {PIXI.Point|PIXI.ObservablePoint}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'pivot',\n        get: function get() {\n            return this.transform.pivot;\n        }\n\n        /**\n         * Copies the point to the pivot of the object.\n         *\n         * @param {PIXI.Point} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.pivot.copy(value);\n        }\n\n        /**\n         * The skew factor for the object in radians.\n         * Assignment by value since pixi-v4.\n         *\n         * @member {PIXI.ObservablePoint}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'skew',\n        get: function get() {\n            return this.transform.skew;\n        }\n\n        /**\n         * Copies the point to the skew of the object.\n         *\n         * @param {PIXI.Point} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.skew.copy(value);\n        }\n\n        /**\n         * The rotation of the object in radians.\n         *\n         * @member {number}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'rotation',\n        get: function get() {\n            return this.transform.rotation;\n        }\n\n        /**\n         * Sets the rotation of the object.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.transform.rotation = value;\n        }\n\n        /**\n         * Indicates if the object is globally visible.\n         *\n         * @member {boolean}\n         * @memberof PIXI.DisplayObject#\n         * @readonly\n         */\n\n    }, {\n        key: 'worldVisible',\n        get: function get() {\n            var item = this;\n\n            do {\n                if (!item.visible) {\n                    return false;\n                }\n\n                item = item.parent;\n            } while (item);\n\n            return true;\n        }\n\n        /**\n         * Sets a mask for the displayObject. A mask is an object that limits the visibility of an\n         * object to the shape of the mask applied to it. In PIXI a regular mask must be a\n         * PIXI.Graphics or a PIXI.Sprite object. This allows for much faster masking in canvas as it\n         * utilises shape clipping. To remove a mask, set this property to null.\n         *\n         * @todo For the moment, PIXI.CanvasRenderer doesn't support PIXI.Sprite as mask.\n         *\n         * @member {PIXI.Graphics|PIXI.Sprite}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'mask',\n        get: function get() {\n            return this._mask;\n        }\n\n        /**\n         * Sets the mask.\n         *\n         * @param {PIXI.Graphics|PIXI.Sprite} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (this._mask) {\n                this._mask.renderable = true;\n            }\n\n            this._mask = value;\n\n            if (this._mask) {\n                this._mask.renderable = false;\n            }\n        }\n\n        /**\n         * Sets the filters for the displayObject.\n         * * IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\n         * To remove filters simply set this property to 'null'\n         *\n         * @member {PIXI.Filter[]}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'filters',\n        get: function get() {\n            return this._filters && this._filters.slice();\n        }\n\n        /**\n         * Shallow copies the array to the filters of the object.\n         *\n         * @param {PIXI.Filter[]} value - The filters to set.\n         */\n        ,\n        set: function set(value) {\n            this._filters = value && value.slice();\n        }\n    }]);\n\n    return DisplayObject;\n}(_eventemitter2.default);\n\n// performance increase to avoid using call.. (10x faster)\n\n\nexports.default = DisplayObject;\nDisplayObject.prototype.displayObjectUpdateTransform = DisplayObject.prototype.updateTransform;\n//# sourceMappingURL=DisplayObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/display/DisplayObject.js\n// module id = 38\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _math = require('../math');\n\nvar _TransformBase2 = require('./TransformBase');\n\nvar _TransformBase3 = _interopRequireDefault(_TransformBase2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Generic class to deal with traditional 2D matrix transforms\n * local transformation is calculated from position,scale,skew and rotation\n *\n * @class\n * @extends PIXI.TransformBase\n * @memberof PIXI\n */\nvar Transform = function (_TransformBase) {\n  _inherits(Transform, _TransformBase);\n\n  /**\n   *\n   */\n  function Transform() {\n    _classCallCheck(this, Transform);\n\n    /**\n    * The coordinate of the object relative to the local coordinates of the parent.\n    *\n    * @member {PIXI.Point}\n    */\n    var _this = _possibleConstructorReturn(this, _TransformBase.call(this));\n\n    _this.position = new _math.Point(0, 0);\n\n    /**\n     * The scale factor of the object.\n     *\n     * @member {PIXI.Point}\n     */\n    _this.scale = new _math.Point(1, 1);\n\n    /**\n     * The skew amount, on the x and y axis.\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    _this.skew = new _math.ObservablePoint(_this.updateSkew, _this, 0, 0);\n\n    /**\n     * The pivot point of the displayObject that it rotates around\n     *\n     * @member {PIXI.Point}\n     */\n    _this.pivot = new _math.Point(0, 0);\n\n    /**\n     * The rotation value of the object, in radians\n     *\n     * @member {Number}\n     * @private\n     */\n    _this._rotation = 0;\n\n    _this._sr = Math.sin(0);\n    _this._cr = Math.cos(0);\n    _this._cy = Math.cos(0); // skewY);\n    _this._sy = Math.sin(0); // skewY);\n    _this._nsx = Math.sin(0); // skewX);\n    _this._cx = Math.cos(0); // skewX);\n    return _this;\n  }\n\n  /**\n   * Updates the skew values when the skew changes.\n   *\n   * @private\n   */\n\n\n  Transform.prototype.updateSkew = function updateSkew() {\n    this._cy = Math.cos(this.skew.y);\n    this._sy = Math.sin(this.skew.y);\n    this._nsx = Math.sin(this.skew.x);\n    this._cx = Math.cos(this.skew.x);\n  };\n\n  /**\n   * Updates only local matrix\n   */\n\n\n  Transform.prototype.updateLocalTransform = function updateLocalTransform() {\n    var lt = this.localTransform;\n    var a = this._cr * this.scale.x;\n    var b = this._sr * this.scale.x;\n    var c = -this._sr * this.scale.y;\n    var d = this._cr * this.scale.y;\n\n    lt.a = this._cy * a + this._sy * c;\n    lt.b = this._cy * b + this._sy * d;\n    lt.c = this._nsx * a + this._cx * c;\n    lt.d = this._nsx * b + this._cx * d;\n  };\n\n  /**\n   * Updates the values of the object and applies the parent's transform.\n   *\n   * @param {PIXI.Transform} parentTransform - The transform of the parent of this object\n   */\n\n\n  Transform.prototype.updateTransform = function updateTransform(parentTransform) {\n    var pt = parentTransform.worldTransform;\n    var wt = this.worldTransform;\n    var lt = this.localTransform;\n\n    var a = this._cr * this.scale.x;\n    var b = this._sr * this.scale.x;\n    var c = -this._sr * this.scale.y;\n    var d = this._cr * this.scale.y;\n\n    lt.a = this._cy * a + this._sy * c;\n    lt.b = this._cy * b + this._sy * d;\n    lt.c = this._nsx * a + this._cx * c;\n    lt.d = this._nsx * b + this._cx * d;\n\n    lt.tx = this.position.x - (this.pivot.x * lt.a + this.pivot.y * lt.c);\n    lt.ty = this.position.y - (this.pivot.x * lt.b + this.pivot.y * lt.d);\n\n    // concat the parent matrix with the objects transform.\n    wt.a = lt.a * pt.a + lt.b * pt.c;\n    wt.b = lt.a * pt.b + lt.b * pt.d;\n    wt.c = lt.c * pt.a + lt.d * pt.c;\n    wt.d = lt.c * pt.b + lt.d * pt.d;\n    wt.tx = lt.tx * pt.a + lt.ty * pt.c + pt.tx;\n    wt.ty = lt.tx * pt.b + lt.ty * pt.d + pt.ty;\n\n    this._worldID++;\n  };\n\n  /**\n   * Decomposes a matrix and sets the transforms properties based on it.\n   *\n   * @param {PIXI.Matrix} matrix - The matrix to decompose\n   */\n\n\n  Transform.prototype.setFromMatrix = function setFromMatrix(matrix) {\n    matrix.decompose(this);\n  };\n\n  /**\n   * The rotation of the object in radians.\n   *\n   * @member {number}\n   * @memberof PIXI.Transform#\n   */\n\n\n  _createClass(Transform, [{\n    key: 'rotation',\n    get: function get() {\n      return this._rotation;\n    }\n\n    /**\n     * Set the rotation of the transform.\n     *\n     * @param {number} value - The value to set to.\n     */\n    ,\n    set: function set(value) {\n      this._rotation = value;\n      this._sr = Math.sin(value);\n      this._cr = Math.cos(value);\n    }\n  }]);\n\n  return Transform;\n}(_TransformBase3.default);\n\nexports.default = Transform;\n//# sourceMappingURL=Transform.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/display/Transform.js\n// module id = 39\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _math = require('../math');\n\nvar _TransformBase2 = require('./TransformBase');\n\nvar _TransformBase3 = _interopRequireDefault(_TransformBase2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Transform that takes care about its versions\n *\n * @class\n * @extends PIXI.TransformBase\n * @memberof PIXI\n */\nvar TransformStatic = function (_TransformBase) {\n  _inherits(TransformStatic, _TransformBase);\n\n  /**\n   *\n   */\n  function TransformStatic() {\n    _classCallCheck(this, TransformStatic);\n\n    /**\n    * The coordinate of the object relative to the local coordinates of the parent.\n    *\n    * @member {PIXI.ObservablePoint}\n    */\n    var _this = _possibleConstructorReturn(this, _TransformBase.call(this));\n\n    _this.position = new _math.ObservablePoint(_this.onChange, _this, 0, 0);\n\n    /**\n     * The scale factor of the object.\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    _this.scale = new _math.ObservablePoint(_this.onChange, _this, 1, 1);\n\n    /**\n     * The pivot point of the displayObject that it rotates around\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    _this.pivot = new _math.ObservablePoint(_this.onChange, _this, 0, 0);\n\n    /**\n     * The skew amount, on the x and y axis.\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    _this.skew = new _math.ObservablePoint(_this.updateSkew, _this, 0, 0);\n\n    _this._rotation = 0;\n\n    _this._sr = Math.sin(0);\n    _this._cr = Math.cos(0);\n    _this._cy = Math.cos(0); // skewY);\n    _this._sy = Math.sin(0); // skewY);\n    _this._nsx = Math.sin(0); // skewX);\n    _this._cx = Math.cos(0); // skewX);\n\n    _this._localID = 0;\n    _this._currentLocalID = 0;\n    return _this;\n  }\n\n  /**\n   * Called when a value changes.\n   *\n   * @private\n   */\n\n\n  TransformStatic.prototype.onChange = function onChange() {\n    this._localID++;\n  };\n\n  /**\n   * Called when skew changes\n   *\n   * @private\n   */\n\n\n  TransformStatic.prototype.updateSkew = function updateSkew() {\n    this._cy = Math.cos(this.skew._y);\n    this._sy = Math.sin(this.skew._y);\n    this._nsx = Math.sin(this.skew._x);\n    this._cx = Math.cos(this.skew._x);\n\n    this._localID++;\n  };\n\n  /**\n   * Updates only local matrix\n   */\n\n\n  TransformStatic.prototype.updateLocalTransform = function updateLocalTransform() {\n    var lt = this.localTransform;\n\n    if (this._localID !== this._currentLocalID) {\n      // get the matrix values of the displayobject based on its transform properties..\n      var a = this._cr * this.scale._x;\n      var b = this._sr * this.scale._x;\n      var c = -this._sr * this.scale._y;\n      var d = this._cr * this.scale._y;\n\n      lt.a = this._cy * a + this._sy * c;\n      lt.b = this._cy * b + this._sy * d;\n      lt.c = this._nsx * a + this._cx * c;\n      lt.d = this._nsx * b + this._cx * d;\n\n      lt.tx = this.position._x - (this.pivot._x * lt.a + this.pivot._y * lt.c);\n      lt.ty = this.position._y - (this.pivot._x * lt.b + this.pivot._y * lt.d);\n      this._currentLocalID = this._localID;\n\n      // force an update..\n      this._parentID = -1;\n    }\n  };\n\n  /**\n   * Updates the values of the object and applies the parent's transform.\n   *\n   * @param {PIXI.Transform} parentTransform - The transform of the parent of this object\n   */\n\n\n  TransformStatic.prototype.updateTransform = function updateTransform(parentTransform) {\n    var pt = parentTransform.worldTransform;\n    var wt = this.worldTransform;\n    var lt = this.localTransform;\n\n    if (this._localID !== this._currentLocalID) {\n      // get the matrix values of the displayobject based on its transform properties..\n      var a = this._cr * this.scale._x;\n      var b = this._sr * this.scale._x;\n      var c = -this._sr * this.scale._y;\n      var d = this._cr * this.scale._y;\n\n      lt.a = this._cy * a + this._sy * c;\n      lt.b = this._cy * b + this._sy * d;\n      lt.c = this._nsx * a + this._cx * c;\n      lt.d = this._nsx * b + this._cx * d;\n\n      lt.tx = this.position._x - (this.pivot._x * lt.a + this.pivot._y * lt.c);\n      lt.ty = this.position._y - (this.pivot._x * lt.b + this.pivot._y * lt.d);\n      this._currentLocalID = this._localID;\n\n      // force an update..\n      this._parentID = -1;\n    }\n\n    if (this._parentID !== parentTransform._worldID) {\n      // concat the parent matrix with the objects transform.\n      wt.a = lt.a * pt.a + lt.b * pt.c;\n      wt.b = lt.a * pt.b + lt.b * pt.d;\n      wt.c = lt.c * pt.a + lt.d * pt.c;\n      wt.d = lt.c * pt.b + lt.d * pt.d;\n      wt.tx = lt.tx * pt.a + lt.ty * pt.c + pt.tx;\n      wt.ty = lt.tx * pt.b + lt.ty * pt.d + pt.ty;\n\n      this._parentID = parentTransform._worldID;\n\n      // update the id of the transform..\n      this._worldID++;\n    }\n  };\n\n  /**\n   * Decomposes a matrix and sets the transforms properties based on it.\n   *\n   * @param {PIXI.Matrix} matrix - The matrix to decompose\n   */\n\n\n  TransformStatic.prototype.setFromMatrix = function setFromMatrix(matrix) {\n    matrix.decompose(this);\n    this._localID++;\n  };\n\n  /**\n   * The rotation of the object in radians.\n   *\n   * @member {number}\n   * @memberof PIXI.TransformStatic#\n   */\n\n\n  _createClass(TransformStatic, [{\n    key: 'rotation',\n    get: function get() {\n      return this._rotation;\n    }\n\n    /**\n     * Sets the rotation of the transform.\n     *\n     * @param {number} value - The value to set to.\n     */\n    ,\n    set: function set(value) {\n      this._rotation = value;\n      this._sr = Math.sin(value);\n      this._cr = Math.cos(value);\n      this._localID++;\n    }\n  }]);\n\n  return TransformStatic;\n}(_TransformBase3.default);\n\nexports.default = TransformStatic;\n//# sourceMappingURL=TransformStatic.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/display/TransformStatic.js\n// module id = 40\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A GraphicsData object.\n *\n * @class\n * @memberof PIXI\n */\nvar GraphicsData = function () {\n  /**\n   *\n   * @param {number} lineWidth - the width of the line to draw\n   * @param {number} lineColor - the color of the line to draw\n   * @param {number} lineAlpha - the alpha of the line to draw\n   * @param {number} fillColor - the color of the fill\n   * @param {number} fillAlpha - the alpha of the fill\n   * @param {boolean} fill - whether or not the shape is filled with a colour\n   * @param {PIXI.Circle|PIXI.Rectangle|PIXI.Ellipse|PIXI.Polygon} shape - The shape object to draw.\n   */\n  function GraphicsData(lineWidth, lineColor, lineAlpha, fillColor, fillAlpha, fill, shape) {\n    _classCallCheck(this, GraphicsData);\n\n    /**\n     * @member {number} the width of the line to draw\n     */\n    this.lineWidth = lineWidth;\n\n    /**\n     * @member {number} the color of the line to draw\n     */\n    this.lineColor = lineColor;\n\n    /**\n     * @member {number} the alpha of the line to draw\n     */\n    this.lineAlpha = lineAlpha;\n\n    /**\n     * @member {number} cached tint of the line to draw\n     */\n    this._lineTint = lineColor;\n\n    /**\n     * @member {number} the color of the fill\n     */\n    this.fillColor = fillColor;\n\n    /**\n     * @member {number} the alpha of the fill\n     */\n    this.fillAlpha = fillAlpha;\n\n    /**\n     * @member {number} cached tint of the fill\n     */\n    this._fillTint = fillColor;\n\n    /**\n     * @member {boolean} whether or not the shape is filled with a colour\n     */\n    this.fill = fill;\n\n    this.holes = [];\n\n    /**\n     * @member {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} The shape object to draw.\n     */\n    this.shape = shape;\n\n    /**\n     * @member {number} The type of the shape, see the Const.Shapes file for all the existing types,\n     */\n    this.type = shape.type;\n  }\n\n  /**\n   * Creates a new GraphicsData object with the same values as this one.\n   *\n   * @return {PIXI.GraphicsData} Cloned GraphicsData object\n   */\n\n\n  GraphicsData.prototype.clone = function clone() {\n    return new GraphicsData(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.fill, this.shape);\n  };\n\n  /**\n   * Adds a hole to the shape.\n   *\n   * @param {PIXI.Rectangle|PIXI.Circle} shape - The shape of the hole.\n   */\n\n\n  GraphicsData.prototype.addHole = function addHole(shape) {\n    this.holes.push(shape);\n  };\n\n  /**\n   * Destroys the Graphics data.\n   */\n\n\n  GraphicsData.prototype.destroy = function destroy() {\n    this.shape = null;\n    this.holes = null;\n  };\n\n  return GraphicsData;\n}();\n\nexports.default = GraphicsData;\n//# sourceMappingURL=GraphicsData.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/GraphicsData.js\n// module id = 41\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Matrix = require('./Matrix');\n\nvar _Matrix2 = _interopRequireDefault(_Matrix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1]; // Your friendly neighbour https://en.wikipedia.org/wiki/Dihedral_group of order 16\n\nvar uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1];\nvar vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1];\nvar vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1];\nvar tempMatrices = [];\n\nvar mul = [];\n\nfunction signum(x) {\n    if (x < 0) {\n        return -1;\n    }\n    if (x > 0) {\n        return 1;\n    }\n\n    return 0;\n}\n\nfunction init() {\n    for (var i = 0; i < 16; i++) {\n        var row = [];\n\n        mul.push(row);\n\n        for (var j = 0; j < 16; j++) {\n            var _ux = signum(ux[i] * ux[j] + vx[i] * uy[j]);\n            var _uy = signum(uy[i] * ux[j] + vy[i] * uy[j]);\n            var _vx = signum(ux[i] * vx[j] + vx[i] * vy[j]);\n            var _vy = signum(uy[i] * vx[j] + vy[i] * vy[j]);\n\n            for (var k = 0; k < 16; k++) {\n                if (ux[k] === _ux && uy[k] === _uy && vx[k] === _vx && vy[k] === _vy) {\n                    row.push(k);\n                    break;\n                }\n            }\n        }\n    }\n\n    for (var _i = 0; _i < 16; _i++) {\n        var mat = new _Matrix2.default();\n\n        mat.set(ux[_i], uy[_i], vx[_i], vy[_i], 0, 0);\n        tempMatrices.push(mat);\n    }\n}\n\ninit();\n\n/**\n * Implements Dihedral Group D_8, see [group D4]{@link http://mathworld.wolfram.com/DihedralGroupD4.html},\n * D8 is the same but with diagonals. Used for texture rotations.\n *\n * Vector xX(i), xY(i) is U-axis of sprite with rotation i\n * Vector yY(i), yY(i) is V-axis of sprite with rotation i\n * Rotations: 0 grad (0), 90 grad (2), 180 grad (4), 270 grad (6)\n * Mirrors: vertical (8), main diagonal (10), horizontal (12), reverse diagonal (14)\n * This is the small part of gameofbombs.com portal system. It works.\n *\n * @author Ivan @ivanpopelyshev\n *\n * @namespace PIXI.GroupD8\n */\nvar GroupD8 = {\n    E: 0,\n    SE: 1,\n    S: 2,\n    SW: 3,\n    W: 4,\n    NW: 5,\n    N: 6,\n    NE: 7,\n    MIRROR_VERTICAL: 8,\n    MIRROR_HORIZONTAL: 12,\n    uX: function uX(ind) {\n        return ux[ind];\n    },\n    uY: function uY(ind) {\n        return uy[ind];\n    },\n    vX: function vX(ind) {\n        return vx[ind];\n    },\n    vY: function vY(ind) {\n        return vy[ind];\n    },\n    inv: function inv(rotation) {\n        if (rotation & 8) {\n            return rotation & 15;\n        }\n\n        return -rotation & 7;\n    },\n    add: function add(rotationSecond, rotationFirst) {\n        return mul[rotationSecond][rotationFirst];\n    },\n    sub: function sub(rotationSecond, rotationFirst) {\n        return mul[rotationSecond][GroupD8.inv(rotationFirst)];\n    },\n\n    /**\n     * Adds 180 degrees to rotation. Commutative operation.\n     *\n     * @method\n     * @param {number} rotation - The number to rotate.\n     * @returns {number} rotated number\n     */\n    rotate180: function rotate180(rotation) {\n        return rotation ^ 4;\n    },\n\n    /**\n     * I dont know why sometimes width and heights needs to be swapped. We'll fix it later.\n     *\n     * @param {number} rotation - The number to check.\n     * @returns {boolean} Whether or not the width/height should be swapped.\n     */\n    isSwapWidthHeight: function isSwapWidthHeight(rotation) {\n        return (rotation & 3) === 2;\n    },\n\n    /**\n     * @param {number} dx - TODO\n     * @param {number} dy - TODO\n     *\n     * @return {number} TODO\n     */\n    byDirection: function byDirection(dx, dy) {\n        if (Math.abs(dx) * 2 <= Math.abs(dy)) {\n            if (dy >= 0) {\n                return GroupD8.S;\n            }\n\n            return GroupD8.N;\n        } else if (Math.abs(dy) * 2 <= Math.abs(dx)) {\n            if (dx > 0) {\n                return GroupD8.E;\n            }\n\n            return GroupD8.W;\n        } else if (dy > 0) {\n            if (dx > 0) {\n                return GroupD8.SE;\n            }\n\n            return GroupD8.SW;\n        } else if (dx > 0) {\n            return GroupD8.NE;\n        }\n\n        return GroupD8.NW;\n    },\n\n    /**\n     * Helps sprite to compensate texture packer rotation.\n     *\n     * @param {PIXI.Matrix} matrix - sprite world matrix\n     * @param {number} rotation - The rotation factor to use.\n     * @param {number} tx - sprite anchoring\n     * @param {number} ty - sprite anchoring\n     */\n    matrixAppendRotationInv: function matrixAppendRotationInv(matrix, rotation) {\n        var tx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var ty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n        // Packer used \"rotation\", we use \"inv(rotation)\"\n        var mat = tempMatrices[GroupD8.inv(rotation)];\n\n        mat.tx = tx;\n        mat.ty = ty;\n        matrix.append(mat);\n    }\n};\n\nexports.default = GroupD8;\n//# sourceMappingURL=GroupD8.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/math/GroupD8.js\n// module id = 42\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n * An observable point is a point that triggers a callback when the point's position is changed.\n *\n * @class\n * @memberof PIXI\n */\nvar ObservablePoint = function () {\n    /**\n     * @param {Function} cb - callback when changed\n     * @param {object} scope - owner of callback\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    function ObservablePoint(cb, scope) {\n        var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n        _classCallCheck(this, ObservablePoint);\n\n        this._x = x;\n        this._y = y;\n\n        this.cb = cb;\n        this.scope = scope;\n    }\n\n    /**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n\n\n    ObservablePoint.prototype.set = function set(x, y) {\n        var _x = x || 0;\n        var _y = y || (y !== 0 ? _x : 0);\n\n        if (this._x !== _x || this._y !== _y) {\n            this._x = _x;\n            this._y = _y;\n            this.cb.call(this.scope);\n        }\n    };\n\n    /**\n     * Copies the data from another point\n     *\n     * @param {PIXI.Point|PIXI.ObservablePoint} point - point to copy from\n     */\n\n\n    ObservablePoint.prototype.copy = function copy(point) {\n        if (this._x !== point.x || this._y !== point.y) {\n            this._x = point.x;\n            this._y = point.y;\n            this.cb.call(this.scope);\n        }\n    };\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     * @memberof PIXI.ObservablePoint#\n     */\n\n\n    _createClass(ObservablePoint, [{\n        key: \"x\",\n        get: function get() {\n            return this._x;\n        }\n\n        /**\n         * Sets the X component.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (this._x !== value) {\n                this._x = value;\n                this.cb.call(this.scope);\n            }\n        }\n\n        /**\n         * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n         *\n         * @member {number}\n         * @memberof PIXI.ObservablePoint#\n         */\n\n    }, {\n        key: \"y\",\n        get: function get() {\n            return this._y;\n        }\n\n        /**\n         * Sets the Y component.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (this._y !== value) {\n                this._y = value;\n                this.cb.call(this.scope);\n            }\n        }\n    }]);\n\n    return ObservablePoint;\n}();\n\nexports.default = ObservablePoint;\n//# sourceMappingURL=ObservablePoint.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/math/ObservablePoint.js\n// module id = 43\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('../utils');\n\nvar _math = require('../math');\n\nvar _const = require('../const');\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _Container = require('../display/Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _RenderTexture = require('../textures/RenderTexture');\n\nvar _RenderTexture2 = _interopRequireDefault(_RenderTexture);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tempMatrix = new _math.Matrix();\nvar RESOLUTION = _settings2.default.RESOLUTION,\n    RENDER_OPTIONS = _settings2.default.RENDER_OPTIONS;\n\n/**\n * The SystemRenderer is the base for a Pixi Renderer. It is extended by the {@link PIXI.CanvasRenderer}\n * and {@link PIXI.WebGLRenderer} which can be used for rendering a Pixi scene.\n *\n * @abstract\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n */\n\nvar SystemRenderer = function (_EventEmitter) {\n  _inherits(SystemRenderer, _EventEmitter);\n\n  /**\n   * @param {string} system - The name of the system this renderer is for.\n   * @param {number} [width=800] - the width of the canvas view\n   * @param {number} [height=600] - the height of the canvas view\n   * @param {object} [options] - The optional renderer parameters\n   * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n   * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n   * @param {boolean} [options.autoResize=false] - If the render view is automatically resized, default false\n   * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n   * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer. The\n   *  resolution of the renderer retina would be 2.\n   * @param {boolean} [options.clearBeforeRender=true] - This sets if the CanvasRenderer will clear the canvas or\n   *      not before the new render pass.\n   * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n   *  (shown if not transparent).\n   * @param {boolean} [options.roundPixels=false] - If true Pixi will Math.floor() x/y values when rendering,\n   *  stopping pixel interpolation.\n   */\n  function SystemRenderer(system, width, height, options) {\n    _classCallCheck(this, SystemRenderer);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    (0, _utils.sayHello)(system);\n\n    // prepare options\n    if (options) {\n      for (var i in RENDER_OPTIONS) {\n        if (typeof options[i] === 'undefined') {\n          options[i] = RENDER_OPTIONS[i];\n        }\n      }\n    } else {\n      options = RENDER_OPTIONS;\n    }\n\n    /**\n     * The type of the renderer.\n     *\n     * @member {number}\n     * @default PIXI.RENDERER_TYPE.UNKNOWN\n     * @see PIXI.RENDERER_TYPE\n     */\n    _this.type = _const.RENDERER_TYPE.UNKNOWN;\n\n    /**\n     * The width of the canvas view\n     *\n     * @member {number}\n     * @default 800\n     */\n    _this.width = width || 800;\n\n    /**\n     * The height of the canvas view\n     *\n     * @member {number}\n     * @default 600\n     */\n    _this.height = height || 600;\n\n    /**\n     * The canvas element that everything is drawn to\n     *\n     * @member {HTMLCanvasElement}\n     */\n    _this.view = options.view || document.createElement('canvas');\n\n    /**\n     * The resolution / device pixel ratio of the renderer\n     *\n     * @member {number}\n     * @default 1\n     */\n    _this.resolution = options.resolution || RESOLUTION;\n\n    /**\n     * Whether the render view is transparent\n     *\n     * @member {boolean}\n     */\n    _this.transparent = options.transparent;\n\n    /**\n     * Whether the render view should be resized automatically\n     *\n     * @member {boolean}\n     */\n    _this.autoResize = options.autoResize || false;\n\n    /**\n     * Tracks the blend modes useful for this renderer.\n     *\n     * @member {object<string, mixed>}\n     */\n    _this.blendModes = null;\n\n    /**\n     * The value of the preserveDrawingBuffer flag affects whether or not the contents of\n     * the stencil buffer is retained after rendering.\n     *\n     * @member {boolean}\n     */\n    _this.preserveDrawingBuffer = options.preserveDrawingBuffer;\n\n    /**\n     * This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\n     * If the scene is NOT transparent Pixi will use a canvas sized fillRect operation every\n     * frame to set the canvas background color. If the scene is transparent Pixi will use clearRect\n     * to clear the canvas every frame. Disable this by setting this to false. For example if\n     * your game has a canvas filling background image you often don't need this set.\n     *\n     * @member {boolean}\n     * @default\n     */\n    _this.clearBeforeRender = options.clearBeforeRender;\n\n    /**\n     * If true Pixi will Math.floor() x/y values when rendering, stopping pixel interpolation.\n     * Handy for crisp pixel art and speed on legacy devices.\n     *\n     * @member {boolean}\n     */\n    _this.roundPixels = options.roundPixels;\n\n    /**\n     * The background color as a number.\n     *\n     * @member {number}\n     * @private\n     */\n    _this._backgroundColor = 0x000000;\n\n    /**\n     * The background color as an [R, G, B] array.\n     *\n     * @member {number[]}\n     * @private\n     */\n    _this._backgroundColorRgba = [0, 0, 0, 0];\n\n    /**\n     * The background color as a string.\n     *\n     * @member {string}\n     * @private\n     */\n    _this._backgroundColorString = '#000000';\n\n    _this.backgroundColor = options.backgroundColor || _this._backgroundColor; // run bg color setter\n\n    /**\n     * This temporary display object used as the parent of the currently being rendered item\n     *\n     * @member {PIXI.DisplayObject}\n     * @private\n     */\n    _this._tempDisplayObjectParent = new _Container2.default();\n\n    /**\n     * The last root object that the renderer tried to render.\n     *\n     * @member {PIXI.DisplayObject}\n     * @private\n     */\n    _this._lastObjectRendered = _this._tempDisplayObjectParent;\n    return _this;\n  }\n\n  /**\n   * Resizes the canvas view to the specified width and height\n   *\n   * @param {number} width - the new width of the canvas view\n   * @param {number} height - the new height of the canvas view\n   */\n\n\n  SystemRenderer.prototype.resize = function resize(width, height) {\n    this.width = width * this.resolution;\n    this.height = height * this.resolution;\n\n    this.view.width = this.width;\n    this.view.height = this.height;\n\n    if (this.autoResize) {\n      this.view.style.width = this.width / this.resolution + 'px';\n      this.view.style.height = this.height / this.resolution + 'px';\n    }\n  };\n\n  /**\n   * Useful function that returns a texture of the display object that can then be used to create sprites\n   * This can be quite useful if your displayObject is complicated and needs to be reused multiple times.\n   *\n   * @param {PIXI.DisplayObject} displayObject - The displayObject the object will be generated from\n   * @param {number} scaleMode - Should be one of the scaleMode consts\n   * @param {number} resolution - The resolution / device pixel ratio of the texture being generated\n   * @return {PIXI.Texture} a texture of the graphics object\n   */\n\n\n  SystemRenderer.prototype.generateTexture = function generateTexture(displayObject, scaleMode, resolution) {\n    var bounds = displayObject.getLocalBounds();\n\n    var renderTexture = _RenderTexture2.default.create(bounds.width | 0, bounds.height | 0, scaleMode, resolution);\n\n    tempMatrix.tx = -bounds.x;\n    tempMatrix.ty = -bounds.y;\n\n    this.render(displayObject, renderTexture, false, tempMatrix, true);\n\n    return renderTexture;\n  };\n\n  /**\n   * Removes everything from the renderer and optionally removes the Canvas DOM element.\n   *\n   * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n   */\n\n\n  SystemRenderer.prototype.destroy = function destroy(removeView) {\n    if (removeView && this.view.parentNode) {\n      this.view.parentNode.removeChild(this.view);\n    }\n\n    this.type = _const.RENDERER_TYPE.UNKNOWN;\n\n    this.width = 0;\n    this.height = 0;\n\n    this.view = null;\n\n    this.resolution = 0;\n\n    this.transparent = false;\n\n    this.autoResize = false;\n\n    this.blendModes = null;\n\n    this.preserveDrawingBuffer = false;\n    this.clearBeforeRender = false;\n\n    this.roundPixels = false;\n\n    this._backgroundColor = 0;\n    this._backgroundColorRgba = null;\n    this._backgroundColorString = null;\n\n    this.backgroundColor = 0;\n    this._tempDisplayObjectParent = null;\n    this._lastObjectRendered = null;\n  };\n\n  /**\n   * The background color to fill if not transparent\n   *\n   * @member {number}\n   * @memberof PIXI.SystemRenderer#\n   */\n\n\n  _createClass(SystemRenderer, [{\n    key: 'backgroundColor',\n    get: function get() {\n      return this._backgroundColor;\n    }\n\n    /**\n     * Sets the background color.\n     *\n     * @param {number} value - The value to set to.\n     */\n    ,\n    set: function set(value) {\n      this._backgroundColor = value;\n      this._backgroundColorString = (0, _utils.hex2string)(value);\n      (0, _utils.hex2rgb)(value, this._backgroundColorRgba);\n    }\n  }]);\n\n  return SystemRenderer;\n}(_eventemitter2.default);\n\nexports.default = SystemRenderer;\n//# sourceMappingURL=SystemRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/SystemRenderer.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _settings = require('../../../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RESOLUTION = _settings2.default.RESOLUTION;\n\n/**\n * Creates a Canvas element of the given size.\n *\n * @class\n * @memberof PIXI\n */\n\nvar CanvasRenderTarget = function () {\n  /**\n   * @param {number} width - the width for the newly created canvas\n   * @param {number} height - the height for the newly created canvas\n   * @param {number} [resolution=1] - The resolution / device pixel ratio of the canvas\n   */\n  function CanvasRenderTarget(width, height, resolution) {\n    _classCallCheck(this, CanvasRenderTarget);\n\n    /**\n     * The Canvas object that belongs to this CanvasRenderTarget.\n     *\n     * @member {HTMLCanvasElement}\n     */\n    this.canvas = document.createElement('canvas');\n\n    /**\n     * A CanvasRenderingContext2D object representing a two-dimensional rendering context.\n     *\n     * @member {CanvasRenderingContext2D}\n     */\n    this.context = this.canvas.getContext('2d');\n\n    this.resolution = resolution || RESOLUTION;\n\n    this.resize(width, height);\n  }\n\n  /**\n   * Clears the canvas that was created by the CanvasRenderTarget class.\n   *\n   * @private\n   */\n\n\n  CanvasRenderTarget.prototype.clear = function clear() {\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n\n  /**\n   * Resizes the canvas to the specified width and height.\n   *\n   * @param {number} width - the new width of the canvas\n   * @param {number} height - the new height of the canvas\n   */\n\n\n  CanvasRenderTarget.prototype.resize = function resize(width, height) {\n    this.canvas.width = width * this.resolution;\n    this.canvas.height = height * this.resolution;\n  };\n\n  /**\n   * Destroys this canvas.\n   *\n   */\n\n\n  CanvasRenderTarget.prototype.destroy = function destroy() {\n    this.context = null;\n    this.canvas = null;\n  };\n\n  /**\n   * The width of the canvas buffer in pixels.\n   *\n   * @member {number}\n   * @memberof PIXI.CanvasRenderTarget#\n   */\n\n\n  _createClass(CanvasRenderTarget, [{\n    key: 'width',\n    get: function get() {\n      return this.canvas.width;\n    }\n\n    /**\n     * Sets the width.\n     *\n     * @param {number} val - The value to set.\n     */\n    ,\n    set: function set(val) {\n      this.canvas.width = val;\n    }\n\n    /**\n     * The height of the canvas buffer in pixels.\n     *\n     * @member {number}\n     * @memberof PIXI.CanvasRenderTarget#\n     */\n\n  }, {\n    key: 'height',\n    get: function get() {\n      return this.canvas.height;\n    }\n\n    /**\n     * Sets the height.\n     *\n     * @param {number} val - The value to set.\n     */\n    ,\n    set: function set(val) {\n      this.canvas.height = val;\n    }\n  }]);\n\n  return CanvasRenderTarget;\n}();\n\nexports.default = CanvasRenderTarget;\n//# sourceMappingURL=CanvasRenderTarget.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/canvas/utils/CanvasRenderTarget.js\n// module id = 45\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = canUseNewCanvasBlendModes;\n/**\n * Creates a little colored canvas\n *\n * @ignore\n * @param {number} color - The color to make the canvas\n * @return {canvas} a small canvas element\n */\nfunction createColoredCanvas(color) {\n    var canvas = document.createElement('canvas');\n\n    canvas.width = 6;\n    canvas.height = 1;\n\n    var context = canvas.getContext('2d');\n\n    context.fillStyle = color;\n    context.fillRect(0, 0, 6, 1);\n\n    return canvas;\n}\n\n/**\n * Checks whether the Canvas BlendModes are supported by the current browser\n *\n * @return {boolean} whether they are supported\n */\nfunction canUseNewCanvasBlendModes() {\n    if (typeof document === 'undefined') {\n        return false;\n    }\n\n    var magenta = createColoredCanvas('#ff00ff');\n    var yellow = createColoredCanvas('#ffff00');\n\n    var canvas = document.createElement('canvas');\n\n    canvas.width = 6;\n    canvas.height = 1;\n\n    var context = canvas.getContext('2d');\n\n    context.globalCompositeOperation = 'multiply';\n    context.drawImage(magenta, 0, 0);\n    context.drawImage(yellow, 2, 0);\n\n    var imageData = context.getImageData(2, 0, 1, 1);\n\n    if (!imageData) {\n        return false;\n    }\n\n    var data = imageData.data;\n\n    return data[0] === 255 && data[1] === 0 && data[2] === 0;\n}\n//# sourceMappingURL=canUseNewCanvasBlendModes.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/canvas/utils/canUseNewCanvasBlendModes.js\n// module id = 46\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extractUniformsFromSrc = require('./extractUniformsFromSrc');\n\nvar _extractUniformsFromSrc2 = _interopRequireDefault(_extractUniformsFromSrc);\n\nvar _utils = require('../../../utils');\n\nvar _const = require('../../../const');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SOURCE_KEY_MAP = {};\n\n// let math = require('../../../math');\n/**\n * @class\n * @memberof PIXI\n * @extends PIXI.Shader\n */\n\nvar Filter = function () {\n  /**\n   * @param {string} [vertexSrc] - The source of the vertex shader.\n   * @param {string} [fragmentSrc] - The source of the fragment shader.\n   * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n   */\n  function Filter(vertexSrc, fragmentSrc, uniforms) {\n    _classCallCheck(this, Filter);\n\n    /**\n     * The vertex shader.\n     *\n     * @member {string}\n     */\n    this.vertexSrc = vertexSrc || Filter.defaultVertexSrc;\n\n    /**\n     * The fragment shader.\n     *\n     * @member {string}\n     */\n    this.fragmentSrc = fragmentSrc || Filter.defaultFragmentSrc;\n\n    this.blendMode = _const.BLEND_MODES.NORMAL;\n\n    // pull out the vertex and shader uniforms if they are not specified..\n    // currently this does not extract structs only default types\n    this.uniformData = uniforms || (0, _extractUniformsFromSrc2.default)(this.vertexSrc, this.fragmentSrc, 'projectionMatrix|uSampler');\n\n    /**\n     * An object containing the current values of custom uniforms.\n     * @example <caption>Updating the value of a custom uniform</caption>\n     * filter.uniforms.time = performance.now();\n     *\n     * @member {object}\n     */\n    this.uniforms = {};\n\n    for (var i in this.uniformData) {\n      this.uniforms[i] = this.uniformData[i].value;\n    }\n\n    // this is where we store shader references..\n    // TODO we could cache this!\n    this.glShaders = {};\n\n    // used for cacheing.. sure there is a better way!\n    if (!SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc]) {\n      SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc] = (0, _utils.uid)();\n    }\n\n    this.glShaderKey = SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc];\n\n    /**\n     * The padding of the filter. Some filters require extra space to breath such as a blur.\n     * Increasing this will add extra width and height to the bounds of the object that the\n     * filter is applied to.\n     *\n     * @member {number}\n     */\n    this.padding = 4;\n\n    /**\n     * The resolution of the filter. Setting this to be lower will lower the quality but\n     * increase the performance of the filter.\n     *\n     * @member {number}\n     */\n    this.resolution = 1;\n\n    /**\n     * If enabled is true the filter is applied, if false it will not.\n     *\n     * @member {boolean}\n     */\n    this.enabled = true;\n  }\n\n  /**\n   * Applies the filter\n   *\n   * @param {PIXI.FilterManager} filterManager - The renderer to retrieve the filter from\n   * @param {PIXI.RenderTarget} input - The input render target.\n   * @param {PIXI.RenderTarget} output - The target to output to.\n   * @param {boolean} clear - Should the output be cleared before rendering to it\n   */\n\n\n  Filter.prototype.apply = function apply(filterManager, input, output, clear) {\n    // --- //\n    //  this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(tempMatrix, window.panda );\n\n    // do as you please!\n\n    filterManager.applyFilter(this, input, output, clear);\n\n    // or just do a regular render..\n  };\n\n  /**\n   * The default vertex shader source\n   *\n   * @static\n   * @constant\n   */\n\n\n  _createClass(Filter, null, [{\n    key: 'defaultVertexSrc',\n    get: function get() {\n      return ['attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform mat3 projectionMatrix;', 'uniform mat3 filterMatrix;', 'varying vec2 vTextureCoord;', 'varying vec2 vFilterCoord;', 'void main(void){', '   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);', '   vFilterCoord = ( filterMatrix * vec3( aTextureCoord, 1.0)  ).xy;', '   vTextureCoord = aTextureCoord ;', '}'].join('\\n');\n    }\n\n    /**\n     * The default fragment shader source\n     *\n     * @static\n     * @constant\n     */\n\n  }, {\n    key: 'defaultFragmentSrc',\n    get: function get() {\n      return ['varying vec2 vTextureCoord;', 'varying vec2 vFilterCoord;', 'uniform sampler2D uSampler;', 'uniform sampler2D filterSampler;', 'void main(void){', '   vec4 masky = texture2D(filterSampler, vFilterCoord);', '   vec4 sample = texture2D(uSampler, vTextureCoord);', '   vec4 color;', '   if(mod(vFilterCoord.x, 1.0) > 0.5)', '   {', '     color = vec4(1.0, 0.0, 0.0, 1.0);', '   }', '   else', '   {', '     color = vec4(0.0, 1.0, 0.0, 1.0);', '   }',\n      // '   gl_FragColor = vec4(mod(vFilterCoord.x, 1.5), vFilterCoord.y,0.0,1.0);',\n      '   gl_FragColor = mix(sample, masky, 0.5);', '   gl_FragColor *= sample.a;', '}'].join('\\n');\n    }\n  }]);\n\n  return Filter;\n}();\n\nexports.default = Filter;\n//# sourceMappingURL=Filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/filters/Filter.js\n// module id = 47\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Filter2 = require('../Filter');\n\nvar _Filter3 = _interopRequireDefault(_Filter2);\n\nvar _math = require('../../../../math');\n\nvar _path = require('path');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The SpriteMaskFilter class\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI\n */\nvar SpriteMaskFilter = function (_Filter) {\n    _inherits(SpriteMaskFilter, _Filter);\n\n    /**\n     * @param {PIXI.Sprite} sprite - the target sprite\n     */\n    function SpriteMaskFilter(sprite) {\n        _classCallCheck(this, SpriteMaskFilter);\n\n        var maskMatrix = new _math.Matrix();\n\n        var _this = _possibleConstructorReturn(this, _Filter.call(this, 'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 otherMatrix;\\n\\nvarying vec2 vMaskCoord;\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = aTextureCoord;\\n    vMaskCoord = ( otherMatrix * vec3( aTextureCoord, 1.0)  ).xy;\\n}\\n', 'varying vec2 vMaskCoord;\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float alpha;\\nuniform sampler2D mask;\\n\\nvoid main(void)\\n{\\n    // check clip! this will stop the mask bleeding out from the edges\\n    vec2 text = abs( vMaskCoord - 0.5 );\\n    text = step(0.5, text);\\n\\n    float clip = 1.0 - max(text.y, text.x);\\n    vec4 original = texture2D(uSampler, vTextureCoord);\\n    vec4 masky = texture2D(mask, vMaskCoord);\\n\\n    original *= (masky.r * masky.a * alpha * clip);\\n\\n    gl_FragColor = original;\\n}\\n'));\n\n        sprite.renderable = false;\n\n        _this.maskSprite = sprite;\n        _this.maskMatrix = maskMatrix;\n        return _this;\n    }\n\n    /**\n     * Applies the filter\n     *\n     * @param {PIXI.FilterManager} filterManager - The renderer to retrieve the filter from\n     * @param {PIXI.RenderTarget} input - The input render target.\n     * @param {PIXI.RenderTarget} output - The target to output to.\n     */\n\n\n    SpriteMaskFilter.prototype.apply = function apply(filterManager, input, output) {\n        var maskSprite = this.maskSprite;\n\n        this.uniforms.mask = maskSprite._texture;\n        this.uniforms.otherMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, maskSprite);\n        this.uniforms.alpha = maskSprite.worldAlpha;\n\n        filterManager.applyFilter(this, input, output);\n    };\n\n    return SpriteMaskFilter;\n}(_Filter3.default);\n\nexports.default = SpriteMaskFilter;\n//# sourceMappingURL=SpriteMaskFilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/filters/spriteMask/SpriteMaskFilter.js\n// module id = 48\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nvar _createIndicesForQuads = require('../../../utils/createIndicesForQuads');\n\nvar _createIndicesForQuads2 = _interopRequireDefault(_createIndicesForQuads);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Helper class to create a quad\n *\n * @class\n * @memberof PIXI\n */\nvar Quad = function () {\n  /**\n   * @param {WebGLRenderingContext} gl - The gl context for this quad to use.\n   * @param {object} state - TODO: Description\n   */\n  function Quad(gl, state) {\n    _classCallCheck(this, Quad);\n\n    /*\n     * the current WebGL drawing context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    /**\n     * An array of vertices\n     *\n     * @member {Float32Array}\n     */\n    this.vertices = new Float32Array([-1, -1, 1, -1, 1, 1, -1, 1]);\n\n    /**\n     * The Uvs of the quad\n     *\n     * @member {Float32Array}\n     */\n    this.uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n\n    this.interleaved = new Float32Array(8 * 2);\n\n    for (var i = 0; i < 4; i++) {\n      this.interleaved[i * 4] = this.vertices[i * 2];\n      this.interleaved[i * 4 + 1] = this.vertices[i * 2 + 1];\n      this.interleaved[i * 4 + 2] = this.uvs[i * 2];\n      this.interleaved[i * 4 + 3] = this.uvs[i * 2 + 1];\n    }\n\n    /*\n     * @member {Uint16Array} An array containing the indices of the vertices\n     */\n    this.indices = (0, _createIndicesForQuads2.default)(1);\n\n    /*\n     * @member {glCore.GLBuffer} The vertex buffer\n     */\n    this.vertexBuffer = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, this.interleaved, gl.STATIC_DRAW);\n\n    /*\n     * @member {glCore.GLBuffer} The index buffer\n     */\n    this.indexBuffer = _pixiGlCore2.default.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n    /*\n     * @member {glCore.VertexArrayObject} The index buffer\n     */\n    this.vao = new _pixiGlCore2.default.VertexArrayObject(gl, state);\n  }\n\n  /**\n   * Initialises the vaos and uses the shader.\n   *\n   * @param {PIXI.Shader} shader - the shader to use\n   */\n\n\n  Quad.prototype.initVao = function initVao(shader) {\n    this.vao.clear().addIndex(this.indexBuffer).addAttribute(this.vertexBuffer, shader.attributes.aVertexPosition, this.gl.FLOAT, false, 4 * 4, 0).addAttribute(this.vertexBuffer, shader.attributes.aTextureCoord, this.gl.FLOAT, false, 4 * 4, 2 * 4);\n  };\n\n  /**\n   * Maps two Rectangle to the quad.\n   *\n   * @param {PIXI.Rectangle} targetTextureFrame - the first rectangle\n   * @param {PIXI.Rectangle} destinationFrame - the second rectangle\n   * @return {PIXI.Quad} Returns itself.\n   */\n\n\n  Quad.prototype.map = function map(targetTextureFrame, destinationFrame) {\n    var x = 0; // destinationFrame.x / targetTextureFrame.width;\n    var y = 0; // destinationFrame.y / targetTextureFrame.height;\n\n    this.uvs[0] = x;\n    this.uvs[1] = y;\n\n    this.uvs[2] = x + destinationFrame.width / targetTextureFrame.width;\n    this.uvs[3] = y;\n\n    this.uvs[4] = x + destinationFrame.width / targetTextureFrame.width;\n    this.uvs[5] = y + destinationFrame.height / targetTextureFrame.height;\n\n    this.uvs[6] = x;\n    this.uvs[7] = y + destinationFrame.height / targetTextureFrame.height;\n\n    x = destinationFrame.x;\n    y = destinationFrame.y;\n\n    this.vertices[0] = x;\n    this.vertices[1] = y;\n\n    this.vertices[2] = x + destinationFrame.width;\n    this.vertices[3] = y;\n\n    this.vertices[4] = x + destinationFrame.width;\n    this.vertices[5] = y + destinationFrame.height;\n\n    this.vertices[6] = x;\n    this.vertices[7] = y + destinationFrame.height;\n\n    return this;\n  };\n\n  /**\n   * Binds the buffer and uploads the data\n   *\n   * @return {PIXI.Quad} Returns itself.\n   */\n\n\n  Quad.prototype.upload = function upload() {\n    for (var i = 0; i < 4; i++) {\n      this.interleaved[i * 4] = this.vertices[i * 2];\n      this.interleaved[i * 4 + 1] = this.vertices[i * 2 + 1];\n      this.interleaved[i * 4 + 2] = this.uvs[i * 2];\n      this.interleaved[i * 4 + 3] = this.uvs[i * 2 + 1];\n    }\n\n    this.vertexBuffer.upload(this.interleaved);\n\n    return this;\n  };\n\n  /**\n   * Removes this quad from WebGL\n   */\n\n\n  Quad.prototype.destroy = function destroy() {\n    var gl = this.gl;\n\n    gl.deleteBuffer(this.vertexBuffer);\n    gl.deleteBuffer(this.indexBuffer);\n  };\n\n  return Quad;\n}();\n\nexports.default = Quad;\n//# sourceMappingURL=Quad.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/utils/Quad.js\n// module id = 49\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // disabling eslint for now, going to rewrite this in v5\n/* eslint-disable */\n\nvar _const = require('../const');\n\nvar _utils = require('../utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultStyle = {\n    align: 'left',\n    breakWords: false,\n    dropShadow: false,\n    dropShadowAngle: Math.PI / 6,\n    dropShadowBlur: 0,\n    dropShadowColor: '#000000',\n    dropShadowDistance: 5,\n    fill: 'black',\n    fillGradientType: _const.TEXT_GRADIENT.LINEAR_VERTICAL,\n    fontFamily: 'Arial',\n    fontSize: 26,\n    fontStyle: 'normal',\n    fontVariant: 'normal',\n    fontWeight: 'normal',\n    letterSpacing: 0,\n    lineHeight: 0,\n    lineJoin: 'miter',\n    miterLimit: 10,\n    padding: 0,\n    stroke: 'black',\n    strokeThickness: 0,\n    textBaseline: 'alphabetic',\n    wordWrap: false,\n    wordWrapWidth: 100\n};\n\n/**\n * A TextStyle Object decorates a Text Object. It can be shared between\n * multiple Text objects. Changing the style will update all text objects using it.\n *\n * @class\n * @memberof PIXI\n */\n\nvar TextStyle = function () {\n    /**\n     * @param {object} [style] - The style parameters\n     * @param {string} [style.align='left'] - Alignment for multiline text ('left', 'center' or 'right'),\n     *  does not affect single line text\n     * @param {boolean} [style.breakWords=false] - Indicates if lines can be wrapped within words, it\n     *  needs wordWrap to be set to true\n     * @param {boolean} [style.dropShadow=false] - Set a drop shadow for the text\n     * @param {number} [style.dropShadowAngle=Math.PI/6] - Set a angle of the drop shadow\n     * @param {number} [style.dropShadowBlur=0] - Set a shadow blur radius\n     * @param {string} [style.dropShadowColor='#000000'] - A fill style to be used on the dropshadow e.g 'red', '#00FF00'\n     * @param {number} [style.dropShadowDistance=5] - Set a distance of the drop shadow\n     * @param {string|string[]|number|number[]|CanvasGradient|CanvasPattern} [style.fill='black'] - A canvas\n     *  fillstyle that will be used on the text e.g 'red', '#00FF00'. Can be an array to create a gradient\n     *  eg ['#000000','#FFFFFF']\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle|MDN}\n     * @param {number} [style.fillGradientType=PIXI.TEXT_GRADIENT.LINEAR_VERTICAL] - If fills styles are\n     *  supplied, this can change the type/direction of the gradient. See {@link PIXI.TEXT_GRADIENT} for possible values\n     * @param {string} [style.fontFamily='Arial'] - The font family\n     * @param {number|string} [style.fontSize=26] - The font size (as a number it converts to px, but as a string,\n     *  equivalents are '26px','20pt','160%' or '1.6em')\n     * @param {string} [style.fontStyle='normal'] - The font style ('normal', 'italic' or 'oblique')\n     * @param {string} [style.fontVariant='normal'] - The font variant ('normal' or 'small-caps')\n     * @param {string} [style.fontWeight='normal'] - The font weight ('normal', 'bold', 'bolder', 'lighter' and '100',\n     *  '200', '300', '400', '500', '600', '700', 800' or '900')\n     * @param {number} [style.letterSpacing=0] - The amount of spacing between letters, default is 0\n     * @param {number} [style.lineHeight] - The line height, a number that represents the vertical space that a letter uses\n     * @param {string} [style.lineJoin='miter'] - The lineJoin property sets the type of corner created, it can resolve\n     *      spiked text issues. Default is 'miter' (creates a sharp corner).\n     * @param {number} [style.miterLimit=10] - The miter limit to use when using the 'miter' lineJoin mode. This can reduce\n     *      or increase the spikiness of rendered text.\n     * @param {number} [style.padding=0] - Occasionally some fonts are cropped. Adding some padding will prevent this from\n     *     happening by adding padding to all sides of the text.\n     * @param {string|number} [style.stroke='black'] - A canvas fillstyle that will be used on the text stroke\n     *  e.g 'blue', '#FCFF00'\n     * @param {number} [style.strokeThickness=0] - A number that represents the thickness of the stroke.\n     *  Default is 0 (no stroke)\n     * @param {string} [style.textBaseline='alphabetic'] - The baseline of the text that is rendered.\n     * @param {boolean} [style.wordWrap=false] - Indicates if word wrap should be used\n     * @param {number} [style.wordWrapWidth=100] - The width at which text will wrap, it needs wordWrap to be set to true\n     */\n    function TextStyle(style) {\n        _classCallCheck(this, TextStyle);\n\n        this.styleID = 0;\n\n        Object.assign(this, defaultStyle, style);\n    }\n\n    /**\n     * Creates a new TextStyle object with the same values as this one.\n     * Note that the only the properties of the object are cloned.\n     *\n     * @return {PIXI.TextStyle} New cloned TextStyle object\n     */\n\n\n    TextStyle.prototype.clone = function clone() {\n        var clonedProperties = {};\n\n        for (var key in this._defaults) {\n            clonedProperties[key] = this[key];\n        }\n\n        return new TextStyle(clonedProperties);\n    };\n\n    /**\n     * Resets all properties to the defaults specified in TextStyle.prototype._default\n     */\n\n\n    TextStyle.prototype.reset = function reset() {\n        Object.assign(this, this._defaults);\n    };\n\n    _createClass(TextStyle, [{\n        key: 'align',\n        get: function get() {\n            return this._align;\n        },\n        set: function set(align) {\n            if (this._align !== align) {\n                this._align = align;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'breakWords',\n        get: function get() {\n            return this._breakWords;\n        },\n        set: function set(breakWords) {\n            if (this._breakWords !== breakWords) {\n                this._breakWords = breakWords;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'dropShadow',\n        get: function get() {\n            return this._dropShadow;\n        },\n        set: function set(dropShadow) {\n            if (this._dropShadow !== dropShadow) {\n                this._dropShadow = dropShadow;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'dropShadowAngle',\n        get: function get() {\n            return this._dropShadowAngle;\n        },\n        set: function set(dropShadowAngle) {\n            if (this._dropShadowAngle !== dropShadowAngle) {\n                this._dropShadowAngle = dropShadowAngle;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'dropShadowBlur',\n        get: function get() {\n            return this._dropShadowBlur;\n        },\n        set: function set(dropShadowBlur) {\n            if (this._dropShadowBlur !== dropShadowBlur) {\n                this._dropShadowBlur = dropShadowBlur;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'dropShadowColor',\n        get: function get() {\n            return this._dropShadowColor;\n        },\n        set: function set(dropShadowColor) {\n            var outputColor = getColor(dropShadowColor);\n            if (this._dropShadowColor !== outputColor) {\n                this._dropShadowColor = outputColor;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'dropShadowDistance',\n        get: function get() {\n            return this._dropShadowDistance;\n        },\n        set: function set(dropShadowDistance) {\n            if (this._dropShadowDistance !== dropShadowDistance) {\n                this._dropShadowDistance = dropShadowDistance;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fill',\n        get: function get() {\n            return this._fill;\n        },\n        set: function set(fill) {\n            var outputColor = getColor(fill);\n            if (this._fill !== outputColor) {\n                this._fill = outputColor;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fillGradientType',\n        get: function get() {\n            return this._fillGradientType;\n        },\n        set: function set(fillGradientType) {\n            if (this._fillGradientType !== fillGradientType) {\n                this._fillGradientType = fillGradientType;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fontFamily',\n        get: function get() {\n            return this._fontFamily;\n        },\n        set: function set(fontFamily) {\n            if (this.fontFamily !== fontFamily) {\n                this._fontFamily = fontFamily;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fontSize',\n        get: function get() {\n            return this._fontSize;\n        },\n        set: function set(fontSize) {\n            if (this._fontSize !== fontSize) {\n                this._fontSize = fontSize;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fontStyle',\n        get: function get() {\n            return this._fontStyle;\n        },\n        set: function set(fontStyle) {\n            if (this._fontStyle !== fontStyle) {\n                this._fontStyle = fontStyle;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fontVariant',\n        get: function get() {\n            return this._fontVariant;\n        },\n        set: function set(fontVariant) {\n            if (this._fontVariant !== fontVariant) {\n                this._fontVariant = fontVariant;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'fontWeight',\n        get: function get() {\n            return this._fontWeight;\n        },\n        set: function set(fontWeight) {\n            if (this._fontWeight !== fontWeight) {\n                this._fontWeight = fontWeight;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'letterSpacing',\n        get: function get() {\n            return this._letterSpacing;\n        },\n        set: function set(letterSpacing) {\n            if (this._letterSpacing !== letterSpacing) {\n                this._letterSpacing = letterSpacing;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'lineHeight',\n        get: function get() {\n            return this._lineHeight;\n        },\n        set: function set(lineHeight) {\n            if (this._lineHeight !== lineHeight) {\n                this._lineHeight = lineHeight;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'lineJoin',\n        get: function get() {\n            return this._lineJoin;\n        },\n        set: function set(lineJoin) {\n            if (this._lineJoin !== lineJoin) {\n                this._lineJoin = lineJoin;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'miterLimit',\n        get: function get() {\n            return this._miterLimit;\n        },\n        set: function set(miterLimit) {\n            if (this._miterLimit !== miterLimit) {\n                this._miterLimit = miterLimit;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'padding',\n        get: function get() {\n            return this._padding;\n        },\n        set: function set(padding) {\n            if (this._padding !== padding) {\n                this._padding = padding;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'stroke',\n        get: function get() {\n            return this._stroke;\n        },\n        set: function set(stroke) {\n            var outputColor = getColor(stroke);\n            if (this._stroke !== outputColor) {\n                this._stroke = outputColor;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'strokeThickness',\n        get: function get() {\n            return this._strokeThickness;\n        },\n        set: function set(strokeThickness) {\n            if (this._strokeThickness !== strokeThickness) {\n                this._strokeThickness = strokeThickness;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'textBaseline',\n        get: function get() {\n            return this._textBaseline;\n        },\n        set: function set(textBaseline) {\n            if (this._textBaseline !== textBaseline) {\n                this._textBaseline = textBaseline;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'wordWrap',\n        get: function get() {\n            return this._wordWrap;\n        },\n        set: function set(wordWrap) {\n            if (this._wordWrap !== wordWrap) {\n                this._wordWrap = wordWrap;\n                this.styleID++;\n            }\n        }\n    }, {\n        key: 'wordWrapWidth',\n        get: function get() {\n            return this._wordWrapWidth;\n        },\n        set: function set(wordWrapWidth) {\n            if (this._wordWrapWidth !== wordWrapWidth) {\n                this._wordWrapWidth = wordWrapWidth;\n                this.styleID++;\n            }\n        }\n    }]);\n\n    return TextStyle;\n}();\n\n/**\n * Utility function to convert hexadecimal colors to strings, and simply return the color if it's a string.\n *\n * @param {number|number[]} color\n * @return {string} The color as a string.\n */\n\n\nexports.default = TextStyle;\nfunction getColor(color) {\n    if (typeof color === 'number') {\n        return (0, _utils.hex2string)(color);\n    } else if (Array.isArray(color)) {\n        for (var i = 0; i < color.length; ++i) {\n            if (typeof color[i] === 'number') {\n                color[i] = (0, _utils.hex2string)(color[i]);\n            }\n        }\n    }\n\n    return color;\n}\n//# sourceMappingURL=TextStyle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/text/TextStyle.js\n// module id = 50\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _BaseTexture2 = require('./BaseTexture');\n\nvar _BaseTexture3 = _interopRequireDefault(_BaseTexture2);\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RESOLUTION = _settings2.default.RESOLUTION,\n    SCALE_MODE = _settings2.default.SCALE_MODE;\n\n/**\n * A BaseRenderTexture is a special texture that allows any Pixi display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a BaseRenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A BaseRenderTexture takes a snapshot of any Display Object given to its render method. The position\n * and rotation of the given Display Objects is ignored. For example:\n *\n * ```js\n * let renderer = PIXI.autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let baseRenderTexture = new PIXI.BaseRenderTexture(renderer, 800, 600);\n * let sprite = PIXI.Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * baseRenderTexture.render(sprite);\n * ```\n *\n * The Sprite in this case will be rendered to a position of 0,0. To render this sprite at its actual\n * position a Container should be used:\n *\n * ```js\n * let doc = new PIXI.Container();\n *\n * doc.addChild(sprite);\n *\n * let baseRenderTexture = new PIXI.BaseRenderTexture(100, 100);\n * let renderTexture = new PIXI.RenderTexture(baseRenderTexture);\n *\n * renderer.render(doc, renderTexture);  // Renders to center of RenderTexture\n * ```\n *\n * @class\n * @extends PIXI.BaseTexture\n * @memberof PIXI\n */\n\nvar BaseRenderTexture = function (_BaseTexture) {\n  _inherits(BaseRenderTexture, _BaseTexture);\n\n  /**\n   * @param {number} [width=100] - The width of the base render texture\n   * @param {number} [height=100] - The height of the base render texture\n   * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n   * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture being generated\n   */\n  function BaseRenderTexture() {\n    var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n    var scaleMode = arguments[2];\n    var resolution = arguments[3];\n\n    _classCallCheck(this, BaseRenderTexture);\n\n    var _this = _possibleConstructorReturn(this, _BaseTexture.call(this, null, scaleMode));\n\n    _this.resolution = resolution || RESOLUTION;\n\n    _this.width = width;\n    _this.height = height;\n\n    _this.realWidth = _this.width * _this.resolution;\n    _this.realHeight = _this.height * _this.resolution;\n\n    _this.scaleMode = scaleMode || SCALE_MODE;\n    _this.hasLoaded = true;\n\n    /**\n     * A map of renderer IDs to webgl renderTargets\n     *\n     * @private\n     * @member {object<number, WebGLTexture>}\n     */\n    _this._glRenderTargets = {};\n\n    /**\n     * A reference to the canvas render target (we only need one as this can be shared across renderers)\n     *\n     * @private\n     * @member {object<number, WebGLTexture>}\n     */\n    _this._canvasRenderTarget = null;\n\n    /**\n     * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n     *\n     * @member {boolean}\n     */\n    _this.valid = false;\n    return _this;\n  }\n\n  /**\n   * Resizes the BaseRenderTexture.\n   *\n   * @param {number} width - The width to resize to.\n   * @param {number} height - The height to resize to.\n   */\n\n\n  BaseRenderTexture.prototype.resize = function resize(width, height) {\n    if (width === this.width && height === this.height) {\n      return;\n    }\n\n    this.valid = width > 0 && height > 0;\n\n    this.width = width;\n    this.height = height;\n\n    this.realWidth = this.width * this.resolution;\n    this.realHeight = this.height * this.resolution;\n\n    if (!this.valid) {\n      return;\n    }\n\n    this.emit('update', this);\n  };\n\n  /**\n   * Destroys this texture\n   *\n   */\n\n\n  BaseRenderTexture.prototype.destroy = function destroy() {\n    _BaseTexture.prototype.destroy.call(this, true);\n    this.renderer = null;\n  };\n\n  return BaseRenderTexture;\n}(_BaseTexture3.default);\n\nexports.default = BaseRenderTexture;\n//# sourceMappingURL=BaseRenderTexture.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/textures/BaseRenderTexture.js\n// module id = 51\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _GroupD = require('../math/GroupD8');\n\nvar _GroupD2 = _interopRequireDefault(_GroupD);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A standard object to store the Uvs of a texture\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar TextureUvs = function () {\n    /**\n     *\n     */\n    function TextureUvs() {\n        _classCallCheck(this, TextureUvs);\n\n        this.x0 = 0;\n        this.y0 = 0;\n\n        this.x1 = 1;\n        this.y1 = 0;\n\n        this.x2 = 1;\n        this.y2 = 1;\n\n        this.x3 = 0;\n        this.y3 = 1;\n\n        this.uvsUint32 = new Uint32Array(4);\n    }\n\n    /**\n     * Sets the texture Uvs based on the given frame information.\n     *\n     * @private\n     * @param {PIXI.Rectangle} frame - The frame of the texture\n     * @param {PIXI.Rectangle} baseFrame - The base frame of the texture\n     * @param {number} rotate - Rotation of frame, see {@link PIXI.GroupD8}\n     */\n\n\n    TextureUvs.prototype.set = function set(frame, baseFrame, rotate) {\n        var tw = baseFrame.width;\n        var th = baseFrame.height;\n\n        if (rotate) {\n            // width and height div 2 div baseFrame size\n            var w2 = frame.width / 2 / tw;\n            var h2 = frame.height / 2 / th;\n\n            // coordinates of center\n            var cX = frame.x / tw + w2;\n            var cY = frame.y / th + h2;\n\n            rotate = _GroupD2.default.add(rotate, _GroupD2.default.NW); // NW is top-left corner\n            this.x0 = cX + w2 * _GroupD2.default.uX(rotate);\n            this.y0 = cY + h2 * _GroupD2.default.uY(rotate);\n\n            rotate = _GroupD2.default.add(rotate, 2); // rotate 90 degrees clockwise\n            this.x1 = cX + w2 * _GroupD2.default.uX(rotate);\n            this.y1 = cY + h2 * _GroupD2.default.uY(rotate);\n\n            rotate = _GroupD2.default.add(rotate, 2);\n            this.x2 = cX + w2 * _GroupD2.default.uX(rotate);\n            this.y2 = cY + h2 * _GroupD2.default.uY(rotate);\n\n            rotate = _GroupD2.default.add(rotate, 2);\n            this.x3 = cX + w2 * _GroupD2.default.uX(rotate);\n            this.y3 = cY + h2 * _GroupD2.default.uY(rotate);\n        } else {\n            this.x0 = frame.x / tw;\n            this.y0 = frame.y / th;\n\n            this.x1 = (frame.x + frame.width) / tw;\n            this.y1 = frame.y / th;\n\n            this.x2 = (frame.x + frame.width) / tw;\n            this.y2 = (frame.y + frame.height) / th;\n\n            this.x3 = frame.x / tw;\n            this.y3 = (frame.y + frame.height) / th;\n        }\n\n        this.uvsUint32[0] = (this.y0 * 65535 & 0xFFFF) << 16 | this.x0 * 65535 & 0xFFFF;\n        this.uvsUint32[1] = (this.y1 * 65535 & 0xFFFF) << 16 | this.x1 * 65535 & 0xFFFF;\n        this.uvsUint32[2] = (this.y2 * 65535 & 0xFFFF) << 16 | this.x2 * 65535 & 0xFFFF;\n        this.uvsUint32[3] = (this.y3 * 65535 & 0xFFFF) << 16 | this.x3 * 65535 & 0xFFFF;\n    };\n\n    return TextureUvs;\n}();\n\nexports.default = TextureUvs;\n//# sourceMappingURL=TextureUvs.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/textures/TextureUvs.js\n// module id = 52\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTexture2 = require('./BaseTexture');\n\nvar _BaseTexture3 = _interopRequireDefault(_BaseTexture2);\n\nvar _utils = require('../utils');\n\nvar _ticker = require('../ticker');\n\nvar ticker = _interopRequireWildcard(_ticker);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A texture of a [playing] Video.\n *\n * Video base textures mimic Pixi BaseTexture.from.... method in their creation process.\n *\n * This can be used in several ways, such as:\n *\n * ```js\n * let texture = PIXI.VideoBaseTexture.fromUrl('http://mydomain.com/video.mp4');\n *\n * let texture = PIXI.VideoBaseTexture.fromUrl({ src: 'http://mydomain.com/video.mp4', mime: 'video/mp4' });\n *\n * let texture = PIXI.VideoBaseTexture.fromUrls(['/video.webm', '/video.mp4']);\n *\n * let texture = PIXI.VideoBaseTexture.fromUrls([\n *     { src: '/video.webm', mime: 'video/webm' },\n *     { src: '/video.mp4', mime: 'video/mp4' }\n * ]);\n * ```\n *\n * See the [\"deus\" demo](http://www.goodboydigital.com/pixijs/examples/deus/).\n *\n * @class\n * @extends PIXI.BaseTexture\n * @memberof PIXI\n */\nvar VideoBaseTexture = function (_BaseTexture) {\n    _inherits(VideoBaseTexture, _BaseTexture);\n\n    /**\n     * @param {HTMLVideoElement} source - Video source\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     */\n    function VideoBaseTexture(source, scaleMode) {\n        _classCallCheck(this, VideoBaseTexture);\n\n        if (!source) {\n            throw new Error('No video source element specified.');\n        }\n\n        // hook in here to check if video is already available.\n        // BaseTexture looks for a source.complete boolean, plus width & height.\n\n        if ((source.readyState === source.HAVE_ENOUGH_DATA || source.readyState === source.HAVE_FUTURE_DATA) && source.width && source.height) {\n            source.complete = true;\n        }\n\n        var _this = _possibleConstructorReturn(this, _BaseTexture.call(this, source, scaleMode));\n\n        _this.width = source.videoWidth;\n        _this.height = source.videoHeight;\n\n        _this._autoUpdate = true;\n        _this._isAutoUpdating = false;\n\n        /**\n         * When set to true will automatically play videos used by this texture once\n         * they are loaded. If false, it will not modify the playing state.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        _this.autoPlay = true;\n\n        _this.update = _this.update.bind(_this);\n        _this._onCanPlay = _this._onCanPlay.bind(_this);\n\n        source.addEventListener('play', _this._onPlayStart.bind(_this));\n        source.addEventListener('pause', _this._onPlayStop.bind(_this));\n        _this.hasLoaded = false;\n        _this.__loaded = false;\n\n        if (!_this._isSourceReady()) {\n            source.addEventListener('canplay', _this._onCanPlay);\n            source.addEventListener('canplaythrough', _this._onCanPlay);\n        } else {\n            _this._onCanPlay();\n        }\n        return _this;\n    }\n\n    /**\n     * Returns true if the underlying source is playing.\n     *\n     * @private\n     * @return {boolean} True if playing.\n     */\n\n\n    VideoBaseTexture.prototype._isSourcePlaying = function _isSourcePlaying() {\n        var source = this.source;\n\n        return source.currentTime > 0 && source.paused === false && source.ended === false && source.readyState > 2;\n    };\n\n    /**\n     * Returns true if the underlying source is ready for playing.\n     *\n     * @private\n     * @return {boolean} True if ready.\n     */\n\n\n    VideoBaseTexture.prototype._isSourceReady = function _isSourceReady() {\n        return this.source.readyState === 3 || this.source.readyState === 4;\n    };\n\n    /**\n     * Runs the update loop when the video is ready to play\n     *\n     * @private\n     */\n\n\n    VideoBaseTexture.prototype._onPlayStart = function _onPlayStart() {\n        // Just in case the video has not received its can play even yet..\n        if (!this.hasLoaded) {\n            this._onCanPlay();\n        }\n\n        if (!this._isAutoUpdating && this.autoUpdate) {\n            ticker.shared.add(this.update, this);\n            this._isAutoUpdating = true;\n        }\n    };\n\n    /**\n     * Fired when a pause event is triggered, stops the update loop\n     *\n     * @private\n     */\n\n\n    VideoBaseTexture.prototype._onPlayStop = function _onPlayStop() {\n        if (this._isAutoUpdating) {\n            ticker.shared.remove(this.update, this);\n            this._isAutoUpdating = false;\n        }\n    };\n\n    /**\n     * Fired when the video is loaded and ready to play\n     *\n     * @private\n     */\n\n\n    VideoBaseTexture.prototype._onCanPlay = function _onCanPlay() {\n        this.hasLoaded = true;\n\n        if (this.source) {\n            this.source.removeEventListener('canplay', this._onCanPlay);\n            this.source.removeEventListener('canplaythrough', this._onCanPlay);\n\n            this.width = this.source.videoWidth;\n            this.height = this.source.videoHeight;\n\n            // prevent multiple loaded dispatches..\n            if (!this.__loaded) {\n                this.__loaded = true;\n                this.emit('loaded', this);\n            }\n\n            if (this._isSourcePlaying()) {\n                this._onPlayStart();\n            } else if (this.autoPlay) {\n                this.source.play();\n            }\n        }\n    };\n\n    /**\n     * Destroys this texture\n     *\n     */\n\n\n    VideoBaseTexture.prototype.destroy = function destroy() {\n        if (this._isAutoUpdating) {\n            ticker.shared.remove(this.update, this);\n        }\n\n        if (this.source && this.source._pixiId) {\n            delete _utils.BaseTextureCache[this.source._pixiId];\n            delete this.source._pixiId;\n        }\n\n        _BaseTexture.prototype.destroy.call(this);\n    };\n\n    /**\n     * Mimic Pixi BaseTexture.from.... method.\n     *\n     * @static\n     * @param {HTMLVideoElement} video - Video to create texture from\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.VideoBaseTexture} Newly created VideoBaseTexture\n     */\n\n\n    VideoBaseTexture.fromVideo = function fromVideo(video, scaleMode) {\n        if (!video._pixiId) {\n            video._pixiId = 'video_' + (0, _utils.uid)();\n        }\n\n        var baseTexture = _utils.BaseTextureCache[video._pixiId];\n\n        if (!baseTexture) {\n            baseTexture = new VideoBaseTexture(video, scaleMode);\n            _utils.BaseTextureCache[video._pixiId] = baseTexture;\n        }\n\n        return baseTexture;\n    };\n\n    /**\n     * Helper function that creates a new BaseTexture based on the given video element.\n     * This BaseTexture can then be used to create a texture\n     *\n     * @static\n     * @param {string|object|string[]|object[]} videoSrc - The URL(s) for the video.\n     * @param {string} [videoSrc.src] - One of the source urls for the video\n     * @param {string} [videoSrc.mime] - The mimetype of the video (e.g. 'video/mp4'). If not specified\n     *  the url's extension will be used as the second part of the mime type.\n     * @param {number} scaleMode - See {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.VideoBaseTexture} Newly created VideoBaseTexture\n     */\n\n\n    VideoBaseTexture.fromUrl = function fromUrl(videoSrc, scaleMode) {\n        var video = document.createElement('video');\n\n        video.setAttribute('webkit-playsinline', '');\n        video.setAttribute('playsinline', '');\n\n        // array of objects or strings\n        if (Array.isArray(videoSrc)) {\n            for (var i = 0; i < videoSrc.length; ++i) {\n                video.appendChild(createSource(videoSrc[i].src || videoSrc[i], videoSrc[i].mime));\n            }\n        }\n        // single object or string\n        else {\n                video.appendChild(createSource(videoSrc.src || videoSrc, videoSrc.mime));\n            }\n\n        video.load();\n\n        return VideoBaseTexture.fromVideo(video, scaleMode);\n    };\n\n    /**\n     * Should the base texture automatically update itself, set to true by default\n     *\n     * @member {boolean}\n     * @memberof PIXI.VideoBaseTexture#\n     */\n\n\n    _createClass(VideoBaseTexture, [{\n        key: 'autoUpdate',\n        get: function get() {\n            return this._autoUpdate;\n        }\n\n        /**\n         * Sets autoUpdate property.\n         *\n         * @param {number} value - enable auto update or not\n         */\n        ,\n        set: function set(value) {\n            if (value !== this._autoUpdate) {\n                this._autoUpdate = value;\n\n                if (!this._autoUpdate && this._isAutoUpdating) {\n                    ticker.shared.remove(this.update, this);\n                    this._isAutoUpdating = false;\n                } else if (this._autoUpdate && !this._isAutoUpdating) {\n                    ticker.shared.add(this.update, this);\n                    this._isAutoUpdating = true;\n                }\n            }\n        }\n    }]);\n\n    return VideoBaseTexture;\n}(_BaseTexture3.default);\n\nexports.default = VideoBaseTexture;\n\n\nVideoBaseTexture.fromUrls = VideoBaseTexture.fromUrl;\n\nfunction createSource(path, type) {\n    if (!type) {\n        type = 'video/' + path.substr(path.lastIndexOf('.') + 1);\n    }\n\n    var source = document.createElement('source');\n\n    source.src = path;\n    source.type = type;\n\n    return source;\n}\n//# sourceMappingURL=VideoBaseTexture.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/textures/VideoBaseTexture.js\n// module id = 53\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.Ticker = exports.shared = undefined;\n\nvar _Ticker = require('./Ticker');\n\nvar _Ticker2 = _interopRequireDefault(_Ticker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The shared ticker instance used by {@link PIXI.extras.AnimatedSprite}.\n * and by {@link PIXI.interaction.InteractionManager}.\n * The property {@link PIXI.ticker.Ticker#autoStart} is set to `true`\n * for this instance. Please follow the examples for usage, including\n * how to opt-out of auto-starting the shared ticker.\n *\n * @example\n * let ticker = PIXI.ticker.shared;\n * // Set this to prevent starting this ticker when listeners are added.\n * // By default this is true only for the PIXI.ticker.shared instance.\n * ticker.autoStart = false;\n * // FYI, call this to ensure the ticker is stopped. It should be stopped\n * // if you have not attempted to render anything yet.\n * ticker.stop();\n * // Call this when you are ready for a running shared ticker.\n * ticker.start();\n *\n * @example\n * // You may use the shared ticker to render...\n * let renderer = PIXI.autoDetectRenderer(800, 600);\n * let stage = new PIXI.Container();\n * let interactionManager = PIXI.interaction.InteractionManager(renderer);\n * document.body.appendChild(renderer.view);\n * ticker.add(function (time) {\n *     renderer.render(stage);\n * });\n *\n * @example\n * // Or you can just update it manually.\n * ticker.autoStart = false;\n * ticker.stop();\n * function animate(time) {\n *     ticker.update(time);\n *     renderer.render(stage);\n *     requestAnimationFrame(animate);\n * }\n * animate(performance.now());\n *\n * @type {PIXI.ticker.Ticker}\n * @memberof PIXI.ticker\n */\nvar shared = new _Ticker2.default();\n\nshared.autoStart = true;\n\n/**\n * @namespace PIXI.ticker\n */\nexports.shared = shared;\nexports.Ticker = _Ticker2.default;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/ticker/index.js\n// module id = 54\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Matrix = require('../core/math/Matrix');\n\nvar _Matrix2 = _interopRequireDefault(_Matrix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar tempMat = new _Matrix2.default();\n\n/**\n * class controls uv transform and frame clamp for texture\n */\n\nvar TextureTransform = function () {\n    /**\n     *\n     * @param {PIXI.Texture} texture observed texture\n     * @param {number} [clampMargin] Changes frame clamping, 0.5 by default. Use -0.5 for extra border.\n     * @constructor\n     */\n    function TextureTransform(texture, clampMargin) {\n        _classCallCheck(this, TextureTransform);\n\n        this._texture = texture;\n\n        this.mapCoord = new _Matrix2.default();\n\n        this.uClampFrame = new Float32Array(4);\n\n        this.uClampOffset = new Float32Array(2);\n\n        this._lastTextureID = -1;\n\n        /**\n         * Changes frame clamping\n         * Works with TilingSprite and Mesh\n         * Change to 1.5 if you tex ture has repeated right and bottom lines, that leads to smoother borders\n         *\n         * @default 0\n         * @member {number}\n         */\n        this.clampOffset = 0;\n\n        /**\n         * Changes frame clamping\n         * Works with TilingSprite and Mesh\n         * Change to -0.5 to add a pixel to the edge, recommended for transparent trimmed textures in atlas\n         *\n         * @default 0.5\n         * @member {number}\n         */\n        this.clampMargin = typeof clampMargin === 'undefined' ? 0.5 : clampMargin;\n    }\n\n    /**\n     * texture property\n     * @member {PIXI.Texture}\n     * @memberof PIXI.TextureTransform\n     */\n\n\n    /**\n     * updates matrices if texture was changed\n     * @param {boolean} forceUpdate if true, matrices will be updated any case\n     */\n    TextureTransform.prototype.update = function update(forceUpdate) {\n        var tex = this.texture;\n\n        if (!tex || !tex.valid) {\n            return;\n        }\n\n        if (!forceUpdate && this._lastTextureID === this.texture._updateID) {\n            return;\n        }\n\n        this._lastTextureID = this.texture._updateID;\n\n        var uvs = this.texture._uvs;\n\n        this.mapCoord.set(uvs.x1 - uvs.x0, uvs.y1 - uvs.y0, uvs.x3 - uvs.x0, uvs.y3 - uvs.y0, uvs.x0, uvs.y0);\n\n        var orig = tex.orig;\n        var trim = tex.trim;\n\n        if (trim) {\n            tempMat.set(orig.width / trim.width, 0, 0, orig.height / trim.height, -trim.x / trim.width, -trim.y / trim.height);\n            this.mapCoord.append(tempMat);\n        }\n\n        var texBase = tex.baseTexture;\n        var frame = this.uClampFrame;\n        var margin = this.clampMargin / texBase.resolution;\n        var offset = this.clampOffset;\n\n        frame[0] = (tex._frame.x + margin + offset) / texBase.width;\n        frame[1] = (tex._frame.y + margin + offset) / texBase.height;\n        frame[2] = (tex._frame.x + tex._frame.width - margin + offset) / texBase.width;\n        frame[3] = (tex._frame.y + tex._frame.height - margin + offset) / texBase.height;\n        this.uClampOffset[0] = offset / texBase.realWidth;\n        this.uClampOffset[1] = offset / texBase.realHeight;\n    };\n\n    _createClass(TextureTransform, [{\n        key: 'texture',\n        get: function get() {\n            return this._texture;\n        }\n\n        /**\n         * sets texture value\n         * @param {PIXI.Texture} value texture to be set\n         */\n        ,\n        set: function set(value) {\n            this._texture = value;\n            this._lastTextureID = -1;\n        }\n    }]);\n\n    return TextureTransform;\n}();\n\nexports.default = TextureTransform;\n//# sourceMappingURL=TextureTransform.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extras/TextureTransform.js\n// module id = 55\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _generateBlurVertSource = require('./generateBlurVertSource');\n\nvar _generateBlurVertSource2 = _interopRequireDefault(_generateBlurVertSource);\n\nvar _generateBlurFragSource = require('./generateBlurFragSource');\n\nvar _generateBlurFragSource2 = _interopRequireDefault(_generateBlurFragSource);\n\nvar _getMaxBlurKernelSize = require('./getMaxBlurKernelSize');\n\nvar _getMaxBlurKernelSize2 = _interopRequireDefault(_getMaxBlurKernelSize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The BlurXFilter applies a horizontal Gaussian blur to an object.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar BlurXFilter = function (_core$Filter) {\n    _inherits(BlurXFilter, _core$Filter);\n\n    /**\n     * @param {number} strength - The strength of the blur filter.\n     * @param {number} quality - The quality of the blur filter.\n     * @param {number} resolution - The reoslution of the blur filter.\n     */\n    function BlurXFilter(strength, quality, resolution) {\n        _classCallCheck(this, BlurXFilter);\n\n        var vertSrc = (0, _generateBlurVertSource2.default)(5, true);\n        var fragSrc = (0, _generateBlurFragSource2.default)(5);\n\n        var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        vertSrc,\n        // fragment shader\n        fragSrc));\n\n        _this.resolution = resolution || 1;\n\n        _this._quality = 0;\n\n        _this.quality = quality || 4;\n        _this.strength = strength || 8;\n\n        _this.firstRun = true;\n        return _this;\n    }\n\n    /**\n     * Applies the filter.\n     *\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     * @param {boolean} clear - Should the output be cleared before rendering?\n     */\n\n\n    BlurXFilter.prototype.apply = function apply(filterManager, input, output, clear) {\n        if (this.firstRun) {\n            var gl = filterManager.renderer.gl;\n            var kernelSize = (0, _getMaxBlurKernelSize2.default)(gl);\n\n            this.vertexSrc = (0, _generateBlurVertSource2.default)(kernelSize, true);\n            this.fragmentSrc = (0, _generateBlurFragSource2.default)(kernelSize);\n\n            this.firstRun = false;\n        }\n\n        this.uniforms.strength = 1 / output.size.width * (output.size.width / input.size.width);\n\n        // screen space!\n        this.uniforms.strength *= this.strength;\n        this.uniforms.strength /= this.passes; // / this.passes//Math.pow(1, this.passes);\n\n        if (this.passes === 1) {\n            filterManager.applyFilter(this, input, output, clear);\n        } else {\n            var renderTarget = filterManager.getRenderTarget(true);\n            var flip = input;\n            var flop = renderTarget;\n\n            for (var i = 0; i < this.passes - 1; i++) {\n                filterManager.applyFilter(this, flip, flop, true);\n\n                var temp = flop;\n\n                flop = flip;\n                flip = temp;\n            }\n\n            filterManager.applyFilter(this, flip, output, clear);\n\n            filterManager.returnRenderTarget(renderTarget);\n        }\n    };\n\n    /**\n     * Sets the strength of both the blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.BlurXFilter#\n     * @default 16\n     */\n\n\n    _createClass(BlurXFilter, [{\n        key: 'blur',\n        get: function get() {\n            return this.strength;\n        }\n\n        /**\n         * Sets the strength of the blur.\n         *\n         * @param {number} value - The value to set.\n         */\n        ,\n        set: function set(value) {\n            this.padding = Math.abs(value) * 2;\n            this.strength = value;\n        }\n\n        /**\n        * Sets the quality of the blur by modifying the number of passes. More passes means higher\n        * quaility bluring but the lower the performance.\n        *\n        * @member {number}\n        * @memberof PIXI.filters.BlurXFilter#\n        * @default 4\n        */\n\n    }, {\n        key: 'quality',\n        get: function get() {\n            return this._quality;\n        }\n\n        /**\n         * Sets the quality of the blur.\n         *\n         * @param {number} value - The value to set.\n         */\n        ,\n        set: function set(value) {\n            this._quality = value;\n            this.passes = value;\n        }\n    }]);\n\n    return BlurXFilter;\n}(core.Filter);\n\nexports.default = BlurXFilter;\n//# sourceMappingURL=BlurXFilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/blur/BlurXFilter.js\n// module id = 56\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _generateBlurVertSource = require('./generateBlurVertSource');\n\nvar _generateBlurVertSource2 = _interopRequireDefault(_generateBlurVertSource);\n\nvar _generateBlurFragSource = require('./generateBlurFragSource');\n\nvar _generateBlurFragSource2 = _interopRequireDefault(_generateBlurFragSource);\n\nvar _getMaxBlurKernelSize = require('./getMaxBlurKernelSize');\n\nvar _getMaxBlurKernelSize2 = _interopRequireDefault(_getMaxBlurKernelSize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The BlurYFilter applies a horizontal Gaussian blur to an object.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar BlurYFilter = function (_core$Filter) {\n    _inherits(BlurYFilter, _core$Filter);\n\n    /**\n     * @param {number} strength - The strength of the blur filter.\n     * @param {number} quality - The quality of the blur filter.\n     * @param {number} resolution - The reoslution of the blur filter.\n     */\n    function BlurYFilter(strength, quality, resolution) {\n        _classCallCheck(this, BlurYFilter);\n\n        var vertSrc = (0, _generateBlurVertSource2.default)(5, false);\n        var fragSrc = (0, _generateBlurFragSource2.default)(5);\n\n        var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        vertSrc,\n        // fragment shader\n        fragSrc));\n\n        _this.resolution = resolution || 1;\n\n        _this._quality = 0;\n\n        _this.quality = quality || 4;\n        _this.strength = strength || 8;\n\n        _this.firstRun = true;\n        return _this;\n    }\n\n    /**\n     * Applies the filter.\n     *\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     * @param {boolean} clear - Should the output be cleared before rendering?\n     */\n\n\n    BlurYFilter.prototype.apply = function apply(filterManager, input, output, clear) {\n        if (this.firstRun) {\n            var gl = filterManager.renderer.gl;\n            var kernelSize = (0, _getMaxBlurKernelSize2.default)(gl);\n\n            this.vertexSrc = (0, _generateBlurVertSource2.default)(kernelSize, false);\n            this.fragmentSrc = (0, _generateBlurFragSource2.default)(kernelSize);\n\n            this.firstRun = false;\n        }\n\n        this.uniforms.strength = 1 / output.size.height * (output.size.height / input.size.height);\n\n        this.uniforms.strength *= this.strength;\n        this.uniforms.strength /= this.passes;\n\n        if (this.passes === 1) {\n            filterManager.applyFilter(this, input, output, clear);\n        } else {\n            var renderTarget = filterManager.getRenderTarget(true);\n            var flip = input;\n            var flop = renderTarget;\n\n            for (var i = 0; i < this.passes - 1; i++) {\n                filterManager.applyFilter(this, flip, flop, true);\n\n                var temp = flop;\n\n                flop = flip;\n                flip = temp;\n            }\n\n            filterManager.applyFilter(this, flip, output, clear);\n\n            filterManager.returnRenderTarget(renderTarget);\n        }\n    };\n\n    /**\n     * Sets the strength of both the blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.BlurYFilter#\n     * @default 2\n     */\n\n\n    _createClass(BlurYFilter, [{\n        key: 'blur',\n        get: function get() {\n            return this.strength;\n        }\n\n        /**\n         * Sets the strength of the blur.\n         *\n         * @param {number} value - The value to set.\n         */\n        ,\n        set: function set(value) {\n            this.padding = Math.abs(value) * 2;\n            this.strength = value;\n        }\n\n        /**\n         * Sets the quality of the blur by modifying the number of passes. More passes means higher\n         * quaility bluring but the lower the performance.\n         *\n         * @member {number}\n         * @memberof PIXI.filters.BlurXFilter#\n         * @default 4\n         */\n\n    }, {\n        key: 'quality',\n        get: function get() {\n            return this._quality;\n        }\n\n        /**\n         * Sets the quality of the blur.\n         *\n         * @param {number} value - The value to set.\n         */\n        ,\n        set: function set(value) {\n            this._quality = value;\n            this.passes = value;\n        }\n    }]);\n\n    return BlurYFilter;\n}(core.Filter);\n\nexports.default = BlurYFilter;\n//# sourceMappingURL=BlurYFilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/blur/BlurYFilter.js\n// module id = 57\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = generateFragBlurSource;\nvar GAUSSIAN_VALUES = {\n    5: [0.153388, 0.221461, 0.250301],\n    7: [0.071303, 0.131514, 0.189879, 0.214607],\n    9: [0.028532, 0.067234, 0.124009, 0.179044, 0.20236],\n    11: [0.0093, 0.028002, 0.065984, 0.121703, 0.175713, 0.198596],\n    13: [0.002406, 0.009255, 0.027867, 0.065666, 0.121117, 0.174868, 0.197641],\n    15: [0.000489, 0.002403, 0.009246, 0.02784, 0.065602, 0.120999, 0.174697, 0.197448]\n};\n\nvar fragTemplate = ['varying vec2 vBlurTexCoords[%size%];', 'uniform sampler2D uSampler;', 'void main(void)', '{', '    gl_FragColor = vec4(0.0);', '    %blur%', '}'].join('\\n');\n\nfunction generateFragBlurSource(kernelSize) {\n    var kernel = GAUSSIAN_VALUES[kernelSize];\n    var halfLength = kernel.length;\n\n    var fragSource = fragTemplate;\n\n    var blurLoop = '';\n    var template = 'gl_FragColor += texture2D(uSampler, vBlurTexCoords[%index%]) * %value%;';\n    var value = void 0;\n\n    for (var i = 0; i < kernelSize; i++) {\n        var blur = template.replace('%index%', i);\n\n        value = i;\n\n        if (i >= halfLength) {\n            value = kernelSize - i - 1;\n        }\n\n        blur = blur.replace('%value%', kernel[value]);\n\n        blurLoop += blur;\n        blurLoop += '\\n';\n    }\n\n    fragSource = fragSource.replace('%blur%', blurLoop);\n    fragSource = fragSource.replace('%size%', kernelSize);\n\n    return fragSource;\n}\n//# sourceMappingURL=generateBlurFragSource.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/blur/generateBlurFragSource.js\n// module id = 58\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = generateVertBlurSource;\nvar vertTemplate = ['attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform float strength;', 'uniform mat3 projectionMatrix;', 'varying vec2 vBlurTexCoords[%size%];', 'void main(void)', '{', 'gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);', '%blur%', '}'].join('\\n');\n\nfunction generateVertBlurSource(kernelSize, x) {\n    var halfLength = Math.ceil(kernelSize / 2);\n\n    var vertSource = vertTemplate;\n\n    var blurLoop = '';\n    var template = void 0;\n    // let value;\n\n    if (x) {\n        template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(%sampleIndex% * strength, 0.0);';\n    } else {\n        template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(0.0, %sampleIndex% * strength);';\n    }\n\n    for (var i = 0; i < kernelSize; i++) {\n        var blur = template.replace('%index%', i);\n\n        // value = i;\n\n        // if(i >= halfLength)\n        // {\n        //     value = kernelSize - i - 1;\n        // }\n\n        blur = blur.replace('%sampleIndex%', i - (halfLength - 1) + '.0');\n\n        blurLoop += blur;\n        blurLoop += '\\n';\n    }\n\n    vertSource = vertSource.replace('%blur%', blurLoop);\n    vertSource = vertSource.replace('%size%', kernelSize);\n\n    return vertSource;\n}\n//# sourceMappingURL=generateBlurVertSource.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/blur/generateBlurVertSource.js\n// module id = 59\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\nexports.default = getMaxKernelSize;\nfunction getMaxKernelSize(gl) {\n    var maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n    var kernelSize = 15;\n\n    while (kernelSize > maxVaryings) {\n        kernelSize -= 2;\n    }\n\n    return kernelSize;\n}\n//# sourceMappingURL=getMaxBlurKernelSize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/blur/getMaxBlurKernelSize.js\n// module id = 60\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _FXAAFilter = require('./fxaa/FXAAFilter');\n\nObject.defineProperty(exports, 'FXAAFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FXAAFilter).default;\n  }\n});\n\nvar _NoiseFilter = require('./noise/NoiseFilter');\n\nObject.defineProperty(exports, 'NoiseFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_NoiseFilter).default;\n  }\n});\n\nvar _DisplacementFilter = require('./displacement/DisplacementFilter');\n\nObject.defineProperty(exports, 'DisplacementFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_DisplacementFilter).default;\n  }\n});\n\nvar _BlurFilter = require('./blur/BlurFilter');\n\nObject.defineProperty(exports, 'BlurFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BlurFilter).default;\n  }\n});\n\nvar _BlurXFilter = require('./blur/BlurXFilter');\n\nObject.defineProperty(exports, 'BlurXFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BlurXFilter).default;\n  }\n});\n\nvar _BlurYFilter = require('./blur/BlurYFilter');\n\nObject.defineProperty(exports, 'BlurYFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BlurYFilter).default;\n  }\n});\n\nvar _ColorMatrixFilter = require('./colormatrix/ColorMatrixFilter');\n\nObject.defineProperty(exports, 'ColorMatrixFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ColorMatrixFilter).default;\n  }\n});\n\nvar _VoidFilter = require('./void/VoidFilter');\n\nObject.defineProperty(exports, 'VoidFilter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_VoidFilter).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/index.js\n// module id = 61\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Holds all information related to an Interaction event\n *\n * @class\n * @memberof PIXI.interaction\n */\nvar InteractionData = function () {\n  /**\n   *\n   */\n  function InteractionData() {\n    _classCallCheck(this, InteractionData);\n\n    /**\n     * This point stores the global coords of where the touch/mouse event happened\n     *\n     * @member {PIXI.Point}\n     */\n    this.global = new core.Point();\n\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @member {PIXI.Sprite}\n     */\n    this.target = null;\n\n    /**\n     * When passed to an event handler, this will be the original DOM Event that was captured\n     *\n     * @member {Event}\n     */\n    this.originalEvent = null;\n  }\n\n  /**\n   * This will return the local coordinates of the specified displayObject for this InteractionData\n   *\n   * @param {PIXI.DisplayObject} displayObject - The DisplayObject that you would like the local\n   *  coords off\n   * @param {PIXI.Point} [point] - A Point object in which to store the value, optional (otherwise\n   *  will create a new point)\n   * @param {PIXI.Point} [globalPos] - A Point object containing your custom global coords, optional\n   *  (otherwise will use the current global coords)\n   * @return {PIXI.Point} A point containing the coordinates of the InteractionData position relative\n   *  to the DisplayObject\n   */\n\n\n  InteractionData.prototype.getLocalPosition = function getLocalPosition(displayObject, point, globalPos) {\n    return displayObject.worldTransform.applyInverse(globalPos || this.global, point);\n  };\n\n  return InteractionData;\n}();\n\nexports.default = InteractionData;\n//# sourceMappingURL=InteractionData.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/interaction/InteractionData.js\n// module id = 62\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n/**\n * Default property values of interactive objects\n * Used by {@link PIXI.interaction.InteractionManager} to automatically give all DisplayObjects these properties\n *\n * @mixin\n * @name interactiveTarget\n * @memberof PIXI.interaction\n * @example\n *      function MyObject() {}\n *\n *      Object.assign(\n *          MyObject.prototype,\n *          PIXI.interaction.interactiveTarget\n *      );\n */\nexports.default = {\n  /**\n   * Determines if the displayObject be clicked/touched\n   *\n   * @inner {boolean}\n   */\n  interactive: false,\n\n  /**\n   * Determines if the children to the displayObject can be clicked/touched\n   * Setting this to false allows pixi to bypass a recursive hitTest function\n   *\n   * @inner {boolean}\n   */\n  interactiveChildren: true,\n\n  /**\n   * Interaction shape. Children will be hit first, then this shape will be checked.\n   * Setting this will cause this shape to be checked in hit tests rather than the displayObject's bounds.\n   *\n   * @inner {PIXI.Rectangle|PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.RoundedRectangle}\n   */\n  hitArea: null,\n\n  /**\n   * If enabled, the mouse cursor will change when hovered over the displayObject if it is interactive\n   *\n   * @inner {boolean}\n   */\n  buttonMode: false,\n\n  /**\n   * If buttonMode is enabled, this defines what CSS cursor property is used when the mouse cursor\n   * is hovered over the displayObject\n   *\n   * @see https://developer.mozilla.org/en/docs/Web/CSS/cursor\n   *\n   * @inner {string}\n   */\n  defaultCursor: 'pointer',\n\n  // some internal checks..\n  /**\n   * Internal check to detect if the mouse cursor is hovered over the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _over: false,\n\n  /**\n   * Internal check to detect if the left mouse button is pressed on the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _isLeftDown: false,\n\n  /**\n   * Internal check to detect if the right mouse button is pressed on the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _isRightDown: false,\n\n  /**\n   * Internal check to detect if the pointer cursor is hovered over the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _pointerOver: false,\n\n  /**\n   * Internal check to detect if the pointer is down on the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _pointerDown: false,\n\n  /**\n   * Internal check to detect if a user has touched the displayObject\n   *\n   * @inner {boolean}\n   * @private\n   */\n  _touchDown: false\n};\n//# sourceMappingURL=interactiveTarget.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/interaction/interactiveTarget.js\n// module id = 63\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.parse = parse;\n\nexports.default = function () {\n    return function bitmapFontParser(resource, next) {\n        // skip if no data or not xml data\n        if (!resource.data || !resource.isXml) {\n            next();\n\n            return;\n        }\n\n        // skip if not bitmap font data, using some silly duck-typing\n        if (resource.data.getElementsByTagName('page').length === 0 || resource.data.getElementsByTagName('info').length === 0 || resource.data.getElementsByTagName('info')[0].getAttribute('face') === null) {\n            next();\n\n            return;\n        }\n\n        var xmlUrl = !resource.isDataUrl ? path.dirname(resource.url) : '';\n\n        if (resource.isDataUrl) {\n            if (xmlUrl === '.') {\n                xmlUrl = '';\n            }\n\n            if (this.baseUrl && xmlUrl) {\n                // if baseurl has a trailing slash then add one to xmlUrl so the replace works below\n                if (this.baseUrl.charAt(this.baseUrl.length - 1) === '/') {\n                    xmlUrl += '/';\n                }\n\n                // remove baseUrl from xmlUrl\n                xmlUrl = xmlUrl.replace(this.baseUrl, '');\n            }\n        }\n\n        // if there is an xmlUrl now, it needs a trailing slash. Ensure that it does if the string isn't empty.\n        if (xmlUrl && xmlUrl.charAt(xmlUrl.length - 1) !== '/') {\n            xmlUrl += '/';\n        }\n\n        var textureUrl = xmlUrl + resource.data.getElementsByTagName('page')[0].getAttribute('file');\n\n        if (_core.utils.TextureCache[textureUrl]) {\n            // reuse existing texture\n            parse(resource, _core.utils.TextureCache[textureUrl]);\n            next();\n        } else {\n            var loadOptions = {\n                crossOrigin: resource.crossOrigin,\n                loadType: _resourceLoader.Resource.LOAD_TYPE.IMAGE,\n                metadata: resource.metadata.imageMetadata\n            };\n\n            // load the texture for the font\n            this.add(resource.name + '_image', textureUrl, loadOptions, function (res) {\n                parse(resource, res.texture);\n                next();\n            });\n        }\n    };\n};\n\nvar _path = require('path');\n\nvar path = _interopRequireWildcard(_path);\n\nvar _core = require('../core');\n\nvar _resourceLoader = require('resource-loader');\n\nvar _extras = require('../extras');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction parse(resource, texture) {\n    var data = {};\n    var info = resource.data.getElementsByTagName('info')[0];\n    var common = resource.data.getElementsByTagName('common')[0];\n\n    data.font = info.getAttribute('face');\n    data.size = parseInt(info.getAttribute('size'), 10);\n    data.lineHeight = parseInt(common.getAttribute('lineHeight'), 10);\n    data.chars = {};\n\n    // parse letters\n    var letters = resource.data.getElementsByTagName('char');\n\n    for (var i = 0; i < letters.length; i++) {\n        var charCode = parseInt(letters[i].getAttribute('id'), 10);\n\n        var textureRect = new _core.Rectangle(parseInt(letters[i].getAttribute('x'), 10) + texture.frame.x, parseInt(letters[i].getAttribute('y'), 10) + texture.frame.y, parseInt(letters[i].getAttribute('width'), 10), parseInt(letters[i].getAttribute('height'), 10));\n\n        data.chars[charCode] = {\n            xOffset: parseInt(letters[i].getAttribute('xoffset'), 10),\n            yOffset: parseInt(letters[i].getAttribute('yoffset'), 10),\n            xAdvance: parseInt(letters[i].getAttribute('xadvance'), 10),\n            kerning: {},\n            texture: new _core.Texture(texture.baseTexture, textureRect)\n\n        };\n    }\n\n    // parse kernings\n    var kernings = resource.data.getElementsByTagName('kerning');\n\n    for (var _i = 0; _i < kernings.length; _i++) {\n        var first = parseInt(kernings[_i].getAttribute('first'), 10);\n        var second = parseInt(kernings[_i].getAttribute('second'), 10);\n        var amount = parseInt(kernings[_i].getAttribute('amount'), 10);\n\n        if (data.chars[second]) {\n            data.chars[second].kerning[first] = amount;\n        }\n    }\n\n    resource.bitmapFont = data;\n\n    // I'm leaving this as a temporary fix so we can test the bitmap fonts in v3\n    // but it's very likely to change\n    _extras.BitmapText.fonts[data.font] = data;\n}\n//# sourceMappingURL=bitmapFontParser.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/loaders/bitmapFontParser.js\n// module id = 64\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nexports.default = function () {\n    return function spritesheetParser(resource, next) {\n        var resourcePath = void 0;\n        var imageResourceName = resource.name + '_image';\n\n        // skip if no data, its not json, it isn't spritesheet data, or the image resource already exists\n        if (!resource.data || !resource.isJson || !resource.data.frames || this.resources[imageResourceName]) {\n            next();\n\n            return;\n        }\n\n        var loadOptions = {\n            crossOrigin: resource.crossOrigin,\n            loadType: _resourceLoader.Resource.LOAD_TYPE.IMAGE,\n            metadata: resource.metadata.imageMetadata\n        };\n\n        // Prepend url path unless the resource image is a data url\n        if (resource.isDataUrl) {\n            resourcePath = resource.data.meta.image;\n        } else {\n            resourcePath = _path2.default.dirname(resource.url.replace(this.baseUrl, '')) + '/' + resource.data.meta.image;\n        }\n\n        // load the image for this sheet\n        this.add(imageResourceName, resourcePath, loadOptions, function onImageLoad(res) {\n            resource.textures = {};\n\n            var frames = resource.data.frames;\n            var frameKeys = Object.keys(frames);\n            var baseTexture = res.texture.baseTexture;\n            var resolution = core.utils.getResolutionOfUrl(resource.url);\n            var scale = resource.data.meta.scale;\n\n            // for now (to keep things compatible) resolution overrides scale\n            // Support scale field on spritesheet\n            if (resolution === 1 && scale !== undefined && scale !== 1) {\n                baseTexture.resolution = resolution = scale;\n                baseTexture.update();\n            }\n\n            var batchIndex = 0;\n\n            function processFrames(initialFrameIndex, maxFrames) {\n                var frameIndex = initialFrameIndex;\n\n                while (frameIndex - initialFrameIndex < maxFrames && frameIndex < frameKeys.length) {\n                    var i = frameKeys[frameIndex];\n                    var rect = frames[i].frame;\n\n                    if (rect) {\n                        var frame = null;\n                        var trim = null;\n                        var orig = new core.Rectangle(0, 0, frames[i].sourceSize.w / resolution, frames[i].sourceSize.h / resolution);\n\n                        if (frames[i].rotated) {\n                            frame = new core.Rectangle(rect.x / resolution, rect.y / resolution, rect.h / resolution, rect.w / resolution);\n                        } else {\n                            frame = new core.Rectangle(rect.x / resolution, rect.y / resolution, rect.w / resolution, rect.h / resolution);\n                        }\n\n                        //  Check to see if the sprite is trimmed\n                        if (frames[i].trimmed) {\n                            trim = new core.Rectangle(frames[i].spriteSourceSize.x / resolution, frames[i].spriteSourceSize.y / resolution, rect.w / resolution, rect.h / resolution);\n                        }\n\n                        resource.textures[i] = new core.Texture(baseTexture, frame, orig, trim, frames[i].rotated ? 2 : 0);\n\n                        // lets also add the frame to pixi's global cache for fromFrame and fromImage functions\n                        core.utils.TextureCache[i] = resource.textures[i];\n                    }\n\n                    frameIndex++;\n                }\n            }\n\n            function shouldProcessNextBatch() {\n                return batchIndex * BATCH_SIZE < frameKeys.length;\n            }\n\n            function processNextBatch(done) {\n                processFrames(batchIndex * BATCH_SIZE, BATCH_SIZE);\n                batchIndex++;\n                setTimeout(done, 0);\n            }\n\n            function iteration() {\n                processNextBatch(function () {\n                    if (shouldProcessNextBatch()) {\n                        iteration();\n                    } else {\n                        next();\n                    }\n                });\n            }\n\n            if (frameKeys.length <= BATCH_SIZE) {\n                processFrames(0, BATCH_SIZE);\n                next();\n            } else {\n                iteration();\n            }\n        });\n    };\n};\n\nvar _resourceLoader = require('resource-loader');\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BATCH_SIZE = 1000;\n//# sourceMappingURL=spritesheetParser.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/loaders/spritesheetParser.js\n// module id = 65\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nexports.default = function () {\n    return function textureParser(resource, next) {\n        // create a new texture if the data is an Image object\n        if (resource.data && resource.isImage) {\n            var baseTexture = new core.BaseTexture(resource.data, null, core.utils.getResolutionOfUrl(resource.url));\n\n            baseTexture.imageUrl = resource.url;\n            resource.texture = new core.Texture(baseTexture);\n\n            // lets also add the frame to pixi's global cache for fromFrame and fromImage fucntions\n            core.utils.BaseTextureCache[resource.name] = baseTexture;\n            core.utils.TextureCache[resource.name] = resource.texture;\n\n            // also add references by url if they are different.\n            if (resource.name !== resource.url) {\n                core.utils.BaseTextureCache[resource.url] = baseTexture;\n                core.utils.TextureCache[resource.url] = resource.texture;\n            }\n        }\n\n        next();\n    };\n};\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n//# sourceMappingURL=textureParser.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/loaders/textureParser.js\n// module id = 66\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Mesh2 = require('./Mesh');\n\nvar _Mesh3 = _interopRequireDefault(_Mesh2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The Plane allows you to draw a texture across several points and them manipulate these points\n *\n *```js\n * for (let i = 0; i < 20; i++) {\n *     points.push(new PIXI.Point(i * 50, 0));\n * };\n * let Plane = new PIXI.Plane(PIXI.Texture.fromImage(\"snake.png\"), points);\n *  ```\n *\n * @class\n * @extends PIXI.mesh.Mesh\n * @memberof PIXI.mesh\n *\n */\nvar Plane = function (_Mesh) {\n    _inherits(Plane, _Mesh);\n\n    /**\n     * @param {PIXI.Texture} texture - The texture to use on the Plane.\n     * @param {number} verticesX - The number of vertices in the x-axis\n     * @param {number} verticesY - The number of vertices in the y-axis\n     */\n    function Plane(texture, verticesX, verticesY) {\n        _classCallCheck(this, Plane);\n\n        /**\n         * Tracker for if the Plane is ready to be drawn. Needed because Mesh ctor can\n         * call _onTextureUpdated which could call refresh too early.\n         *\n         * @member {boolean}\n         * @private\n         */\n        var _this = _possibleConstructorReturn(this, _Mesh.call(this, texture));\n\n        _this._ready = true;\n\n        _this.verticesX = verticesX || 10;\n        _this.verticesY = verticesY || 10;\n\n        _this.drawMode = _Mesh3.default.DRAW_MODES.TRIANGLES;\n        _this.refresh();\n        return _this;\n    }\n\n    /**\n     * Refreshes\n     *\n     */\n\n\n    Plane.prototype.refresh = function refresh() {\n        var total = this.verticesX * this.verticesY;\n        var verts = [];\n        var colors = [];\n        var uvs = [];\n        var indices = [];\n        var texture = this.texture;\n\n        var segmentsX = this.verticesX - 1;\n        var segmentsY = this.verticesY - 1;\n\n        var sizeX = texture.width / segmentsX;\n        var sizeY = texture.height / segmentsY;\n\n        for (var i = 0; i < total; i++) {\n            if (texture._uvs) {\n                var x = i % this.verticesX;\n                var y = i / this.verticesX | 0;\n\n                verts.push(x * sizeX, y * sizeY);\n\n                // this works for rectangular textures.\n                uvs.push(texture._uvs.x0 + (texture._uvs.x1 - texture._uvs.x0) * (x / (this.verticesX - 1)), texture._uvs.y0 + (texture._uvs.y3 - texture._uvs.y0) * (y / (this.verticesY - 1)));\n            } else {\n                uvs.push(0);\n            }\n        }\n\n        //  cons\n\n        var totalSub = segmentsX * segmentsY;\n\n        for (var _i = 0; _i < totalSub; _i++) {\n            var xpos = _i % segmentsX;\n            var ypos = _i / segmentsX | 0;\n\n            var value = ypos * this.verticesX + xpos;\n            var value2 = ypos * this.verticesX + xpos + 1;\n            var value3 = (ypos + 1) * this.verticesX + xpos;\n            var value4 = (ypos + 1) * this.verticesX + xpos + 1;\n\n            indices.push(value, value2, value3);\n            indices.push(value2, value4, value3);\n        }\n\n        // console.log(indices)\n        this.vertices = new Float32Array(verts);\n        this.uvs = new Float32Array(uvs);\n        this.colors = new Float32Array(colors);\n        this.indices = new Uint16Array(indices);\n\n        this.indexDirty = true;\n    };\n\n    /**\n     * Clear texture UVs when new texture is set\n     *\n     * @private\n     */\n\n\n    Plane.prototype._onTextureUpdate = function _onTextureUpdate() {\n        _Mesh3.default.prototype._onTextureUpdate.call(this);\n\n        // wait for the Plane ctor to finish before calling refresh\n        if (this._ready) {\n            this.refresh();\n        }\n    };\n\n    return Plane;\n}(_Mesh3.default);\n\nexports.default = Plane;\n//# sourceMappingURL=Plane.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/mesh/Plane.js\n// module id = 67\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Mesh = require('./Mesh');\n\nObject.defineProperty(exports, 'Mesh', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Mesh).default;\n  }\n});\n\nvar _MeshRenderer = require('./webgl/MeshRenderer');\n\nObject.defineProperty(exports, 'MeshRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MeshRenderer).default;\n  }\n});\n\nvar _CanvasMeshRenderer = require('./canvas/CanvasMeshRenderer');\n\nObject.defineProperty(exports, 'CanvasMeshRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasMeshRenderer).default;\n  }\n});\n\nvar _Plane = require('./Plane');\n\nObject.defineProperty(exports, 'Plane', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Plane).default;\n  }\n});\n\nvar _NineSlicePlane = require('./NineSlicePlane');\n\nObject.defineProperty(exports, 'NineSlicePlane', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_NineSlicePlane).default;\n  }\n});\n\nvar _Rope = require('./Rope');\n\nObject.defineProperty(exports, 'Rope', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Rope).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/mesh/index.js\n// module id = 68\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _ParticleContainer = require('./ParticleContainer');\n\nObject.defineProperty(exports, 'ParticleContainer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ParticleContainer).default;\n  }\n});\n\nvar _ParticleRenderer = require('./webgl/ParticleRenderer');\n\nObject.defineProperty(exports, 'ParticleRenderer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ParticleRenderer).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/particles/index.js\n// module id = 69\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLPrepare = require('./webgl/WebGLPrepare');\n\nObject.defineProperty(exports, 'webgl', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_WebGLPrepare).default;\n  }\n});\n\nvar _CanvasPrepare = require('./canvas/CanvasPrepare');\n\nObject.defineProperty(exports, 'canvas', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasPrepare).default;\n  }\n});\n\nvar _BasePrepare = require('./BasePrepare');\n\nObject.defineProperty(exports, 'BasePrepare', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BasePrepare).default;\n  }\n});\n\nvar _CountLimiter = require('./limiters/CountLimiter');\n\nObject.defineProperty(exports, 'CountLimiter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CountLimiter).default;\n  }\n});\n\nvar _TimeLimiter = require('./limiters/TimeLimiter');\n\nObject.defineProperty(exports, 'TimeLimiter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TimeLimiter).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/prepare/index.js\n// module id = 70\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * CountLimiter limits the number of items handled by a {@link PIXI.prepare.BasePrepare} to a specified\n * number of items per frame.\n *\n * @class\n * @memberof PIXI\n */\nvar CountLimiter = function () {\n  /**\n   * @param {number} maxItemsPerFrame - The maximum number of items that can be prepared each frame.\n   */\n  function CountLimiter(maxItemsPerFrame) {\n    _classCallCheck(this, CountLimiter);\n\n    /**\n     * The maximum number of items that can be prepared each frame.\n     * @private\n     */\n    this.maxItemsPerFrame = maxItemsPerFrame;\n    /**\n     * The number of items that can be prepared in the current frame.\n     * @type {number}\n     * @private\n     */\n    this.itemsLeft = 0;\n  }\n\n  /**\n   * Resets any counting properties to start fresh on a new frame.\n   */\n\n\n  CountLimiter.prototype.beginFrame = function beginFrame() {\n    this.itemsLeft = this.maxItemsPerFrame;\n  };\n\n  /**\n   * Checks to see if another item can be uploaded. This should only be called once per item.\n   * @return {boolean} If the item is allowed to be uploaded.\n   */\n\n\n  CountLimiter.prototype.allowedToUpload = function allowedToUpload() {\n    return this.itemsLeft-- > 0;\n  };\n\n  return CountLimiter;\n}();\n\nexports.default = CountLimiter;\n//# sourceMappingURL=CountLimiter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/prepare/limiters/CountLimiter.js\n// module id = 71\n// module chunks = 0","'use strict'\n\nmodule.exports = function parseURI (str, opts) {\n  opts = opts || {}\n\n  var o = {\n    key: ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'],\n    q: {\n      name: 'queryKey',\n      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n  }\n\n  var m = o.parser[opts.strictMode ? 'strict' : 'loose'].exec(str)\n  var uri = {}\n  var i = 14\n\n  while (i--) uri[o.key[i]] = m[i] || ''\n\n  uri[o.q.name] = {}\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) uri[o.q.name][$1] = $2\n  })\n\n  return uri\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parse-uri/index.js\n// module id = 72\n// module chunks = 0","\n/**\n * Helper class to create a WebGL Texture\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param width {number} the width of the texture\n * @param height {number} the height of the texture\n * @param format {number} the pixel format of the texture. defaults to gl.RGBA\n * @param type {number} the gl type of the texture. defaults to gl.UNSIGNED_BYTE\n */\nvar Texture = function(gl, width, height, format, type)\n{\n\t/**\n\t * The current WebGL rendering context\n\t *\n\t * @member {WebGLRenderingContext}\n\t */\n\tthis.gl = gl;\n\n\n\t/**\n\t * The WebGL texture\n\t *\n\t * @member {WebGLTexture}\n\t */\n\tthis.texture = gl.createTexture();\n\n\t/**\n\t * If mipmapping was used for this texture, enable and disable with enableMipmap()\n\t *\n\t * @member {Boolean}\n\t */\n\t// some settings..\n\tthis.mipmap = false;\n\n\n\t/**\n\t * Set to true to enable pre-multiplied alpha\n\t *\n\t * @member {Boolean}\n\t */\n\tthis.premultiplyAlpha = false;\n\n\t/**\n\t * The width of texture\n\t *\n\t * @member {Number}\n\t */\n\tthis.width = width || -1;\n\t/**\n\t * The height of texture\n\t *\n\t * @member {Number}\n\t */\n\tthis.height = height || -1;\n\n\t/**\n\t * The pixel format of the texture. defaults to gl.RGBA\n\t *\n\t * @member {Number}\n\t */\n\tthis.format = format || gl.RGBA;\n\n\t/**\n\t * The gl type of the texture. defaults to gl.UNSIGNED_BYTE\n\t *\n\t * @member {Number}\n\t */\n\tthis.type = type || gl.UNSIGNED_BYTE;\n\n\n};\n\n/**\n * Uploads this texture to the GPU\n * @param source {HTMLImageElement|ImageData|HTMLVideoElement} the source image of the texture\n */\nTexture.prototype.upload = function(source)\n{\n\tthis.bind();\n\n\tvar gl = this.gl;\n\n\n\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n\n\tvar newWidth = source.videoWidth || source.width;\n\tvar newHeight = source.videoHeight || source.height;\n\n\tif(newHeight !== this.height || newWidth !== this.width)\n\t{\n    \tgl.texImage2D(gl.TEXTURE_2D, 0, this.format, this.format, this.type, source);\n\t}\n\telse\n\t{\n    \tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.format, this.type, source);\n\t}\n\n\t// if the source is a video, we need to use the videoWidth / videoHeight properties as width / height will be incorrect.\n\tthis.width = newWidth;\n\tthis.height = newHeight;\n\n};\n\nvar FLOATING_POINT_AVAILABLE = false;\n\n/**\n * Use a data source and uploads this texture to the GPU\n * @param data {TypedArray} the data to upload to the texture\n * @param width {number} the new width of the texture\n * @param height {number} the new height of the texture\n */\nTexture.prototype.uploadData = function(data, width, height)\n{\n\tthis.bind();\n\n\tvar gl = this.gl;\n\n\n\tif(data instanceof Float32Array)\n\t{\n\t\tif(!FLOATING_POINT_AVAILABLE)\n\t\t{\n\t\t\tvar ext = gl.getExtension(\"OES_texture_float\");\n\n\t\t\tif(ext)\n\t\t\t{\n\t\t\t\tFLOATING_POINT_AVAILABLE = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow new Error('floating point textures not available');\n\t\t\t}\n\t\t}\n\n\t\tthis.type = gl.FLOAT;\n\t}\n\telse\n\t{\n\t\t// TODO support for other types\n\t\tthis.type = gl.UNSIGNED_BYTE;\n\t}\n\n\t// what type of data?\n\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n\n\n\tif(width !== this.width || height !== this.height)\n\t{\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.format,  width, height, 0, this.format, this.type, data || null);\n\t}\n\telse\n\t{\n\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, this.format, this.type, data || null);\n\t}\n\n\tthis.width = width;\n\tthis.height = height;\n\n\n//\ttexSubImage2D\n};\n\n/**\n * Binds the texture\n * @param  location\n */\nTexture.prototype.bind = function(location)\n{\n\tvar gl = this.gl;\n\n\tif(location !== undefined)\n\t{\n\t\tgl.activeTexture(gl.TEXTURE0 + location);\n\t}\n\n\tgl.bindTexture(gl.TEXTURE_2D, this.texture);\n};\n\n/**\n * Unbinds the texture\n */\nTexture.prototype.unbind = function()\n{\n\tvar gl = this.gl;\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n};\n\n/**\n * @param linear {Boolean} if we want to use linear filtering or nearest neighbour interpolation\n */\nTexture.prototype.minFilter = function( linear )\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tif(this.mipmap)\n\t{\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linear ? gl.LINEAR_MIPMAP_LINEAR : gl.NEAREST_MIPMAP_NEAREST);\n\t}\n\telse\n\t{\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linear ? gl.LINEAR : gl.NEAREST);\n\t}\n};\n\n/**\n * @param linear {Boolean} if we want to use linear filtering or nearest neighbour interpolation\n */\nTexture.prototype.magFilter = function( linear )\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, linear ? gl.LINEAR : gl.NEAREST);\n};\n\n/**\n * Enables mipmapping\n */\nTexture.prototype.enableMipmap = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tthis.mipmap = true;\n\n\tgl.generateMipmap(gl.TEXTURE_2D);\n};\n\n/**\n * Enables linear filtering\n */\nTexture.prototype.enableLinearScaling = function()\n{\n\tthis.minFilter(true);\n\tthis.magFilter(true);\n};\n\n/**\n * Enables nearest neighbour interpolation\n */\nTexture.prototype.enableNearestScaling = function()\n{\n\tthis.minFilter(false);\n\tthis.magFilter(false);\n};\n\n/**\n * Enables clamping on the texture so WebGL will not repeat it\n */\nTexture.prototype.enableWrapClamp = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n};\n\n/**\n * Enable tiling on the texture\n */\nTexture.prototype.enableWrapRepeat = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n};\n\nTexture.prototype.enableWrapMirrorRepeat = function()\n{\n\tvar gl = this.gl;\n\n\tthis.bind();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.MIRRORED_REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.MIRRORED_REPEAT);\n};\n\n\n/**\n * Destroys this texture\n */\nTexture.prototype.destroy = function()\n{\n\tvar gl = this.gl;\n\t//TODO\n\tgl.deleteTexture(this.texture);\n};\n\n/**\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param source {HTMLImageElement|ImageData} the source image of the texture\n * @param premultiplyAlpha {Boolean} If we want to use pre-multiplied alpha\n */\nTexture.fromSource = function(gl, source, premultiplyAlpha)\n{\n\tvar texture = new Texture(gl);\n\ttexture.premultiplyAlpha = premultiplyAlpha || false;\n\ttexture.upload(source);\n\n\treturn texture;\n};\n\n/**\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param data {TypedArray} the data to upload to the texture\n * @param width {number} the new width of the texture\n * @param height {number} the new height of the texture\n */\nTexture.fromData = function(gl, data, width, height)\n{\n\t//console.log(data, width, height);\n\tvar texture = new Texture(gl);\n\ttexture.uploadData(data, width, height);\n\n\treturn texture;\n};\n\n\nmodule.exports = Texture;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/GLTexture.js\n// module id = 73\n// module chunks = 0","// var GL_MAP = {};\n\n/**\n * @param gl {WebGLRenderingContext} The current WebGL context\n * @param attribs {*}\n * @param state {*}\n */\nvar setVertexAttribArrays = function (gl, attribs, state)\n{\n    var i;\n    if(state)\n    {\n        var tempAttribState = state.tempAttribState,\n            attribState = state.attribState;\n\n        for (i = 0; i < tempAttribState.length; i++)\n        {\n            tempAttribState[i] = false;\n        }\n\n        // set the new attribs\n        for (i = 0; i < attribs.length; i++)\n        {\n            tempAttribState[attribs[i].attribute.location] = true;\n        }\n\n        for (i = 0; i < attribState.length; i++)\n        {\n            if (attribState[i] !== tempAttribState[i])\n            {\n                attribState[i] = tempAttribState[i];\n\n                if (state.attribState[i])\n                {\n                    gl.enableVertexAttribArray(i);\n                }\n                else\n                {\n                    gl.disableVertexAttribArray(i);\n                }\n            }\n        }\n\n    }\n    else\n    {\n        for (i = 0; i < attribs.length; i++)\n        {\n            var attrib = attribs[i];\n            gl.enableVertexAttribArray(attrib.attribute.location);\n        }\n    }\n};\n\nmodule.exports = setVertexAttribArrays;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/setVertexAttribArrays.js\n// module id = 74\n// module chunks = 0","\n/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n * @return {WebGLProgram} the shader program\n */\nvar compileProgram = function(gl, vertexSrc, fragmentSrc)\n{\n    var glVertShader = compileShader(gl, gl.VERTEX_SHADER, vertexSrc);\n    var glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentSrc);\n\n    var program = gl.createProgram();\n\n    gl.attachShader(program, glVertShader);\n    gl.attachShader(program, glFragShader);\n    gl.linkProgram(program);\n\n    // if linking fails, then log and cleanup\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n    {\n        console.error('Pixi.js Error: Could not initialize shader.');\n        console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS));\n        console.error('gl.getError()', gl.getError());\n\n        // if there is a program info log, log it\n        if (gl.getProgramInfoLog(program) !== '')\n        {\n            console.warn('Pixi.js Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(program));\n        }\n\n        gl.deleteProgram(program);\n        program = null;\n    }\n\n    // clean up some shaders\n    gl.deleteShader(glVertShader);\n    gl.deleteShader(glFragShader);\n\n    return program;\n};\n\n/**\n * @private\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param type {Number} the type, can be either VERTEX_SHADER or FRAGMENT_SHADER\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @return {WebGLShader} the shader\n */\nvar compileShader = function (gl, type, src)\n{\n    var shader = gl.createShader(type);\n\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n    {\n        console.log(gl.getShaderInfoLog(shader));\n        return null;\n    }\n\n    return shader;\n};\n\nmodule.exports = compileProgram;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/shader/compileProgram.js\n// module id = 75\n// module chunks = 0","/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param type {String} Type of value\n * @param size {Number}\n */\nvar defaultValue = function(type, size) \n{\n    switch (type)\n    {\n        case 'float':\n            return 0;\n\n        case 'vec2': \n            return new Float32Array(2 * size);\n\n        case 'vec3':\n            return new Float32Array(3 * size);\n\n        case 'vec4':     \n            return new Float32Array(4 * size);\n            \n        case 'int':\n        case 'sampler2D':\n            return 0;\n\n        case 'ivec2':   \n            return new Int32Array(2 * size);\n\n        case 'ivec3':\n            return new Int32Array(3 * size);\n\n        case 'ivec4': \n            return new Int32Array(4 * size);\n\n        case 'bool':     \n            return false;\n\n        case 'bvec2':\n\n            return booleanArray( 2 * size);\n\n        case 'bvec3':\n            return booleanArray(3 * size);\n\n        case 'bvec4':\n            return booleanArray(4 * size);\n\n        case 'mat2':\n            return new Float32Array([1, 0,\n                                     0, 1]);\n\n        case 'mat3': \n            return new Float32Array([1, 0, 0,\n                                     0, 1, 0,\n                                     0, 0, 1]);\n\n        case 'mat4':\n            return new Float32Array([1, 0, 0, 0,\n                                     0, 1, 0, 0,\n                                     0, 0, 1, 0,\n                                     0, 0, 0, 1]);\n    }\n};\n\nvar booleanArray = function(size)\n{\n    var array = new Array(size);\n\n    for (var i = 0; i < array.length; i++) \n    {\n        array[i] = false;\n    }\n\n    return array;\n};\n\nmodule.exports = defaultValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/shader/defaultValue.js\n// module id = 76\n// module chunks = 0","\nvar mapType = require('./mapType');\nvar mapSize = require('./mapSize');\n\n/**\n * Extracts the attributes\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param program {WebGLProgram} The shader program to get the attributes from\n * @return attributes {Object}\n */\nvar extractAttributes = function(gl, program)\n{\n    var attributes = {};\n\n    var totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var i = 0; i < totalAttributes; i++)\n    {\n        var attribData = gl.getActiveAttrib(program, i);\n        var type = mapType(gl, attribData.type);\n\n        attributes[attribData.name] = {\n            type:type,\n            size:mapSize(type),\n            location:gl.getAttribLocation(program, attribData.name),\n            //TODO - make an attribute object\n            pointer: pointer\n        };\n    }\n\n    return attributes;\n};\n\nvar pointer = function(type, normalized, stride, start){\n    // console.log(this.location)\n    gl.vertexAttribPointer(this.location,this.size, type || gl.FLOAT, normalized || false, stride || 0, start || 0);\n};\n\nmodule.exports = extractAttributes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/shader/extractAttributes.js\n// module id = 77\n// module chunks = 0","var mapType = require('./mapType');\nvar defaultValue = require('./defaultValue');\n\n/**\n * Extracts the uniforms\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param program {WebGLProgram} The shader program to get the uniforms from\n * @return uniforms {Object}\n */\nvar extractUniforms = function(gl, program)\n{\n\tvar uniforms = {};\n\n    var totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var i = 0; i < totalUniforms; i++)\n    {\n    \tvar uniformData = gl.getActiveUniform(program, i);\n    \tvar name = uniformData.name.replace(/\\[.*?\\]/, \"\");\n        var type = mapType(gl, uniformData.type );\n\n    \tuniforms[name] = {\n    \t\ttype:type,\n    \t\tsize:uniformData.size,\n    \t\tlocation:gl.getUniformLocation(program, name),\n    \t\tvalue:defaultValue(type, uniformData.size)\n    \t};\n    }\n\n\treturn uniforms;\n};\n\nmodule.exports = extractUniforms;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/shader/extractUniforms.js\n// module id = 78\n// module chunks = 0","/**\n * Extracts the attributes\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param uniforms {Array} @mat ?\n * @return attributes {Object}\n */\nvar generateUniformAccessObject = function(gl, uniformData)\n{\n    // this is the object we will be sending back.\n    // an object hierachy will be created for structs\n    var uniforms = {data:{}};\n\n    uniforms.gl = gl;\n\n    var uniformKeys= Object.keys(uniformData);\n\n    for (var i = 0; i < uniformKeys.length; i++)\n    {\n        var fullName = uniformKeys[i];\n\n        var nameTokens = fullName.split('.');\n        var name = nameTokens[nameTokens.length - 1];\n\n        var uniformGroup = getUniformGroup(nameTokens, uniforms);\n\n        var uniform =  uniformData[fullName];\n        uniformGroup.data[name] = uniform;\n\n        uniformGroup.gl = gl;\n\n        Object.defineProperty(uniformGroup, name, {\n            get: generateGetter(name),\n            set: generateSetter(name, uniform)\n        });\n    }\n\n    return uniforms;\n};\n\nvar generateGetter = function(name)\n{\n\tvar template = getterTemplate.replace('%%', name);\n\treturn new Function(template); // jshint ignore:line\n};\n\nvar generateSetter = function(name, uniform)\n{\n    var template = setterTemplate.replace(/%%/g, name);\n    var setTemplate;\n\n    if(uniform.size === 1)\n    {\n        setTemplate = GLSL_TO_SINGLE_SETTERS[uniform.type];\n    }\n    else\n    {\n        setTemplate = GLSL_TO_ARRAY_SETTERS[uniform.type];\n    }\n\n    if(setTemplate)\n    {\n        template += \"\\nthis.gl.\" + setTemplate + \";\";\n    }\n\n  \treturn new Function('value', template); // jshint ignore:line\n};\n\nvar getUniformGroup = function(nameTokens, uniform)\n{\n    var cur = uniform;\n\n    for (var i = 0; i < nameTokens.length - 1; i++)\n    {\n        var o = cur[nameTokens[i]] || {data:{}};\n        cur[nameTokens[i]] = o;\n        cur = o;\n    }\n\n    return cur;\n};\n\nvar getterTemplate = [\n    'return this.data.%%.value;',\n].join('\\n');\n\nvar setterTemplate = [\n    'this.data.%%.value = value;',\n    'var location = this.data.%%.location;'\n].join('\\n');\n\n\nvar GLSL_TO_SINGLE_SETTERS = {\n\n    'float':    'uniform1f(location, value)',\n\n    'vec2':     'uniform2f(location, value[0], value[1])',\n    'vec3':     'uniform3f(location, value[0], value[1], value[2])',\n    'vec4':     'uniform4f(location, value[0], value[1], value[2], value[3])',\n\n    'int':      'uniform1i(location, value)',\n    'ivec2':    'uniform2i(location, value[0], value[1])',\n    'ivec3':    'uniform3i(location, value[0], value[1], value[2])',\n    'ivec4':    'uniform4i(location, value[0], value[1], value[2], value[3])',\n\n    'bool':     'uniform1i(location, value)',\n    'bvec2':    'uniform2i(location, value[0], value[1])',\n    'bvec3':    'uniform3i(location, value[0], value[1], value[2])',\n    'bvec4':    'uniform4i(location, value[0], value[1], value[2], value[3])',\n\n    'mat2':     'uniformMatrix2fv(location, false, value)',\n    'mat3':     'uniformMatrix3fv(location, false, value)',\n    'mat4':     'uniformMatrix4fv(location, false, value)',\n\n    'sampler2D':'uniform1i(location, value)'\n};\n\nvar GLSL_TO_ARRAY_SETTERS = {\n\n    'float':    'uniform1fv(location, value)',\n\n    'vec2':     'uniform2fv(location, value)',\n    'vec3':     'uniform3fv(location, value)',\n    'vec4':     'uniform4fv(location, value)',\n\n    'int':      'uniform1iv(location, value)',\n    'ivec2':    'uniform2iv(location, value)',\n    'ivec3':    'uniform3iv(location, value)',\n    'ivec4':    'uniform4iv(location, value)',\n\n    'bool':     'uniform1iv(location, value)',\n    'bvec2':    'uniform2iv(location, value)',\n    'bvec3':    'uniform3iv(location, value)',\n    'bvec4':    'uniform4iv(location, value)',\n\n    'sampler2D':'uniform1iv(location, value)'\n};\n\nmodule.exports = generateUniformAccessObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/shader/generateUniformAccessObject.js\n// module id = 79\n// module chunks = 0","/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param type {String}\n * @return {Number}\n */\nvar mapSize = function(type) \n{ \n    return GLSL_TO_SIZE[type];\n};\n\n\nvar GLSL_TO_SIZE = {\n    'float':    1,\n    'vec2':     2,\n    'vec3':     3,\n    'vec4':     4,\n\n    'int':      1,\n    'ivec2':    2,\n    'ivec3':    3,\n    'ivec4':    4,\n\n    'bool':     1,\n    'bvec2':    2,\n    'bvec3':    3,\n    'bvec4':    4,\n\n    'mat2':     4,\n    'mat3':     9,\n    'mat4':     16,\n\n    'sampler2D':  1\n};\n\nmodule.exports = mapSize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/shader/mapSize.js\n// module id = 80\n// module chunks = 0","'use strict';\n\n/**\n * Smaller version of the async library constructs.\n *\n */\n\nmodule.exports = {\n    eachSeries: asyncEachSeries,\n    queue: asyncQueue\n};\n\nfunction _noop() { /* empty */ }\n\n/**\n * Iterates an array in series.\n *\n * @param {*[]} array - Array to iterate.\n * @param {function} iterator - Function to call for each element.\n * @param {function} callback - Function to call when done, or on error.\n */\nfunction asyncEachSeries(array, iterator, callback) {\n    var i = 0;\n    var len = array.length;\n\n    (function next(err) {\n        if (err || i === len) {\n            if (callback) {\n                callback(err);\n            }\n\n            return;\n        }\n\n        iterator(array[i++], next);\n    })();\n}\n\n/**\n * Ensures a function is only called once.\n *\n * @param {function} fn - The function to wrap.\n * @return {function} The wrapping function.\n */\nfunction onlyOnce(fn) {\n    return function onceWrapper() {\n        if (fn === null) {\n            throw new Error('Callback was already called.');\n        }\n\n        var callFn = fn;\n\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\n/**\n * Async queue implementation,\n *\n * @param {function} worker - The worker function to call for each task.\n * @param {number} concurrency - How many workers to run in parrallel.\n * @return {*} The async queue object.\n */\nfunction asyncQueue(worker, concurrency) {\n    if (concurrency == null) { // eslint-disable-line no-eq-null,eqeqeq\n        concurrency = 1;\n    }\n    else if (concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    var workers = 0;\n    var q = {\n        _tasks: [],\n        concurrency: concurrency,\n        saturated: _noop,\n        unsaturated: _noop,\n        buffer: concurrency / 4,\n        empty: _noop,\n        drain: _noop,\n        error: _noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = _noop;\n            q._tasks = [];\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        process: function () {\n            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                var task = q._tasks.shift();\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n\n                workers += 1;\n\n                if (workers === q.concurrency) {\n                    q.saturated();\n                }\n\n                worker(task.data, onlyOnce(_next(task)));\n            }\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return workers;\n        },\n        idle: function () {\n            return q._tasks.length + workers === 0;\n        },\n        pause: function () {\n            if (q.paused === true) {\n                return;\n            }\n\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) {\n                return;\n            }\n\n            q.paused = false;\n\n            // Need to call q.process once per concurrent\n            // worker to preserve full concurrency after pause\n            for (var w = 1; w <= q.concurrency; w++) {\n                q.process();\n            }\n        }\n    };\n\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') { // eslint-disable-line no-eq-null,eqeqeq\n            throw new Error('task callback must be a function');\n        }\n\n        q.started = true;\n\n        if (data == null && q.idle()) { // eslint-disable-line no-eq-null,eqeqeq\n            // call drain immediately if there are no tasks\n            setTimeout(function () {\n                q.drain();\n            }, 1);\n\n            return;\n        }\n\n        var item = {\n            data: data,\n            callback: typeof callback === 'function' ? callback : _noop\n        };\n\n        if (insertAtFront) {\n            q._tasks.unshift(item);\n        }\n        else {\n            q._tasks.push(item);\n        }\n\n        setTimeout(function () {\n            q.process();\n        }, 1);\n    }\n\n    function _next(task) {\n        return function () {\n            workers -= 1;\n\n            task.callback.apply(task, arguments);\n\n            if (arguments[0] != null) { // eslint-disable-line no-eq-null,eqeqeq\n                q.error(arguments[0], task.data);\n            }\n\n            if (workers <= (q.concurrency - q.buffer)) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n\n            q.process();\n        };\n    }\n\n    return q;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/async.js\n// module id = 81\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 82\n// module chunks = 0","if (__DEV__) {\n  module.hot.accept();\n}\n\n// Pixel Art\nimport pixels from './js/pixels';\n\n// Syntax highlighting\nimport 'prismjs';\n\n// Line numbers\nimport 'prismjs/plugins/line-numbers/prism-line-numbers';\n\n// Base theme\nimport './css/index.styl';\n\n\n(() => {\n  pixels();\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/themes/swanky-docs-theme/index.js","import _ from 'lodash';\nconst PIXI = require('pixi.js');\nPIXI.utils.skipHello(); // remove console log from PIXI.js\n// Cells\nconst cellSize = 8;\nconst cellSpacing = 8;\nconst cellColour = 0x323232;\nconst highlightColours = [0xF89600, 0xB7F900, 0xF6D200, 0x00E0E9];\nconst baseColour = 0x000000;\nconst container = document.getElementById('masthead');\nconst renderer = PIXI.autoDetectRenderer(container.offsetWidth, container.offsetHeight, { antialias: false, transparent: false, resolution: 1 });\nconst stage = new PIXI.Container();\n\nlet cells = [];\n\nconst setup = function () {\n  renderer.autoResize = true;\n  renderer.backgroundColor = baseColour;\n  container.appendChild(renderer.view);\n  renderer.render(stage);\n  createGrid();\n  window.addEventListener('resize', update);\n}\n\nfunction createGrid() {\n  const cols = Math.ceil(container.offsetWidth / (cellSize + cellSpacing));\n  const rows = Math.ceil(container.offsetHeight / (cellSize + cellSpacing));\n\n  for (let x = 0 ; x < cols; x++) {\n    cells[x] = [];\n    for (let y = 0 ; y < rows; y++) {\n      const randomiser = Math.ceil(Math.random() * 60);\n\n      const borderColour = (randomiser === 60) ? highlightColours[Math.floor(Math.random() * highlightColours.length)] : cellColour;\n      addCell(x, y, borderColour);\n    }\n  }\n\n  renderer.render(stage);\n}\n\nfunction addCell(x, y, borderColour) {\n  let cell = new PIXI.Graphics();\n  // cell.beginFill(borderColour);\n  cell.lineStyle(1, borderColour);\n  cell.drawRect(0, 0, cellSize, cellSize);\n  cell.x = cellSpacing + (cellSpacing * x) + (cellSize * x);\n  cell.y =  cellSpacing + (cellSpacing * y) + (cellSize * y);\n\n  cell.endFill();\n  cells[x][y] = cell;\n  stage.addChild(cell);\n}\n\nlet update = _.debounce(() => {\n  renderer.resize(container.offsetWidth, container.offsetHeight)\n  stage.removeChildren();\n  cells = [];\n  createGrid();\n}, 10);\n\nupdate();\n\nmodule.exports = setup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/themes/swanky-docs-theme/js/pixels.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"brand\":\"index_brand__1p0TG\",\"logo\":\"index_logo__1x0LU\",\"browser-chrome\":\"index_browser-chrome__u5wNr\",\"screenshot\":\"index_screenshot__2Ap6T\",\"window-bar\":\"index_window-bar__2SOOS\",\"circles\":\"index_circles__f6mRL\",\"circle\":\"index_circle__1hF7I\",\"circle-red\":\"index_circle-red__22SGN\",\"circle-yellow\":\"index_circle-yellow__2EqGR\",\"circle-green\":\"index_circle-green__HrpKD\",\"btn-primary\":\"index_btn-primary__Zi6so\",\"btn-default\":\"index_btn-default__3u8MD\",\"btn-center\":\"index_btn-center__2fOJi\",\"btn-download\":\"index_btn-download__pL7r9\",\"os-title\":\"index_os-title__Oelf8\",\"os-icon\":\"index_os-icon__3GB34\",\"download-size\":\"index_download-size__IRf8p\",\"github\":\"index_github__8An62\",\"callout-titlebar\":\"index_callout-titlebar__3-AQ2\",\"callout\":\"index_callout__2LoxW\",\"content\":\"index_content__eeTrs\",\"callout-primary\":\"index_callout-primary__3LBwA\",\"code-well\":\"index_code-well__jrD5o\",\"hexagon-sm\":\"index_hexagon-sm__16UiG\",\"hexagon-md\":\"index_hexagon-md__3YGgw\",\"hexagon-lg\":\"index_hexagon-lg__je0Qf\",\"hexagon-inline\":\"index_hexagon-inline__p6s6N\",\"hexagon-left\":\"index_hexagon-left__1T9yY\",\"hexagon-right\":\"index_hexagon-right__5Z7dv\",\"windows-icon\":\"index_windows-icon__1PUfX\",\"apple-icon\":\"index_apple-icon__18_Ul\",\"linux-icon\":\"index_linux-icon__1Ekjt\",\"masthead\":\"index_masthead__3Rj11\",\"intro-wrapper\":\"index_intro-wrapper__3eHhm\",\"intro\":\"index_intro__2Z12l\",\"system-tray-menu-chrome\":\"index_system-tray-menu-chrome__11CyK\",\"osx-bar\":\"index_osx-bar__SZeEl\",\"system-tray-icon\":\"index_system-tray-icon__2x4Vw\",\"h1\":\"index_h1__1SLAe\",\"h2\":\"index_h2__2oHd5\",\"h3\":\"index_h3__3zIem\",\"h4\":\"index_h4__1f8cv\",\"h5\":\"index_h5__2-mH-\",\"h6\":\"index_h6__1sAd_\",\"lead\":\"index_lead__23C4T\",\"text-center\":\"index_text-center__2PvqE\",\"flex-wrapper\":\"index_flex-wrapper__wq-FX\",\"feature-container\":\"index_feature-container__1TUpR\",\"feature-icon-container\":\"index_feature-icon-container__1dU2K\",\"content-block\":\"index_content-block__3Secu\",\"feature-icon\":\"index_feature-icon__3g4g3\",\"feature-icon-blocks\":\"index_feature-icon-blocks__2saqg\",\"feature-icon-themeable\":\"index_feature-icon-themeable__c6s5f\",\"feature-icon-snippets\":\"index_feature-icon-snippets__3zGHG\",\"feature-icon-future\":\"index_feature-icon-future__1ayJm\",\"steps-container\":\"index_steps-container__3CMYb\",\"step\":\"index_step__1Ms0p\",\"step-last\":\"index_step-last__vcSwO\",\"hexagon-wrapper\":\"index_hexagon-wrapper__1U5b5\",\"section-preview\":\"index_section-preview__2HVn4\",\"animation\":\"index_animation__3G-SI\",\"system-tray-menu-chrome-wrapper\":\"index_system-tray-menu-chrome-wrapper__xuZXU\",\"system-tray-menu-wrapper\":\"index_system-tray-menu-wrapper__3qG7q\",\"system-tray-menu-shadow\":\"index_system-tray-menu-shadow__1FOml\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/themes/swanky-docs-theme/css/index.styl\n// module id = 87\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _ismobilejs = require('ismobilejs');\n\nvar _ismobilejs2 = _interopRequireDefault(_ismobilejs);\n\nvar _accessibleTarget = require('./accessibleTarget');\n\nvar _accessibleTarget2 = _interopRequireDefault(_accessibleTarget);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// add some extra variables to the container..\nObject.assign(core.DisplayObject.prototype, _accessibleTarget2.default);\n\nvar KEY_CODE_TAB = 9;\n\nvar DIV_TOUCH_SIZE = 100;\nvar DIV_TOUCH_POS_X = 0;\nvar DIV_TOUCH_POS_Y = 0;\nvar DIV_TOUCH_ZINDEX = 2;\n\nvar DIV_HOOK_SIZE = 1;\nvar DIV_HOOK_POS_X = -1000;\nvar DIV_HOOK_POS_Y = -1000;\nvar DIV_HOOK_ZINDEX = 2;\n\n/**\n * The Accessibility manager reacreates the ability to tab and and have content read by screen\n * readers. This is very important as it can possibly help people with disabilities access pixi\n * content.\n *\n * Much like interaction any DisplayObject can be made accessible. This manager will map the\n * events as if the mouse was being used, minimizing the efferot required to implement.\n *\n * @class\n * @memberof PIXI\n */\n\nvar AccessibilityManager = function () {\n    /**\n     * @param {PIXI.CanvasRenderer|PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    function AccessibilityManager(renderer) {\n        _classCallCheck(this, AccessibilityManager);\n\n        if ((_ismobilejs2.default.tablet || _ismobilejs2.default.phone) && !navigator.isCocoonJS) {\n            this.createTouchHook();\n        }\n\n        // first we create a div that will sit over the pixi element. This is where the div overlays will go.\n        var div = document.createElement('div');\n\n        div.style.width = DIV_TOUCH_SIZE + 'px';\n        div.style.height = DIV_TOUCH_SIZE + 'px';\n        div.style.position = 'absolute';\n        div.style.top = DIV_TOUCH_POS_X + 'px';\n        div.style.left = DIV_TOUCH_POS_Y + 'px';\n        div.style.zIndex = DIV_TOUCH_ZINDEX;\n\n        /**\n         * This is the dom element that will sit over the pixi element. This is where the div overlays will go.\n         *\n         * @type {HTMLElement}\n         * @private\n         */\n        this.div = div;\n\n        /**\n         * A simple pool for storing divs.\n         *\n         * @type {*}\n         * @private\n         */\n        this.pool = [];\n\n        /**\n         * This is a tick used to check if an object is no longer being rendered.\n         *\n         * @type {Number}\n         * @private\n         */\n        this.renderId = 0;\n\n        /**\n         * Setting this to true will visually show the divs\n         *\n         * @type {boolean}\n         */\n        this.debug = false;\n\n        /**\n         * The renderer this accessibility manager works for.\n         *\n         * @member {PIXI.SystemRenderer}\n         */\n        this.renderer = renderer;\n\n        /**\n         * The array of currently active accessible items.\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this.children = [];\n\n        /**\n         * pre-bind the functions\n         *\n         * @private\n         */\n        this._onKeyDown = this._onKeyDown.bind(this);\n        this._onMouseMove = this._onMouseMove.bind(this);\n\n        /**\n         * stores the state of the manager. If there are no accessible objects or the mouse is moving the will be false.\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this.isActive = false;\n        this.isMobileAccessabillity = false;\n\n        // let listen for tab.. once pressed we can fire up and show the accessibility layer\n        window.addEventListener('keydown', this._onKeyDown, false);\n    }\n\n    /**\n     * Creates the touch hooks.\n     *\n     */\n\n\n    AccessibilityManager.prototype.createTouchHook = function createTouchHook() {\n        var _this = this;\n\n        var hookDiv = document.createElement('button');\n\n        hookDiv.style.width = DIV_HOOK_SIZE + 'px';\n        hookDiv.style.height = DIV_HOOK_SIZE + 'px';\n        hookDiv.style.position = 'absolute';\n        hookDiv.style.top = DIV_HOOK_POS_X + 'px';\n        hookDiv.style.left = DIV_HOOK_POS_Y + 'px';\n        hookDiv.style.zIndex = DIV_HOOK_ZINDEX;\n        hookDiv.style.backgroundColor = '#FF0000';\n        hookDiv.title = 'HOOK DIV';\n\n        hookDiv.addEventListener('focus', function () {\n            _this.isMobileAccessabillity = true;\n            _this.activate();\n            document.body.removeChild(hookDiv);\n        });\n\n        document.body.appendChild(hookDiv);\n    };\n\n    /**\n     * Activating will cause the Accessibility layer to be shown. This is called when a user\n     * preses the tab key\n     *\n     * @private\n     */\n\n\n    AccessibilityManager.prototype.activate = function activate() {\n        if (this.isActive) {\n            return;\n        }\n\n        this.isActive = true;\n\n        window.document.addEventListener('mousemove', this._onMouseMove, true);\n        window.removeEventListener('keydown', this._onKeyDown, false);\n\n        this.renderer.on('postrender', this.update, this);\n\n        if (this.renderer.view.parentNode) {\n            this.renderer.view.parentNode.appendChild(this.div);\n        }\n    };\n\n    /**\n     * Deactivating will cause the Accessibility layer to be hidden. This is called when a user moves\n     * the mouse\n     *\n     * @private\n     */\n\n\n    AccessibilityManager.prototype.deactivate = function deactivate() {\n        if (!this.isActive || this.isMobileAccessabillity) {\n            return;\n        }\n\n        this.isActive = false;\n\n        window.document.removeEventListener('mousemove', this._onMouseMove);\n        window.addEventListener('keydown', this._onKeyDown, false);\n\n        this.renderer.off('postrender', this.update);\n\n        if (this.div.parentNode) {\n            this.div.parentNode.removeChild(this.div);\n        }\n    };\n\n    /**\n     * This recursive function will run throught he scene graph and add any new accessible objects to the DOM layer.\n     *\n     * @private\n     * @param {PIXI.Container} displayObject - The DisplayObject to check.\n     */\n\n\n    AccessibilityManager.prototype.updateAccessibleObjects = function updateAccessibleObjects(displayObject) {\n        if (!displayObject.visible) {\n            return;\n        }\n\n        if (displayObject.accessible && displayObject.interactive) {\n            if (!displayObject._accessibleActive) {\n                this.addChild(displayObject);\n            }\n\n            displayObject.renderId = this.renderId;\n        }\n\n        var children = displayObject.children;\n\n        for (var i = children.length - 1; i >= 0; i--) {\n            this.updateAccessibleObjects(children[i]);\n        }\n    };\n\n    /**\n     * Before each render this function will ensure that all divs are mapped correctly to their DisplayObjects.\n     *\n     * @private\n     */\n\n\n    AccessibilityManager.prototype.update = function update() {\n        if (!this.renderer.renderingToScreen) {\n            return;\n        }\n\n        // update children...\n        this.updateAccessibleObjects(this.renderer._lastObjectRendered);\n\n        var rect = this.renderer.view.getBoundingClientRect();\n        var sx = rect.width / this.renderer.width;\n        var sy = rect.height / this.renderer.height;\n\n        var div = this.div;\n\n        div.style.left = rect.left + 'px';\n        div.style.top = rect.top + 'px';\n        div.style.width = this.renderer.width + 'px';\n        div.style.height = this.renderer.height + 'px';\n\n        for (var i = 0; i < this.children.length; i++) {\n            var child = this.children[i];\n\n            if (child.renderId !== this.renderId) {\n                child._accessibleActive = false;\n\n                core.utils.removeItems(this.children, i, 1);\n                this.div.removeChild(child._accessibleDiv);\n                this.pool.push(child._accessibleDiv);\n                child._accessibleDiv = null;\n\n                i--;\n\n                if (this.children.length === 0) {\n                    this.deactivate();\n                }\n            } else {\n                // map div to display..\n                div = child._accessibleDiv;\n                var hitArea = child.hitArea;\n                var wt = child.worldTransform;\n\n                if (child.hitArea) {\n                    div.style.left = (wt.tx + hitArea.x * wt.a) * sx + 'px';\n                    div.style.top = (wt.ty + hitArea.y * wt.d) * sy + 'px';\n\n                    div.style.width = hitArea.width * wt.a * sx + 'px';\n                    div.style.height = hitArea.height * wt.d * sy + 'px';\n                } else {\n                    hitArea = child.getBounds();\n\n                    this.capHitArea(hitArea);\n\n                    div.style.left = hitArea.x * sx + 'px';\n                    div.style.top = hitArea.y * sy + 'px';\n\n                    div.style.width = hitArea.width * sx + 'px';\n                    div.style.height = hitArea.height * sy + 'px';\n                }\n            }\n        }\n\n        // increment the render id..\n        this.renderId++;\n    };\n\n    /**\n     * TODO: docs.\n     *\n     * @param {Rectangle} hitArea - TODO docs\n     */\n\n\n    AccessibilityManager.prototype.capHitArea = function capHitArea(hitArea) {\n        if (hitArea.x < 0) {\n            hitArea.width += hitArea.x;\n            hitArea.x = 0;\n        }\n\n        if (hitArea.y < 0) {\n            hitArea.height += hitArea.y;\n            hitArea.y = 0;\n        }\n\n        if (hitArea.x + hitArea.width > this.renderer.width) {\n            hitArea.width = this.renderer.width - hitArea.x;\n        }\n\n        if (hitArea.y + hitArea.height > this.renderer.height) {\n            hitArea.height = this.renderer.height - hitArea.y;\n        }\n    };\n\n    /**\n     * Adds a DisplayObject to the accessibility manager\n     *\n     * @private\n     * @param {DisplayObject} displayObject - The child to make accessible.\n     */\n\n\n    AccessibilityManager.prototype.addChild = function addChild(displayObject) {\n        //    this.activate();\n\n        var div = this.pool.pop();\n\n        if (!div) {\n            div = document.createElement('button');\n\n            div.style.width = DIV_TOUCH_SIZE + 'px';\n            div.style.height = DIV_TOUCH_SIZE + 'px';\n            div.style.backgroundColor = this.debug ? 'rgba(255,0,0,0.5)' : 'transparent';\n            div.style.position = 'absolute';\n            div.style.zIndex = DIV_TOUCH_ZINDEX;\n            div.style.borderStyle = 'none';\n\n            div.addEventListener('click', this._onClick.bind(this));\n            div.addEventListener('focus', this._onFocus.bind(this));\n            div.addEventListener('focusout', this._onFocusOut.bind(this));\n        }\n\n        if (displayObject.accessibleTitle) {\n            div.title = displayObject.accessibleTitle;\n        } else if (!displayObject.accessibleTitle && !displayObject.accessibleHint) {\n            div.title = 'displayObject ' + this.tabIndex;\n        }\n\n        if (displayObject.accessibleHint) {\n            div.setAttribute('aria-label', displayObject.accessibleHint);\n        }\n\n        //\n\n        displayObject._accessibleActive = true;\n        displayObject._accessibleDiv = div;\n        div.displayObject = displayObject;\n\n        this.children.push(displayObject);\n        this.div.appendChild(displayObject._accessibleDiv);\n        displayObject._accessibleDiv.tabIndex = displayObject.tabIndex;\n    };\n\n    /**\n     * Maps the div button press to pixi's InteractionManager (click)\n     *\n     * @private\n     * @param {MouseEvent} e - The click event.\n     */\n\n\n    AccessibilityManager.prototype._onClick = function _onClick(e) {\n        var interactionManager = this.renderer.plugins.interaction;\n\n        interactionManager.dispatchEvent(e.target.displayObject, 'click', interactionManager.eventData);\n    };\n\n    /**\n     * Maps the div focus events to pixis InteractionManager (mouseover)\n     *\n     * @private\n     * @param {FocusEvent} e - The focus event.\n     */\n\n\n    AccessibilityManager.prototype._onFocus = function _onFocus(e) {\n        var interactionManager = this.renderer.plugins.interaction;\n\n        interactionManager.dispatchEvent(e.target.displayObject, 'mouseover', interactionManager.eventData);\n    };\n\n    /**\n     * Maps the div focus events to pixis InteractionManager (mouseout)\n     *\n     * @private\n     * @param {FocusEvent} e - The focusout event.\n     */\n\n\n    AccessibilityManager.prototype._onFocusOut = function _onFocusOut(e) {\n        var interactionManager = this.renderer.plugins.interaction;\n\n        interactionManager.dispatchEvent(e.target.displayObject, 'mouseout', interactionManager.eventData);\n    };\n\n    /**\n     * Is called when a key is pressed\n     *\n     * @private\n     * @param {KeyboardEvent} e - The keydown event.\n     */\n\n\n    AccessibilityManager.prototype._onKeyDown = function _onKeyDown(e) {\n        if (e.keyCode !== KEY_CODE_TAB) {\n            return;\n        }\n\n        this.activate();\n    };\n\n    /**\n     * Is called when the mouse moves across the renderer element\n     *\n     * @private\n     */\n\n\n    AccessibilityManager.prototype._onMouseMove = function _onMouseMove() {\n        this.deactivate();\n    };\n\n    /**\n     * Destroys the accessibility manager\n     *\n     */\n\n\n    AccessibilityManager.prototype.destroy = function destroy() {\n        this.div = null;\n\n        for (var i = 0; i < this.children.length; i++) {\n            this.children[i].div = null;\n        }\n\n        window.document.removeEventListener('mousemove', this._onMouseMove);\n        window.removeEventListener('keydown', this._onKeyDown);\n\n        this.pool = null;\n        this.children = null;\n        this.renderer = null;\n    };\n\n    return AccessibilityManager;\n}();\n\nexports.default = AccessibilityManager;\n\n\ncore.WebGLRenderer.registerPlugin('accessibility', AccessibilityManager);\ncore.CanvasRenderer.registerPlugin('accessibility', AccessibilityManager);\n//# sourceMappingURL=AccessibilityManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/accessibility/AccessibilityManager.js\n// module id = 88\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _accessibleTarget = require('./accessibleTarget');\n\nObject.defineProperty(exports, 'accessibleTarget', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_accessibleTarget).default;\n  }\n});\n\nvar _AccessibilityManager = require('./AccessibilityManager');\n\nObject.defineProperty(exports, 'AccessibilityManager', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_AccessibilityManager).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/accessibility/index.js\n// module id = 89\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Container2 = require('../display/Container');\n\nvar _Container3 = _interopRequireDefault(_Container2);\n\nvar _RenderTexture = require('../textures/RenderTexture');\n\nvar _RenderTexture2 = _interopRequireDefault(_RenderTexture);\n\nvar _Texture = require('../textures/Texture');\n\nvar _Texture2 = _interopRequireDefault(_Texture);\n\nvar _GraphicsData = require('./GraphicsData');\n\nvar _GraphicsData2 = _interopRequireDefault(_GraphicsData);\n\nvar _Sprite = require('../sprites/Sprite');\n\nvar _Sprite2 = _interopRequireDefault(_Sprite);\n\nvar _math = require('../math');\n\nvar _utils = require('../utils');\n\nvar _const = require('../const');\n\nvar _Bounds = require('../display/Bounds');\n\nvar _Bounds2 = _interopRequireDefault(_Bounds);\n\nvar _bezierCurveTo2 = require('./utils/bezierCurveTo');\n\nvar _bezierCurveTo3 = _interopRequireDefault(_bezierCurveTo2);\n\nvar _CanvasRenderer = require('../renderers/canvas/CanvasRenderer');\n\nvar _CanvasRenderer2 = _interopRequireDefault(_CanvasRenderer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar canvasRenderer = void 0;\nvar tempMatrix = new _math.Matrix();\nvar tempPoint = new _math.Point();\nvar tempColor1 = new Float32Array(4);\nvar tempColor2 = new Float32Array(4);\n\n/**\n * The Graphics class contains methods used to draw primitive shapes such as lines, circles and\n * rectangles to the display, and to color and fill them.\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\n\nvar Graphics = function (_Container) {\n    _inherits(Graphics, _Container);\n\n    /**\n     *\n     */\n    function Graphics() {\n        _classCallCheck(this, Graphics);\n\n        /**\n         * The alpha value used when filling the Graphics object.\n         *\n         * @member {number}\n         * @default 1\n         */\n        var _this = _possibleConstructorReturn(this, _Container.call(this));\n\n        _this.fillAlpha = 1;\n\n        /**\n         * The width (thickness) of any lines drawn.\n         *\n         * @member {number}\n         * @default 0\n         */\n        _this.lineWidth = 0;\n\n        /**\n         * The color of any lines drawn.\n         *\n         * @member {string}\n         * @default 0\n         */\n        _this.lineColor = 0;\n\n        /**\n         * Graphics data\n         *\n         * @member {PIXI.GraphicsData[]}\n         * @private\n         */\n        _this.graphicsData = [];\n\n        /**\n         * The tint applied to the graphic shape. This is a hex value. Apply a value of 0xFFFFFF to\n         * reset the tint.\n         *\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        _this.tint = 0xFFFFFF;\n\n        /**\n         * The previous tint applied to the graphic shape. Used to compare to the current tint and\n         * check if theres change.\n         *\n         * @member {number}\n         * @private\n         * @default 0xFFFFFF\n         */\n        _this._prevTint = 0xFFFFFF;\n\n        /**\n         * The blend mode to be applied to the graphic shape. Apply a value of\n         * `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL;\n         * @see PIXI.BLEND_MODES\n         */\n        _this.blendMode = _const.BLEND_MODES.NORMAL;\n\n        /**\n         * Current path\n         *\n         * @member {PIXI.GraphicsData}\n         * @private\n         */\n        _this.currentPath = null;\n\n        /**\n         * Array containing some WebGL-related properties used by the WebGL renderer.\n         *\n         * @member {object<number, object>}\n         * @private\n         */\n        // TODO - _webgl should use a prototype object, not a random undocumented object...\n        _this._webGL = {};\n\n        /**\n         * Whether this shape is being used as a mask.\n         *\n         * @member {boolean}\n         */\n        _this.isMask = false;\n\n        /**\n         * The bounds' padding used for bounds calculation.\n         *\n         * @member {number}\n         */\n        _this.boundsPadding = 0;\n\n        /**\n         * A cache of the local bounds to prevent recalculation.\n         *\n         * @member {PIXI.Rectangle}\n         * @private\n         */\n        _this._localBounds = new _Bounds2.default();\n\n        /**\n         * Used to detect if the graphics object has changed. If this is set to true then the graphics\n         * object will be recalculated.\n         *\n         * @member {boolean}\n         * @private\n         */\n        _this.dirty = 0;\n\n        /**\n         * Used to detect if we need to do a fast rect check using the id compare method\n         * @type {Number}\n         */\n        _this.fastRectDirty = -1;\n\n        /**\n         * Used to detect if we clear the graphics webGL data\n         * @type {Number}\n         */\n        _this.clearDirty = 0;\n\n        /**\n         * Used to detect if we we need to recalculate local bounds\n         * @type {Number}\n         */\n        _this.boundsDirty = -1;\n\n        /**\n         * Used to detect if the cached sprite object needs to be updated.\n         *\n         * @member {boolean}\n         * @private\n         */\n        _this.cachedSpriteDirty = false;\n\n        _this._spriteRect = null;\n        _this._fastRect = false;\n\n        /**\n         * When cacheAsBitmap is set to true the graphics object will be rendered as if it was a sprite.\n         * This is useful if your graphics element does not change often, as it will speed up the rendering\n         * of the object in exchange for taking up texture memory. It is also useful if you need the graphics\n         * object to be anti-aliased, because it will be rendered using canvas. This is not recommended if\n         * you are constantly redrawing the graphics element.\n         *\n         * @name cacheAsBitmap\n         * @member {boolean}\n         * @memberof PIXI.Graphics#\n         * @default false\n         */\n        return _this;\n    }\n\n    /**\n     * Creates a new Graphics object with the same values as this one.\n     * Note that the only the properties of the object are cloned, not its transform (position,scale,etc)\n     *\n     * @return {PIXI.Graphics} A clone of the graphics object\n     */\n\n\n    Graphics.prototype.clone = function clone() {\n        var clone = new Graphics();\n\n        clone.renderable = this.renderable;\n        clone.fillAlpha = this.fillAlpha;\n        clone.lineWidth = this.lineWidth;\n        clone.lineColor = this.lineColor;\n        clone.tint = this.tint;\n        clone.blendMode = this.blendMode;\n        clone.isMask = this.isMask;\n        clone.boundsPadding = this.boundsPadding;\n        clone.dirty = 0;\n        clone.cachedSpriteDirty = this.cachedSpriteDirty;\n\n        // copy graphics data\n        for (var i = 0; i < this.graphicsData.length; ++i) {\n            clone.graphicsData.push(this.graphicsData[i].clone());\n        }\n\n        clone.currentPath = clone.graphicsData[clone.graphicsData.length - 1];\n\n        clone.updateLocalBounds();\n\n        return clone;\n    };\n\n    /**\n     * Specifies the line style used for subsequent calls to Graphics methods such as the lineTo()\n     * method or the drawCircle() method.\n     *\n     * @param {number} [lineWidth=0] - width of the line to draw, will update the objects stored style\n     * @param {number} [color=0] - color of the line to draw, will update the objects stored style\n     * @param {number} [alpha=1] - alpha of the line to draw, will update the objects stored style\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.lineStyle = function lineStyle() {\n        var lineWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var alpha = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n        this.lineWidth = lineWidth;\n        this.lineColor = color;\n        this.lineAlpha = alpha;\n\n        if (this.currentPath) {\n            if (this.currentPath.shape.points.length) {\n                // halfway through a line? start a new one!\n                var shape = new _math.Polygon(this.currentPath.shape.points.slice(-2));\n\n                shape.closed = false;\n\n                this.drawShape(shape);\n            } else {\n                // otherwise its empty so lets just set the line properties\n                this.currentPath.lineWidth = this.lineWidth;\n                this.currentPath.lineColor = this.lineColor;\n                this.currentPath.lineAlpha = this.lineAlpha;\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Moves the current drawing position to x, y.\n     *\n     * @param {number} x - the X coordinate to move to\n     * @param {number} y - the Y coordinate to move to\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.moveTo = function moveTo(x, y) {\n        var shape = new _math.Polygon([x, y]);\n\n        shape.closed = false;\n        this.drawShape(shape);\n\n        return this;\n    };\n\n    /**\n     * Draws a line using the current line style from the current drawing position to (x, y);\n     * The current drawing position is then set to (x, y).\n     *\n     * @param {number} x - the X coordinate to draw to\n     * @param {number} y - the Y coordinate to draw to\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.lineTo = function lineTo(x, y) {\n        this.currentPath.shape.points.push(x, y);\n        this.dirty++;\n\n        return this;\n    };\n\n    /**\n     * Calculate the points for a quadratic bezier curve and then draws it.\n     * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.quadraticCurveTo = function quadraticCurveTo(cpX, cpY, toX, toY) {\n        if (this.currentPath) {\n            if (this.currentPath.shape.points.length === 0) {\n                this.currentPath.shape.points = [0, 0];\n            }\n        } else {\n            this.moveTo(0, 0);\n        }\n\n        var n = 20;\n        var points = this.currentPath.shape.points;\n        var xa = 0;\n        var ya = 0;\n\n        if (points.length === 0) {\n            this.moveTo(0, 0);\n        }\n\n        var fromX = points[points.length - 2];\n        var fromY = points[points.length - 1];\n\n        for (var i = 1; i <= n; ++i) {\n            var j = i / n;\n\n            xa = fromX + (cpX - fromX) * j;\n            ya = fromY + (cpY - fromY) * j;\n\n            points.push(xa + (cpX + (toX - cpX) * j - xa) * j, ya + (cpY + (toY - cpY) * j - ya) * j);\n        }\n\n        this.dirty++;\n\n        return this;\n    };\n\n    /**\n     * Calculate the points for a bezier curve and then draws it.\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} cpX2 - Second Control point x\n     * @param {number} cpY2 - Second Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.bezierCurveTo = function bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\n        if (this.currentPath) {\n            if (this.currentPath.shape.points.length === 0) {\n                this.currentPath.shape.points = [0, 0];\n            }\n        } else {\n            this.moveTo(0, 0);\n        }\n\n        var points = this.currentPath.shape.points;\n\n        var fromX = points[points.length - 2];\n        var fromY = points[points.length - 1];\n\n        points.length -= 2;\n\n        (0, _bezierCurveTo3.default)(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY, points);\n\n        this.dirty++;\n\n        return this;\n    };\n\n    /**\n     * The arcTo() method creates an arc/curve between two tangents on the canvas.\n     *\n     * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n     *\n     * @param {number} x1 - The x-coordinate of the beginning of the arc\n     * @param {number} y1 - The y-coordinate of the beginning of the arc\n     * @param {number} x2 - The x-coordinate of the end of the arc\n     * @param {number} y2 - The y-coordinate of the end of the arc\n     * @param {number} radius - The radius of the arc\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.arcTo = function arcTo(x1, y1, x2, y2, radius) {\n        if (this.currentPath) {\n            if (this.currentPath.shape.points.length === 0) {\n                this.currentPath.shape.points.push(x1, y1);\n            }\n        } else {\n            this.moveTo(x1, y1);\n        }\n\n        var points = this.currentPath.shape.points;\n        var fromX = points[points.length - 2];\n        var fromY = points[points.length - 1];\n        var a1 = fromY - y1;\n        var b1 = fromX - x1;\n        var a2 = y2 - y1;\n        var b2 = x2 - x1;\n        var mm = Math.abs(a1 * b2 - b1 * a2);\n\n        if (mm < 1.0e-8 || radius === 0) {\n            if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1) {\n                points.push(x1, y1);\n            }\n        } else {\n            var dd = a1 * a1 + b1 * b1;\n            var cc = a2 * a2 + b2 * b2;\n            var tt = a1 * a2 + b1 * b2;\n            var k1 = radius * Math.sqrt(dd) / mm;\n            var k2 = radius * Math.sqrt(cc) / mm;\n            var j1 = k1 * tt / dd;\n            var j2 = k2 * tt / cc;\n            var cx = k1 * b2 + k2 * b1;\n            var cy = k1 * a2 + k2 * a1;\n            var px = b1 * (k2 + j1);\n            var py = a1 * (k2 + j1);\n            var qx = b2 * (k1 + j2);\n            var qy = a2 * (k1 + j2);\n            var startAngle = Math.atan2(py - cy, px - cx);\n            var endAngle = Math.atan2(qy - cy, qx - cx);\n\n            this.arc(cx + x1, cy + y1, radius, startAngle, endAngle, b1 * a2 > b2 * a1);\n        }\n\n        this.dirty++;\n\n        return this;\n    };\n\n    /**\n     * The arc method creates an arc/curve (used to create circles, or parts of circles).\n     *\n     * @param {number} cx - The x-coordinate of the center of the circle\n     * @param {number} cy - The y-coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @param {number} startAngle - The starting angle, in radians (0 is at the 3 o'clock position\n     *  of the arc's circle)\n     * @param {number} endAngle - The ending angle, in radians\n     * @param {boolean} [anticlockwise=false] - Specifies whether the drawing should be\n     *  counter-clockwise or clockwise. False is default, and indicates clockwise, while true\n     *  indicates counter-clockwise.\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.arc = function arc(cx, cy, radius, startAngle, endAngle) {\n        var anticlockwise = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n        if (startAngle === endAngle) {\n            return this;\n        }\n\n        if (!anticlockwise && endAngle <= startAngle) {\n            endAngle += Math.PI * 2;\n        } else if (anticlockwise && startAngle <= endAngle) {\n            startAngle += Math.PI * 2;\n        }\n\n        var sweep = endAngle - startAngle;\n        var segs = Math.ceil(Math.abs(sweep) / (Math.PI * 2)) * 40;\n\n        if (sweep === 0) {\n            return this;\n        }\n\n        var startX = cx + Math.cos(startAngle) * radius;\n        var startY = cy + Math.sin(startAngle) * radius;\n\n        var points = this.currentPath.shape.points;\n\n        if (this.currentPath) {\n            if (points[points.length - 2] !== startX || points[points.length - 1] !== startY) {\n                points.push(startX, startY);\n            }\n        } else {\n            this.moveTo(startX, startY);\n        }\n\n        var theta = sweep / (segs * 2);\n        var theta2 = theta * 2;\n\n        var cTheta = Math.cos(theta);\n        var sTheta = Math.sin(theta);\n\n        var segMinus = segs - 1;\n\n        var remainder = segMinus % 1 / segMinus;\n\n        for (var i = 0; i <= segMinus; ++i) {\n            var real = i + remainder * i;\n\n            var angle = theta + startAngle + theta2 * real;\n\n            var c = Math.cos(angle);\n            var s = -Math.sin(angle);\n\n            points.push((cTheta * c + sTheta * s) * radius + cx, (cTheta * -s + sTheta * c) * radius + cy);\n        }\n\n        this.dirty++;\n\n        return this;\n    };\n\n    /**\n     * Specifies a simple one-color fill that subsequent calls to other Graphics methods\n     * (such as lineTo() or drawCircle()) use when drawing.\n     *\n     * @param {number} [color=0] - the color of the fill\n     * @param {number} [alpha=1] - the alpha of the fill\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.beginFill = function beginFill() {\n        var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        this.filling = true;\n        this.fillColor = color;\n        this.fillAlpha = alpha;\n\n        if (this.currentPath) {\n            if (this.currentPath.shape.points.length <= 2) {\n                this.currentPath.fill = this.filling;\n                this.currentPath.fillColor = this.fillColor;\n                this.currentPath.fillAlpha = this.fillAlpha;\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.\n     *\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.endFill = function endFill() {\n        this.filling = false;\n        this.fillColor = null;\n        this.fillAlpha = 1;\n\n        return this;\n    };\n\n    /**\n     *\n     * @param {number} x - The X coord of the top-left of the rectangle\n     * @param {number} y - The Y coord of the top-left of the rectangle\n     * @param {number} width - The width of the rectangle\n     * @param {number} height - The height of the rectangle\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.drawRect = function drawRect(x, y, width, height) {\n        this.drawShape(new _math.Rectangle(x, y, width, height));\n\n        return this;\n    };\n\n    /**\n     *\n     * @param {number} x - The X coord of the top-left of the rectangle\n     * @param {number} y - The Y coord of the top-left of the rectangle\n     * @param {number} width - The width of the rectangle\n     * @param {number} height - The height of the rectangle\n     * @param {number} radius - Radius of the rectangle corners\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.drawRoundedRect = function drawRoundedRect(x, y, width, height, radius) {\n        this.drawShape(new _math.RoundedRectangle(x, y, width, height, radius));\n\n        return this;\n    };\n\n    /**\n     * Draws a circle.\n     *\n     * @param {number} x - The X coordinate of the center of the circle\n     * @param {number} y - The Y coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.drawCircle = function drawCircle(x, y, radius) {\n        this.drawShape(new _math.Circle(x, y, radius));\n\n        return this;\n    };\n\n    /**\n     * Draws an ellipse.\n     *\n     * @param {number} x - The X coordinate of the center of the ellipse\n     * @param {number} y - The Y coordinate of the center of the ellipse\n     * @param {number} width - The half width of the ellipse\n     * @param {number} height - The half height of the ellipse\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.drawEllipse = function drawEllipse(x, y, width, height) {\n        this.drawShape(new _math.Ellipse(x, y, width, height));\n\n        return this;\n    };\n\n    /**\n     * Draws a polygon using the given path.\n     *\n     * @param {number[]|PIXI.Point[]} path - The path data used to construct the polygon.\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.drawPolygon = function drawPolygon(path) {\n        // prevents an argument assignment deopt\n        // see section 3.1: https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments\n        var points = path;\n\n        var closed = true;\n\n        if (points instanceof _math.Polygon) {\n            closed = points.closed;\n            points = points.points;\n        }\n\n        if (!Array.isArray(points)) {\n            // prevents an argument leak deopt\n            // see section 3.2: https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments\n            points = new Array(arguments.length);\n\n            for (var i = 0; i < points.length; ++i) {\n                points[i] = arguments[i]; // eslint-disable-line prefer-rest-params\n            }\n        }\n\n        var shape = new _math.Polygon(points);\n\n        shape.closed = closed;\n\n        this.drawShape(shape);\n\n        return this;\n    };\n\n    /**\n     * Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.\n     *\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n\n\n    Graphics.prototype.clear = function clear() {\n        if (this.lineWidth || this.filling || this.graphicsData.length > 0) {\n            this.lineWidth = 0;\n            this.filling = false;\n\n            this.dirty++;\n            this.clearDirty++;\n            this.graphicsData.length = 0;\n        }\n\n        return this;\n    };\n\n    /**\n     * True if graphics consists of one rectangle, and thus, can be drawn like a Sprite and\n     * masked with gl.scissor.\n     *\n     * @returns {boolean} True if only 1 rect.\n     */\n\n\n    Graphics.prototype.isFastRect = function isFastRect() {\n        return this.graphicsData.length === 1 && this.graphicsData[0].shape.type === _const.SHAPES.RECT && !this.graphicsData[0].lineWidth;\n    };\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    Graphics.prototype._renderWebGL = function _renderWebGL(renderer) {\n        // if the sprite is not visible or the alpha is 0 then no need to render this element\n        if (this.dirty !== this.fastRectDirty) {\n            this.fastRectDirty = this.dirty;\n            this._fastRect = this.isFastRect();\n        }\n\n        // TODO this check can be moved to dirty?\n        if (this._fastRect) {\n            this._renderSpriteRect(renderer);\n        } else {\n            renderer.setObjectRenderer(renderer.plugins.graphics);\n            renderer.plugins.graphics.render(this);\n        }\n    };\n\n    /**\n     * Renders a sprite rectangle.\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    Graphics.prototype._renderSpriteRect = function _renderSpriteRect(renderer) {\n        var rect = this.graphicsData[0].shape;\n\n        if (!this._spriteRect) {\n            if (!Graphics._SPRITE_TEXTURE) {\n                Graphics._SPRITE_TEXTURE = _RenderTexture2.default.create(10, 10);\n\n                var canvas = document.createElement('canvas');\n\n                canvas.width = 10;\n                canvas.height = 10;\n\n                var context = canvas.getContext('2d');\n\n                context.fillStyle = 'white';\n                context.fillRect(0, 0, 10, 10);\n\n                Graphics._SPRITE_TEXTURE = _Texture2.default.fromCanvas(canvas);\n            }\n\n            this._spriteRect = new _Sprite2.default(Graphics._SPRITE_TEXTURE);\n        }\n        if (this.tint === 0xffffff) {\n            this._spriteRect.tint = this.graphicsData[0].fillColor;\n        } else {\n            var t1 = tempColor1;\n            var t2 = tempColor2;\n\n            (0, _utils.hex2rgb)(this.graphicsData[0].fillColor, t1);\n            (0, _utils.hex2rgb)(this.tint, t2);\n\n            t1[0] *= t2[0];\n            t1[1] *= t2[1];\n            t1[2] *= t2[2];\n\n            this._spriteRect.tint = (0, _utils.rgb2hex)(t1);\n        }\n        this._spriteRect.alpha = this.graphicsData[0].fillAlpha;\n        this._spriteRect.worldAlpha = this.worldAlpha * this._spriteRect.alpha;\n\n        Graphics._SPRITE_TEXTURE._frame.width = rect.width;\n        Graphics._SPRITE_TEXTURE._frame.height = rect.height;\n\n        this._spriteRect.transform.worldTransform = this.transform.worldTransform;\n\n        this._spriteRect.anchor.set(-rect.x / rect.width, -rect.y / rect.height);\n        this._spriteRect._onAnchorUpdate();\n\n        this._spriteRect._renderWebGL(renderer);\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n\n\n    Graphics.prototype._renderCanvas = function _renderCanvas(renderer) {\n        if (this.isMask === true) {\n            return;\n        }\n\n        renderer.plugins.graphics.render(this);\n    };\n\n    /**\n     * Retrieves the bounds of the graphic shape as a rectangle object\n     *\n     * @private\n     */\n\n\n    Graphics.prototype._calculateBounds = function _calculateBounds() {\n        if (this.boundsDirty !== this.dirty) {\n            this.boundsDirty = this.dirty;\n            this.updateLocalBounds();\n\n            this.dirty++;\n            this.cachedSpriteDirty = true;\n        }\n\n        var lb = this._localBounds;\n\n        this._bounds.addFrame(this.transform, lb.minX, lb.minY, lb.maxX, lb.maxY);\n    };\n\n    /**\n     * Tests if a point is inside this graphics object\n     *\n     * @param {PIXI.Point} point - the point to test\n     * @return {boolean} the result of the test\n     */\n\n\n    Graphics.prototype.containsPoint = function containsPoint(point) {\n        this.worldTransform.applyInverse(point, tempPoint);\n\n        var graphicsData = this.graphicsData;\n\n        for (var i = 0; i < graphicsData.length; ++i) {\n            var data = graphicsData[i];\n\n            if (!data.fill) {\n                continue;\n            }\n\n            // only deal with fills..\n            if (data.shape) {\n                if (data.shape.contains(tempPoint.x, tempPoint.y)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * Update the bounds of the object\n     *\n     */\n\n\n    Graphics.prototype.updateLocalBounds = function updateLocalBounds() {\n        var minX = Infinity;\n        var maxX = -Infinity;\n\n        var minY = Infinity;\n        var maxY = -Infinity;\n\n        if (this.graphicsData.length) {\n            var shape = 0;\n            var x = 0;\n            var y = 0;\n            var w = 0;\n            var h = 0;\n\n            for (var i = 0; i < this.graphicsData.length; i++) {\n                var data = this.graphicsData[i];\n                var type = data.type;\n                var lineWidth = data.lineWidth;\n\n                shape = data.shape;\n\n                if (type === _const.SHAPES.RECT || type === _const.SHAPES.RREC) {\n                    x = shape.x - lineWidth / 2;\n                    y = shape.y - lineWidth / 2;\n                    w = shape.width + lineWidth;\n                    h = shape.height + lineWidth;\n\n                    minX = x < minX ? x : minX;\n                    maxX = x + w > maxX ? x + w : maxX;\n\n                    minY = y < minY ? y : minY;\n                    maxY = y + h > maxY ? y + h : maxY;\n                } else if (type === _const.SHAPES.CIRC) {\n                    x = shape.x;\n                    y = shape.y;\n                    w = shape.radius + lineWidth / 2;\n                    h = shape.radius + lineWidth / 2;\n\n                    minX = x - w < minX ? x - w : minX;\n                    maxX = x + w > maxX ? x + w : maxX;\n\n                    minY = y - h < minY ? y - h : minY;\n                    maxY = y + h > maxY ? y + h : maxY;\n                } else if (type === _const.SHAPES.ELIP) {\n                    x = shape.x;\n                    y = shape.y;\n                    w = shape.width + lineWidth / 2;\n                    h = shape.height + lineWidth / 2;\n\n                    minX = x - w < minX ? x - w : minX;\n                    maxX = x + w > maxX ? x + w : maxX;\n\n                    minY = y - h < minY ? y - h : minY;\n                    maxY = y + h > maxY ? y + h : maxY;\n                } else {\n                    // POLY\n                    var points = shape.points;\n                    var x2 = 0;\n                    var y2 = 0;\n                    var dx = 0;\n                    var dy = 0;\n                    var rw = 0;\n                    var rh = 0;\n                    var cx = 0;\n                    var cy = 0;\n\n                    for (var j = 0; j + 2 < points.length; j += 2) {\n                        x = points[j];\n                        y = points[j + 1];\n                        x2 = points[j + 2];\n                        y2 = points[j + 3];\n                        dx = Math.abs(x2 - x);\n                        dy = Math.abs(y2 - y);\n                        h = lineWidth;\n                        w = Math.sqrt(dx * dx + dy * dy);\n\n                        if (w < 1e-9) {\n                            continue;\n                        }\n\n                        rw = (h / w * dy + dx) / 2;\n                        rh = (h / w * dx + dy) / 2;\n                        cx = (x2 + x) / 2;\n                        cy = (y2 + y) / 2;\n\n                        minX = cx - rw < minX ? cx - rw : minX;\n                        maxX = cx + rw > maxX ? cx + rw : maxX;\n\n                        minY = cy - rh < minY ? cy - rh : minY;\n                        maxY = cy + rh > maxY ? cy + rh : maxY;\n                    }\n                }\n            }\n        } else {\n            minX = 0;\n            maxX = 0;\n            minY = 0;\n            maxY = 0;\n        }\n\n        var padding = this.boundsPadding;\n\n        this._localBounds.minX = minX - padding;\n        this._localBounds.maxX = maxX + padding * 2;\n\n        this._localBounds.minY = minY - padding;\n        this._localBounds.maxY = maxY + padding * 2;\n    };\n\n    /**\n     * Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.\n     *\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - The shape object to draw.\n     * @return {PIXI.GraphicsData} The generated GraphicsData object.\n     */\n\n\n    Graphics.prototype.drawShape = function drawShape(shape) {\n        if (this.currentPath) {\n            // check current path!\n            if (this.currentPath.shape.points.length <= 2) {\n                this.graphicsData.pop();\n            }\n        }\n\n        this.currentPath = null;\n\n        var data = new _GraphicsData2.default(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.filling, shape);\n\n        this.graphicsData.push(data);\n\n        if (data.type === _const.SHAPES.POLY) {\n            data.shape.closed = data.shape.closed || this.filling;\n            this.currentPath = data;\n        }\n\n        this.dirty++;\n\n        return data;\n    };\n\n    /**\n     * Generates a canvas texture.\n     *\n     * @param {number} scaleMode - The scale mode of the texture.\n     * @param {number} resolution - The resolution of the texture.\n     * @return {PIXI.Texture} The new texture.\n     */\n\n\n    Graphics.prototype.generateCanvasTexture = function generateCanvasTexture(scaleMode) {\n        var resolution = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        var bounds = this.getLocalBounds();\n\n        var canvasBuffer = _RenderTexture2.default.create(bounds.width, bounds.height, scaleMode, resolution);\n\n        if (!canvasRenderer) {\n            canvasRenderer = new _CanvasRenderer2.default();\n        }\n\n        tempMatrix.tx = -bounds.x;\n        tempMatrix.ty = -bounds.y;\n\n        canvasRenderer.render(this, canvasBuffer, false, tempMatrix);\n\n        var texture = _Texture2.default.fromCanvas(canvasBuffer.baseTexture._canvasRenderTarget.canvas, scaleMode);\n\n        texture.baseTexture.resolution = resolution;\n        texture.baseTexture.update();\n\n        return texture;\n    };\n\n    /**\n     * Closes the current path.\n     *\n     * @return {PIXI.Graphics} Returns itself.\n     */\n\n\n    Graphics.prototype.closePath = function closePath() {\n        // ok so close path assumes next one is a hole!\n        var currentPath = this.currentPath;\n\n        if (currentPath && currentPath.shape) {\n            currentPath.shape.close();\n        }\n\n        return this;\n    };\n\n    /**\n     * Adds a hole in the current path.\n     *\n     * @return {PIXI.Graphics} Returns itself.\n     */\n\n\n    Graphics.prototype.addHole = function addHole() {\n        // this is a hole!\n        var hole = this.graphicsData.pop();\n\n        this.currentPath = this.graphicsData[this.graphicsData.length - 1];\n\n        this.currentPath.addHole(hole.shape);\n        this.currentPath = null;\n\n        return this;\n    };\n\n    /**\n     * Destroys the Graphics object.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all\n     *  options have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have\n     *  their destroy method called as well. 'options' will be passed on to those calls.\n     */\n\n\n    Graphics.prototype.destroy = function destroy(options) {\n        _Container.prototype.destroy.call(this, options);\n\n        // destroy each of the GraphicsData objects\n        for (var i = 0; i < this.graphicsData.length; ++i) {\n            this.graphicsData[i].destroy();\n        }\n\n        // for each webgl data entry, destroy the WebGLGraphicsData\n        for (var id in this._webgl) {\n            for (var j = 0; j < this._webgl[id].data.length; ++j) {\n                this._webgl[id].data[j].destroy();\n            }\n        }\n\n        if (this._spriteRect) {\n            this._spriteRect.destroy();\n        }\n\n        this.graphicsData = null;\n\n        this.currentPath = null;\n        this._webgl = null;\n        this._localBounds = null;\n    };\n\n    return Graphics;\n}(_Container3.default);\n\nexports.default = Graphics;\n\n\nGraphics._SPRITE_TEXTURE = null;\n//# sourceMappingURL=Graphics.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/Graphics.js\n// module id = 90\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _CanvasRenderer = require('../../renderers/canvas/CanvasRenderer');\n\nvar _CanvasRenderer2 = _interopRequireDefault(_CanvasRenderer);\n\nvar _const = require('../../const');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they\n * now share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's CanvasGraphicsRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/CanvasGraphicsRenderer.java\n */\n\n/**\n * Renderer dedicated to drawing and batching graphics objects.\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar CanvasGraphicsRenderer = function () {\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The current PIXI renderer.\n     */\n    function CanvasGraphicsRenderer(renderer) {\n        _classCallCheck(this, CanvasGraphicsRenderer);\n\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders a Graphics object to a canvas.\n     *\n     * @param {PIXI.Graphics} graphics - the actual graphics object to render\n     */\n\n\n    CanvasGraphicsRenderer.prototype.render = function render(graphics) {\n        var renderer = this.renderer;\n        var context = renderer.context;\n        var worldAlpha = graphics.worldAlpha;\n        var transform = graphics.transform.worldTransform;\n        var resolution = renderer.resolution;\n\n        // if the tint has changed, set the graphics object to dirty.\n        if (this._prevTint !== this.tint) {\n            this.dirty = true;\n        }\n\n        context.setTransform(transform.a * resolution, transform.b * resolution, transform.c * resolution, transform.d * resolution, transform.tx * resolution, transform.ty * resolution);\n\n        if (graphics.dirty) {\n            this.updateGraphicsTint(graphics);\n            graphics.dirty = false;\n        }\n\n        renderer.setBlendMode(graphics.blendMode);\n\n        for (var i = 0; i < graphics.graphicsData.length; i++) {\n            var data = graphics.graphicsData[i];\n            var shape = data.shape;\n\n            var fillColor = data._fillTint;\n            var lineColor = data._lineTint;\n\n            context.lineWidth = data.lineWidth;\n\n            if (data.type === _const.SHAPES.POLY) {\n                context.beginPath();\n\n                this.renderPolygon(shape.points, shape.closed, context);\n\n                for (var j = 0; j < data.holes.length; j++) {\n                    this.renderPolygon(data.holes[j].points, true, context);\n                }\n\n                if (data.fill) {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = '#' + ('00000' + (fillColor | 0).toString(16)).substr(-6);\n                    context.fill();\n                }\n                if (data.lineWidth) {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = '#' + ('00000' + (lineColor | 0).toString(16)).substr(-6);\n                    context.stroke();\n                }\n            } else if (data.type === _const.SHAPES.RECT) {\n                if (data.fillColor || data.fillColor === 0) {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = '#' + ('00000' + (fillColor | 0).toString(16)).substr(-6);\n                    context.fillRect(shape.x, shape.y, shape.width, shape.height);\n                }\n                if (data.lineWidth) {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = '#' + ('00000' + (lineColor | 0).toString(16)).substr(-6);\n                    context.strokeRect(shape.x, shape.y, shape.width, shape.height);\n                }\n            } else if (data.type === _const.SHAPES.CIRC) {\n                // TODO - need to be Undefined!\n                context.beginPath();\n                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n                context.closePath();\n\n                if (data.fill) {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = '#' + ('00000' + (fillColor | 0).toString(16)).substr(-6);\n                    context.fill();\n                }\n                if (data.lineWidth) {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = '#' + ('00000' + (lineColor | 0).toString(16)).substr(-6);\n                    context.stroke();\n                }\n            } else if (data.type === _const.SHAPES.ELIP) {\n                // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n                var w = shape.width * 2;\n                var h = shape.height * 2;\n\n                var x = shape.x - w / 2;\n                var y = shape.y - h / 2;\n\n                context.beginPath();\n\n                var kappa = 0.5522848;\n                var ox = w / 2 * kappa; // control point offset horizontal\n                var oy = h / 2 * kappa; // control point offset vertical\n                var xe = x + w; // x-end\n                var ye = y + h; // y-end\n                var xm = x + w / 2; // x-middle\n                var ym = y + h / 2; // y-middle\n\n                context.moveTo(x, ym);\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n                context.closePath();\n\n                if (data.fill) {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = '#' + ('00000' + (fillColor | 0).toString(16)).substr(-6);\n                    context.fill();\n                }\n                if (data.lineWidth) {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = '#' + ('00000' + (lineColor | 0).toString(16)).substr(-6);\n                    context.stroke();\n                }\n            } else if (data.type === _const.SHAPES.RREC) {\n                var rx = shape.x;\n                var ry = shape.y;\n                var width = shape.width;\n                var height = shape.height;\n                var radius = shape.radius;\n\n                var maxRadius = Math.min(width, height) / 2 | 0;\n\n                radius = radius > maxRadius ? maxRadius : radius;\n\n                context.beginPath();\n                context.moveTo(rx, ry + radius);\n                context.lineTo(rx, ry + height - radius);\n                context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n                context.lineTo(rx + width - radius, ry + height);\n                context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n                context.lineTo(rx + width, ry + radius);\n                context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n                context.lineTo(rx + radius, ry);\n                context.quadraticCurveTo(rx, ry, rx, ry + radius);\n                context.closePath();\n\n                if (data.fillColor || data.fillColor === 0) {\n                    context.globalAlpha = data.fillAlpha * worldAlpha;\n                    context.fillStyle = '#' + ('00000' + (fillColor | 0).toString(16)).substr(-6);\n                    context.fill();\n                }\n\n                if (data.lineWidth) {\n                    context.globalAlpha = data.lineAlpha * worldAlpha;\n                    context.strokeStyle = '#' + ('00000' + (lineColor | 0).toString(16)).substr(-6);\n                    context.stroke();\n                }\n            }\n        }\n    };\n\n    /**\n     * Updates the tint of a graphics object\n     *\n     * @private\n     * @param {PIXI.Graphics} graphics - the graphics that will have its tint updated\n     */\n\n\n    CanvasGraphicsRenderer.prototype.updateGraphicsTint = function updateGraphicsTint(graphics) {\n        graphics._prevTint = graphics.tint;\n\n        var tintR = (graphics.tint >> 16 & 0xFF) / 255;\n        var tintG = (graphics.tint >> 8 & 0xFF) / 255;\n        var tintB = (graphics.tint & 0xFF) / 255;\n\n        for (var i = 0; i < graphics.graphicsData.length; ++i) {\n            var data = graphics.graphicsData[i];\n\n            var fillColor = data.fillColor | 0;\n            var lineColor = data.lineColor | 0;\n\n            // super inline cos im an optimization NAZI :)\n            data._fillTint = ((fillColor >> 16 & 0xFF) / 255 * tintR * 255 << 16) + ((fillColor >> 8 & 0xFF) / 255 * tintG * 255 << 8) + (fillColor & 0xFF) / 255 * tintB * 255;\n\n            data._lineTint = ((lineColor >> 16 & 0xFF) / 255 * tintR * 255 << 16) + ((lineColor >> 8 & 0xFF) / 255 * tintG * 255 << 8) + (lineColor & 0xFF) / 255 * tintB * 255;\n        }\n    };\n\n    /**\n     * Renders a polygon.\n     *\n     * @param {PIXI.Point[]} points - The points to render\n     * @param {boolean} close - Should the polygon be closed\n     * @param {CanvasRenderingContext2D} context - The rendering context to use\n     */\n\n\n    CanvasGraphicsRenderer.prototype.renderPolygon = function renderPolygon(points, close, context) {\n        context.moveTo(points[0], points[1]);\n\n        for (var j = 1; j < points.length / 2; ++j) {\n            context.lineTo(points[j * 2], points[j * 2 + 1]);\n        }\n\n        if (close) {\n            context.closePath();\n        }\n    };\n\n    /**\n     * destroy graphics object\n     *\n     */\n\n\n    CanvasGraphicsRenderer.prototype.destroy = function destroy() {\n        this.renderer = null;\n    };\n\n    return CanvasGraphicsRenderer;\n}();\n\nexports.default = CanvasGraphicsRenderer;\n\n\n_CanvasRenderer2.default.registerPlugin('graphics', CanvasGraphicsRenderer);\n//# sourceMappingURL=CanvasGraphicsRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/canvas/CanvasGraphicsRenderer.js\n// module id = 91\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\nexports.default = bezierCurveTo;\n/**\n * Calculate the points for a bezier curve and then draws it.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @param {number} fromX - Starting point x\n * @param {number} fromY - Starting point y\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} cpX2 - Second Control point x\n * @param {number} cpY2 - Second Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number[]} [path=[]] - Path array to push points into\n * @return {number[]} Array of points of the curve\n */\nfunction bezierCurveTo(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY) {\n    var path = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : [];\n\n    var n = 20;\n    var dt = 0;\n    var dt2 = 0;\n    var dt3 = 0;\n    var t2 = 0;\n    var t3 = 0;\n\n    path.push(fromX, fromY);\n\n    for (var i = 1, j = 0; i <= n; ++i) {\n        j = i / n;\n\n        dt = 1 - j;\n        dt2 = dt * dt;\n        dt3 = dt2 * dt;\n\n        t2 = j * j;\n        t3 = t2 * j;\n\n        path.push(dt3 * fromX + 3 * dt2 * j * cpX + 3 * dt * t2 * cpX2 + t3 * toX, dt3 * fromY + 3 * dt2 * j * cpY + 3 * dt * t2 * cpY2 + t3 * toY);\n    }\n\n    return path;\n}\n//# sourceMappingURL=bezierCurveTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/utils/bezierCurveTo.js\n// module id = 92\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../../utils');\n\nvar _const = require('../../const');\n\nvar _ObjectRenderer2 = require('../../renderers/webgl/utils/ObjectRenderer');\n\nvar _ObjectRenderer3 = _interopRequireDefault(_ObjectRenderer2);\n\nvar _WebGLRenderer = require('../../renderers/webgl/WebGLRenderer');\n\nvar _WebGLRenderer2 = _interopRequireDefault(_WebGLRenderer);\n\nvar _WebGLGraphicsData = require('./WebGLGraphicsData');\n\nvar _WebGLGraphicsData2 = _interopRequireDefault(_WebGLGraphicsData);\n\nvar _PrimitiveShader = require('./shaders/PrimitiveShader');\n\nvar _PrimitiveShader2 = _interopRequireDefault(_PrimitiveShader);\n\nvar _buildPoly = require('./utils/buildPoly');\n\nvar _buildPoly2 = _interopRequireDefault(_buildPoly);\n\nvar _buildRectangle = require('./utils/buildRectangle');\n\nvar _buildRectangle2 = _interopRequireDefault(_buildRectangle);\n\nvar _buildRoundedRectangle = require('./utils/buildRoundedRectangle');\n\nvar _buildRoundedRectangle2 = _interopRequireDefault(_buildRoundedRectangle);\n\nvar _buildCircle = require('./utils/buildCircle');\n\nvar _buildCircle2 = _interopRequireDefault(_buildCircle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Renders the graphics object.\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.ObjectRenderer\n */\nvar GraphicsRenderer = function (_ObjectRenderer) {\n    _inherits(GraphicsRenderer, _ObjectRenderer);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this object renderer works for.\n     */\n    function GraphicsRenderer(renderer) {\n        _classCallCheck(this, GraphicsRenderer);\n\n        var _this = _possibleConstructorReturn(this, _ObjectRenderer.call(this, renderer));\n\n        _this.graphicsDataPool = [];\n\n        _this.primitiveShader = null;\n\n        _this.gl = renderer.gl;\n\n        // easy access!\n        _this.CONTEXT_UID = 0;\n        return _this;\n    }\n\n    /**\n     * Called when there is a WebGL context change\n     *\n     * @private\n     *\n     */\n\n\n    GraphicsRenderer.prototype.onContextChange = function onContextChange() {\n        this.gl = this.renderer.gl;\n        this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n        this.primitiveShader = new _PrimitiveShader2.default(this.gl);\n    };\n\n    /**\n     * Destroys this renderer.\n     *\n     */\n\n\n    GraphicsRenderer.prototype.destroy = function destroy() {\n        _ObjectRenderer3.default.prototype.destroy.call(this);\n\n        for (var i = 0; i < this.graphicsDataPool.length; ++i) {\n            this.graphicsDataPool[i].destroy();\n        }\n\n        this.graphicsDataPool = null;\n    };\n\n    /**\n     * Renders a graphics object.\n     *\n     * @param {PIXI.Graphics} graphics - The graphics object to render.\n     */\n\n\n    GraphicsRenderer.prototype.render = function render(graphics) {\n        var renderer = this.renderer;\n        var gl = renderer.gl;\n\n        var webGLData = void 0;\n        var webGL = graphics._webGL[this.CONTEXT_UID];\n\n        if (!webGL || graphics.dirty !== webGL.dirty) {\n            this.updateGraphics(graphics);\n\n            webGL = graphics._webGL[this.CONTEXT_UID];\n        }\n\n        // This  could be speeded up for sure!\n        var shader = this.primitiveShader;\n\n        renderer.bindShader(shader);\n        renderer.state.setBlendMode(graphics.blendMode);\n\n        for (var i = 0, n = webGL.data.length; i < n; i++) {\n            webGLData = webGL.data[i];\n            var shaderTemp = webGLData.shader;\n\n            renderer.bindShader(shaderTemp);\n            shaderTemp.uniforms.translationMatrix = graphics.transform.worldTransform.toArray(true);\n            shaderTemp.uniforms.tint = (0, _utils.hex2rgb)(graphics.tint);\n            shaderTemp.uniforms.alpha = graphics.worldAlpha;\n\n            renderer.bindVao(webGLData.vao);\n            webGLData.vao.draw(gl.TRIANGLE_STRIP, webGLData.indices.length);\n        }\n    };\n\n    /**\n     * Updates the graphics object\n     *\n     * @private\n     * @param {PIXI.Graphics} graphics - The graphics object to update\n     */\n\n\n    GraphicsRenderer.prototype.updateGraphics = function updateGraphics(graphics) {\n        var gl = this.renderer.gl;\n\n        // get the contexts graphics object\n        var webGL = graphics._webGL[this.CONTEXT_UID];\n\n        // if the graphics object does not exist in the webGL context time to create it!\n        if (!webGL) {\n            webGL = graphics._webGL[this.CONTEXT_UID] = { lastIndex: 0, data: [], gl: gl, clearDirty: -1, dirty: -1 };\n        }\n\n        // flag the graphics as not dirty as we are about to update it...\n        webGL.dirty = graphics.dirty;\n\n        // if the user cleared the graphics object we will need to clear every object\n        if (graphics.clearDirty !== webGL.clearDirty) {\n            webGL.clearDirty = graphics.clearDirty;\n\n            // loop through and return all the webGLDatas to the object pool so than can be reused later on\n            for (var i = 0; i < webGL.data.length; i++) {\n                this.graphicsDataPool.push(webGL.data[i]);\n            }\n\n            // clear the array and reset the index..\n            webGL.data.length = 0;\n            webGL.lastIndex = 0;\n        }\n\n        var webGLData = void 0;\n\n        // loop through the graphics datas and construct each one..\n        // if the object is a complex fill then the new stencil buffer technique will be used\n        // other wise graphics objects will be pushed into a batch..\n        for (var _i = webGL.lastIndex; _i < graphics.graphicsData.length; _i++) {\n            var data = graphics.graphicsData[_i];\n\n            // TODO - this can be simplified\n            webGLData = this.getWebGLData(webGL, 0);\n\n            if (data.type === _const.SHAPES.POLY) {\n                (0, _buildPoly2.default)(data, webGLData);\n            }\n            if (data.type === _const.SHAPES.RECT) {\n                (0, _buildRectangle2.default)(data, webGLData);\n            } else if (data.type === _const.SHAPES.CIRC || data.type === _const.SHAPES.ELIP) {\n                (0, _buildCircle2.default)(data, webGLData);\n            } else if (data.type === _const.SHAPES.RREC) {\n                (0, _buildRoundedRectangle2.default)(data, webGLData);\n            }\n\n            webGL.lastIndex++;\n        }\n\n        this.renderer.bindVao(null);\n\n        // upload all the dirty data...\n        for (var _i2 = 0; _i2 < webGL.data.length; _i2++) {\n            webGLData = webGL.data[_i2];\n\n            if (webGLData.dirty) {\n                webGLData.upload();\n            }\n        }\n    };\n\n    /**\n     *\n     * @private\n     * @param {WebGLRenderingContext} gl - the current WebGL drawing context\n     * @param {number} type - TODO @Alvin\n     * @return {*} TODO\n     */\n\n\n    GraphicsRenderer.prototype.getWebGLData = function getWebGLData(gl, type) {\n        var webGLData = gl.data[gl.data.length - 1];\n\n        if (!webGLData || webGLData.points.length > 320000) {\n            webGLData = this.graphicsDataPool.pop() || new _WebGLGraphicsData2.default(this.renderer.gl, this.primitiveShader, this.renderer.state.attribsState);\n\n            webGLData.reset(type);\n            gl.data.push(webGLData);\n        }\n\n        webGLData.dirty = true;\n\n        return webGLData;\n    };\n\n    return GraphicsRenderer;\n}(_ObjectRenderer3.default);\n\nexports.default = GraphicsRenderer;\n\n\n_WebGLRenderer2.default.registerPlugin('graphics', GraphicsRenderer);\n//# sourceMappingURL=GraphicsRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/webgl/GraphicsRenderer.js\n// module id = 93\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * An object containing WebGL specific properties to be used by the WebGL renderer\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar WebGLGraphicsData = function () {\n  /**\n   * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n   * @param {PIXI.Shader} shader - The shader\n   * @param {object} attribsState - The state for the VAO\n   */\n  function WebGLGraphicsData(gl, shader, attribsState) {\n    _classCallCheck(this, WebGLGraphicsData);\n\n    /**\n     * The current WebGL drawing context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    // TODO does this need to be split before uploading??\n    /**\n     * An array of color components (r,g,b)\n     * @member {number[]}\n     */\n    this.color = [0, 0, 0]; // color split!\n\n    /**\n     * An array of points to draw\n     * @member {PIXI.Point[]}\n     */\n    this.points = [];\n\n    /**\n     * The indices of the vertices\n     * @member {number[]}\n     */\n    this.indices = [];\n    /**\n     * The main buffer\n     * @member {WebGLBuffer}\n     */\n    this.buffer = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl);\n\n    /**\n     * The index buffer\n     * @member {WebGLBuffer}\n     */\n    this.indexBuffer = _pixiGlCore2.default.GLBuffer.createIndexBuffer(gl);\n\n    /**\n     * Whether this graphics is dirty or not\n     * @member {boolean}\n     */\n    this.dirty = true;\n\n    this.glPoints = null;\n    this.glIndices = null;\n\n    /**\n     *\n     * @member {PIXI.Shader}\n     */\n    this.shader = shader;\n\n    this.vao = new _pixiGlCore2.default.VertexArrayObject(gl, attribsState).addIndex(this.indexBuffer).addAttribute(this.buffer, shader.attributes.aVertexPosition, gl.FLOAT, false, 4 * 6, 0).addAttribute(this.buffer, shader.attributes.aColor, gl.FLOAT, false, 4 * 6, 2 * 4);\n  }\n\n  /**\n   * Resets the vertices and the indices\n   */\n\n\n  WebGLGraphicsData.prototype.reset = function reset() {\n    this.points.length = 0;\n    this.indices.length = 0;\n  };\n\n  /**\n   * Binds the buffers and uploads the data\n   */\n\n\n  WebGLGraphicsData.prototype.upload = function upload() {\n    this.glPoints = new Float32Array(this.points);\n    this.buffer.upload(this.glPoints);\n\n    this.glIndices = new Uint16Array(this.indices);\n    this.indexBuffer.upload(this.glIndices);\n\n    this.dirty = false;\n  };\n\n  /**\n   * Empties all the data\n   */\n\n\n  WebGLGraphicsData.prototype.destroy = function destroy() {\n    this.color = null;\n    this.points = null;\n    this.indices = null;\n\n    this.vao.destroy();\n    this.buffer.destroy();\n    this.indexBuffer.destroy();\n\n    this.gl = null;\n\n    this.buffer = null;\n    this.indexBuffer = null;\n\n    this.glPoints = null;\n    this.glIndices = null;\n  };\n\n  return WebGLGraphicsData;\n}();\n\nexports.default = WebGLGraphicsData;\n//# sourceMappingURL=WebGLGraphicsData.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/webgl/WebGLGraphicsData.js\n// module id = 94\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Shader2 = require('../../../Shader');\n\nvar _Shader3 = _interopRequireDefault(_Shader2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * This shader is used to draw simple primitive shapes for {@link PIXI.Graphics}.\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.Shader\n */\nvar PrimitiveShader = function (_Shader) {\n    _inherits(PrimitiveShader, _Shader);\n\n    /**\n     * @param {WebGLRenderingContext} gl - The webgl shader manager this shader works for.\n     */\n    function PrimitiveShader(gl) {\n        _classCallCheck(this, PrimitiveShader);\n\n        return _possibleConstructorReturn(this, _Shader.call(this, gl,\n        // vertex shader\n        ['attribute vec2 aVertexPosition;', 'attribute vec4 aColor;', 'uniform mat3 translationMatrix;', 'uniform mat3 projectionMatrix;', 'uniform float alpha;', 'uniform vec3 tint;', 'varying vec4 vColor;', 'void main(void){', '   gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);', '   vColor = aColor * vec4(tint * alpha, alpha);', '}'].join('\\n'),\n        // fragment shader\n        ['varying vec4 vColor;', 'void main(void){', '   gl_FragColor = vColor;', '}'].join('\\n')));\n    }\n\n    return PrimitiveShader;\n}(_Shader3.default);\n\nexports.default = PrimitiveShader;\n//# sourceMappingURL=PrimitiveShader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/webgl/shaders/PrimitiveShader.js\n// module id = 95\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = buildCircle;\n\nvar _buildLine = require('./buildLine');\n\nvar _buildLine2 = _interopRequireDefault(_buildLine);\n\nvar _const = require('../../../const');\n\nvar _utils = require('../../../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Builds a circle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object to draw\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildCircle(graphicsData, webGLData) {\n    // need to convert points to a nice regular data\n    var circleData = graphicsData.shape;\n    var x = circleData.x;\n    var y = circleData.y;\n    var width = void 0;\n    var height = void 0;\n\n    // TODO - bit hacky??\n    if (graphicsData.type === _const.SHAPES.CIRC) {\n        width = circleData.radius;\n        height = circleData.radius;\n    } else {\n        width = circleData.width;\n        height = circleData.height;\n    }\n\n    var totalSegs = Math.floor(30 * Math.sqrt(circleData.radius)) || Math.floor(15 * Math.sqrt(circleData.width + circleData.height));\n\n    var seg = Math.PI * 2 / totalSegs;\n\n    if (graphicsData.fill) {\n        var color = (0, _utils.hex2rgb)(graphicsData.fillColor);\n        var alpha = graphicsData.fillAlpha;\n\n        var r = color[0] * alpha;\n        var g = color[1] * alpha;\n        var b = color[2] * alpha;\n\n        var verts = webGLData.points;\n        var indices = webGLData.indices;\n\n        var vecPos = verts.length / 6;\n\n        indices.push(vecPos);\n\n        for (var i = 0; i < totalSegs + 1; i++) {\n            verts.push(x, y, r, g, b, alpha);\n\n            verts.push(x + Math.sin(seg * i) * width, y + Math.cos(seg * i) * height, r, g, b, alpha);\n\n            indices.push(vecPos++, vecPos++);\n        }\n\n        indices.push(vecPos - 1);\n    }\n\n    if (graphicsData.lineWidth) {\n        var tempPoints = graphicsData.points;\n\n        graphicsData.points = [];\n\n        for (var _i = 0; _i < totalSegs + 1; _i++) {\n            graphicsData.points.push(x + Math.sin(seg * _i) * width, y + Math.cos(seg * _i) * height);\n        }\n\n        (0, _buildLine2.default)(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n}\n//# sourceMappingURL=buildCircle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/webgl/utils/buildCircle.js\n// module id = 96\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = buildPoly;\n\nvar _buildLine = require('./buildLine');\n\nvar _buildLine2 = _interopRequireDefault(_buildLine);\n\nvar _utils = require('../../../utils');\n\nvar _earcut = require('earcut');\n\nvar _earcut2 = _interopRequireDefault(_earcut);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Builds a polygon to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildPoly(graphicsData, webGLData) {\n    graphicsData.points = graphicsData.shape.points.slice();\n\n    var points = graphicsData.points;\n\n    if (graphicsData.fill && points.length >= 6) {\n        var holeArray = [];\n        // Process holes..\n        var holes = graphicsData.holes;\n\n        for (var i = 0; i < holes.length; i++) {\n            var hole = holes[i];\n\n            holeArray.push(points.length / 2);\n\n            points = points.concat(hole.points);\n        }\n\n        // get first and last point.. figure out the middle!\n        var verts = webGLData.points;\n        var indices = webGLData.indices;\n\n        var length = points.length / 2;\n\n        // sort color\n        var color = (0, _utils.hex2rgb)(graphicsData.fillColor);\n        var alpha = graphicsData.fillAlpha;\n        var r = color[0] * alpha;\n        var g = color[1] * alpha;\n        var b = color[2] * alpha;\n\n        var triangles = (0, _earcut2.default)(points, holeArray, 2);\n\n        if (!triangles) {\n            return;\n        }\n\n        var vertPos = verts.length / 6;\n\n        for (var _i = 0; _i < triangles.length; _i += 3) {\n            indices.push(triangles[_i] + vertPos);\n            indices.push(triangles[_i] + vertPos);\n            indices.push(triangles[_i + 1] + vertPos);\n            indices.push(triangles[_i + 2] + vertPos);\n            indices.push(triangles[_i + 2] + vertPos);\n        }\n\n        for (var _i2 = 0; _i2 < length; _i2++) {\n            verts.push(points[_i2 * 2], points[_i2 * 2 + 1], r, g, b, alpha);\n        }\n    }\n\n    if (graphicsData.lineWidth > 0) {\n        (0, _buildLine2.default)(graphicsData, webGLData);\n    }\n}\n//# sourceMappingURL=buildPoly.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/webgl/utils/buildPoly.js\n// module id = 97\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = buildRectangle;\n\nvar _buildLine = require('./buildLine');\n\nvar _buildLine2 = _interopRequireDefault(_buildLine);\n\nvar _utils = require('../../../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildRectangle(graphicsData, webGLData) {\n    // --- //\n    // need to convert points to a nice regular data\n    //\n    var rectData = graphicsData.shape;\n    var x = rectData.x;\n    var y = rectData.y;\n    var width = rectData.width;\n    var height = rectData.height;\n\n    if (graphicsData.fill) {\n        var color = (0, _utils.hex2rgb)(graphicsData.fillColor);\n        var alpha = graphicsData.fillAlpha;\n\n        var r = color[0] * alpha;\n        var g = color[1] * alpha;\n        var b = color[2] * alpha;\n\n        var verts = webGLData.points;\n        var indices = webGLData.indices;\n\n        var vertPos = verts.length / 6;\n\n        // start\n        verts.push(x, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x, y + height);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y + height);\n        verts.push(r, g, b, alpha);\n\n        // insert 2 dead triangles..\n        indices.push(vertPos, vertPos, vertPos + 1, vertPos + 2, vertPos + 3, vertPos + 3);\n    }\n\n    if (graphicsData.lineWidth) {\n        var tempPoints = graphicsData.points;\n\n        graphicsData.points = [x, y, x + width, y, x + width, y + height, x, y + height, x, y];\n\n        (0, _buildLine2.default)(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n}\n//# sourceMappingURL=buildRectangle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/webgl/utils/buildRectangle.js\n// module id = 98\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = buildRoundedRectangle;\n\nvar _earcut = require('earcut');\n\nvar _earcut2 = _interopRequireDefault(_earcut);\n\nvar _buildLine = require('./buildLine');\n\nvar _buildLine2 = _interopRequireDefault(_buildLine);\n\nvar _utils = require('../../../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Builds a rounded rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildRoundedRectangle(graphicsData, webGLData) {\n    var rrectData = graphicsData.shape;\n    var x = rrectData.x;\n    var y = rrectData.y;\n    var width = rrectData.width;\n    var height = rrectData.height;\n\n    var radius = rrectData.radius;\n\n    var recPoints = [];\n\n    recPoints.push(x, y + radius);\n    quadraticBezierCurve(x, y + height - radius, x, y + height, x + radius, y + height, recPoints);\n    quadraticBezierCurve(x + width - radius, y + height, x + width, y + height, x + width, y + height - radius, recPoints);\n    quadraticBezierCurve(x + width, y + radius, x + width, y, x + width - radius, y, recPoints);\n    quadraticBezierCurve(x + radius, y, x, y, x, y + radius + 0.0000000001, recPoints);\n\n    // this tiny number deals with the issue that occurs when points overlap and earcut fails to triangulate the item.\n    // TODO - fix this properly, this is not very elegant.. but it works for now.\n\n    if (graphicsData.fill) {\n        var color = (0, _utils.hex2rgb)(graphicsData.fillColor);\n        var alpha = graphicsData.fillAlpha;\n\n        var r = color[0] * alpha;\n        var g = color[1] * alpha;\n        var b = color[2] * alpha;\n\n        var verts = webGLData.points;\n        var indices = webGLData.indices;\n\n        var vecPos = verts.length / 6;\n\n        var triangles = (0, _earcut2.default)(recPoints, null, 2);\n\n        for (var i = 0, j = triangles.length; i < j; i += 3) {\n            indices.push(triangles[i] + vecPos);\n            indices.push(triangles[i] + vecPos);\n            indices.push(triangles[i + 1] + vecPos);\n            indices.push(triangles[i + 2] + vecPos);\n            indices.push(triangles[i + 2] + vecPos);\n        }\n\n        for (var _i = 0, _j = recPoints.length; _i < _j; _i++) {\n            verts.push(recPoints[_i], recPoints[++_i], r, g, b, alpha);\n        }\n    }\n\n    if (graphicsData.lineWidth) {\n        var tempPoints = graphicsData.points;\n\n        graphicsData.points = recPoints;\n\n        (0, _buildLine2.default)(graphicsData, webGLData);\n\n        graphicsData.points = tempPoints;\n    }\n}\n\n/**\n * Calculate the points for a quadratic bezier curve. (helper function..)\n * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {number} fromX - Origin point x\n * @param {number} fromY - Origin point x\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number[]} [out=[]] - The output array to add points into. If not passed, a new array is created.\n * @return {number[]} an array of points\n */\nfunction quadraticBezierCurve(fromX, fromY, cpX, cpY, toX, toY) {\n    var out = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n\n    var n = 20;\n    var points = out;\n\n    var xa = 0;\n    var ya = 0;\n    var xb = 0;\n    var yb = 0;\n    var x = 0;\n    var y = 0;\n\n    function getPt(n1, n2, perc) {\n        var diff = n2 - n1;\n\n        return n1 + diff * perc;\n    }\n\n    for (var i = 0, j = 0; i <= n; ++i) {\n        j = i / n;\n\n        // The Green Line\n        xa = getPt(fromX, cpX, j);\n        ya = getPt(fromY, cpY, j);\n        xb = getPt(cpX, toX, j);\n        yb = getPt(cpY, toY, j);\n\n        // The Black Dot\n        x = getPt(xa, xb, j);\n        y = getPt(ya, yb, j);\n\n        points.push(x, y);\n    }\n\n    return points;\n}\n//# sourceMappingURL=buildRoundedRectangle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/graphics/webgl/utils/buildRoundedRectangle.js\n// module id = 99\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Rectangle = require('./Rectangle');\n\nvar _Rectangle2 = _interopRequireDefault(_Rectangle);\n\nvar _const = require('../../const');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The Circle object can be used to specify a hit area for displayObjects\n *\n * @class\n * @memberof PIXI\n */\nvar Circle = function () {\n  /**\n   * @param {number} [x=0] - The X coordinate of the center of this circle\n   * @param {number} [y=0] - The Y coordinate of the center of this circle\n   * @param {number} [radius=0] - The radius of the circle\n   */\n  function Circle() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Circle);\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.x = x;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.y = y;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.radius = radius;\n\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     *\n     * @member {number}\n     * @readOnly\n     * @default PIXI.SHAPES.CIRC\n     * @see PIXI.SHAPES\n     */\n    this.type = _const.SHAPES.CIRC;\n  }\n\n  /**\n   * Creates a clone of this Circle instance\n   *\n   * @return {PIXI.Circle} a copy of the Circle\n   */\n\n\n  Circle.prototype.clone = function clone() {\n    return new Circle(this.x, this.y, this.radius);\n  };\n\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle\n   *\n   * @param {number} x - The X coordinate of the point to test\n   * @param {number} y - The Y coordinate of the point to test\n   * @return {boolean} Whether the x/y coordinates are within this Circle\n   */\n\n\n  Circle.prototype.contains = function contains(x, y) {\n    if (this.radius <= 0) {\n      return false;\n    }\n\n    var r2 = this.radius * this.radius;\n    var dx = this.x - x;\n    var dy = this.y - y;\n\n    dx *= dx;\n    dy *= dy;\n\n    return dx + dy <= r2;\n  };\n\n  /**\n  * Returns the framing rectangle of the circle as a Rectangle object\n  *\n  * @return {PIXI.Rectangle} the framing rectangle\n  */\n\n\n  Circle.prototype.getBounds = function getBounds() {\n    return new _Rectangle2.default(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n  };\n\n  return Circle;\n}();\n\nexports.default = Circle;\n//# sourceMappingURL=Circle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/math/shapes/Circle.js\n// module id = 100\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Rectangle = require('./Rectangle');\n\nvar _Rectangle2 = _interopRequireDefault(_Rectangle);\n\nvar _const = require('../../const');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The Ellipse object can be used to specify a hit area for displayObjects\n *\n * @class\n * @memberof PIXI\n */\nvar Ellipse = function () {\n  /**\n   * @param {number} [x=0] - The X coordinate of the center of this circle\n   * @param {number} [y=0] - The Y coordinate of the center of this circle\n   * @param {number} [width=0] - The half width of this ellipse\n   * @param {number} [height=0] - The half height of this ellipse\n   */\n  function Ellipse() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    _classCallCheck(this, Ellipse);\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.x = x;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.y = y;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.width = width;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.height = height;\n\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     *\n     * @member {number}\n     * @readOnly\n     * @default PIXI.SHAPES.ELIP\n     * @see PIXI.SHAPES\n     */\n    this.type = _const.SHAPES.ELIP;\n  }\n\n  /**\n   * Creates a clone of this Ellipse instance\n   *\n   * @return {PIXI.Ellipse} a copy of the ellipse\n   */\n\n\n  Ellipse.prototype.clone = function clone() {\n    return new Ellipse(this.x, this.y, this.width, this.height);\n  };\n\n  /**\n   * Checks whether the x and y coordinates given are contained within this ellipse\n   *\n   * @param {number} x - The X coordinate of the point to test\n   * @param {number} y - The Y coordinate of the point to test\n   * @return {boolean} Whether the x/y coords are within this ellipse\n   */\n\n\n  Ellipse.prototype.contains = function contains(x, y) {\n    if (this.width <= 0 || this.height <= 0) {\n      return false;\n    }\n\n    // normalize the coords to an ellipse with center 0,0\n    var normx = (x - this.x) / this.width;\n    var normy = (y - this.y) / this.height;\n\n    normx *= normx;\n    normy *= normy;\n\n    return normx + normy <= 1;\n  };\n\n  /**\n   * Returns the framing rectangle of the ellipse as a Rectangle object\n   *\n   * @return {PIXI.Rectangle} the framing rectangle\n   */\n\n\n  Ellipse.prototype.getBounds = function getBounds() {\n    return new _Rectangle2.default(this.x - this.width, this.y - this.height, this.width, this.height);\n  };\n\n  return Ellipse;\n}();\n\nexports.default = Ellipse;\n//# sourceMappingURL=Ellipse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/math/shapes/Ellipse.js\n// module id = 101\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Point = require('../Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _const = require('../../const');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class\n * @memberof PIXI\n */\nvar Polygon = function () {\n    /**\n     * @param {PIXI.Point[]|number[]} points - This can be an array of Points\n     *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n     *  the arguments passed can be all the points of the polygon e.g.\n     *  `new PIXI.Polygon(new PIXI.Point(), new PIXI.Point(), ...)`, or the arguments passed can be flat\n     *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n     */\n    function Polygon() {\n        for (var _len = arguments.length, points = Array(_len), _key = 0; _key < _len; _key++) {\n            points[_key] = arguments[_key];\n        }\n\n        _classCallCheck(this, Polygon);\n\n        if (Array.isArray(points[0])) {\n            points = points[0];\n        }\n\n        // if this is an array of points, convert it to a flat array of numbers\n        if (points[0] instanceof _Point2.default) {\n            var p = [];\n\n            for (var i = 0, il = points.length; i < il; i++) {\n                p.push(points[i].x, points[i].y);\n            }\n\n            points = p;\n        }\n\n        this.closed = true;\n\n        /**\n         * An array of the points of this polygon\n         *\n         * @member {number[]}\n         */\n        this.points = points;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.POLY\n         * @see PIXI.SHAPES\n         */\n        this.type = _const.SHAPES.POLY;\n    }\n\n    /**\n     * Creates a clone of this polygon\n     *\n     * @return {PIXI.Polygon} a copy of the polygon\n     */\n\n\n    Polygon.prototype.clone = function clone() {\n        return new Polygon(this.points.slice());\n    };\n\n    /**\n     * Closes the polygon, adding points if necessary.\n     *\n     */\n\n\n    Polygon.prototype.close = function close() {\n        var points = this.points;\n\n        // close the poly if the value is true!\n        if (points[0] !== points[points.length - 2] || points[1] !== points[points.length - 1]) {\n            points.push(points[0], points[1]);\n        }\n    };\n\n    /**\n     * Checks whether the x and y coordinates passed to this function are contained within this polygon\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this polygon\n     */\n\n\n    Polygon.prototype.contains = function contains(x, y) {\n        var inside = false;\n\n        // use some raycasting to test hits\n        // https://github.com/substack/point-in-polygon/blob/master/index.js\n        var length = this.points.length / 2;\n\n        for (var i = 0, j = length - 1; i < length; j = i++) {\n            var xi = this.points[i * 2];\n            var yi = this.points[i * 2 + 1];\n            var xj = this.points[j * 2];\n            var yj = this.points[j * 2 + 1];\n            var intersect = yi > y !== yj > y && x < (xj - xi) * ((y - yi) / (yj - yi)) + xi;\n\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n\n        return inside;\n    };\n\n    return Polygon;\n}();\n\nexports.default = Polygon;\n//# sourceMappingURL=Polygon.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/math/shapes/Polygon.js\n// module id = 102\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _const = require('../../const');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The Rounded Rectangle object is an area that has nice rounded corners, as indicated by its\n * top-left corner point (x, y) and by its width and its height and its radius.\n *\n * @class\n * @memberof PIXI\n */\nvar RoundedRectangle = function () {\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [width=0] - The overall width of this rounded rectangle\n     * @param {number} [height=0] - The overall height of this rounded rectangle\n     * @param {number} [radius=20] - Controls the radius of the rounded corners\n     */\n    function RoundedRectangle() {\n        var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n        var radius = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 20;\n\n        _classCallCheck(this, RoundedRectangle);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = width;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = height;\n\n        /**\n         * @member {number}\n         * @default 20\n         */\n        this.radius = radius;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readonly\n         * @default PIXI.SHAPES.RREC\n         * @see PIXI.SHAPES\n         */\n        this.type = _const.SHAPES.RREC;\n    }\n\n    /**\n     * Creates a clone of this Rounded Rectangle\n     *\n     * @return {PIXI.RoundedRectangle} a copy of the rounded rectangle\n     */\n\n\n    RoundedRectangle.prototype.clone = function clone() {\n        return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n    };\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rounded Rectangle\n     */\n\n\n    RoundedRectangle.prototype.contains = function contains(x, y) {\n        if (this.width <= 0 || this.height <= 0) {\n            return false;\n        }\n        if (x >= this.x && x <= this.x + this.width) {\n            if (y >= this.y && y <= this.y + this.height) {\n                if (y >= this.y + this.radius && y <= this.y + this.height - this.radius || x >= this.x + this.radius && x <= this.x + this.width - this.radius) {\n                    return true;\n                }\n                var dx = x - (this.x + this.radius);\n                var dy = y - (this.y + this.radius);\n                var radius2 = this.radius * this.radius;\n\n                if (dx * dx + dy * dy <= radius2) {\n                    return true;\n                }\n                dx = x - (this.x + this.width - this.radius);\n                if (dx * dx + dy * dy <= radius2) {\n                    return true;\n                }\n                dy = y - (this.y + this.height - this.radius);\n                if (dx * dx + dy * dy <= radius2) {\n                    return true;\n                }\n                dx = x - (this.x + this.radius);\n                if (dx * dx + dy * dy <= radius2) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    return RoundedRectangle;\n}();\n\nexports.default = RoundedRectangle;\n//# sourceMappingURL=RoundedRectangle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/math/shapes/RoundedRectangle.js\n// module id = 103\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _const = require('../../../const');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A set of functions used to handle masking.\n *\n * @class\n * @memberof PIXI\n */\nvar CanvasMaskManager = function () {\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n     */\n    function CanvasMaskManager(renderer) {\n        _classCallCheck(this, CanvasMaskManager);\n\n        this.renderer = renderer;\n    }\n\n    /**\n     * This method adds it to the current stack of masks.\n     *\n     * @param {object} maskData - the maskData that will be pushed\n     */\n\n\n    CanvasMaskManager.prototype.pushMask = function pushMask(maskData) {\n        var renderer = this.renderer;\n\n        renderer.context.save();\n\n        var cacheAlpha = maskData.alpha;\n        var transform = maskData.transform.worldTransform;\n        var resolution = renderer.resolution;\n\n        renderer.context.setTransform(transform.a * resolution, transform.b * resolution, transform.c * resolution, transform.d * resolution, transform.tx * resolution, transform.ty * resolution);\n\n        // TODO suport sprite alpha masks??\n        // lots of effort required. If demand is great enough..\n        if (!maskData._texture) {\n            this.renderGraphicsShape(maskData);\n            renderer.context.clip();\n        }\n\n        maskData.worldAlpha = cacheAlpha;\n    };\n\n    /**\n     * Renders a PIXI.Graphics shape.\n     *\n     * @param {PIXI.Graphics} graphics - The object to render.\n     */\n\n\n    CanvasMaskManager.prototype.renderGraphicsShape = function renderGraphicsShape(graphics) {\n        var context = this.renderer.context;\n        var len = graphics.graphicsData.length;\n\n        if (len === 0) {\n            return;\n        }\n\n        context.beginPath();\n\n        for (var i = 0; i < len; i++) {\n            var data = graphics.graphicsData[i];\n            var shape = data.shape;\n\n            if (data.type === _const.SHAPES.POLY) {\n                var points = shape.points;\n\n                context.moveTo(points[0], points[1]);\n\n                for (var j = 1; j < points.length / 2; j++) {\n                    context.lineTo(points[j * 2], points[j * 2 + 1]);\n                }\n\n                // if the first and last point are the same close the path - much neater :)\n                if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1]) {\n                    context.closePath();\n                }\n            } else if (data.type === _const.SHAPES.RECT) {\n                context.rect(shape.x, shape.y, shape.width, shape.height);\n                context.closePath();\n            } else if (data.type === _const.SHAPES.CIRC) {\n                // TODO - need to be Undefined!\n                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n                context.closePath();\n            } else if (data.type === _const.SHAPES.ELIP) {\n                // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n                var w = shape.width * 2;\n                var h = shape.height * 2;\n\n                var x = shape.x - w / 2;\n                var y = shape.y - h / 2;\n\n                var kappa = 0.5522848;\n                var ox = w / 2 * kappa; // control point offset horizontal\n                var oy = h / 2 * kappa; // control point offset vertical\n                var xe = x + w; // x-end\n                var ye = y + h; // y-end\n                var xm = x + w / 2; // x-middle\n                var ym = y + h / 2; // y-middle\n\n                context.moveTo(x, ym);\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n                context.closePath();\n            } else if (data.type === _const.SHAPES.RREC) {\n                var rx = shape.x;\n                var ry = shape.y;\n                var width = shape.width;\n                var height = shape.height;\n                var radius = shape.radius;\n\n                var maxRadius = Math.min(width, height) / 2 | 0;\n\n                radius = radius > maxRadius ? maxRadius : radius;\n\n                context.moveTo(rx, ry + radius);\n                context.lineTo(rx, ry + height - radius);\n                context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n                context.lineTo(rx + width - radius, ry + height);\n                context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n                context.lineTo(rx + width, ry + radius);\n                context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n                context.lineTo(rx + radius, ry);\n                context.quadraticCurveTo(rx, ry, rx, ry + radius);\n                context.closePath();\n            }\n        }\n    };\n\n    /**\n     * Restores the current drawing context to the state it was before the mask was applied.\n     *\n     * @param {PIXI.CanvasRenderer} renderer - The renderer context to use.\n     */\n\n\n    CanvasMaskManager.prototype.popMask = function popMask(renderer) {\n        renderer.context.restore();\n    };\n\n    /**\n     * Destroys this canvas mask manager.\n     *\n     */\n\n\n    CanvasMaskManager.prototype.destroy = function destroy() {\n        /* empty */\n    };\n\n    return CanvasMaskManager;\n}();\n\nexports.default = CanvasMaskManager;\n//# sourceMappingURL=CanvasMaskManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/canvas/utils/CanvasMaskManager.js\n// module id = 104\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = mapCanvasBlendModesToPixi;\n\nvar _const = require('../../../const');\n\nvar _canUseNewCanvasBlendModes = require('./canUseNewCanvasBlendModes');\n\nvar _canUseNewCanvasBlendModes2 = _interopRequireDefault(_canUseNewCanvasBlendModes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Maps blend combinations to Canvas.\n *\n * @memberof PIXI\n * @function mapCanvasBlendModesToPixi\n * @private\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nfunction mapCanvasBlendModesToPixi() {\n    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    if ((0, _canUseNewCanvasBlendModes2.default)()) {\n        array[_const.BLEND_MODES.NORMAL] = 'source-over';\n        array[_const.BLEND_MODES.ADD] = 'lighter'; // IS THIS OK???\n        array[_const.BLEND_MODES.MULTIPLY] = 'multiply';\n        array[_const.BLEND_MODES.SCREEN] = 'screen';\n        array[_const.BLEND_MODES.OVERLAY] = 'overlay';\n        array[_const.BLEND_MODES.DARKEN] = 'darken';\n        array[_const.BLEND_MODES.LIGHTEN] = 'lighten';\n        array[_const.BLEND_MODES.COLOR_DODGE] = 'color-dodge';\n        array[_const.BLEND_MODES.COLOR_BURN] = 'color-burn';\n        array[_const.BLEND_MODES.HARD_LIGHT] = 'hard-light';\n        array[_const.BLEND_MODES.SOFT_LIGHT] = 'soft-light';\n        array[_const.BLEND_MODES.DIFFERENCE] = 'difference';\n        array[_const.BLEND_MODES.EXCLUSION] = 'exclusion';\n        array[_const.BLEND_MODES.HUE] = 'hue';\n        array[_const.BLEND_MODES.SATURATION] = 'saturate';\n        array[_const.BLEND_MODES.COLOR] = 'color';\n        array[_const.BLEND_MODES.LUMINOSITY] = 'luminosity';\n    } else {\n        // this means that the browser does not support the cool new blend modes in canvas 'cough' ie 'cough'\n        array[_const.BLEND_MODES.NORMAL] = 'source-over';\n        array[_const.BLEND_MODES.ADD] = 'lighter'; // IS THIS OK???\n        array[_const.BLEND_MODES.MULTIPLY] = 'source-over';\n        array[_const.BLEND_MODES.SCREEN] = 'source-over';\n        array[_const.BLEND_MODES.OVERLAY] = 'source-over';\n        array[_const.BLEND_MODES.DARKEN] = 'source-over';\n        array[_const.BLEND_MODES.LIGHTEN] = 'source-over';\n        array[_const.BLEND_MODES.COLOR_DODGE] = 'source-over';\n        array[_const.BLEND_MODES.COLOR_BURN] = 'source-over';\n        array[_const.BLEND_MODES.HARD_LIGHT] = 'source-over';\n        array[_const.BLEND_MODES.SOFT_LIGHT] = 'source-over';\n        array[_const.BLEND_MODES.DIFFERENCE] = 'source-over';\n        array[_const.BLEND_MODES.EXCLUSION] = 'source-over';\n        array[_const.BLEND_MODES.HUE] = 'source-over';\n        array[_const.BLEND_MODES.SATURATION] = 'source-over';\n        array[_const.BLEND_MODES.COLOR] = 'source-over';\n        array[_const.BLEND_MODES.LUMINOSITY] = 'source-over';\n    }\n\n    return array;\n}\n//# sourceMappingURL=mapCanvasBlendModesToPixi.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/canvas/utils/mapCanvasBlendModesToPixi.js\n// module id = 105\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _const = require('../../const');\n\nvar _settings = require('../../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GC_MODE = _settings2.default.GC_MODE,\n    GC_MAX_IDLE = _settings2.default.GC_MAX_IDLE,\n    GC_MAX_CHECK_COUNT = _settings2.default.GC_MAX_CHECK_COUNT;\n\n/**\n * TextureGarbageCollector. This class manages the GPU and ensures that it does not get clogged\n * up with textures that are no longer being used.\n *\n * @class\n * @memberof PIXI\n */\n\nvar TextureGarbageCollector = function () {\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    function TextureGarbageCollector(renderer) {\n        _classCallCheck(this, TextureGarbageCollector);\n\n        this.renderer = renderer;\n\n        this.count = 0;\n        this.checkCount = 0;\n        this.maxIdle = GC_MAX_IDLE;\n        this.checkCountMax = GC_MAX_CHECK_COUNT;\n        this.mode = GC_MODE;\n    }\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n\n\n    TextureGarbageCollector.prototype.update = function update() {\n        this.count++;\n\n        if (this.mode === _const.GC_MODES.MANUAL) {\n            return;\n        }\n\n        this.checkCount++;\n\n        if (this.checkCount > this.checkCountMax) {\n            this.checkCount = 0;\n\n            this.run();\n        }\n    };\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n\n\n    TextureGarbageCollector.prototype.run = function run() {\n        var tm = this.renderer.textureManager;\n        var managedTextures = tm._managedTextures;\n        var wasRemoved = false;\n\n        for (var i = 0; i < managedTextures.length; i++) {\n            var texture = managedTextures[i];\n\n            // only supports non generated textures at the moment!\n            if (!texture._glRenderTargets && this.count - texture.touched > this.maxIdle) {\n                tm.destroyTexture(texture, true);\n                managedTextures[i] = null;\n                wasRemoved = true;\n            }\n        }\n\n        if (wasRemoved) {\n            var j = 0;\n\n            for (var _i = 0; _i < managedTextures.length; _i++) {\n                if (managedTextures[_i] !== null) {\n                    managedTextures[j++] = managedTextures[_i];\n                }\n            }\n\n            managedTextures.length = j;\n        }\n    };\n\n    /**\n     * Removes all the textures within the specified displayObject and its children from the GPU\n     *\n     * @param {PIXI.DisplayObject} displayObject - the displayObject to remove the textures from.\n     */\n\n\n    TextureGarbageCollector.prototype.unload = function unload(displayObject) {\n        var tm = this.renderer.textureManager;\n\n        if (displayObject._texture) {\n            tm.destroyTexture(displayObject._texture, true);\n        }\n\n        for (var i = displayObject.children.length - 1; i >= 0; i--) {\n            this.unload(displayObject.children[i]);\n        }\n    };\n\n    return TextureGarbageCollector;\n}();\n\nexports.default = TextureGarbageCollector;\n//# sourceMappingURL=TextureGarbageCollector.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/TextureGarbageCollector.js\n// module id = 106\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nvar _const = require('../../const');\n\nvar _RenderTarget = require('./utils/RenderTarget');\n\nvar _RenderTarget2 = _interopRequireDefault(_RenderTarget);\n\nvar _utils = require('../../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Helper class to create a webGL Texture\n *\n * @class\n * @memberof PIXI\n */\nvar TextureManager = function () {\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    function TextureManager(renderer) {\n        _classCallCheck(this, TextureManager);\n\n        /**\n         * A reference to the current renderer\n         *\n         * @member {PIXI.WebGLRenderer}\n         */\n        this.renderer = renderer;\n\n        /**\n         * The current WebGL rendering context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = renderer.gl;\n\n        /**\n         * Track textures in the renderer so we can no longer listen to them on destruction.\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this._managedTextures = [];\n    }\n\n    /**\n     * Binds a texture.\n     *\n     */\n\n\n    TextureManager.prototype.bindTexture = function bindTexture() {}\n    // empty\n\n\n    /**\n     * Gets a texture.\n     *\n     */\n    ;\n\n    TextureManager.prototype.getTexture = function getTexture() {}\n    // empty\n\n\n    /**\n     * Updates and/or Creates a WebGL texture for the renderer's context.\n     *\n     * @param {PIXI.BaseTexture|PIXI.Texture} texture - the texture to update\n     * @param {Number} location - the location the texture will be bound to.\n     * @return {GLTexture} The gl texture.\n     */\n    ;\n\n    TextureManager.prototype.updateTexture = function updateTexture(texture, location) {\n        // assume it good!\n        // texture = texture.baseTexture || texture;\n        location = location || 0;\n\n        var gl = this.gl;\n\n        var isRenderTexture = !!texture._glRenderTargets;\n\n        if (!texture.hasLoaded) {\n            return null;\n        }\n\n        gl.activeTexture(gl.TEXTURE0 + location);\n\n        var glTexture = texture._glTextures[this.renderer.CONTEXT_UID];\n\n        if (!glTexture) {\n            if (isRenderTexture) {\n                var renderTarget = new _RenderTarget2.default(this.gl, texture.width, texture.height, texture.scaleMode, texture.resolution);\n\n                renderTarget.resize(texture.width, texture.height);\n                texture._glRenderTargets[this.renderer.CONTEXT_UID] = renderTarget;\n                glTexture = renderTarget.texture;\n            } else {\n                glTexture = new _pixiGlCore.GLTexture(this.gl, null, null, null, null);\n                glTexture.bind(location);\n                glTexture.premultiplyAlpha = true;\n                glTexture.upload(texture.source);\n            }\n\n            texture._glTextures[this.renderer.CONTEXT_UID] = glTexture;\n\n            texture.on('update', this.updateTexture, this);\n            texture.on('dispose', this.destroyTexture, this);\n\n            this._managedTextures.push(texture);\n\n            if (texture.isPowerOfTwo) {\n                if (texture.mipmap) {\n                    glTexture.enableMipmap();\n                }\n\n                if (texture.wrapMode === _const.WRAP_MODES.CLAMP) {\n                    glTexture.enableWrapClamp();\n                } else if (texture.wrapMode === _const.WRAP_MODES.REPEAT) {\n                    glTexture.enableWrapRepeat();\n                } else {\n                    glTexture.enableWrapMirrorRepeat();\n                }\n            } else {\n                glTexture.enableWrapClamp();\n            }\n\n            if (texture.scaleMode === _const.SCALE_MODES.NEAREST) {\n                glTexture.enableNearestScaling();\n            } else {\n                glTexture.enableLinearScaling();\n            }\n        }\n        // the texture already exists so we only need to update it..\n        else if (isRenderTexture) {\n                texture._glRenderTargets[this.renderer.CONTEXT_UID].resize(texture.width, texture.height);\n            } else {\n                glTexture.upload(texture.source);\n            }\n\n        this.renderer.boundTextures[location] = texture;\n\n        return glTexture;\n    };\n\n    /**\n     * Deletes the texture from WebGL\n     *\n     * @param {PIXI.BaseTexture|PIXI.Texture} texture - the texture to destroy\n     * @param {boolean} [skipRemove=false] - Whether to skip removing the texture from the TextureManager.\n     */\n\n\n    TextureManager.prototype.destroyTexture = function destroyTexture(texture, skipRemove) {\n        texture = texture.baseTexture || texture;\n\n        if (!texture.hasLoaded) {\n            return;\n        }\n\n        if (texture._glTextures[this.renderer.CONTEXT_UID]) {\n            this.renderer.unbindTexture(texture);\n\n            texture._glTextures[this.renderer.CONTEXT_UID].destroy();\n            texture.off('update', this.updateTexture, this);\n            texture.off('dispose', this.destroyTexture, this);\n\n            delete texture._glTextures[this.renderer.CONTEXT_UID];\n\n            if (!skipRemove) {\n                var i = this._managedTextures.indexOf(texture);\n\n                if (i !== -1) {\n                    (0, _utils.removeItems)(this._managedTextures, i, 1);\n                }\n            }\n        }\n    };\n\n    /**\n     * Deletes all the textures from WebGL\n     */\n\n\n    TextureManager.prototype.removeAll = function removeAll() {\n        // empty all the old gl textures as they are useless now\n        for (var i = 0; i < this._managedTextures.length; ++i) {\n            var texture = this._managedTextures[i];\n\n            if (texture._glTextures[this.renderer.CONTEXT_UID]) {\n                delete texture._glTextures[this.renderer.CONTEXT_UID];\n            }\n        }\n    };\n\n    /**\n     * Destroys this manager and removes all its textures\n     */\n\n\n    TextureManager.prototype.destroy = function destroy() {\n        // destroy managed textures\n        for (var i = 0; i < this._managedTextures.length; ++i) {\n            var texture = this._managedTextures[i];\n\n            this.destroyTexture(texture, true);\n\n            texture.off('update', this.updateTexture, this);\n            texture.off('dispose', this.destroyTexture, this);\n        }\n\n        this._managedTextures = null;\n    };\n\n    return TextureManager;\n}();\n\nexports.default = TextureManager;\n//# sourceMappingURL=TextureManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/TextureManager.js\n// module id = 107\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _mapWebGLBlendModesToPixi = require('./utils/mapWebGLBlendModesToPixi');\n\nvar _mapWebGLBlendModesToPixi2 = _interopRequireDefault(_mapWebGLBlendModesToPixi);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BLEND = 0;\nvar DEPTH_TEST = 1;\nvar FRONT_FACE = 2;\nvar CULL_FACE = 3;\nvar BLEND_FUNC = 4;\n\n/**\n * A WebGL state machines\n *\n * @memberof PIXI\n * @class\n */\n\nvar WebGLState = function () {\n    /**\n     * @param {WebGLRenderingContext} gl - The current WebGL rendering context\n     */\n    function WebGLState(gl) {\n        _classCallCheck(this, WebGLState);\n\n        /**\n         * The current active state\n         *\n         * @member {Uint8Array}\n         */\n        this.activeState = new Uint8Array(16);\n\n        /**\n         * The default state\n         *\n         * @member {Uint8Array}\n         */\n        this.defaultState = new Uint8Array(16);\n\n        // default blend mode..\n        this.defaultState[0] = 1;\n\n        /**\n         * The current state index in the stack\n         *\n         * @member {number}\n         * @private\n         */\n        this.stackIndex = 0;\n\n        /**\n         * The stack holding all the different states\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this.stack = [];\n\n        /**\n         * The current WebGL rendering context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        this.maxAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n        this.attribState = {\n            tempAttribState: new Array(this.maxAttribs),\n            attribState: new Array(this.maxAttribs)\n        };\n\n        this.blendModes = (0, _mapWebGLBlendModesToPixi2.default)(gl);\n\n        // check we have vao..\n        this.nativeVaoExtension = gl.getExtension('OES_vertex_array_object') || gl.getExtension('MOZ_OES_vertex_array_object') || gl.getExtension('WEBKIT_OES_vertex_array_object');\n    }\n\n    /**\n     * Pushes a new active state\n     */\n\n\n    WebGLState.prototype.push = function push() {\n        // next state..\n        var state = this.stack[++this.stackIndex];\n\n        if (!state) {\n            state = this.stack[this.stackIndex] = new Uint8Array(16);\n        }\n\n        // copy state..\n        // set active state so we can force overrides of gl state\n        for (var i = 0; i < this.activeState.length; i++) {\n            this.activeState[i] = state[i];\n        }\n    };\n\n    /**\n     * Pops a state out\n     */\n\n\n    WebGLState.prototype.pop = function pop() {\n        var state = this.stack[--this.stackIndex];\n\n        this.setState(state);\n    };\n\n    /**\n     * Sets the current state\n     *\n     * @param {*} state - The state to set.\n     */\n\n\n    WebGLState.prototype.setState = function setState(state) {\n        this.setBlend(state[BLEND]);\n        this.setDepthTest(state[DEPTH_TEST]);\n        this.setFrontFace(state[FRONT_FACE]);\n        this.setCullFace(state[CULL_FACE]);\n        this.setBlendMode(state[BLEND_FUNC]);\n    };\n\n    /**\n     * Enables or disabled blending.\n     *\n     * @param {boolean} value - Turn on or off webgl blending.\n     */\n\n\n    WebGLState.prototype.setBlend = function setBlend(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[BLEND] === value) {\n            return;\n        }\n\n        this.activeState[BLEND] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.BLEND);\n    };\n\n    /**\n     * Sets the blend mode.\n     *\n     * @param {number} value - The blend mode to set to.\n     */\n\n\n    WebGLState.prototype.setBlendMode = function setBlendMode(value) {\n        if (value === this.activeState[BLEND_FUNC]) {\n            return;\n        }\n\n        this.activeState[BLEND_FUNC] = value;\n\n        this.gl.blendFunc(this.blendModes[value][0], this.blendModes[value][1]);\n    };\n\n    /**\n     * Sets whether to enable or disable depth test.\n     *\n     * @param {boolean} value - Turn on or off webgl depth testing.\n     */\n\n\n    WebGLState.prototype.setDepthTest = function setDepthTest(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[DEPTH_TEST] === value) {\n            return;\n        }\n\n        this.activeState[DEPTH_TEST] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.DEPTH_TEST);\n    };\n\n    /**\n     * Sets whether to enable or disable cull face.\n     *\n     * @param {boolean} value - Turn on or off webgl cull face.\n     */\n\n\n    WebGLState.prototype.setCullFace = function setCullFace(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[CULL_FACE] === value) {\n            return;\n        }\n\n        this.activeState[CULL_FACE] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.CULL_FACE);\n    };\n\n    /**\n     * Sets the gl front face.\n     *\n     * @param {boolean} value - true is clockwise and false is counter-clockwise\n     */\n\n\n    WebGLState.prototype.setFrontFace = function setFrontFace(value) {\n        value = value ? 1 : 0;\n\n        if (this.activeState[FRONT_FACE] === value) {\n            return;\n        }\n\n        this.activeState[FRONT_FACE] = value;\n        this.gl.frontFace(this.gl[value ? 'CW' : 'CCW']);\n    };\n\n    /**\n     * Disables all the vaos in use\n     *\n     */\n\n\n    WebGLState.prototype.resetAttributes = function resetAttributes() {\n        for (var i = 0; i < this.attribState.tempAttribState.length; i++) {\n            this.attribState.tempAttribState[i] = 0;\n        }\n\n        for (var _i = 0; _i < this.attribState.attribState.length; _i++) {\n            this.attribState.attribState[_i] = 0;\n        }\n\n        // im going to assume one is always active for performance reasons.\n        for (var _i2 = 1; _i2 < this.maxAttribs; _i2++) {\n            this.gl.disableVertexAttribArray(_i2);\n        }\n    };\n\n    // used\n    /**\n     * Resets all the logic and disables the vaos\n     */\n\n\n    WebGLState.prototype.resetToDefault = function resetToDefault() {\n        // unbind any VAO if they exist..\n        if (this.nativeVaoExtension) {\n            this.nativeVaoExtension.bindVertexArrayOES(null);\n        }\n\n        // reset all attributes..\n        this.resetAttributes();\n\n        // set active state so we can force overrides of gl state\n        for (var i = 0; i < this.activeState.length; ++i) {\n            this.activeState[i] = 32;\n        }\n\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        this.setState(this.defaultState);\n    };\n\n    return WebGLState;\n}();\n\nexports.default = WebGLState;\n//# sourceMappingURL=WebGLState.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/WebGLState.js\n// module id = 108\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = extractUniformsFromSrc;\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultValue = _pixiGlCore2.default.shader.defaultValue;\n\nfunction extractUniformsFromSrc(vertexSrc, fragmentSrc, mask) {\n    var vertUniforms = extractUniformsFromString(vertexSrc, mask);\n    var fragUniforms = extractUniformsFromString(fragmentSrc, mask);\n\n    return Object.assign(vertUniforms, fragUniforms);\n}\n\nfunction extractUniformsFromString(string) {\n    var maskRegex = new RegExp('^(projectionMatrix|uSampler|filterArea)$');\n\n    var uniforms = {};\n    var nameSplit = void 0;\n\n    // clean the lines a little - remove extra spaces / tabs etc\n    // then split along ';'\n    var lines = string.replace(/\\s+/g, ' ').split(/\\s*;\\s*/);\n\n    // loop through..\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i].trim();\n\n        if (line.indexOf('uniform') > -1) {\n            var splitLine = line.split(' ');\n            var type = splitLine[1];\n\n            var name = splitLine[2];\n            var size = 1;\n\n            if (name.indexOf('[') > -1) {\n                // array!\n                nameSplit = name.split(/\\[|]/);\n                name = nameSplit[0];\n                size *= Number(nameSplit[1]);\n            }\n\n            if (!name.match(maskRegex)) {\n                uniforms[name] = {\n                    value: defaultValue(type, size),\n                    name: name,\n                    type: type\n                };\n            }\n        }\n    }\n\n    return uniforms;\n}\n//# sourceMappingURL=extractUniformsFromSrc.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/filters/extractUniformsFromSrc.js\n// module id = 109\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.calculateScreenSpaceMatrix = calculateScreenSpaceMatrix;\nexports.calculateNormalizedScreenSpaceMatrix = calculateNormalizedScreenSpaceMatrix;\nexports.calculateSpriteMatrix = calculateSpriteMatrix;\n\nvar _math = require('../../../math');\n\n/*\n * Calculates the mapped matrix\n * @param filterArea {Rectangle} The filter area\n * @param sprite {Sprite} the target sprite\n * @param outputMatrix {Matrix} @alvin\n */\n// TODO playing around here.. this is temporary - (will end up in the shader)\n// this returns a matrix that will normalise map filter cords in the filter to screen space\nfunction calculateScreenSpaceMatrix(outputMatrix, filterArea, textureSize) {\n    // let worldTransform = sprite.worldTransform.copy(Matrix.TEMP_MATRIX),\n    // let texture = {width:1136, height:700};//sprite._texture.baseTexture;\n\n    // TODO unwrap?\n    var mappedMatrix = outputMatrix.identity();\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    mappedMatrix.scale(textureSize.width, textureSize.height);\n\n    return mappedMatrix;\n}\n\nfunction calculateNormalizedScreenSpaceMatrix(outputMatrix, filterArea, textureSize) {\n    var mappedMatrix = outputMatrix.identity();\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    var translateScaleX = textureSize.width / filterArea.width;\n    var translateScaleY = textureSize.height / filterArea.height;\n\n    mappedMatrix.scale(translateScaleX, translateScaleY);\n\n    return mappedMatrix;\n}\n\n// this will map the filter coord so that a texture can be used based on the transform of a sprite\nfunction calculateSpriteMatrix(outputMatrix, filterArea, textureSize, sprite) {\n    var worldTransform = sprite.worldTransform.copy(_math.Matrix.TEMP_MATRIX);\n    var texture = sprite._texture.baseTexture;\n\n    // TODO unwrap?\n    var mappedMatrix = outputMatrix.identity();\n\n    // scale..\n    var ratio = textureSize.height / textureSize.width;\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    mappedMatrix.scale(1, ratio);\n\n    var translateScaleX = textureSize.width / texture.width;\n    var translateScaleY = textureSize.height / texture.height;\n\n    worldTransform.tx /= texture.width * translateScaleX;\n\n    // this...?  free beer for anyone who can explain why this makes sense!\n    worldTransform.ty /= texture.width * translateScaleX;\n    // worldTransform.ty /= texture.height * translateScaleY;\n\n    worldTransform.invert();\n    mappedMatrix.prepend(worldTransform);\n\n    // apply inverse scale..\n    mappedMatrix.scale(1, 1 / ratio);\n\n    mappedMatrix.scale(translateScaleX, translateScaleY);\n\n    mappedMatrix.translate(sprite.anchor.x, sprite.anchor.y);\n\n    return mappedMatrix;\n}\n//# sourceMappingURL=filterTransforms.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/filters/filterTransforms.js\n// module id = 110\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLManager2 = require('./WebGLManager');\n\nvar _WebGLManager3 = _interopRequireDefault(_WebGLManager2);\n\nvar _RenderTarget = require('../utils/RenderTarget');\n\nvar _RenderTarget2 = _interopRequireDefault(_RenderTarget);\n\nvar _Quad = require('../utils/Quad');\n\nvar _Quad2 = _interopRequireDefault(_Quad);\n\nvar _math = require('../../../math');\n\nvar _Shader = require('../../../Shader');\n\nvar _Shader2 = _interopRequireDefault(_Shader);\n\nvar _filterTransforms = require('../filters/filterTransforms');\n\nvar filterTransforms = _interopRequireWildcard(_filterTransforms);\n\nvar _bitTwiddle = require('bit-twiddle');\n\nvar _bitTwiddle2 = _interopRequireDefault(_bitTwiddle);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @ignore\n * @class\n */\nvar FilterState =\n/**\n *\n */\nfunction FilterState() {\n    _classCallCheck(this, FilterState);\n\n    this.renderTarget = null;\n    this.sourceFrame = new _math.Rectangle();\n    this.destinationFrame = new _math.Rectangle();\n    this.filters = [];\n    this.target = null;\n    this.resolution = 1;\n};\n\n/**\n * @class\n * @memberof PIXI\n * @extends PIXI.WebGLManager\n */\n\n\nvar FilterManager = function (_WebGLManager) {\n    _inherits(FilterManager, _WebGLManager);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    function FilterManager(renderer) {\n        _classCallCheck(this, FilterManager);\n\n        var _this = _possibleConstructorReturn(this, _WebGLManager.call(this, renderer));\n\n        _this.gl = _this.renderer.gl;\n        // know about sprites!\n        _this.quad = new _Quad2.default(_this.gl, renderer.state.attribState);\n\n        _this.shaderCache = {};\n        // todo add default!\n        _this.pool = {};\n\n        _this.filterData = null;\n        return _this;\n    }\n\n    /**\n     * Adds a new filter to the manager.\n     *\n     * @param {PIXI.DisplayObject} target - The target of the filter to render.\n     * @param {PIXI.Filter[]} filters - The filters to apply.\n     */\n\n\n    FilterManager.prototype.pushFilter = function pushFilter(target, filters) {\n        var renderer = this.renderer;\n\n        var filterData = this.filterData;\n\n        if (!filterData) {\n            filterData = this.renderer._activeRenderTarget.filterStack;\n\n            // add new stack\n            var filterState = new FilterState();\n\n            filterState.sourceFrame = filterState.destinationFrame = this.renderer._activeRenderTarget.size;\n            filterState.renderTarget = renderer._activeRenderTarget;\n\n            this.renderer._activeRenderTarget.filterData = filterData = {\n                index: 0,\n                stack: [filterState]\n            };\n\n            this.filterData = filterData;\n        }\n\n        // get the current filter state..\n        var currentState = filterData.stack[++filterData.index];\n\n        if (!currentState) {\n            currentState = filterData.stack[filterData.index] = new FilterState();\n        }\n\n        // for now we go off the filter of the first resolution..\n        var resolution = filters[0].resolution;\n        var padding = filters[0].padding | 0;\n        var targetBounds = target.filterArea || target.getBounds(true);\n        var sourceFrame = currentState.sourceFrame;\n        var destinationFrame = currentState.destinationFrame;\n\n        sourceFrame.x = (targetBounds.x * resolution | 0) / resolution;\n        sourceFrame.y = (targetBounds.y * resolution | 0) / resolution;\n        sourceFrame.width = (targetBounds.width * resolution | 0) / resolution;\n        sourceFrame.height = (targetBounds.height * resolution | 0) / resolution;\n\n        if (filterData.stack[0].renderTarget.transform) {//\n\n            // TODO we should fit the rect around the transform..\n        } else {\n            sourceFrame.fit(filterData.stack[0].destinationFrame);\n        }\n\n        // lets apply the padding After we fit the element to the screen.\n        // this should stop the strange side effects that can occur when cropping to the edges\n        sourceFrame.pad(padding);\n\n        destinationFrame.width = sourceFrame.width;\n        destinationFrame.height = sourceFrame.height;\n\n        // lets play the padding after we fit the element to the screen.\n        // this should stop the strange side effects that can occur when cropping to the edges\n\n        var renderTarget = this.getPotRenderTarget(renderer.gl, sourceFrame.width, sourceFrame.height, resolution);\n\n        currentState.target = target;\n        currentState.filters = filters;\n        currentState.resolution = resolution;\n        currentState.renderTarget = renderTarget;\n\n        // bind the render target to draw the shape in the top corner..\n\n        renderTarget.setFrame(destinationFrame, sourceFrame);\n        // bind the render target\n        renderer.bindRenderTarget(renderTarget);\n\n        // clear the renderTarget\n        renderer.clear(); // [0.5,0.5,0.5, 1.0]);\n    };\n\n    /**\n     * Pops off the filter and applies it.\n     *\n     */\n\n\n    FilterManager.prototype.popFilter = function popFilter() {\n        var filterData = this.filterData;\n\n        var lastState = filterData.stack[filterData.index - 1];\n        var currentState = filterData.stack[filterData.index];\n\n        this.quad.map(currentState.renderTarget.size, currentState.sourceFrame).upload();\n\n        var filters = currentState.filters;\n\n        if (filters.length === 1) {\n            filters[0].apply(this, currentState.renderTarget, lastState.renderTarget, false);\n            this.freePotRenderTarget(currentState.renderTarget);\n        } else {\n            var flip = currentState.renderTarget;\n            var flop = this.getPotRenderTarget(this.renderer.gl, currentState.sourceFrame.width, currentState.sourceFrame.height, currentState.resolution);\n\n            flop.setFrame(currentState.destinationFrame, currentState.sourceFrame);\n\n            var i = 0;\n\n            for (i = 0; i < filters.length - 1; ++i) {\n                filters[i].apply(this, flip, flop, true);\n\n                var t = flip;\n\n                flip = flop;\n                flop = t;\n            }\n\n            filters[i].apply(this, flip, lastState.renderTarget, false);\n\n            this.freePotRenderTarget(flip);\n            this.freePotRenderTarget(flop);\n        }\n\n        filterData.index--;\n\n        if (filterData.index === 0) {\n            this.filterData = null;\n        }\n    };\n\n    /**\n     * Draws a filter.\n     *\n     * @param {PIXI.Filter} filter - The filter to draw.\n     * @param {PIXI.RenderTarget} input - The input render target.\n     * @param {PIXI.RenderTarget} output - The target to output to.\n     * @param {boolean} clear - Should the output be cleared before rendering to it\n     */\n\n\n    FilterManager.prototype.applyFilter = function applyFilter(filter, input, output, clear) {\n        var renderer = this.renderer;\n        var gl = renderer.gl;\n\n        var shader = filter.glShaders[renderer.CONTEXT_UID];\n\n        // cacheing..\n        if (!shader) {\n            if (filter.glShaderKey) {\n                shader = this.shaderCache[filter.glShaderKey];\n\n                if (!shader) {\n                    shader = new _Shader2.default(this.gl, filter.vertexSrc, filter.fragmentSrc);\n\n                    filter.glShaders[renderer.CONTEXT_UID] = this.shaderCache[filter.glShaderKey] = shader;\n                }\n            } else {\n                shader = filter.glShaders[renderer.CONTEXT_UID] = new _Shader2.default(this.gl, filter.vertexSrc, filter.fragmentSrc);\n            }\n\n            // TODO - this only needs to be done once?\n            renderer.bindVao(null);\n\n            this.quad.initVao(shader);\n        }\n\n        renderer.bindVao(this.quad.vao);\n\n        renderer.bindRenderTarget(output);\n\n        if (clear) {\n            gl.disable(gl.SCISSOR_TEST);\n            renderer.clear(); // [1, 1, 1, 1]);\n            gl.enable(gl.SCISSOR_TEST);\n        }\n\n        // in case the render target is being masked using a scissor rect\n        if (output === renderer.maskManager.scissorRenderTarget) {\n            renderer.maskManager.pushScissorMask(null, renderer.maskManager.scissorData);\n        }\n\n        renderer.bindShader(shader);\n\n        // this syncs the pixi filters  uniforms with glsl uniforms\n        this.syncUniforms(shader, filter);\n\n        renderer.state.setBlendMode(filter.blendMode);\n\n        // temporary bypass cache..\n        var tex = this.renderer.boundTextures[0];\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, input.texture.texture);\n\n        this.quad.vao.draw(this.renderer.gl.TRIANGLES, 6, 0);\n\n        // restore cache.\n        gl.bindTexture(gl.TEXTURE_2D, tex._glTextures[this.renderer.CONTEXT_UID].texture);\n    };\n\n    /**\n     * Uploads the uniforms of the filter.\n     *\n     * @param {GLShader} shader - The underlying gl shader.\n     * @param {PIXI.Filter} filter - The filter we are synchronizing.\n     */\n\n\n    FilterManager.prototype.syncUniforms = function syncUniforms(shader, filter) {\n        var uniformData = filter.uniformData;\n        var uniforms = filter.uniforms;\n\n        // 0 is reserved for the pixi texture so we start at 1!\n        var textureCount = 1;\n        var currentState = void 0;\n\n        if (shader.uniforms.data.filterArea) {\n            currentState = this.filterData.stack[this.filterData.index];\n            var filterArea = shader.uniforms.filterArea;\n\n            filterArea[0] = currentState.renderTarget.size.width;\n            filterArea[1] = currentState.renderTarget.size.height;\n            filterArea[2] = currentState.sourceFrame.x;\n            filterArea[3] = currentState.sourceFrame.y;\n\n            shader.uniforms.filterArea = filterArea;\n        }\n\n        // use this to clamp displaced texture coords so they belong to filterArea\n        // see displacementFilter fragment shader for an example\n        if (shader.uniforms.data.filterClamp) {\n            currentState = this.filterData.stack[this.filterData.index];\n\n            var filterClamp = shader.uniforms.filterClamp;\n\n            filterClamp[0] = 0;\n            filterClamp[1] = 0;\n            filterClamp[2] = (currentState.sourceFrame.width - 1) / currentState.renderTarget.size.width;\n            filterClamp[3] = (currentState.sourceFrame.height - 1) / currentState.renderTarget.size.height;\n\n            shader.uniforms.filterClamp = filterClamp;\n        }\n\n        // TODO Cacheing layer..\n        for (var i in uniformData) {\n            if (uniformData[i].type === 'sampler2D' && uniforms[i] !== 0) {\n                if (uniforms[i].baseTexture) {\n                    shader.uniforms[i] = this.renderer.bindTexture(uniforms[i].baseTexture, textureCount);\n                } else {\n                    shader.uniforms[i] = textureCount;\n\n                    // TODO\n                    // this is helpful as renderTargets can also be set.\n                    // Although thinking about it, we could probably\n                    // make the filter texture cache return a RenderTexture\n                    // rather than a renderTarget\n                    var gl = this.renderer.gl;\n\n                    gl.activeTexture(gl.TEXTURE0 + textureCount);\n                    uniforms[i].texture.bind();\n                }\n\n                textureCount++;\n            } else if (uniformData[i].type === 'mat3') {\n                // check if its pixi matrix..\n                if (uniforms[i].a !== undefined) {\n                    shader.uniforms[i] = uniforms[i].toArray(true);\n                } else {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            } else if (uniformData[i].type === 'vec2') {\n                // check if its a point..\n                if (uniforms[i].x !== undefined) {\n                    var val = shader.uniforms[i] || new Float32Array(2);\n\n                    val[0] = uniforms[i].x;\n                    val[1] = uniforms[i].y;\n                    shader.uniforms[i] = val;\n                } else {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            } else if (uniformData[i].type === 'float') {\n                if (shader.uniforms.data[i].value !== uniformData[i]) {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            } else {\n                shader.uniforms[i] = uniforms[i];\n            }\n        }\n    };\n\n    /**\n     * Gets a render target from the pool, or creates a new one.\n     *\n     * @param {boolean} clear - Should we clear the render texture when we get it?\n     * @param {number} resolution - The resolution of the target.\n     * @return {PIXI.RenderTarget} The new render target\n     */\n\n\n    FilterManager.prototype.getRenderTarget = function getRenderTarget(clear, resolution) {\n        var currentState = this.filterData.stack[this.filterData.index];\n        var renderTarget = this.getPotRenderTarget(this.renderer.gl, currentState.sourceFrame.width, currentState.sourceFrame.height, resolution || currentState.resolution);\n\n        renderTarget.setFrame(currentState.destinationFrame, currentState.sourceFrame);\n\n        return renderTarget;\n    };\n\n    /**\n     * Returns a render target to the pool.\n     *\n     * @param {PIXI.RenderTarget} renderTarget - The render target to return.\n     */\n\n\n    FilterManager.prototype.returnRenderTarget = function returnRenderTarget(renderTarget) {\n        this.freePotRenderTarget(renderTarget);\n    };\n\n    /**\n     * Calculates the mapped matrix.\n     *\n     * TODO playing around here.. this is temporary - (will end up in the shader)\n     * this returns a matrix that will normalise map filter cords in the filter to screen space\n     *\n     * @param {PIXI.Matrix} outputMatrix - the matrix to output to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */\n\n\n    FilterManager.prototype.calculateScreenSpaceMatrix = function calculateScreenSpaceMatrix(outputMatrix) {\n        var currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateScreenSpaceMatrix(outputMatrix, currentState.sourceFrame, currentState.renderTarget.size);\n    };\n\n    /**\n     * Multiply vTextureCoord to this matrix to achieve (0,0,1,1) for filterArea\n     *\n     * @param {PIXI.Matrix} outputMatrix - The matrix to output to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */\n\n\n    FilterManager.prototype.calculateNormalizedScreenSpaceMatrix = function calculateNormalizedScreenSpaceMatrix(outputMatrix) {\n        var currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateNormalizedScreenSpaceMatrix(outputMatrix, currentState.sourceFrame, currentState.renderTarget.size, currentState.destinationFrame);\n    };\n\n    /**\n     * This will map the filter coord so that a texture can be used based on the transform of a sprite\n     *\n     * @param {PIXI.Matrix} outputMatrix - The matrix to output to.\n     * @param {PIXI.Sprite} sprite - The sprite to map to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */\n\n\n    FilterManager.prototype.calculateSpriteMatrix = function calculateSpriteMatrix(outputMatrix, sprite) {\n        var currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateSpriteMatrix(outputMatrix, currentState.sourceFrame, currentState.renderTarget.size, sprite);\n    };\n\n    /**\n     * Destroys this Filter Manager.\n     *\n     */\n\n\n    FilterManager.prototype.destroy = function destroy() {\n        this.shaderCache = [];\n        this.emptyPool();\n    };\n\n    /**\n     * Gets a Power-of-Two render texture.\n     *\n     * TODO move to a seperate class could be on renderer?\n     * also - could cause issue with multiple contexts?\n     *\n     * @private\n     * @param {WebGLRenderingContext} gl - The webgl rendering context\n     * @param {number} minWidth - The minimum width of the render target.\n     * @param {number} minHeight - The minimum height of the render target.\n     * @param {number} resolution - The resolution of the render target.\n     * @return {PIXI.RenderTarget} The new render target.\n     */\n\n\n    FilterManager.prototype.getPotRenderTarget = function getPotRenderTarget(gl, minWidth, minHeight, resolution) {\n        // TODO you could return a bigger texture if there is not one in the pool?\n        minWidth = _bitTwiddle2.default.nextPow2(minWidth * resolution);\n        minHeight = _bitTwiddle2.default.nextPow2(minHeight * resolution);\n\n        var key = (minWidth & 0xFFFF) << 16 | minHeight & 0xFFFF;\n\n        if (!this.pool[key]) {\n            this.pool[key] = [];\n        }\n\n        var renderTarget = this.pool[key].pop();\n\n        // creating render target will cause texture to be bound!\n        if (!renderTarget) {\n            // temporary bypass cache..\n            var tex = this.renderer.boundTextures[0];\n\n            gl.activeTexture(gl.TEXTURE0);\n\n            // internally - this will cause a texture to be bound..\n            renderTarget = new _RenderTarget2.default(gl, minWidth, minHeight, null, 1);\n\n            // set the current one back\n            gl.bindTexture(gl.TEXTURE_2D, tex._glTextures[this.renderer.CONTEXT_UID].texture);\n        }\n\n        // manually tweak the resolution...\n        // this will not modify the size of the frame buffer, just its resolution.\n        renderTarget.resolution = resolution;\n        renderTarget.defaultFrame.width = renderTarget.size.width = minWidth / resolution;\n        renderTarget.defaultFrame.height = renderTarget.size.height = minHeight / resolution;\n\n        return renderTarget;\n    };\n\n    /**\n     * Empties the texture pool.\n     *\n     */\n\n\n    FilterManager.prototype.emptyPool = function emptyPool() {\n        for (var i in this.pool) {\n            var textures = this.pool[i];\n\n            if (textures) {\n                for (var j = 0; j < textures.length; j++) {\n                    textures[j].destroy(true);\n                }\n            }\n        }\n\n        this.pool = {};\n    };\n\n    /**\n     * Frees a render target back into the pool.\n     *\n     * @param {PIXI.RenderTarget} renderTarget - The renderTarget to free\n     */\n\n\n    FilterManager.prototype.freePotRenderTarget = function freePotRenderTarget(renderTarget) {\n        var minWidth = renderTarget.size.width * renderTarget.resolution;\n        var minHeight = renderTarget.size.height * renderTarget.resolution;\n        var key = (minWidth & 0xFFFF) << 16 | minHeight & 0xFFFF;\n\n        this.pool[key].push(renderTarget);\n    };\n\n    return FilterManager;\n}(_WebGLManager3.default);\n\nexports.default = FilterManager;\n//# sourceMappingURL=FilterManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/managers/FilterManager.js\n// module id = 111\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLManager2 = require('./WebGLManager');\n\nvar _WebGLManager3 = _interopRequireDefault(_WebGLManager2);\n\nvar _SpriteMaskFilter = require('../filters/spriteMask/SpriteMaskFilter');\n\nvar _SpriteMaskFilter2 = _interopRequireDefault(_SpriteMaskFilter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nvar MaskManager = function (_WebGLManager) {\n    _inherits(MaskManager, _WebGLManager);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    function MaskManager(renderer) {\n        _classCallCheck(this, MaskManager);\n\n        // TODO - we don't need both!\n        var _this = _possibleConstructorReturn(this, _WebGLManager.call(this, renderer));\n\n        _this.scissor = false;\n        _this.scissorData = null;\n        _this.scissorRenderTarget = null;\n\n        _this.enableScissor = true;\n\n        _this.alphaMaskPool = [];\n        _this.alphaMaskIndex = 0;\n        return _this;\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to push the mask to\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */\n\n\n    MaskManager.prototype.pushMask = function pushMask(target, maskData) {\n        if (maskData.texture) {\n            this.pushSpriteMask(target, maskData);\n        } else if (this.enableScissor && !this.scissor && !this.renderer.stencilManager.stencilMaskStack.length && maskData.isFastRect()) {\n            var matrix = maskData.worldTransform;\n\n            var rot = Math.atan2(matrix.b, matrix.a);\n\n            // use the nearest degree!\n            rot = Math.round(rot * (180 / Math.PI));\n\n            if (rot % 90) {\n                this.pushStencilMask(maskData);\n            } else {\n                this.pushScissorMask(target, maskData);\n            }\n        } else {\n            this.pushStencilMask(maskData);\n        }\n    };\n\n    /**\n     * Removes the last mask from the mask stack and doesn't return it.\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to pop the mask from\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */\n\n\n    MaskManager.prototype.popMask = function popMask(target, maskData) {\n        if (maskData.texture) {\n            this.popSpriteMask(target, maskData);\n        } else if (this.enableScissor && !this.renderer.stencilManager.stencilMaskStack.length) {\n            this.popScissorMask(target, maskData);\n        } else {\n            this.popStencilMask(target, maskData);\n        }\n    };\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.RenderTarget} target - Display Object to push the sprite mask to\n     * @param {PIXI.Sprite} maskData - Sprite to be used as the mask\n     */\n\n\n    MaskManager.prototype.pushSpriteMask = function pushSpriteMask(target, maskData) {\n        var alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];\n\n        if (!alphaMaskFilter) {\n            alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new _SpriteMaskFilter2.default(maskData)];\n        }\n\n        alphaMaskFilter[0].resolution = this.renderer.resolution;\n        alphaMaskFilter[0].maskSprite = maskData;\n\n        // TODO - may cause issues!\n        target.filterArea = maskData.getBounds(true);\n\n        this.renderer.filterManager.pushFilter(target, alphaMaskFilter);\n\n        this.alphaMaskIndex++;\n    };\n\n    /**\n     * Removes the last filter from the filter stack and doesn't return it.\n     *\n     */\n\n\n    MaskManager.prototype.popSpriteMask = function popSpriteMask() {\n        this.renderer.filterManager.popFilter();\n        this.alphaMaskIndex--;\n    };\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.Sprite|PIXI.Graphics} maskData - The masking data.\n     */\n\n\n    MaskManager.prototype.pushStencilMask = function pushStencilMask(maskData) {\n        this.renderer.currentRenderer.stop();\n        this.renderer.stencilManager.pushStencil(maskData);\n    };\n\n    /**\n     * Removes the last filter from the filter stack and doesn't return it.\n     *\n     */\n\n\n    MaskManager.prototype.popStencilMask = function popStencilMask() {\n        this.renderer.currentRenderer.stop();\n        this.renderer.stencilManager.popStencil();\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to push the mask to\n     * @param {PIXI.Graphics} maskData - The masking data.\n     */\n\n\n    MaskManager.prototype.pushScissorMask = function pushScissorMask(target, maskData) {\n        maskData.renderable = true;\n\n        var renderTarget = this.renderer._activeRenderTarget;\n\n        var bounds = maskData.getBounds();\n\n        bounds.fit(renderTarget.size);\n        maskData.renderable = false;\n\n        this.renderer.gl.enable(this.renderer.gl.SCISSOR_TEST);\n\n        var resolution = this.renderer.resolution;\n\n        this.renderer.gl.scissor(bounds.x * resolution, (renderTarget.root ? renderTarget.size.height - bounds.y - bounds.height : bounds.y) * resolution, bounds.width * resolution, bounds.height * resolution);\n\n        this.scissorRenderTarget = renderTarget;\n        this.scissorData = maskData;\n        this.scissor = true;\n    };\n\n    /**\n     *\n     *\n     */\n\n\n    MaskManager.prototype.popScissorMask = function popScissorMask() {\n        this.scissorRenderTarget = null;\n        this.scissorData = null;\n        this.scissor = false;\n\n        // must be scissor!\n        var gl = this.renderer.gl;\n\n        gl.disable(gl.SCISSOR_TEST);\n    };\n\n    return MaskManager;\n}(_WebGLManager3.default);\n\nexports.default = MaskManager;\n//# sourceMappingURL=MaskManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/managers/MaskManager.js\n// module id = 112\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLManager2 = require('./WebGLManager');\n\nvar _WebGLManager3 = _interopRequireDefault(_WebGLManager2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nvar StencilManager = function (_WebGLManager) {\n    _inherits(StencilManager, _WebGLManager);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    function StencilManager(renderer) {\n        _classCallCheck(this, StencilManager);\n\n        var _this = _possibleConstructorReturn(this, _WebGLManager.call(this, renderer));\n\n        _this.stencilMaskStack = null;\n        return _this;\n    }\n\n    /**\n     * Changes the mask stack that is used by this manager.\n     *\n     * @param {PIXI.Graphics[]} stencilMaskStack - The mask stack\n     */\n\n\n    StencilManager.prototype.setMaskStack = function setMaskStack(stencilMaskStack) {\n        this.stencilMaskStack = stencilMaskStack;\n\n        var gl = this.renderer.gl;\n\n        if (stencilMaskStack.length === 0) {\n            gl.disable(gl.STENCIL_TEST);\n        } else {\n            gl.enable(gl.STENCIL_TEST);\n        }\n    };\n\n    /**\n     * Applies the Mask and adds it to the current filter stack. @alvin\n     *\n     * @param {PIXI.Graphics} graphics - The mask\n     */\n\n\n    StencilManager.prototype.pushStencil = function pushStencil(graphics) {\n        this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n        this.renderer._activeRenderTarget.attachStencilBuffer();\n\n        var gl = this.renderer.gl;\n        var sms = this.stencilMaskStack;\n\n        if (sms.length === 0) {\n            gl.enable(gl.STENCIL_TEST);\n            gl.clear(gl.STENCIL_BUFFER_BIT);\n            gl.stencilFunc(gl.ALWAYS, 1, 1);\n        }\n\n        sms.push(graphics);\n\n        gl.colorMask(false, false, false, false);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);\n\n        this.renderer.plugins.graphics.render(graphics);\n\n        gl.colorMask(true, true, true, true);\n        gl.stencilFunc(gl.NOTEQUAL, 0, sms.length);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n    };\n\n    /**\n     * TODO @alvin\n     */\n\n\n    StencilManager.prototype.popStencil = function popStencil() {\n        this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n        var gl = this.renderer.gl;\n        var sms = this.stencilMaskStack;\n\n        var graphics = sms.pop();\n\n        if (sms.length === 0) {\n            // the stack is empty!\n            gl.disable(gl.STENCIL_TEST);\n        } else {\n            gl.colorMask(false, false, false, false);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);\n\n            this.renderer.plugins.graphics.render(graphics);\n\n            gl.colorMask(true, true, true, true);\n            gl.stencilFunc(gl.NOTEQUAL, 0, sms.length);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n        }\n    };\n\n    /**\n     * Destroys the mask stack.\n     *\n     */\n\n\n    StencilManager.prototype.destroy = function destroy() {\n        _WebGLManager3.default.prototype.destroy.call(this);\n\n        this.stencilMaskStack.stencilStack = null;\n    };\n\n    return StencilManager;\n}(_WebGLManager3.default);\n\nexports.default = StencilManager;\n//# sourceMappingURL=StencilManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/managers/StencilManager.js\n// module id = 113\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = checkMaxIfStatmentsInShader;\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar fragTemplate = ['precision mediump float;', 'void main(void){', 'float test = 0.1;', '%forloop%', 'gl_FragColor = vec4(0.0);', '}'].join('\\n');\n\nfunction checkMaxIfStatmentsInShader(maxIfs, gl) {\n    var createTempContext = !gl;\n\n    // @if DEBUG\n    if (maxIfs === 0) {\n        throw new Error('Invalid value of `0` passed to `checkMaxIfStatementsInShader`');\n    }\n    // @endif\n\n    if (createTempContext) {\n        var tinyCanvas = document.createElement('canvas');\n\n        tinyCanvas.width = 1;\n        tinyCanvas.height = 1;\n\n        gl = _pixiGlCore2.default.createContext(tinyCanvas);\n    }\n\n    var shader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    while (true) // eslint-disable-line no-constant-condition\n    {\n        var fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\n\n        gl.shaderSource(shader, fragmentSrc);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            maxIfs = maxIfs / 2 | 0;\n        } else {\n            // valid!\n            break;\n        }\n    }\n\n    if (createTempContext) {\n        // get rid of context\n        if (gl.getExtension('WEBGL_lose_context')) {\n            gl.getExtension('WEBGL_lose_context').loseContext();\n        }\n    }\n\n    return maxIfs;\n}\n\nfunction generateIfTestSrc(maxIfs) {\n    var src = '';\n\n    for (var i = 0; i < maxIfs; ++i) {\n        if (i > 0) {\n            src += '\\nelse ';\n        }\n\n        if (i < maxIfs - 1) {\n            src += 'if(test == ' + i + '.0){}';\n        }\n    }\n\n    return src;\n}\n//# sourceMappingURL=checkMaxIfStatmentsInShader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/utils/checkMaxIfStatmentsInShader.js\n// module id = 114\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = mapWebGLBlendModesToPixi;\n\nvar _const = require('../../../const');\n\n/**\n * Maps gl blend combinations to WebGL.\n *\n * @memberof PIXI\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nfunction mapWebGLBlendModesToPixi(gl) {\n    var array = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    // TODO - premultiply alpha would be different.\n    // add a boolean for that!\n    array[_const.BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.ADD] = [gl.ONE, gl.DST_ALPHA];\n    array[_const.BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR];\n    array[_const.BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[_const.BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n    return array;\n}\n//# sourceMappingURL=mapWebGLBlendModesToPixi.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/utils/mapWebGLBlendModesToPixi.js\n// module id = 115\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = mapWebGLDrawModesToPixi;\n\nvar _const = require('../../../const');\n\n/**\n * Generic Mask Stack data structure.\n *\n * @memberof PIXI\n * @function mapWebGLDrawModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n * @param {object} [object={}] - The object to map into\n * @return {object} The mapped draw modes.\n */\nfunction mapWebGLDrawModesToPixi(gl) {\n  var object = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  object[_const.DRAW_MODES.POINTS] = gl.POINTS;\n  object[_const.DRAW_MODES.LINES] = gl.LINES;\n  object[_const.DRAW_MODES.LINE_LOOP] = gl.LINE_LOOP;\n  object[_const.DRAW_MODES.LINE_STRIP] = gl.LINE_STRIP;\n  object[_const.DRAW_MODES.TRIANGLES] = gl.TRIANGLES;\n  object[_const.DRAW_MODES.TRIANGLE_STRIP] = gl.TRIANGLE_STRIP;\n  object[_const.DRAW_MODES.TRIANGLE_FAN] = gl.TRIANGLE_FAN;\n\n  return object;\n}\n//# sourceMappingURL=mapWebGLDrawModesToPixi.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/utils/mapWebGLDrawModesToPixi.js\n// module id = 116\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = validateContext;\nfunction validateContext(gl) {\n    var attributes = gl.getContextAttributes();\n\n    // this is going to be fairly simple for now.. but at least we have room to grow!\n    if (!attributes.stencil) {\n        /* eslint-disable no-console */\n        console.warn('Provided WebGL context does not have a stencil buffer, masks may not render correctly');\n        /* eslint-enable no-console */\n    }\n}\n//# sourceMappingURL=validateContext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/renderers/webgl/utils/validateContext.js\n// module id = 117\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _CanvasRenderer = require('../../renderers/canvas/CanvasRenderer');\n\nvar _CanvasRenderer2 = _interopRequireDefault(_CanvasRenderer);\n\nvar _const = require('../../const');\n\nvar _math = require('../../math');\n\nvar _CanvasTinter = require('./CanvasTinter');\n\nvar _CanvasTinter2 = _interopRequireDefault(_CanvasTinter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar canvasRenderWorldTransform = new _math.Matrix();\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now\n * share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's CanvasSpriteRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/CanvasSpriteRenderer.java\n */\n\n/**\n * Renderer dedicated to drawing and batching sprites.\n *\n * @class\n * @private\n * @memberof PIXI\n */\n\nvar CanvasSpriteRenderer = function () {\n    /**\n     * @param {PIXI.WebGLRenderer} renderer -The renderer sprite this batch works for.\n     */\n    function CanvasSpriteRenderer(renderer) {\n        _classCallCheck(this, CanvasSpriteRenderer);\n\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders the sprite object.\n     *\n     * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\n     */\n\n\n    CanvasSpriteRenderer.prototype.render = function render(sprite) {\n        var texture = sprite._texture;\n        var renderer = this.renderer;\n\n        var width = texture._frame.width;\n        var height = texture._frame.height;\n\n        var wt = sprite.transform.worldTransform;\n        var dx = 0;\n        var dy = 0;\n\n        if (texture.orig.width <= 0 || texture.orig.height <= 0 || !texture.baseTexture.source) {\n            return;\n        }\n\n        renderer.setBlendMode(sprite.blendMode);\n\n        //  Ignore null sources\n        if (texture.valid) {\n            renderer.context.globalAlpha = sprite.worldAlpha;\n\n            // If smoothingEnabled is supported and we need to change the smoothing property for sprite texture\n            var smoothingEnabled = texture.baseTexture.scaleMode === _const.SCALE_MODES.LINEAR;\n\n            if (renderer.smoothProperty && renderer.context[renderer.smoothProperty] !== smoothingEnabled) {\n                renderer.context[renderer.smoothProperty] = smoothingEnabled;\n            }\n\n            if (texture.trim) {\n                dx = texture.trim.width / 2 + texture.trim.x - sprite.anchor.x * texture.orig.width;\n                dy = texture.trim.height / 2 + texture.trim.y - sprite.anchor.y * texture.orig.height;\n            } else {\n                dx = (0.5 - sprite.anchor.x) * texture.orig.width;\n                dy = (0.5 - sprite.anchor.y) * texture.orig.height;\n            }\n\n            if (texture.rotate) {\n                wt.copy(canvasRenderWorldTransform);\n                wt = canvasRenderWorldTransform;\n                _math.GroupD8.matrixAppendRotationInv(wt, texture.rotate, dx, dy);\n                // the anchor has already been applied above, so lets set it to zero\n                dx = 0;\n                dy = 0;\n            }\n\n            dx -= width / 2;\n            dy -= height / 2;\n\n            // Allow for pixel rounding\n            if (renderer.roundPixels) {\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution | 0, wt.ty * renderer.resolution | 0);\n\n                dx = dx | 0;\n                dy = dy | 0;\n            } else {\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n\n            var resolution = texture.baseTexture.resolution;\n\n            if (sprite.tint !== 0xFFFFFF) {\n                if (sprite.cachedTint !== sprite.tint) {\n                    sprite.cachedTint = sprite.tint;\n\n                    // TODO clean up caching - how to clean up the caches?\n                    sprite.tintedTexture = _CanvasTinter2.default.getTintedTexture(sprite, sprite.tint);\n                }\n\n                renderer.context.drawImage(sprite.tintedTexture, 0, 0, width * resolution, height * resolution, dx * renderer.resolution, dy * renderer.resolution, width * renderer.resolution, height * renderer.resolution);\n            } else {\n                renderer.context.drawImage(texture.baseTexture.source, texture._frame.x * resolution, texture._frame.y * resolution, width * resolution, height * resolution, dx * renderer.resolution, dy * renderer.resolution, width * renderer.resolution, height * renderer.resolution);\n            }\n        }\n    };\n\n    /**\n     * destroy the sprite object.\n     *\n     */\n\n\n    CanvasSpriteRenderer.prototype.destroy = function destroy() {\n        this.renderer = null;\n    };\n\n    return CanvasSpriteRenderer;\n}();\n\nexports.default = CanvasSpriteRenderer;\n\n\n_CanvasRenderer2.default.registerPlugin('sprite', CanvasSpriteRenderer);\n//# sourceMappingURL=CanvasSpriteRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/sprites/canvas/CanvasSpriteRenderer.js\n// module id = 118\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @class\n */\nvar Buffer = function () {\n  /**\n   * @param {number} size - The size of the buffer in bytes.\n   */\n  function Buffer(size) {\n    _classCallCheck(this, Buffer);\n\n    this.vertices = new ArrayBuffer(size);\n\n    /**\n     * View on the vertices as a Float32Array for positions\n     *\n     * @member {Float32Array}\n     */\n    this.float32View = new Float32Array(this.vertices);\n\n    /**\n     * View on the vertices as a Uint32Array for uvs\n     *\n     * @member {Float32Array}\n     */\n    this.uint32View = new Uint32Array(this.vertices);\n  }\n\n  /**\n   * Destroys the buffer.\n   *\n   */\n\n\n  Buffer.prototype.destroy = function destroy() {\n    this.vertices = null;\n    this.positions = null;\n    this.uvs = null;\n    this.colors = null;\n  };\n\n  return Buffer;\n}();\n\nexports.default = Buffer;\n//# sourceMappingURL=BatchBuffer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/sprites/webgl/BatchBuffer.js\n// module id = 119\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _ObjectRenderer2 = require('../../renderers/webgl/utils/ObjectRenderer');\n\nvar _ObjectRenderer3 = _interopRequireDefault(_ObjectRenderer2);\n\nvar _WebGLRenderer = require('../../renderers/webgl/WebGLRenderer');\n\nvar _WebGLRenderer2 = _interopRequireDefault(_WebGLRenderer);\n\nvar _createIndicesForQuads = require('../../utils/createIndicesForQuads');\n\nvar _createIndicesForQuads2 = _interopRequireDefault(_createIndicesForQuads);\n\nvar _generateMultiTextureShader = require('./generateMultiTextureShader');\n\nvar _generateMultiTextureShader2 = _interopRequireDefault(_generateMultiTextureShader);\n\nvar _checkMaxIfStatmentsInShader = require('../../renderers/webgl/utils/checkMaxIfStatmentsInShader');\n\nvar _checkMaxIfStatmentsInShader2 = _interopRequireDefault(_checkMaxIfStatmentsInShader);\n\nvar _BatchBuffer = require('./BatchBuffer');\n\nvar _BatchBuffer2 = _interopRequireDefault(_BatchBuffer);\n\nvar _settings = require('../../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nvar _bitTwiddle = require('bit-twiddle');\n\nvar _bitTwiddle2 = _interopRequireDefault(_bitTwiddle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar SPRITE_BATCH_SIZE = _settings2.default.SPRITE_BATCH_SIZE,\n    SPRITE_MAX_TEXTURES = _settings2.default.SPRITE_MAX_TEXTURES,\n    CAN_UPLOAD_SAME_BUFFER = _settings2.default.CAN_UPLOAD_SAME_BUFFER;\n\n\nvar TICK = 0;\nvar TEXTURE_TICK = 0;\n\n/**\n * Renderer dedicated to drawing and batching sprites.\n *\n * @class\n * @private\n * @memberof PIXI\n * @extends PIXI.ObjectRenderer\n */\n\nvar SpriteRenderer = function (_ObjectRenderer) {\n    _inherits(SpriteRenderer, _ObjectRenderer);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\n     */\n    function SpriteRenderer(renderer) {\n        _classCallCheck(this, SpriteRenderer);\n\n        /**\n         * Number of values sent in the vertex buffer.\n         * positionX, positionY, colorR, colorG, colorB = 5\n         *\n         * @member {number}\n         */\n        var _this = _possibleConstructorReturn(this, _ObjectRenderer.call(this, renderer));\n\n        _this.vertSize = 5;\n\n        /**\n         * The size of the vertex information in bytes.\n         *\n         * @member {number}\n         */\n        _this.vertByteSize = _this.vertSize * 4;\n\n        /**\n         * The number of images in the SpriteBatch before it flushes.\n         *\n         * @member {number}\n         */\n        _this.size = SPRITE_BATCH_SIZE; // 2000 is a nice balance between mobile / desktop\n\n        // the total number of bytes in our batch\n        // let numVerts = this.size * 4 * this.vertByteSize;\n\n        _this.buffers = [];\n        for (var i = 1; i <= _bitTwiddle2.default.nextPow2(_this.size); i *= 2) {\n            _this.buffers.push(new _BatchBuffer2.default(i * 4 * _this.vertByteSize));\n        }\n\n        /**\n         * Holds the indices of the geometry (quads) to draw\n         *\n         * @member {Uint16Array}\n         */\n        _this.indices = (0, _createIndicesForQuads2.default)(_this.size);\n\n        /**\n         * The default shaders that is used if a sprite doesn't have a more specific one.\n         * there is a shader for each number of textures that can be rendererd.\n         * These shaders will also be generated on the fly as required.\n         * @member {PIXI.Shader[]}\n         */\n        _this.shader = null;\n\n        _this.currentIndex = 0;\n        TICK = 0;\n        _this.groups = [];\n\n        for (var k = 0; k < _this.size; k++) {\n            _this.groups[k] = { textures: [], textureCount: 0, ids: [], size: 0, start: 0, blend: 0 };\n        }\n\n        _this.sprites = [];\n\n        _this.vertexBuffers = [];\n        _this.vaos = [];\n\n        _this.vaoMax = 2;\n        _this.vertexCount = 0;\n\n        _this.renderer.on('prerender', _this.onPrerender, _this);\n        return _this;\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */\n\n\n    SpriteRenderer.prototype.onContextChange = function onContextChange() {\n        var gl = this.renderer.gl;\n\n        // step 1: first check max textures the GPU can handle.\n        this.MAX_TEXTURES = Math.min(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS), SPRITE_MAX_TEXTURES);\n\n        // step 2: check the maximum number of if statements the shader can have too..\n        this.MAX_TEXTURES = (0, _checkMaxIfStatmentsInShader2.default)(this.MAX_TEXTURES, gl);\n\n        var shader = this.shader = (0, _generateMultiTextureShader2.default)(gl, this.MAX_TEXTURES);\n\n        // create a couple of buffers\n        this.indexBuffer = _pixiGlCore2.default.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n        // we use the second shader as the first one depending on your browser may omit aTextureId\n        // as it is not used by the shader so is optimized out.\n\n        this.renderer.bindVao(null);\n\n        for (var i = 0; i < this.vaoMax; i++) {\n            this.vertexBuffers[i] = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n\n            /* eslint-disable max-len */\n\n            // build the vao object that will render..\n            this.vaos[i] = this.renderer.createVao().addIndex(this.indexBuffer).addAttribute(this.vertexBuffers[i], shader.attributes.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0).addAttribute(this.vertexBuffers[i], shader.attributes.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4).addAttribute(this.vertexBuffers[i], shader.attributes.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 3 * 4).addAttribute(this.vertexBuffers[i], shader.attributes.aTextureId, gl.FLOAT, false, this.vertByteSize, 4 * 4);\n\n            /* eslint-disable max-len */\n        }\n\n        this.vao = this.vaos[0];\n        this.currentBlendMode = 99999;\n\n        this.boundTextures = new Array(this.MAX_TEXTURES);\n    };\n\n    /**\n     * Called before the renderer starts rendering.\n     *\n     */\n\n\n    SpriteRenderer.prototype.onPrerender = function onPrerender() {\n        this.vertexCount = 0;\n    };\n\n    /**\n     * Renders the sprite object.\n     *\n     * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\n     */\n\n\n    SpriteRenderer.prototype.render = function render(sprite) {\n        // TODO set blend modes..\n        // check texture..\n        if (this.currentIndex >= this.size) {\n            this.flush();\n        }\n\n        // get the uvs for the texture\n\n        // if the uvs have not updated then no point rendering just yet!\n        if (!sprite.texture._uvs) {\n            return;\n        }\n\n        // push a texture.\n        // increment the batchsize\n        this.sprites[this.currentIndex++] = sprite;\n    };\n\n    /**\n     * Renders the content and empties the current batch.\n     *\n     */\n\n\n    SpriteRenderer.prototype.flush = function flush() {\n        if (this.currentIndex === 0) {\n            return;\n        }\n\n        var gl = this.renderer.gl;\n        var MAX_TEXTURES = this.MAX_TEXTURES;\n\n        var np2 = _bitTwiddle2.default.nextPow2(this.currentIndex);\n        var log2 = _bitTwiddle2.default.log2(np2);\n        var buffer = this.buffers[log2];\n\n        var sprites = this.sprites;\n        var groups = this.groups;\n\n        var float32View = buffer.float32View;\n        var uint32View = buffer.uint32View;\n\n        var boundTextures = this.boundTextures;\n        var rendererBoundTextures = this.renderer.boundTextures;\n        var touch = this.renderer.textureGC.count;\n\n        var index = 0;\n        var nextTexture = void 0;\n        var currentTexture = void 0;\n        var groupCount = 1;\n        var textureCount = 0;\n        var currentGroup = groups[0];\n        var vertexData = void 0;\n        var uvs = void 0;\n        var blendMode = sprites[0].blendMode;\n\n        currentGroup.textureCount = 0;\n        currentGroup.start = 0;\n        currentGroup.blend = blendMode;\n\n        TICK++;\n\n        var i = void 0;\n\n        // copy textures..\n        for (i = 0; i < MAX_TEXTURES; ++i) {\n            boundTextures[i] = rendererBoundTextures[i];\n            boundTextures[i]._virtalBoundId = i;\n        }\n\n        for (i = 0; i < this.currentIndex; ++i) {\n            // upload the sprite elemetns...\n            // they have all ready been calculated so we just need to push them into the buffer.\n            var sprite = sprites[i];\n\n            nextTexture = sprite._texture.baseTexture;\n\n            if (blendMode !== sprite.blendMode) {\n                // finish a group..\n                blendMode = sprite.blendMode;\n\n                // force the batch to break!\n                currentTexture = null;\n                textureCount = MAX_TEXTURES;\n                TICK++;\n            }\n\n            if (currentTexture !== nextTexture) {\n                currentTexture = nextTexture;\n\n                if (nextTexture._enabled !== TICK) {\n                    if (textureCount === MAX_TEXTURES) {\n                        TICK++;\n\n                        currentGroup.size = i - currentGroup.start;\n\n                        textureCount = 0;\n\n                        currentGroup = groups[groupCount++];\n                        currentGroup.blend = blendMode;\n                        currentGroup.textureCount = 0;\n                        currentGroup.start = i;\n                    }\n\n                    nextTexture.touched = touch;\n\n                    if (nextTexture._virtalBoundId === -1) {\n                        for (var j = 0; j < MAX_TEXTURES; ++j) {\n                            var tIndex = (j + TEXTURE_TICK) % MAX_TEXTURES;\n\n                            var t = boundTextures[tIndex];\n\n                            if (t._enabled !== TICK) {\n                                TEXTURE_TICK++;\n\n                                t._virtalBoundId = -1;\n\n                                nextTexture._virtalBoundId = tIndex;\n\n                                boundTextures[tIndex] = nextTexture;\n                                break;\n                            }\n                        }\n                    }\n\n                    nextTexture._enabled = TICK;\n\n                    currentGroup.textureCount++;\n                    currentGroup.ids[textureCount] = nextTexture._virtalBoundId;\n                    currentGroup.textures[textureCount++] = nextTexture;\n                }\n            }\n\n            vertexData = sprite.vertexData;\n\n            // TODO this sum does not need to be set each frame..\n            uvs = sprite._texture._uvs.uvsUint32;\n\n            if (this.renderer.roundPixels) {\n                var resolution = this.renderer.resolution;\n\n                // xy\n                float32View[index] = (vertexData[0] * resolution | 0) / resolution;\n                float32View[index + 1] = (vertexData[1] * resolution | 0) / resolution;\n\n                // xy\n                float32View[index + 5] = (vertexData[2] * resolution | 0) / resolution;\n                float32View[index + 6] = (vertexData[3] * resolution | 0) / resolution;\n\n                // xy\n                float32View[index + 10] = (vertexData[4] * resolution | 0) / resolution;\n                float32View[index + 11] = (vertexData[5] * resolution | 0) / resolution;\n\n                // xy\n                float32View[index + 15] = (vertexData[6] * resolution | 0) / resolution;\n                float32View[index + 16] = (vertexData[7] * resolution | 0) / resolution;\n            } else {\n                // xy\n                float32View[index] = vertexData[0];\n                float32View[index + 1] = vertexData[1];\n\n                // xy\n                float32View[index + 5] = vertexData[2];\n                float32View[index + 6] = vertexData[3];\n\n                // xy\n                float32View[index + 10] = vertexData[4];\n                float32View[index + 11] = vertexData[5];\n\n                // xy\n                float32View[index + 15] = vertexData[6];\n                float32View[index + 16] = vertexData[7];\n            }\n\n            uint32View[index + 2] = uvs[0];\n            uint32View[index + 7] = uvs[1];\n            uint32View[index + 12] = uvs[2];\n            uint32View[index + 17] = uvs[3];\n\n            uint32View[index + 3] = uint32View[index + 8] = uint32View[index + 13] = uint32View[index + 18] = sprite._tintRGB + (sprite.worldAlpha * 255 << 24);\n\n            float32View[index + 4] = float32View[index + 9] = float32View[index + 14] = float32View[index + 19] = nextTexture._virtalBoundId;\n\n            index += 20;\n        }\n\n        currentGroup.size = i - currentGroup.start;\n\n        if (!CAN_UPLOAD_SAME_BUFFER) {\n            // this is still needed for IOS performance..\n            // it really does not like uploading to  the same buffer in a single frame!\n            if (this.vaoMax <= this.vertexCount) {\n                this.vaoMax++;\n                this.vertexBuffers[this.vertexCount] = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n\n                // build the vao object that will render..\n                this.vaos[this.vertexCount] = this.renderer.createVao().addIndex(this.indexBuffer).addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0).addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4).addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 3 * 4).addAttribute(this.vertexBuffers[this.vertexCount], this.shader.attributes.aTextureId, gl.FLOAT, false, this.vertByteSize, 4 * 4);\n            }\n\n            this.renderer.bindVao(this.vaos[this.vertexCount]);\n\n            this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, false);\n\n            this.vertexCount++;\n        } else {\n            // lets use the faster option, always use buffer number 0\n            this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, true);\n        }\n\n        for (i = 0; i < MAX_TEXTURES; ++i) {\n            rendererBoundTextures[i]._virtalBoundId = -1;\n        }\n\n        // render the groups..\n        for (i = 0; i < groupCount; ++i) {\n            var group = groups[i];\n            var groupTextureCount = group.textureCount;\n\n            for (var _j = 0; _j < groupTextureCount; _j++) {\n                currentTexture = group.textures[_j];\n\n                // reset virtual ids..\n                // lets do a quick check..\n                if (rendererBoundTextures[group.ids[_j]] !== currentTexture) {\n                    this.renderer.bindTexture(currentTexture, group.ids[_j], true);\n                }\n\n                // reset the virtualId..\n                currentTexture._virtalBoundId = -1;\n            }\n\n            // set the blend mode..\n            this.renderer.state.setBlendMode(group.blend);\n\n            gl.drawElements(gl.TRIANGLES, group.size * 6, gl.UNSIGNED_SHORT, group.start * 6 * 2);\n        }\n\n        // reset elements for the next flush\n        this.currentIndex = 0;\n    };\n\n    /**\n     * Starts a new sprite batch.\n     */\n\n\n    SpriteRenderer.prototype.start = function start() {\n        this.renderer.bindShader(this.shader);\n\n        if (CAN_UPLOAD_SAME_BUFFER) {\n            // bind buffer #0, we don't need others\n            this.renderer.bindVao(this.vaos[this.vertexCount]);\n\n            this.vertexBuffers[this.vertexCount].bind();\n        }\n    };\n\n    /**\n     * Stops and flushes the current batch.\n     *\n     */\n\n\n    SpriteRenderer.prototype.stop = function stop() {\n        this.flush();\n    };\n\n    /**\n     * Destroys the SpriteBatch.\n     *\n     */\n\n\n    SpriteRenderer.prototype.destroy = function destroy() {\n        for (var i = 0; i < this.vaoMax; i++) {\n            if (this.vertexBuffers[i]) {\n                this.vertexBuffers[i].destroy();\n            }\n            if (this.vaos[i]) {\n                this.vaos[i].destroy();\n            }\n        }\n\n        if (this.indexBuffer) {\n            this.indexBuffer.destroy();\n        }\n\n        this.renderer.off('prerender', this.onPrerender, this);\n\n        _ObjectRenderer.prototype.destroy.call(this);\n\n        if (this.shader) {\n            this.shader.destroy();\n            this.shader = null;\n        }\n\n        this.vertexBuffers = null;\n        this.vaos = null;\n        this.indexBuffer = null;\n        this.indices = null;\n\n        this.sprites = null;\n\n        for (var _i = 0; _i < this.buffers.length; ++_i) {\n            this.buffers[_i].destroy();\n        }\n    };\n\n    return SpriteRenderer;\n}(_ObjectRenderer3.default);\n\nexports.default = SpriteRenderer;\n\n\n_WebGLRenderer2.default.registerPlugin('sprite', SpriteRenderer);\n//# sourceMappingURL=SpriteRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/sprites/webgl/SpriteRenderer.js\n// module id = 120\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = generateMultiTextureShader;\n\nvar _Shader = require('../../Shader');\n\nvar _Shader2 = _interopRequireDefault(_Shader);\n\nvar _path = require('path');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar fragTemplate = ['varying vec2 vTextureCoord;', 'varying vec4 vColor;', 'varying float vTextureId;', 'uniform sampler2D uSamplers[%count%];', 'void main(void){', 'vec4 color;', 'float textureId = floor(vTextureId+0.5);', '%forloop%', 'gl_FragColor = color * vColor;', '}'].join('\\n');\n\nfunction generateMultiTextureShader(gl, maxTextures) {\n    var vertexSrc = 'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aColor;\\nattribute float aTextureId;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\nvarying float vTextureId;\\n\\nvoid main(void){\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = aTextureCoord;\\n    vTextureId = aTextureId;\\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a);\\n}\\n';\n    var fragmentSrc = fragTemplate;\n\n    fragmentSrc = fragmentSrc.replace(/%count%/gi, maxTextures);\n    fragmentSrc = fragmentSrc.replace(/%forloop%/gi, generateSampleSrc(maxTextures));\n\n    var shader = new _Shader2.default(gl, vertexSrc, fragmentSrc);\n\n    var sampleValues = [];\n\n    for (var i = 0; i < maxTextures; i++) {\n        sampleValues[i] = i;\n    }\n\n    shader.bind();\n    shader.uniforms.uSamplers = sampleValues;\n\n    return shader;\n}\n\nfunction generateSampleSrc(maxTextures) {\n    var src = '';\n\n    src += '\\n';\n    src += '\\n';\n\n    for (var i = 0; i < maxTextures; i++) {\n        if (i > 0) {\n            src += '\\nelse ';\n        }\n\n        if (i < maxTextures - 1) {\n            src += 'if(textureId == ' + i + '.0)';\n        }\n\n        src += '\\n{';\n        src += '\\n\\tcolor = texture2D(uSamplers[' + i + '], vTextureCoord);';\n        src += '\\n}';\n    }\n\n    src += '\\n';\n    src += '\\n';\n\n    return src;\n}\n//# sourceMappingURL=generateMultiTextureShader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/sprites/webgl/generateMultiTextureShader.js\n// module id = 121\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Sprite2 = require('../sprites/Sprite');\n\nvar _Sprite3 = _interopRequireDefault(_Sprite2);\n\nvar _Texture = require('../textures/Texture');\n\nvar _Texture2 = _interopRequireDefault(_Texture);\n\nvar _math = require('../math');\n\nvar _utils = require('../utils');\n\nvar _const = require('../const');\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _TextStyle = require('./TextStyle');\n\nvar _TextStyle2 = _interopRequireDefault(_TextStyle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint max-depth: [2, 8] */\n\n\nvar RESOLUTION = _settings2.default.RESOLUTION;\n\n\nvar defaultDestroyOptions = {\n    texture: true,\n    children: false,\n    baseTexture: true\n};\n\n/**\n * A Text Object will create a line or multiple lines of text. To split a line you can use '\\n' in your text string,\n * or add a wordWrap property set to true and and wordWrapWidth property with a value in the style object.\n *\n * A Text can be created directly from a string and a style object\n *\n * ```js\n * let text = new PIXI.Text('This is a pixi text',{fontFamily : 'Arial', fontSize: 24, fill : 0xff1010, align : 'center'});\n * ```\n *\n * @class\n * @extends PIXI.Sprite\n * @memberof PIXI\n */\n\nvar Text = function (_Sprite) {\n    _inherits(Text, _Sprite);\n\n    /**\n     * @param {string} text - The string that you would like the text to display\n     * @param {object|PIXI.TextStyle} [style] - The style parameters\n     */\n    function Text(text, style) {\n        _classCallCheck(this, Text);\n\n        var canvas = document.createElement('canvas');\n\n        canvas.width = 3;\n        canvas.height = 3;\n\n        var texture = _Texture2.default.fromCanvas(canvas);\n\n        texture.orig = new _math.Rectangle();\n        texture.trim = new _math.Rectangle();\n\n        /**\n         * The canvas element that everything is drawn to\n         *\n         * @member {HTMLCanvasElement}\n         */\n        var _this = _possibleConstructorReturn(this, _Sprite.call(this, texture));\n\n        _this.canvas = canvas;\n\n        /**\n         * The canvas 2d context that everything is drawn with\n         * @member {HTMLCanvasElement}\n         */\n        _this.context = _this.canvas.getContext('2d');\n\n        /**\n         * The resolution / device pixel ratio of the canvas. This is set automatically by the renderer.\n         * @member {number}\n         * @default 1\n         */\n        _this.resolution = RESOLUTION;\n\n        /**\n         * Private tracker for the current text.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._text = null;\n\n        /**\n         * Private tracker for the current style.\n         *\n         * @member {object}\n         * @private\n         */\n        _this._style = null;\n        /**\n         * Private listener to track style changes.\n         *\n         * @member {Function}\n         * @private\n         */\n        _this._styleListener = null;\n\n        /**\n         * Private tracker for the current font.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._font = '';\n\n        _this.text = text;\n        _this.style = style;\n\n        _this.localStyleID = -1;\n        return _this;\n    }\n\n    /**\n     * Renders text and updates it when needed.\n     *\n     * @private\n     * @param {boolean} respectDirty - Whether to abort updating the text if the Text isn't dirty and the function is called.\n     */\n\n\n    Text.prototype.updateText = function updateText(respectDirty) {\n        var style = this._style;\n\n        // check if style has changed..\n        if (this.localStyleID !== style.styleID) {\n            this.dirty = true;\n            this.localStyleID = style.styleID;\n        }\n\n        if (!this.dirty && respectDirty) {\n            return;\n        }\n\n        this._font = Text.getFontStyle(style);\n\n        this.context.font = this._font;\n\n        // word wrap\n        // preserve original text\n        var outputText = style.wordWrap ? this.wordWrap(this._text) : this._text;\n\n        // split text into lines\n        var lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n\n        // calculate text width\n        var lineWidths = new Array(lines.length);\n        var maxLineWidth = 0;\n        var fontProperties = Text.calculateFontProperties(this._font);\n\n        for (var i = 0; i < lines.length; i++) {\n            var lineWidth = this.context.measureText(lines[i]).width + (lines[i].length - 1) * style.letterSpacing;\n\n            lineWidths[i] = lineWidth;\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        var width = maxLineWidth + style.strokeThickness;\n\n        if (style.dropShadow) {\n            width += style.dropShadowDistance;\n        }\n\n        width += style.padding * 2;\n\n        this.canvas.width = Math.ceil((width + this.context.lineWidth) * this.resolution);\n\n        // calculate text height\n        var lineHeight = this.style.lineHeight || fontProperties.fontSize + style.strokeThickness;\n\n        var height = Math.max(lineHeight, fontProperties.fontSize + style.strokeThickness) + (lines.length - 1) * lineHeight;\n\n        if (style.dropShadow) {\n            height += style.dropShadowDistance;\n        }\n\n        this.canvas.height = Math.ceil((height + this._style.padding * 2) * this.resolution);\n\n        this.context.scale(this.resolution, this.resolution);\n\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        this.context.font = this._font;\n        this.context.strokeStyle = style.stroke;\n        this.context.lineWidth = style.strokeThickness;\n        this.context.textBaseline = style.textBaseline;\n        this.context.lineJoin = style.lineJoin;\n        this.context.miterLimit = style.miterLimit;\n\n        var linePositionX = void 0;\n        var linePositionY = void 0;\n\n        if (style.dropShadow) {\n            if (style.dropShadowBlur > 0) {\n                this.context.shadowColor = style.dropShadowColor;\n                this.context.shadowBlur = style.dropShadowBlur;\n            } else {\n                this.context.fillStyle = style.dropShadowColor;\n            }\n\n            var xShadowOffset = Math.cos(style.dropShadowAngle) * style.dropShadowDistance;\n            var yShadowOffset = Math.sin(style.dropShadowAngle) * style.dropShadowDistance;\n\n            for (var _i = 0; _i < lines.length; _i++) {\n                linePositionX = style.strokeThickness / 2;\n                linePositionY = style.strokeThickness / 2 + _i * lineHeight + fontProperties.ascent;\n\n                if (style.align === 'right') {\n                    linePositionX += maxLineWidth - lineWidths[_i];\n                } else if (style.align === 'center') {\n                    linePositionX += (maxLineWidth - lineWidths[_i]) / 2;\n                }\n\n                if (style.fill) {\n                    this.drawLetterSpacing(lines[_i], linePositionX + xShadowOffset + style.padding, linePositionY + yShadowOffset + style.padding);\n\n                    if (style.stroke && style.strokeThickness) {\n                        this.context.strokeStyle = style.dropShadowColor;\n                        this.drawLetterSpacing(lines[_i], linePositionX + xShadowOffset + style.padding, linePositionY + yShadowOffset + style.padding, true);\n                        this.context.strokeStyle = style.stroke;\n                    }\n                }\n            }\n        }\n\n        // set canvas text styles\n        this.context.fillStyle = this._generateFillStyle(style, lines);\n\n        // draw lines line by line\n        for (var _i2 = 0; _i2 < lines.length; _i2++) {\n            linePositionX = style.strokeThickness / 2;\n            linePositionY = style.strokeThickness / 2 + _i2 * lineHeight + fontProperties.ascent;\n\n            if (style.align === 'right') {\n                linePositionX += maxLineWidth - lineWidths[_i2];\n            } else if (style.align === 'center') {\n                linePositionX += (maxLineWidth - lineWidths[_i2]) / 2;\n            }\n\n            if (style.stroke && style.strokeThickness) {\n                this.drawLetterSpacing(lines[_i2], linePositionX + style.padding, linePositionY + style.padding, true);\n            }\n\n            if (style.fill) {\n                this.drawLetterSpacing(lines[_i2], linePositionX + style.padding, linePositionY + style.padding);\n            }\n        }\n\n        this.updateTexture();\n    };\n\n    /**\n     * Render the text with letter-spacing.\n     * @param {string} text - The text to draw\n     * @param {number} x - Horizontal position to draw the text\n     * @param {number} y - Vertical position to draw the text\n     * @param {boolean} [isStroke=false] - Is this drawing for the outside stroke of the\n     *  text? If not, it's for the inside fill\n     * @private\n     */\n\n\n    Text.prototype.drawLetterSpacing = function drawLetterSpacing(text, x, y) {\n        var isStroke = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        var style = this._style;\n\n        // letterSpacing of 0 means normal\n        var letterSpacing = style.letterSpacing;\n\n        if (letterSpacing === 0) {\n            if (isStroke) {\n                this.context.strokeText(text, x, y);\n            } else {\n                this.context.fillText(text, x, y);\n            }\n\n            return;\n        }\n\n        var characters = String.prototype.split.call(text, '');\n        var currentPosition = x;\n        var index = 0;\n        var current = '';\n\n        while (index < text.length) {\n            current = characters[index++];\n            if (isStroke) {\n                this.context.strokeText(current, currentPosition, y);\n            } else {\n                this.context.fillText(current, currentPosition, y);\n            }\n            currentPosition += this.context.measureText(current).width + letterSpacing;\n        }\n    };\n\n    /**\n     * Updates texture size based on canvas size\n     *\n     * @private\n     */\n\n\n    Text.prototype.updateTexture = function updateTexture() {\n        var texture = this._texture;\n        var style = this._style;\n\n        texture.baseTexture.hasLoaded = true;\n        texture.baseTexture.resolution = this.resolution;\n\n        texture.baseTexture.realWidth = this.canvas.width;\n        texture.baseTexture.realHeight = this.canvas.height;\n        texture.baseTexture.width = this.canvas.width / this.resolution;\n        texture.baseTexture.height = this.canvas.height / this.resolution;\n        texture.trim.width = texture._frame.width = this.canvas.width / this.resolution;\n        texture.trim.height = texture._frame.height = this.canvas.height / this.resolution;\n\n        texture.trim.x = -style.padding;\n        texture.trim.y = -style.padding;\n\n        texture.orig.width = texture._frame.width - style.padding * 2;\n        texture.orig.height = texture._frame.height - style.padding * 2;\n\n        // call sprite onTextureUpdate to update scale if _width or _height were set\n        this._onTextureUpdate();\n\n        texture.baseTexture.emit('update', texture.baseTexture);\n\n        this.dirty = false;\n    };\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    Text.prototype.renderWebGL = function renderWebGL(renderer) {\n        if (this.resolution !== renderer.resolution) {\n            this.resolution = renderer.resolution;\n            this.dirty = true;\n        }\n\n        this.updateText(true);\n\n        _Sprite.prototype.renderWebGL.call(this, renderer);\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The renderer\n     */\n\n\n    Text.prototype._renderCanvas = function _renderCanvas(renderer) {\n        if (this.resolution !== renderer.resolution) {\n            this.resolution = renderer.resolution;\n            this.dirty = true;\n        }\n\n        this.updateText(true);\n\n        _Sprite.prototype._renderCanvas.call(this, renderer);\n    };\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     *\n     * @private\n     * @param {string} text - String to apply word wrapping to\n     * @return {string} New string with new lines applied where required\n     */\n\n\n    Text.prototype.wordWrap = function wordWrap(text) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer\n        // than its horizontal bounds.\n        var result = '';\n        var lines = text.split('\\n');\n        var wordWrapWidth = this._style.wordWrapWidth;\n\n        for (var i = 0; i < lines.length; i++) {\n            var spaceLeft = wordWrapWidth;\n            var words = lines[i].split(' ');\n\n            for (var j = 0; j < words.length; j++) {\n                var wordWidth = this.context.measureText(words[j]).width;\n\n                if (this._style.breakWords && wordWidth > wordWrapWidth) {\n                    // Word should be split in the middle\n                    var characters = words[j].split('');\n\n                    for (var c = 0; c < characters.length; c++) {\n                        var characterWidth = this.context.measureText(characters[c]).width;\n\n                        if (characterWidth > spaceLeft) {\n                            result += '\\n' + characters[c];\n                            spaceLeft = wordWrapWidth - characterWidth;\n                        } else {\n                            if (c === 0) {\n                                result += ' ';\n                            }\n\n                            result += characters[c];\n                            spaceLeft -= characterWidth;\n                        }\n                    }\n                } else {\n                    var wordWidthWithSpace = wordWidth + this.context.measureText(' ').width;\n\n                    if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                        // Skip printing the newline if it's the first word of the line that is\n                        // greater than the word wrap width.\n                        if (j > 0) {\n                            result += '\\n';\n                        }\n                        result += words[j];\n                        spaceLeft = wordWrapWidth - wordWidth;\n                    } else {\n                        spaceLeft -= wordWidthWithSpace;\n                        result += ' ' + words[j];\n                    }\n                }\n            }\n\n            if (i < lines.length - 1) {\n                result += '\\n';\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * calculates the bounds of the Text as a rectangle. The bounds calculation takes the worldTransform into account.\n     */\n\n\n    Text.prototype._calculateBounds = function _calculateBounds() {\n        this.updateText(true);\n        this.calculateVertices();\n        // if we have already done this on THIS frame.\n        this._bounds.addQuad(this.vertexData);\n    };\n\n    /**\n     * Method to be called upon a TextStyle change.\n     * @private\n     */\n\n\n    Text.prototype._onStyleChange = function _onStyleChange() {\n        this.dirty = true;\n    };\n\n    /**\n     * Generates the fill style. Can automatically generate a gradient based on the fill style being an array\n     *\n     * @private\n     * @param {object} style - The style.\n     * @param {string} lines - The lines of text.\n     * @return {string|number|CanvasGradient} The fill style\n     */\n\n\n    Text.prototype._generateFillStyle = function _generateFillStyle(style, lines) {\n        if (!Array.isArray(style.fill)) {\n            return style.fill;\n        }\n\n        // cocoon on canvas+ cannot generate textures, so use the first colour instead\n        if (navigator.isCocoonJS) {\n            return style.fill[0];\n        }\n\n        // the gradient will be evenly spaced out according to how large the array is.\n        // ['#FF0000', '#00FF00', '#0000FF'] would created stops at 0.25, 0.5 and 0.75\n        var gradient = void 0;\n        var totalIterations = void 0;\n        var currentIteration = void 0;\n        var stop = void 0;\n\n        var width = this.canvas.width / this.resolution;\n        var height = this.canvas.height / this.resolution;\n\n        if (style.fillGradientType === _const.TEXT_GRADIENT.LINEAR_VERTICAL) {\n            // start the gradient at the top center of the canvas, and end at the bottom middle of the canvas\n            gradient = this.context.createLinearGradient(width / 2, 0, width / 2, height);\n\n            // we need to repeat the gradient so that each individual line of text has the same vertical gradient effect\n            // ['#FF0000', '#00FF00', '#0000FF'] over 2 lines would create stops at 0.125, 0.25, 0.375, 0.625, 0.75, 0.875\n            totalIterations = (style.fill.length + 1) * lines.length;\n            currentIteration = 0;\n            for (var i = 0; i < lines.length; i++) {\n                currentIteration += 1;\n                for (var j = 0; j < style.fill.length; j++) {\n                    stop = currentIteration / totalIterations;\n                    gradient.addColorStop(stop, style.fill[j]);\n                    currentIteration++;\n                }\n            }\n        } else {\n            // start the gradient at the center left of the canvas, and end at the center right of the canvas\n            gradient = this.context.createLinearGradient(0, height / 2, width, height / 2);\n\n            // can just evenly space out the gradients in this case, as multiple lines makes no difference\n            // to an even left to right gradient\n            totalIterations = style.fill.length + 1;\n            currentIteration = 1;\n\n            for (var _i3 = 0; _i3 < style.fill.length; _i3++) {\n                stop = currentIteration / totalIterations;\n                gradient.addColorStop(stop, style.fill[_i3]);\n                currentIteration++;\n            }\n        }\n\n        return gradient;\n    };\n\n    /**\n     * Destroys this text object.\n     * Note* Unlike a Sprite, a Text object will automatically destroy its baseTexture and texture as\n     * the majorety of the time the texture will not be shared with any other Sprites.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their\n     *  destroy method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=true] - Should it destroy the current texture of the sprite as well\n     * @param {boolean} [options.baseTexture=true] - Should it destroy the base texture of the sprite as well\n     */\n\n\n    Text.prototype.destroy = function destroy(options) {\n        if (typeof options === 'boolean') {\n            options = { children: options };\n        }\n\n        options = Object.assign({}, defaultDestroyOptions, options);\n\n        _Sprite.prototype.destroy.call(this, options);\n\n        // make sure to reset the the context and canvas.. dont want this hanging around in memory!\n        this.context = null;\n        this.canvas = null;\n\n        this._style = null;\n    };\n\n    /**\n     * The width of the Text, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Text#\n     */\n\n\n    /**\n     * Generates a font style string to use for Text.calculateFontProperties(). Takes the same parameter\n     * as Text.style.\n     *\n     * @static\n     * @param {object|TextStyle} style - String representing the style of the font\n     * @return {string} Font style string, for passing to Text.calculateFontProperties()\n     */\n    Text.getFontStyle = function getFontStyle(style) {\n        style = style || {};\n\n        if (!(style instanceof _TextStyle2.default)) {\n            style = new _TextStyle2.default(style);\n        }\n\n        // build canvas api font setting from individual components. Convert a numeric style.fontSize to px\n        var fontSizeString = typeof style.fontSize === 'number' ? style.fontSize + 'px' : style.fontSize;\n\n        return style.fontStyle + ' ' + style.fontVariant + ' ' + style.fontWeight + ' ' + fontSizeString + ' ' + style.fontFamily;\n    };\n\n    /**\n     * Calculates the ascent, descent and fontSize of a given fontStyle\n     *\n     * @static\n     * @param {string} fontStyle - String representing the style of the font\n     * @return {Object} Font properties object\n     */\n\n\n    Text.calculateFontProperties = function calculateFontProperties(fontStyle) {\n        // as this method is used for preparing assets, don't recalculate things if we don't need to\n        if (Text.fontPropertiesCache[fontStyle]) {\n            return Text.fontPropertiesCache[fontStyle];\n        }\n\n        var properties = {};\n\n        var canvas = Text.fontPropertiesCanvas;\n        var context = Text.fontPropertiesContext;\n\n        context.font = fontStyle;\n\n        var width = Math.ceil(context.measureText('|MÉq').width);\n        var baseline = Math.ceil(context.measureText('M').width);\n        var height = 2 * baseline;\n\n        baseline = baseline * 1.4 | 0;\n\n        canvas.width = width;\n        canvas.height = height;\n\n        context.fillStyle = '#f00';\n        context.fillRect(0, 0, width, height);\n\n        context.font = fontStyle;\n\n        context.textBaseline = 'alphabetic';\n        context.fillStyle = '#000';\n        context.fillText('|MÉq', 0, baseline);\n\n        var imagedata = context.getImageData(0, 0, width, height).data;\n        var pixels = imagedata.length;\n        var line = width * 4;\n\n        var i = 0;\n        var idx = 0;\n        var stop = false;\n\n        // ascent. scan from top to bottom until we find a non red pixel\n        for (i = 0; i < baseline; ++i) {\n            for (var j = 0; j < line; j += 4) {\n                if (imagedata[idx + j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n            if (!stop) {\n                idx += line;\n            } else {\n                break;\n            }\n        }\n\n        properties.ascent = baseline - i;\n\n        idx = pixels - line;\n        stop = false;\n\n        // descent. scan from bottom to top until we find a non red pixel\n        for (i = height; i > baseline; --i) {\n            for (var _j = 0; _j < line; _j += 4) {\n                if (imagedata[idx + _j] !== 255) {\n                    stop = true;\n                    break;\n                }\n            }\n\n            if (!stop) {\n                idx -= line;\n            } else {\n                break;\n            }\n        }\n\n        properties.descent = i - baseline;\n        properties.fontSize = properties.ascent + properties.descent;\n\n        Text.fontPropertiesCache[fontStyle] = properties;\n\n        return properties;\n    };\n\n    _createClass(Text, [{\n        key: 'width',\n        get: function get() {\n            this.updateText(true);\n\n            return Math.abs(this.scale.x) * this.texture.orig.width;\n        }\n\n        /**\n         * Sets the width of the text.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.updateText(true);\n\n            var s = (0, _utils.sign)(this.scale.x) || 1;\n\n            this.scale.x = s * value / this.texture.orig.width;\n            this._width = value;\n        }\n\n        /**\n         * The height of the Text, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         * @memberof PIXI.Text#\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            this.updateText(true);\n\n            return Math.abs(this.scale.y) * this._texture.orig.height;\n        }\n\n        /**\n         * Sets the height of the text.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.updateText(true);\n\n            var s = (0, _utils.sign)(this.scale.y) || 1;\n\n            this.scale.y = s * value / this.texture.orig.height;\n            this._height = value;\n        }\n\n        /**\n         * Set the style of the text. Set up an event listener to listen for changes on the style\n         * object and mark the text as dirty.\n         *\n         * @member {object|PIXI.TextStyle}\n         * @memberof PIXI.Text#\n         */\n\n    }, {\n        key: 'style',\n        get: function get() {\n            return this._style;\n        }\n\n        /**\n         * Sets the style of the text.\n         *\n         * @param {object} style - The value to set to.\n         */\n        ,\n        set: function set(style) {\n            style = style || {};\n\n            if (style instanceof _TextStyle2.default) {\n                this._style = style;\n            } else {\n                this._style = new _TextStyle2.default(style);\n            }\n\n            this.localStyleID = -1;\n            this.dirty = true;\n        }\n\n        /**\n         * Set the copy for the text object. To split a line you can use '\\n'.\n         *\n         * @member {string}\n         * @memberof PIXI.Text#\n         */\n\n    }, {\n        key: 'text',\n        get: function get() {\n            return this._text;\n        }\n\n        /**\n         * Sets the text.\n         *\n         * @param {string} text - The value to set to.\n         */\n        ,\n        set: function set(text) {\n            text = text || ' ';\n            text = text.toString();\n\n            if (this._text === text) {\n                return;\n            }\n            this._text = text;\n            this.dirty = true;\n        }\n    }]);\n\n    return Text;\n}(_Sprite3.default);\n\nexports.default = Text;\n\n\nText.fontPropertiesCache = {};\nText.fontPropertiesCanvas = document.createElement('canvas');\nText.fontPropertiesContext = Text.fontPropertiesCanvas.getContext('2d');\n//# sourceMappingURL=Text.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/text/Text.js\n// module id = 122\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Internal event used by composed emitter\nvar TICK = 'tick';\n\nvar TARGET_FPMS = _settings2.default.TARGET_FPMS;\n\n/**\n * A Ticker class that runs an update loop that other objects listen to.\n * This class is composed around an EventEmitter object to add listeners\n * meant for execution on the next requested animation frame.\n * Animation frames are requested only when necessary,\n * e.g. When the ticker is started and the emitter has listeners.\n *\n * @class\n * @memberof PIXI.ticker\n */\n\nvar Ticker = function () {\n    /**\n     *\n     */\n    function Ticker() {\n        var _this = this;\n\n        _classCallCheck(this, Ticker);\n\n        /**\n         * Internal emitter used to fire 'tick' event\n         * @private\n         */\n        this._emitter = new _eventemitter2.default();\n\n        /**\n         * Internal current frame request ID\n         * @private\n         */\n        this._requestId = null;\n\n        /**\n         * Internal value managed by minFPS property setter and getter.\n         * This is the maximum allowed milliseconds between updates.\n         * @private\n         */\n        this._maxElapsedMS = 100;\n\n        /**\n         * Whether or not this ticker should invoke the method\n         * {@link PIXI.ticker.Ticker#start} automatically\n         * when a listener is added.\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.autoStart = false;\n\n        /**\n         * Scalar time value from last frame to this frame.\n         * This value is capped by setting {@link PIXI.ticker.Ticker#minFPS}\n         * and is scaled with {@link PIXI.ticker.Ticker#speed}.\n         * **Note:** The cap may be exceeded by scaling.\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.deltaTime = 1;\n\n        /**\n         * Time elapsed in milliseconds from last frame to this frame.\n         * Opposed to what the scalar {@link PIXI.ticker.Ticker#deltaTime}\n         * is based, this value is neither capped nor scaled.\n         * If the platform supports DOMHighResTimeStamp,\n         * this value will have a precision of 1 µs.\n         *\n         * @member {number}\n         * @default 1 / TARGET_FPMS\n         */\n        this.elapsedMS = 1 / TARGET_FPMS; // default to target frame time\n\n        /**\n         * The last time {@link PIXI.ticker.Ticker#update} was invoked.\n         * This value is also reset internally outside of invoking\n         * update, but only when a new animation frame is requested.\n         * If the platform supports DOMHighResTimeStamp,\n         * this value will have a precision of 1 µs.\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.lastTime = 0;\n\n        /**\n         * Factor of current {@link PIXI.ticker.Ticker#deltaTime}.\n         * @example\n         * // Scales ticker.deltaTime to what would be\n         * // the equivalent of approximately 120 FPS\n         * ticker.speed = 2;\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.speed = 1;\n\n        /**\n         * Whether or not this ticker has been started.\n         * `true` if {@link PIXI.ticker.Ticker#start} has been called.\n         * `false` if {@link PIXI.ticker.Ticker#stop} has been called.\n         * While `false`, this value may change to `true` in the\n         * event of {@link PIXI.ticker.Ticker#autoStart} being `true`\n         * and a listener is added.\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.started = false;\n\n        /**\n         * Internal tick method bound to ticker instance.\n         * This is because in early 2015, Function.bind\n         * is still 60% slower in high performance scenarios.\n         * Also separating frame requests from update method\n         * so listeners may be called at any time and with\n         * any animation API, just invoke ticker.update(time).\n         *\n         * @private\n         * @param {number} time - Time since last tick.\n         */\n        this._tick = function (time) {\n            _this._requestId = null;\n\n            if (_this.started) {\n                // Invoke listeners now\n                _this.update(time);\n                // Listener side effects may have modified ticker state.\n                if (_this.started && _this._requestId === null && _this._emitter.listeners(TICK, true)) {\n                    _this._requestId = requestAnimationFrame(_this._tick);\n                }\n            }\n        };\n    }\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If a frame has not already been requested, and if the internal\n     * emitter has listeners, a new frame is requested.\n     *\n     * @private\n     */\n\n\n    Ticker.prototype._requestIfNeeded = function _requestIfNeeded() {\n        if (this._requestId === null && this._emitter.listeners(TICK, true)) {\n            // ensure callbacks get correct delta\n            this.lastTime = performance.now();\n            this._requestId = requestAnimationFrame(this._tick);\n        }\n    };\n\n    /**\n     * Conditionally cancels a pending animation frame.\n     *\n     * @private\n     */\n\n\n    Ticker.prototype._cancelIfNeeded = function _cancelIfNeeded() {\n        if (this._requestId !== null) {\n            cancelAnimationFrame(this._requestId);\n            this._requestId = null;\n        }\n    };\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If the ticker has been started it checks if a frame has not already\n     * been requested, and if the internal emitter has listeners. If these\n     * conditions are met, a new frame is requested. If the ticker has not\n     * been started, but autoStart is `true`, then the ticker starts now,\n     * and continues with the previous conditions to request a new frame.\n     *\n     * @private\n     */\n\n\n    Ticker.prototype._startIfPossible = function _startIfPossible() {\n        if (this.started) {\n            this._requestIfNeeded();\n        } else if (this.autoStart) {\n            this.start();\n        }\n    };\n\n    /**\n     * Calls {@link module:eventemitter3.EventEmitter#on} internally for the\n     * internal 'tick' event. It checks if the emitter has listeners,\n     * and if so it requests a new animation frame at this point.\n     *\n     * @param {Function} fn - The listener function to be added for updates\n     * @param {Function} [context] - The listener context\n     * @returns {PIXI.ticker.Ticker} This instance of a ticker\n     */\n\n\n    Ticker.prototype.add = function add(fn, context) {\n        this._emitter.on(TICK, fn, context);\n\n        this._startIfPossible();\n\n        return this;\n    };\n\n    /**\n     * Calls {@link module:eventemitter3.EventEmitter#once} internally for the\n     * internal 'tick' event. It checks if the emitter has listeners,\n     * and if so it requests a new animation frame at this point.\n     *\n     * @param {Function} fn - The listener function to be added for one update\n     * @param {Function} [context] - The listener context\n     * @returns {PIXI.ticker.Ticker} This instance of a ticker\n     */\n\n\n    Ticker.prototype.addOnce = function addOnce(fn, context) {\n        this._emitter.once(TICK, fn, context);\n\n        this._startIfPossible();\n\n        return this;\n    };\n\n    /**\n     * Calls {@link module:eventemitter3.EventEmitter#off} internally for 'tick' event.\n     * It checks if the emitter has listeners for 'tick' event.\n     * If it does, then it cancels the animation frame.\n     *\n     * @param {Function} [fn] - The listener function to be removed\n     * @param {Function} [context] - The listener context to be removed\n     * @returns {PIXI.ticker.Ticker} This instance of a ticker\n     */\n\n\n    Ticker.prototype.remove = function remove(fn, context) {\n        this._emitter.off(TICK, fn, context);\n\n        if (!this._emitter.listeners(TICK, true)) {\n            this._cancelIfNeeded();\n        }\n\n        return this;\n    };\n\n    /**\n     * Starts the ticker. If the ticker has listeners\n     * a new animation frame is requested at this point.\n     */\n\n\n    Ticker.prototype.start = function start() {\n        if (!this.started) {\n            this.started = true;\n            this._requestIfNeeded();\n        }\n    };\n\n    /**\n     * Stops the ticker. If the ticker has requested\n     * an animation frame it is canceled at this point.\n     */\n\n\n    Ticker.prototype.stop = function stop() {\n        if (this.started) {\n            this.started = false;\n            this._cancelIfNeeded();\n        }\n    };\n\n    /**\n     * Triggers an update. An update entails setting the\n     * current {@link PIXI.ticker.Ticker#elapsedMS},\n     * the current {@link PIXI.ticker.Ticker#deltaTime},\n     * invoking all listeners with current deltaTime,\n     * and then finally setting {@link PIXI.ticker.Ticker#lastTime}\n     * with the value of currentTime that was provided.\n     * This method will be called automatically by animation\n     * frame callbacks if the ticker instance has been started\n     * and listeners are added.\n     *\n     * @param {number} [currentTime=performance.now()] - the current time of execution\n     */\n\n\n    Ticker.prototype.update = function update() {\n        var currentTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : performance.now();\n\n        var elapsedMS = void 0;\n\n        // If the difference in time is zero or negative, we ignore most of the work done here.\n        // If there is no valid difference, then should be no reason to let anyone know about it.\n        // A zero delta, is exactly that, nothing should update.\n        //\n        // The difference in time can be negative, and no this does not mean time traveling.\n        // This can be the result of a race condition between when an animation frame is requested\n        // on the current JavaScript engine event loop, and when the ticker's start method is invoked\n        // (which invokes the internal _requestIfNeeded method). If a frame is requested before\n        // _requestIfNeeded is invoked, then the callback for the animation frame the ticker requests,\n        // can receive a time argument that can be less than the lastTime value that was set within\n        // _requestIfNeeded. This difference is in microseconds, but this is enough to cause problems.\n        //\n        // This check covers this browser engine timing issue, as well as if consumers pass an invalid\n        // currentTime value. This may happen if consumers opt-out of the autoStart, and update themselves.\n\n        if (currentTime > this.lastTime) {\n            // Save uncapped elapsedMS for measurement\n            elapsedMS = this.elapsedMS = currentTime - this.lastTime;\n\n            // cap the milliseconds elapsed used for deltaTime\n            if (elapsedMS > this._maxElapsedMS) {\n                elapsedMS = this._maxElapsedMS;\n            }\n\n            this.deltaTime = elapsedMS * TARGET_FPMS * this.speed;\n\n            // Invoke listeners added to internal emitter\n            this._emitter.emit(TICK, this.deltaTime);\n        } else {\n            this.deltaTime = this.elapsedMS = 0;\n        }\n\n        this.lastTime = currentTime;\n    };\n\n    /**\n     * The frames per second at which this ticker is running.\n     * The default is approximately 60 in most modern browsers.\n     * **Note:** This does not factor in the value of\n     * {@link PIXI.ticker.Ticker#speed}, which is specific\n     * to scaling {@link PIXI.ticker.Ticker#deltaTime}.\n     *\n     * @memberof PIXI.ticker.Ticker#\n     * @readonly\n     */\n\n\n    _createClass(Ticker, [{\n        key: 'FPS',\n        get: function get() {\n            return 1000 / this.elapsedMS;\n        }\n\n        /**\n         * Manages the maximum amount of milliseconds allowed to\n         * elapse between invoking {@link PIXI.ticker.Ticker#update}.\n         * This value is used to cap {@link PIXI.ticker.Ticker#deltaTime},\n         * but does not effect the measured value of {@link PIXI.ticker.Ticker#FPS}.\n         * When setting this property it is clamped to a value between\n         * `0` and `PIXI.settings.TARGET_FPMS * 1000`.\n         *\n         * @memberof PIXI.ticker.Ticker#\n         * @default 10\n         */\n\n    }, {\n        key: 'minFPS',\n        get: function get() {\n            return 1000 / this._maxElapsedMS;\n        }\n\n        /**\n         * Sets the min fps.\n         *\n         * @param {number} fps - value to set.\n         */\n        ,\n        set: function set(fps) {\n            // Clamp: 0 to TARGET_FPMS\n            var minFPMS = Math.min(Math.max(0, fps) / 1000, TARGET_FPMS);\n\n            this._maxElapsedMS = 1 / minFPMS;\n        }\n    }]);\n\n    return Ticker;\n}();\n\nexports.default = Ticker;\n//# sourceMappingURL=Ticker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/ticker/Ticker.js\n// module id = 123\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\nexports.default = canUploadSameBuffer;\nfunction canUploadSameBuffer() {\n\t// Uploading the same buffer multiple times in a single frame can cause perf issues.\n\t// Apparent on IOS so only check for that at the moment\n\t// this check may become more complex if this issue pops up elsewhere.\n\tvar ios = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\n\treturn !ios;\n}\n//# sourceMappingURL=canUploadSameBuffer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/utils/canUploadSameBuffer.js\n// module id = 124\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = determineCrossOrigin;\n\nvar _url2 = require('url');\n\nvar _url3 = _interopRequireDefault(_url2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar tempAnchor = void 0;\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nfunction determineCrossOrigin(url) {\n    var loc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location;\n\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0) {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || window.location;\n\n    if (!tempAnchor) {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    url = _url3.default.parse(tempAnchor.href);\n\n    var samePort = !url.port && loc.port === '' || url.port === loc.port;\n\n    // if cross origin\n    if (url.hostname !== loc.hostname || !samePort || url.protocol !== loc.protocol) {\n        return 'anonymous';\n    }\n\n    return '';\n}\n//# sourceMappingURL=determineCrossOrigin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/utils/determineCrossOrigin.js\n// module id = 125\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = maxRecommendedTextures;\n\nvar _ismobilejs = require('ismobilejs');\n\nvar _ismobilejs2 = _interopRequireDefault(_ismobilejs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction maxRecommendedTextures(max) {\n    if (_ismobilejs2.default.tablet || _ismobilejs2.default.phone) {\n        // check if the res is iphone 6 or higher..\n        return 4;\n    }\n\n    // desktop should be ok\n    return max;\n}\n//# sourceMappingURL=maxRecommendedTextures.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/utils/maxRecommendedTextures.js\n// module id = 126\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n/**\n * Mixins functionality to make an object have \"plugins\".\n *\n * @example\n *      function MyObject() {}\n *\n *      pluginTarget.mixin(MyObject);\n *\n * @mixin\n * @memberof PIXI.utils\n * @param {object} obj - The object to mix into.\n */\nfunction pluginTarget(obj) {\n    obj.__plugins = {};\n\n    /**\n     * Adds a plugin to an object\n     *\n     * @param {string} pluginName - The events that should be listed.\n     * @param {Function} ctor - The constructor function for the plugin.\n     */\n    obj.registerPlugin = function registerPlugin(pluginName, ctor) {\n        obj.__plugins[pluginName] = ctor;\n    };\n\n    /**\n     * Instantiates all the plugins of this object\n     *\n     */\n    obj.prototype.initPlugins = function initPlugins() {\n        this.plugins = this.plugins || {};\n\n        for (var o in obj.__plugins) {\n            this.plugins[o] = new obj.__plugins[o](this);\n        }\n    };\n\n    /**\n     * Removes all the plugins of this object\n     *\n     */\n    obj.prototype.destroyPlugins = function destroyPlugins() {\n        for (var o in this.plugins) {\n            this.plugins[o].destroy();\n            this.plugins[o] = null;\n        }\n\n        this.plugins = null;\n    };\n}\n\nexports.default = {\n    /**\n     * Mixes in the properties of the pluginTarget into another object\n     *\n     * @param {object} obj - The obj to mix into\n     */\n    mixin: function mixin(obj) {\n        pluginTarget(obj);\n    }\n};\n//# sourceMappingURL=pluginTarget.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/core/utils/pluginTarget.js\n// module id = 127\n// module chunks = 0","'use strict';\n\nvar _core = require('./core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _mesh = require('./mesh');\n\nvar mesh = _interopRequireWildcard(_mesh);\n\nvar _particles = require('./particles');\n\nvar particles = _interopRequireWildcard(_particles);\n\nvar _extras = require('./extras');\n\nvar extras = _interopRequireWildcard(_extras);\n\nvar _filters = require('./filters');\n\nvar filters = _interopRequireWildcard(_filters);\n\nvar _prepare = require('./prepare');\n\nvar prepare = _interopRequireWildcard(_prepare);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\nfunction warn(msg) {\n    // @if DEBUG\n    /* eslint-disable no-console */\n    var stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined') {\n        console.warn('Deprecation Warning: ', msg);\n    } else {\n        // chop off the stack trace which includes pixi.js internal calls\n        stack = stack.split('\\n').splice(3).join('\\n');\n\n        if (console.groupCollapsed) {\n            console.groupCollapsed('%cDeprecation Warning: %c%s', 'color:#614108;background:#fffbe6', 'font-weight:normal;color:#614108;background:#fffbe6', msg);\n            console.warn(stack);\n            console.groupEnd();\n        } else {\n            console.warn('Deprecation Warning: ', msg);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n    // @endif\n}\n\n/**\n * @class\n * @private\n * @name SpriteBatch\n * @memberof PIXI\n * @see PIXI.ParticleContainer\n * @throws {ReferenceError} SpriteBatch does not exist any more, please use the new ParticleContainer instead.\n * @deprecated since version 3.0.0\n */\ncore.SpriteBatch = function () {\n    throw new ReferenceError('SpriteBatch does not exist any more, please use the new ParticleContainer instead.');\n};\n\n/**\n * @class\n * @private\n * @name AssetLoader\n * @memberof PIXI\n * @see PIXI.loaders.Loader\n * @throws {ReferenceError} The loader system was overhauled in pixi v3, please see the new PIXI.loaders.Loader class.\n * @deprecated since version 3.0.0\n */\ncore.AssetLoader = function () {\n    throw new ReferenceError('The loader system was overhauled in pixi v3, please see the new PIXI.loaders.Loader class.');\n};\n\nObject.defineProperties(core, {\n\n    /**\n     * @class\n     * @private\n     * @name Stage\n     * @memberof PIXI\n     * @see PIXI.Container\n     * @deprecated since version 3.0.0\n     */\n    Stage: {\n        enumerable: true,\n        get: function get() {\n            warn('You do not need to use a PIXI Stage any more, you can simply render any container.');\n\n            return core.Container;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name DisplayObjectContainer\n     * @memberof PIXI\n     * @see PIXI.Container\n     * @deprecated since version 3.0.0\n     */\n    DisplayObjectContainer: {\n        enumerable: true,\n        get: function get() {\n            warn('DisplayObjectContainer has been shortened to Container, please use Container from now on.');\n\n            return core.Container;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name Strip\n     * @memberof PIXI\n     * @see PIXI.mesh.Mesh\n     * @deprecated since version 3.0.0\n     */\n    Strip: {\n        enumerable: true,\n        get: function get() {\n            warn('The Strip class has been renamed to Mesh and moved to mesh.Mesh, please use mesh.Mesh from now on.');\n\n            return mesh.Mesh;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name Rope\n     * @memberof PIXI\n     * @see PIXI.mesh.Rope\n     * @deprecated since version 3.0.0\n     */\n    Rope: {\n        enumerable: true,\n        get: function get() {\n            warn('The Rope class has been moved to mesh.Rope, please use mesh.Rope from now on.');\n\n            return mesh.Rope;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name ParticleContainer\n     * @memberof PIXI\n     * @see PIXI.particles.ParticleContainer\n     * @deprecated since version 4.0.0\n     */\n    ParticleContainer: {\n        enumerable: true,\n        get: function get() {\n            warn('The ParticleContainer class has been moved to particles.ParticleContainer, ' + 'please use particles.ParticleContainer from now on.');\n\n            return particles.ParticleContainer;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name MovieClip\n     * @memberof PIXI\n     * @see PIXI.extras.MovieClip\n     * @deprecated since version 3.0.0\n     */\n    MovieClip: {\n        enumerable: true,\n        get: function get() {\n            warn('The MovieClip class has been moved to extras.AnimatedSprite, please use extras.AnimatedSprite.');\n\n            return extras.AnimatedSprite;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name TilingSprite\n     * @memberof PIXI\n     * @see PIXI.extras.TilingSprite\n     * @deprecated since version 3.0.0\n     */\n    TilingSprite: {\n        enumerable: true,\n        get: function get() {\n            warn('The TilingSprite class has been moved to extras.TilingSprite, ' + 'please use extras.TilingSprite from now on.');\n\n            return extras.TilingSprite;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name BitmapText\n     * @memberof PIXI\n     * @see PIXI.extras.BitmapText\n     * @deprecated since version 3.0.0\n     */\n    BitmapText: {\n        enumerable: true,\n        get: function get() {\n            warn('The BitmapText class has been moved to extras.BitmapText, ' + 'please use extras.BitmapText from now on.');\n\n            return extras.BitmapText;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name blendModes\n     * @memberof PIXI\n     * @see PIXI.BLEND_MODES\n     * @deprecated since version 3.0.0\n     */\n    blendModes: {\n        enumerable: true,\n        get: function get() {\n            warn('The blendModes has been moved to BLEND_MODES, please use BLEND_MODES from now on.');\n\n            return core.BLEND_MODES;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name scaleModes\n     * @memberof PIXI\n     * @see PIXI.SCALE_MODES\n     * @deprecated since version 3.0.0\n     */\n    scaleModes: {\n        enumerable: true,\n        get: function get() {\n            warn('The scaleModes has been moved to SCALE_MODES, please use SCALE_MODES from now on.');\n\n            return core.SCALE_MODES;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name BaseTextureCache\n     * @memberof PIXI\n     * @see PIXI.utils.BaseTextureCache\n     * @deprecated since version 3.0.0\n     */\n    BaseTextureCache: {\n        enumerable: true,\n        get: function get() {\n            warn('The BaseTextureCache class has been moved to utils.BaseTextureCache, ' + 'please use utils.BaseTextureCache from now on.');\n\n            return core.utils.BaseTextureCache;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name TextureCache\n     * @memberof PIXI\n     * @see PIXI.utils.TextureCache\n     * @deprecated since version 3.0.0\n     */\n    TextureCache: {\n        enumerable: true,\n        get: function get() {\n            warn('The TextureCache class has been moved to utils.TextureCache, ' + 'please use utils.TextureCache from now on.');\n\n            return core.utils.TextureCache;\n        }\n    },\n\n    /**\n     * @namespace\n     * @private\n     * @name math\n     * @memberof PIXI\n     * @see PIXI\n     * @deprecated since version 3.0.6\n     */\n    math: {\n        enumerable: true,\n        get: function get() {\n            warn('The math namespace is deprecated, please access members already accessible on PIXI.');\n\n            return core;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.AbstractFilter\n     * @see PIXI.Filter\n     * @deprecated since version 3.0.6\n     */\n    AbstractFilter: {\n        enumerable: true,\n        get: function get() {\n            warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n\n            return core.Filter;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.TransformManual\n     * @see PIXI.TransformBase\n     * @deprecated since version 4.0.0\n     */\n    TransformManual: {\n        enumerable: true,\n        get: function get() {\n            warn('TransformManual has been renamed to TransformBase, please update your pixi-spine');\n\n            return core.TransformBase;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.TARGET_FPMS\n     * @see PIXI.settings.TARGET_FPMS\n     * @deprecated since version 4.2.0\n     */\n    TARGET_FPMS: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n\n            return core.settings.TARGET_FPMS;\n        },\n        set: function set(value) {\n            warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n\n            core.settings.TARGET_FPMS = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.FILTER_RESOLUTION\n     * @see PIXI.settings.FILTER_RESOLUTION\n     * @deprecated since version 4.2.0\n     */\n    FILTER_RESOLUTION: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n\n            return core.settings.FILTER_RESOLUTION;\n        },\n        set: function set(value) {\n            warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n\n            core.settings.FILTER_RESOLUTION = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.RESOLUTION\n     * @see PIXI.settings.RESOLUTION\n     * @deprecated since version 4.2.0\n     */\n    RESOLUTION: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n\n            return core.settings.RESOLUTION;\n        },\n        set: function set(value) {\n            warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n\n            core.settings.RESOLUTION = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.MIPMAP_TEXTURES\n     * @see PIXI.settings.MIPMAP_TEXTURES\n     * @deprecated since version 4.2.0\n     */\n    MIPMAP_TEXTURES: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n\n            return core.settings.MIPMAP_TEXTURES;\n        },\n        set: function set(value) {\n            warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n\n            core.settings.MIPMAP_TEXTURES = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.SPRITE_BATCH_SIZE\n     * @see PIXI.settings.SPRITE_BATCH_SIZE\n     * @deprecated since version 4.2.0\n     */\n    SPRITE_BATCH_SIZE: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n\n            return core.settings.SPRITE_BATCH_SIZE;\n        },\n        set: function set(value) {\n            warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n\n            core.settings.SPRITE_BATCH_SIZE = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.SPRITE_MAX_TEXTURES\n     * @see PIXI.settings.SPRITE_MAX_TEXTURES\n     * @deprecated since version 4.2.0\n     */\n    SPRITE_MAX_TEXTURES: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n\n            return core.settings.SPRITE_MAX_TEXTURES;\n        },\n        set: function set(value) {\n            warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n\n            core.settings.SPRITE_MAX_TEXTURES = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.RETINA_PREFIX\n     * @see PIXI.settings.RETINA_PREFIX\n     * @deprecated since version 4.2.0\n     */\n    RETINA_PREFIX: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n\n            return core.settings.RETINA_PREFIX;\n        },\n        set: function set(value) {\n            warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n\n            core.settings.RETINA_PREFIX = value;\n        }\n    },\n\n    /**\n     * @static\n     * @constant\n     * @name PIXI.DEFAULT_RENDER_OPTIONS\n     * @see PIXI.settings.RENDER_OPTIONS\n     * @deprecated since version 4.2.0\n     */\n    DEFAULT_RENDER_OPTIONS: {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.DEFAULT_RENDER_OPTIONS has been deprecated, please use PIXI.settings.DEFAULT_RENDER_OPTIONS');\n\n            return core.settings.RENDER_OPTIONS;\n        }\n    }\n});\n\n// Move the default properties to settings\nvar defaults = [{ parent: 'TRANSFORM_MODE', target: 'TRANSFORM_MODE' }, { parent: 'GC_MODES', target: 'GC_MODE' }, { parent: 'WRAP_MODES', target: 'WRAP_MODE' }, { parent: 'SCALE_MODES', target: 'SCALE_MODE' }, { parent: 'PRECISION', target: 'PRECISION' }];\n\nvar _loop = function _loop(i) {\n    var deprecation = defaults[i];\n\n    Object.defineProperty(core[deprecation.parent], 'DEFAULT', {\n        enumerable: true,\n        get: function get() {\n            warn('PIXI.' + deprecation.parent + '.DEFAULT has been deprecated, please use PIXI.settings.' + deprecation.target);\n\n            return core.settings[deprecation.target];\n        },\n        set: function set(value) {\n            warn('PIXI.' + deprecation.parent + '.DEFAULT has been deprecated, please use PIXI.settings.' + deprecation.target);\n\n            core.settings[deprecation.target] = value;\n        }\n    });\n};\n\nfor (var i = 0; i < defaults.length; i++) {\n    _loop(i);\n}\n\nObject.defineProperties(extras, {\n\n    /**\n     * @class\n     * @name MovieClip\n     * @memberof PIXI.extras\n     * @see PIXI.extras.AnimatedSprite\n     * @deprecated since version 4.2.0\n     */\n    MovieClip: {\n        enumerable: true,\n        get: function get() {\n            warn('The MovieClip class has been renamed to AnimatedSprite, please use AnimatedSprite from now on.');\n\n            return extras.AnimatedSprite;\n        }\n    }\n});\n\ncore.DisplayObject.prototype.generateTexture = function generateTexture(renderer, scaleMode, resolution) {\n    warn('generateTexture has moved to the renderer, please use renderer.generateTexture(displayObject)');\n\n    return renderer.generateTexture(this, scaleMode, resolution);\n};\n\ncore.Graphics.prototype.generateTexture = function generateTexture(scaleMode, resolution) {\n    warn('graphics generate texture has moved to the renderer. ' + 'Or to render a graphics to a texture using canvas please use generateCanvasTexture');\n\n    return this.generateCanvasTexture(scaleMode, resolution);\n};\n\ncore.RenderTexture.prototype.render = function render(displayObject, matrix, clear, updateTransform) {\n    this.legacyRenderer.render(displayObject, this, clear, matrix, !updateTransform);\n    warn('RenderTexture.render is now deprecated, please use renderer.render(displayObject, renderTexture)');\n};\n\ncore.RenderTexture.prototype.getImage = function getImage(target) {\n    warn('RenderTexture.getImage is now deprecated, please use renderer.extract.image(target)');\n\n    return this.legacyRenderer.extract.image(target);\n};\n\ncore.RenderTexture.prototype.getBase64 = function getBase64(target) {\n    warn('RenderTexture.getBase64 is now deprecated, please use renderer.extract.base64(target)');\n\n    return this.legacyRenderer.extract.base64(target);\n};\n\ncore.RenderTexture.prototype.getCanvas = function getCanvas(target) {\n    warn('RenderTexture.getCanvas is now deprecated, please use renderer.extract.canvas(target)');\n\n    return this.legacyRenderer.extract.canvas(target);\n};\n\ncore.RenderTexture.prototype.getPixels = function getPixels(target) {\n    warn('RenderTexture.getPixels is now deprecated, please use renderer.extract.pixels(target)');\n\n    return this.legacyRenderer.pixels(target);\n};\n\n/**\n * @method\n * @private\n * @name PIXI.Sprite#setTexture\n * @see PIXI.Sprite#texture\n * @deprecated since version 3.0.0\n * @param {PIXI.Texture} texture - The texture to set to.\n */\ncore.Sprite.prototype.setTexture = function setTexture(texture) {\n    this.texture = texture;\n    warn('setTexture is now deprecated, please use the texture property, e.g : sprite.texture = texture;');\n};\n\n/**\n * @method\n * @name PIXI.extras.BitmapText#setText\n * @see PIXI.extras.BitmapText#text\n * @deprecated since version 3.0.0\n * @param {string} text - The text to set to.\n */\nextras.BitmapText.prototype.setText = function setText(text) {\n    this.text = text;\n    warn('setText is now deprecated, please use the text property, e.g : myBitmapText.text = \\'my text\\';');\n};\n\n/**\n * @method\n * @name PIXI.Text#setText\n * @see PIXI.Text#text\n * @deprecated since version 3.0.0\n * @param {string} text - The text to set to.\n */\ncore.Text.prototype.setText = function setText(text) {\n    this.text = text;\n    warn('setText is now deprecated, please use the text property, e.g : myText.text = \\'my text\\';');\n};\n\n/**\n * @method\n * @name PIXI.Text#setStyle\n * @see PIXI.Text#style\n * @deprecated since version 3.0.0\n * @param {*} style - The style to set to.\n */\ncore.Text.prototype.setStyle = function setStyle(style) {\n    this.style = style;\n    warn('setStyle is now deprecated, please use the style property, e.g : myText.style = style;');\n};\n\n/**\n * @method\n * @name PIXI.Text#determineFontProperties\n * @see PIXI.Text#calculateFontProperties\n * @deprecated since version 4.2.0\n * @private\n * @param {string} fontStyle - String representing the style of the font\n * @return {Object} Font properties object\n */\ncore.Text.prototype.determineFontProperties = function determineFontProperties(fontStyle) {\n    warn('determineFontProperties is now deprecated, please use the static calculateFontProperties method, ' + 'e.g : Text.calculateFontProperties(fontStyle);');\n\n    return Text.calculateFontProperties(fontStyle);\n};\n\nObject.defineProperties(core.TextStyle.prototype, {\n    /**\n     * Set all properties of a font as a single string\n     *\n     * @name PIXI.TextStyle#font\n     * @deprecated since version 4.0.0\n     */\n    font: {\n        get: function get() {\n            warn('text style property \\'font\\' is now deprecated, please use the ' + '\\'fontFamily\\', \\'fontSize\\', \\'fontStyle\\', \\'fontVariant\\' and \\'fontWeight\\' properties from now on');\n\n            var fontSizeString = typeof this._fontSize === 'number' ? this._fontSize + 'px' : this._fontSize;\n\n            return this._fontStyle + ' ' + this._fontVariant + ' ' + this._fontWeight + ' ' + fontSizeString + ' ' + this._fontFamily;\n        },\n        set: function set(font) {\n            warn('text style property \\'font\\' is now deprecated, please use the ' + '\\'fontFamily\\',\\'fontSize\\',fontStyle\\',\\'fontVariant\\' and \\'fontWeight\\' properties from now on');\n\n            // can work out fontStyle from search of whole string\n            if (font.indexOf('italic') > 1) {\n                this._fontStyle = 'italic';\n            } else if (font.indexOf('oblique') > -1) {\n                this._fontStyle = 'oblique';\n            } else {\n                this._fontStyle = 'normal';\n            }\n\n            // can work out fontVariant from search of whole string\n            if (font.indexOf('small-caps') > -1) {\n                this._fontVariant = 'small-caps';\n            } else {\n                this._fontVariant = 'normal';\n            }\n\n            // fontWeight and fontFamily are tricker to find, but it's easier to find the fontSize due to it's units\n            var splits = font.split(' ');\n            var fontSizeIndex = -1;\n\n            this._fontSize = 26;\n            for (var _i = 0; _i < splits.length; ++_i) {\n                if (splits[_i].match(/(px|pt|em|%)/)) {\n                    fontSizeIndex = _i;\n                    this._fontSize = splits[_i];\n                    break;\n                }\n            }\n\n            // we can now search for fontWeight as we know it must occur before the fontSize\n            this._fontWeight = 'normal';\n            for (var _i2 = 0; _i2 < fontSizeIndex; ++_i2) {\n                if (splits[_i2].match(/(bold|bolder|lighter|100|200|300|400|500|600|700|800|900)/)) {\n                    this._fontWeight = splits[_i2];\n                    break;\n                }\n            }\n\n            // and finally join everything together after the fontSize in case the font family has multiple words\n            if (fontSizeIndex > -1 && fontSizeIndex < splits.length - 1) {\n                this._fontFamily = '';\n                for (var _i3 = fontSizeIndex + 1; _i3 < splits.length; ++_i3) {\n                    this._fontFamily += splits[_i3] + ' ';\n                }\n\n                this._fontFamily = this._fontFamily.slice(0, -1);\n            } else {\n                this._fontFamily = 'Arial';\n            }\n\n            this.styleID++;\n        }\n    }\n});\n\n/**\n * @method\n * @name PIXI.Texture#setFrame\n * @see PIXI.Texture#setFrame\n * @deprecated since version 3.0.0\n * @param {PIXI.Rectangle} frame - The frame to set.\n */\ncore.Texture.prototype.setFrame = function setFrame(frame) {\n    this.frame = frame;\n    warn('setFrame is now deprecated, please use the frame property, e.g: myTexture.frame = frame;');\n};\n\nObject.defineProperties(filters, {\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.filters.AbstractFilter\n     * @see PIXI.AbstractFilter\n     * @deprecated since version 3.0.6\n     */\n    AbstractFilter: {\n        get: function get() {\n            warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n\n            return core.AbstractFilter;\n        }\n    },\n\n    /**\n     * @class\n     * @private\n     * @name PIXI.filters.SpriteMaskFilter\n     * @see PIXI.SpriteMaskFilter\n     * @deprecated since version 3.0.6\n     */\n    SpriteMaskFilter: {\n        get: function get() {\n            warn('filters.SpriteMaskFilter is an undocumented alias, please use SpriteMaskFilter from now on.');\n\n            return core.SpriteMaskFilter;\n        }\n    }\n});\n\n/**\n * @method\n * @name PIXI.utils.uuid\n * @see PIXI.utils.uid\n * @deprecated since version 3.0.6\n * @return {number} The uid\n */\ncore.utils.uuid = function () {\n    warn('utils.uuid() is deprecated, please use utils.uid() from now on.');\n\n    return core.utils.uid();\n};\n\n/**\n * @method\n * @name PIXI.utils.canUseNewCanvasBlendModes\n * @see PIXI.CanvasTinter\n * @deprecated\n * @return {boolean} Can use blend modes.\n */\ncore.utils.canUseNewCanvasBlendModes = function () {\n    warn('utils.canUseNewCanvasBlendModes() is deprecated, please use CanvasTinter.canUseMultiply from now on');\n\n    return core.CanvasTinter.canUseMultiply;\n};\n\nvar saidHello = true;\n\n/**\n * @name PIXI.utils._saidHello\n * @type {boolean}\n * @see PIXI.utils.skipHello\n * @deprecated since 4.1.0\n */\nObject.defineProperty(core.utils, '_saidHello', {\n    set: function set(bool) {\n        if (bool) {\n            warn('PIXI.utils._saidHello is deprecated, please use PIXI.utils.skipHello()');\n            this.skipHello();\n        }\n        saidHello = bool;\n    },\n    get: function get() {\n        return saidHello;\n    }\n});\n\n/**\n * The number of graphics or textures to upload to the GPU.\n *\n * @name PIXI.prepare.canvas.UPLOADS_PER_FRAME\n * @static\n * @type {number}\n * @see PIXI.prepare.BasePrepare.limiter\n * @deprecated since 4.2.0\n */\nObject.defineProperty(prepare.canvas, 'UPLOADS_PER_FRAME', {\n    set: function set() {\n        warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please set ' + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n        // because we don't have a reference to the renderer, we can't actually set\n        // the uploads per frame, so we'll have to stick with the warning.\n    },\n    get: function get() {\n        warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please use ' + 'renderer.plugins.prepare.limiter');\n\n        return NaN;\n    }\n});\n\n/**\n * The number of graphics or textures to upload to the GPU.\n *\n * @name PIXI.prepare.webgl.UPLOADS_PER_FRAME\n * @static\n * @type {number}\n * @see PIXI.prepare.BasePrepare.limiter\n * @deprecated since 4.2.0\n */\nObject.defineProperty(prepare.webgl, 'UPLOADS_PER_FRAME', {\n    set: function set() {\n        warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please set ' + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n        // because we don't have a reference to the renderer, we can't actually set\n        // the uploads per frame, so we'll have to stick with the warning.\n    },\n    get: function get() {\n        warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please use ' + 'renderer.plugins.prepare.limiter');\n\n        return NaN;\n    }\n});\n//# sourceMappingURL=deprecation.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/deprecation.js\n// module id = 128\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TEMP_RECT = new core.Rectangle();\n\n/**\n * The extract manager provides functionality to export content from the renderers.\n *\n * @class\n * @memberof PIXI\n */\n\nvar CanvasExtract = function () {\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - A reference to the current renderer\n     */\n    function CanvasExtract(renderer) {\n        _classCallCheck(this, CanvasExtract);\n\n        this.renderer = renderer;\n        /**\n         * Collection of methods for extracting data (image, pixels, etc.) from a display object or render texture\n         *\n         * @member {PIXI.CanvasExtract} extract\n         * @memberof PIXI.CanvasRenderer#\n         * @see PIXI.CanvasExtract\n         */\n        renderer.extract = this;\n    }\n\n    /**\n     * Will return a HTML Image of the target\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLImageElement} HTML Image of the target\n     */\n\n\n    CanvasExtract.prototype.image = function image(target) {\n        var image = new Image();\n\n        image.src = this.base64(target);\n\n        return image;\n    };\n\n    /**\n     * Will return a a base64 encoded string of this target. It works by calling\n     *  `CanvasExtract.getCanvas` and then running toDataURL on that.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {string} A base64 encoded string of the texture.\n     */\n\n\n    CanvasExtract.prototype.base64 = function base64(target) {\n        return this.canvas(target).toDataURL();\n    };\n\n    /**\n     * Creates a Canvas element, renders this target to it and then returns it.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLCanvasElement} A Canvas element with the texture rendered on.\n     */\n\n\n    CanvasExtract.prototype.canvas = function canvas(target) {\n        var renderer = this.renderer;\n        var context = void 0;\n        var resolution = void 0;\n        var frame = void 0;\n        var renderTexture = void 0;\n\n        if (target) {\n            if (target instanceof core.RenderTexture) {\n                renderTexture = target;\n            } else {\n                renderTexture = renderer.generateTexture(target);\n            }\n        }\n\n        if (renderTexture) {\n            context = renderTexture.baseTexture._canvasRenderTarget.context;\n            resolution = renderTexture.baseTexture._canvasRenderTarget.resolution;\n            frame = renderTexture.frame;\n        } else {\n            context = renderer.rootContext;\n\n            frame = TEMP_RECT;\n            frame.width = this.renderer.width;\n            frame.height = this.renderer.height;\n        }\n\n        var width = frame.width * resolution;\n        var height = frame.height * resolution;\n\n        var canvasBuffer = new core.CanvasRenderTarget(width, height);\n        var canvasData = context.getImageData(frame.x * resolution, frame.y * resolution, width, height);\n\n        canvasBuffer.context.putImageData(canvasData, 0, 0);\n\n        // send the canvas back..\n        return canvasBuffer.canvas;\n    };\n\n    /**\n     * Will return a one-dimensional array containing the pixel data of the entire texture in RGBA\n     * order, with integer values between 0 and 255 (included).\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {Uint8ClampedArray} One-dimensional array containing the pixel data of the entire texture\n     */\n\n\n    CanvasExtract.prototype.pixels = function pixels(target) {\n        var renderer = this.renderer;\n        var context = void 0;\n        var resolution = void 0;\n        var frame = void 0;\n        var renderTexture = void 0;\n\n        if (target) {\n            if (target instanceof core.RenderTexture) {\n                renderTexture = target;\n            } else {\n                renderTexture = renderer.generateTexture(target);\n            }\n        }\n\n        if (renderTexture) {\n            context = renderTexture.baseTexture._canvasRenderTarget.context;\n            resolution = renderTexture.baseTexture._canvasRenderTarget.resolution;\n            frame = renderTexture.frame;\n        } else {\n            context = renderer.rootContext;\n\n            frame = TEMP_RECT;\n            frame.width = renderer.width;\n            frame.height = renderer.height;\n        }\n\n        return context.getImageData(0, 0, frame.width * resolution, frame.height * resolution).data;\n    };\n\n    /**\n     * Destroys the extract\n     *\n     */\n\n\n    CanvasExtract.prototype.destroy = function destroy() {\n        this.renderer.extract = null;\n        this.renderer = null;\n    };\n\n    return CanvasExtract;\n}();\n\nexports.default = CanvasExtract;\n\n\ncore.CanvasRenderer.registerPlugin('extract', CanvasExtract);\n//# sourceMappingURL=CanvasExtract.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extract/canvas/CanvasExtract.js\n// module id = 129\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLExtract = require('./webgl/WebGLExtract');\n\nObject.defineProperty(exports, 'webgl', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_WebGLExtract).default;\n  }\n});\n\nvar _CanvasExtract = require('./canvas/CanvasExtract');\n\nObject.defineProperty(exports, 'canvas', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasExtract).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extract/index.js\n// module id = 130\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TEMP_RECT = new core.Rectangle();\nvar BYTES_PER_PIXEL = 4;\n\n/**\n * The extract manager provides functionality to export content from the renderers.\n *\n * @class\n * @memberof PIXI\n */\n\nvar WebGLExtract = function () {\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    function WebGLExtract(renderer) {\n        _classCallCheck(this, WebGLExtract);\n\n        this.renderer = renderer;\n        /**\n         * Collection of methods for extracting data (image, pixels, etc.) from a display object or render texture\n         *\n         * @member {PIXI.WebGLExtract} extract\n         * @memberof PIXI.WebGLRenderer#\n         * @see PIXI.WebGLExtract\n         */\n        renderer.extract = this;\n    }\n\n    /**\n     * Will return a HTML Image of the target\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLImageElement} HTML Image of the target\n     */\n\n\n    WebGLExtract.prototype.image = function image(target) {\n        var image = new Image();\n\n        image.src = this.base64(target);\n\n        return image;\n    };\n\n    /**\n     * Will return a a base64 encoded string of this target. It works by calling\n     *  `WebGLExtract.getCanvas` and then running toDataURL on that.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {string} A base64 encoded string of the texture.\n     */\n\n\n    WebGLExtract.prototype.base64 = function base64(target) {\n        return this.canvas(target).toDataURL();\n    };\n\n    /**\n     * Creates a Canvas element, renders this target to it and then returns it.\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {HTMLCanvasElement} A Canvas element with the texture rendered on.\n     */\n\n\n    WebGLExtract.prototype.canvas = function canvas(target) {\n        var renderer = this.renderer;\n        var textureBuffer = void 0;\n        var resolution = void 0;\n        var frame = void 0;\n        var flipY = false;\n        var renderTexture = void 0;\n\n        if (target) {\n            if (target instanceof core.RenderTexture) {\n                renderTexture = target;\n            } else {\n                renderTexture = this.renderer.generateTexture(target);\n            }\n        }\n\n        if (renderTexture) {\n            textureBuffer = renderTexture.baseTexture._glRenderTargets[this.renderer.CONTEXT_UID];\n            resolution = textureBuffer.resolution;\n            frame = renderTexture.frame;\n            flipY = false;\n        } else {\n            textureBuffer = this.renderer.rootRenderTarget;\n            resolution = textureBuffer.resolution;\n            flipY = true;\n\n            frame = TEMP_RECT;\n            frame.width = textureBuffer.size.width;\n            frame.height = textureBuffer.size.height;\n        }\n\n        var width = frame.width * resolution;\n        var height = frame.height * resolution;\n\n        var canvasBuffer = new core.CanvasRenderTarget(width, height);\n\n        if (textureBuffer) {\n            // bind the buffer\n            renderer.bindRenderTarget(textureBuffer);\n\n            // set up an array of pixels\n            var webglPixels = new Uint8Array(BYTES_PER_PIXEL * width * height);\n\n            // read pixels to the array\n            var gl = renderer.gl;\n\n            gl.readPixels(frame.x * resolution, frame.y * resolution, width, height, gl.RGBA, gl.UNSIGNED_BYTE, webglPixels);\n\n            // add the pixels to the canvas\n            var canvasData = canvasBuffer.context.getImageData(0, 0, width, height);\n\n            canvasData.data.set(webglPixels);\n\n            canvasBuffer.context.putImageData(canvasData, 0, 0);\n\n            // pulling pixels\n            if (flipY) {\n                canvasBuffer.context.scale(1, -1);\n                canvasBuffer.context.drawImage(canvasBuffer.canvas, 0, -height);\n            }\n        }\n\n        // send the canvas back..\n        return canvasBuffer.canvas;\n    };\n\n    /**\n     * Will return a one-dimensional array containing the pixel data of the entire texture in RGBA\n     * order, with integer values between 0 and 255 (included).\n     *\n     * @param {PIXI.DisplayObject|PIXI.RenderTexture} target - A displayObject or renderTexture\n     *  to convert. If left empty will use use the main renderer\n     * @return {Uint8ClampedArray} One-dimensional array containing the pixel data of the entire texture\n     */\n\n\n    WebGLExtract.prototype.pixels = function pixels(target) {\n        var renderer = this.renderer;\n        var textureBuffer = void 0;\n        var resolution = void 0;\n        var frame = void 0;\n        var renderTexture = void 0;\n\n        if (target) {\n            if (target instanceof core.RenderTexture) {\n                renderTexture = target;\n            } else {\n                renderTexture = this.renderer.generateTexture(target);\n            }\n        }\n\n        if (renderTexture) {\n            textureBuffer = renderTexture.baseTexture._glRenderTargets[this.renderer.CONTEXT_UID];\n            resolution = textureBuffer.resolution;\n            frame = renderTexture.frame;\n        } else {\n            textureBuffer = this.renderer.rootRenderTarget;\n            resolution = textureBuffer.resolution;\n\n            frame = TEMP_RECT;\n            frame.width = textureBuffer.size.width;\n            frame.height = textureBuffer.size.height;\n        }\n\n        var width = frame.width * resolution;\n        var height = frame.height * resolution;\n\n        var webglPixels = new Uint8Array(BYTES_PER_PIXEL * width * height);\n\n        if (textureBuffer) {\n            // bind the buffer\n            renderer.bindRenderTarget(textureBuffer);\n            // read pixels to the array\n            var gl = renderer.gl;\n\n            gl.readPixels(frame.x * resolution, frame.y * resolution, width, height, gl.RGBA, gl.UNSIGNED_BYTE, webglPixels);\n        }\n\n        return webglPixels;\n    };\n\n    /**\n     * Destroys the extract\n     *\n     */\n\n\n    WebGLExtract.prototype.destroy = function destroy() {\n        this.renderer.extract = null;\n        this.renderer = null;\n    };\n\n    return WebGLExtract;\n}();\n\nexports.default = WebGLExtract;\n\n\ncore.WebGLRenderer.registerPlugin('extract', WebGLExtract);\n//# sourceMappingURL=WebGLExtract.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extract/webgl/WebGLExtract.js\n// module id = 131\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @typedef FrameObject\n * @type {object}\n * @property {PIXI.Texture} texture - The {@link PIXI.Texture} of the frame\n * @property {number} time - the duration of the frame in ms\n */\n\n/**\n * An AnimatedSprite is a simple way to display an animation depicted by a list of textures.\n *\n * ```js\n * let alienImages = [\"image_sequence_01.png\",\"image_sequence_02.png\",\"image_sequence_03.png\",\"image_sequence_04.png\"];\n * let textureArray = [];\n *\n * for (let i=0; i < 4; i++)\n * {\n *      let texture = PIXI.Texture.fromImage(alienImages[i]);\n *      textureArray.push(texture);\n * };\n *\n * let mc = new PIXI.AnimatedSprite(textureArray);\n * ```\n *\n * @class\n * @extends PIXI.Sprite\n * @memberof PIXI.extras\n */\nvar AnimatedSprite = function (_core$Sprite) {\n    _inherits(AnimatedSprite, _core$Sprite);\n\n    /**\n     * @param {PIXI.Texture[]|FrameObject[]} textures - an array of {@link PIXI.Texture} or frame\n     *  objects that make up the animation\n     */\n    function AnimatedSprite(textures) {\n        _classCallCheck(this, AnimatedSprite);\n\n        /**\n         * @private\n         */\n        var _this = _possibleConstructorReturn(this, _core$Sprite.call(this, textures[0] instanceof core.Texture ? textures[0] : textures[0].texture));\n\n        _this._textures = null;\n\n        /**\n         * @private\n         */\n        _this._durations = null;\n\n        _this.textures = textures;\n\n        /**\n         * The speed that the AnimatedSprite will play at. Higher is faster, lower is slower\n         *\n         * @member {number}\n         * @default 1\n         */\n        _this.animationSpeed = 1;\n\n        /**\n         * Whether or not the animate sprite repeats after playing.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        _this.loop = true;\n\n        /**\n         * Function to call when a AnimatedSprite finishes playing\n         *\n         * @method\n         * @memberof PIXI.extras.AnimatedSprite#\n         */\n        _this.onComplete = null;\n\n        /**\n         * Function to call when a AnimatedSprite changes which texture is being rendered\n         *\n         * @method\n         * @memberof PIXI.extras.AnimatedSprite#\n         */\n        _this.onFrameChange = null;\n\n        /**\n         * Elapsed time since animation has been started, used internally to display current texture\n         *\n         * @member {number}\n         * @private\n         */\n        _this._currentTime = 0;\n\n        /**\n         * Indicates if the AnimatedSprite is currently playing\n         *\n         * @member {boolean}\n         * @readonly\n         */\n        _this.playing = false;\n        return _this;\n    }\n\n    /**\n     * Stops the AnimatedSprite\n     *\n     */\n\n\n    AnimatedSprite.prototype.stop = function stop() {\n        if (!this.playing) {\n            return;\n        }\n\n        this.playing = false;\n        core.ticker.shared.remove(this.update, this);\n    };\n\n    /**\n     * Plays the AnimatedSprite\n     *\n     */\n\n\n    AnimatedSprite.prototype.play = function play() {\n        if (this.playing) {\n            return;\n        }\n\n        this.playing = true;\n        core.ticker.shared.add(this.update, this);\n    };\n\n    /**\n     * Stops the AnimatedSprite and goes to a specific frame\n     *\n     * @param {number} frameNumber - frame index to stop at\n     */\n\n\n    AnimatedSprite.prototype.gotoAndStop = function gotoAndStop(frameNumber) {\n        this.stop();\n\n        var previousFrame = this.currentFrame;\n\n        this._currentTime = frameNumber;\n\n        if (previousFrame !== this.currentFrame) {\n            this.updateTexture();\n        }\n    };\n\n    /**\n     * Goes to a specific frame and begins playing the AnimatedSprite\n     *\n     * @param {number} frameNumber - frame index to start at\n     */\n\n\n    AnimatedSprite.prototype.gotoAndPlay = function gotoAndPlay(frameNumber) {\n        var previousFrame = this.currentFrame;\n\n        this._currentTime = frameNumber;\n\n        if (previousFrame !== this.currentFrame) {\n            this.updateTexture();\n        }\n\n        this.play();\n    };\n\n    /**\n     * Updates the object transform for rendering.\n     *\n     * @private\n     * @param {number} deltaTime - Time since last tick.\n     */\n\n\n    AnimatedSprite.prototype.update = function update(deltaTime) {\n        var elapsed = this.animationSpeed * deltaTime;\n        var previousFrame = this.currentFrame;\n\n        if (this._durations !== null) {\n            var lag = this._currentTime % 1 * this._durations[this.currentFrame];\n\n            lag += elapsed / 60 * 1000;\n\n            while (lag < 0) {\n                this._currentTime--;\n                lag += this._durations[this.currentFrame];\n            }\n\n            var sign = Math.sign(this.animationSpeed * deltaTime);\n\n            this._currentTime = Math.floor(this._currentTime);\n\n            while (lag >= this._durations[this.currentFrame]) {\n                lag -= this._durations[this.currentFrame] * sign;\n                this._currentTime += sign;\n            }\n\n            this._currentTime += lag / this._durations[this.currentFrame];\n        } else {\n            this._currentTime += elapsed;\n        }\n\n        if (this._currentTime < 0 && !this.loop) {\n            this.gotoAndStop(0);\n\n            if (this.onComplete) {\n                this.onComplete();\n            }\n        } else if (this._currentTime >= this._textures.length && !this.loop) {\n            this.gotoAndStop(this._textures.length - 1);\n\n            if (this.onComplete) {\n                this.onComplete();\n            }\n        } else if (previousFrame !== this.currentFrame) {\n            this.updateTexture();\n        }\n    };\n\n    /**\n     * Updates the displayed texture to match the current frame index\n     *\n     * @private\n     */\n\n\n    AnimatedSprite.prototype.updateTexture = function updateTexture() {\n        this._texture = this._textures[this.currentFrame];\n        this._textureID = -1;\n\n        if (this.onFrameChange) {\n            this.onFrameChange(this.currentFrame);\n        }\n    };\n\n    /**\n     * Stops the AnimatedSprite and destroys it\n     *\n     */\n\n\n    AnimatedSprite.prototype.destroy = function destroy() {\n        this.stop();\n        _core$Sprite.prototype.destroy.call(this);\n    };\n\n    /**\n     * A short hand way of creating a movieclip from an array of frame ids\n     *\n     * @static\n     * @param {string[]} frames - The array of frames ids the movieclip will use as its texture frames\n     * @return {AnimatedSprite} The new animated sprite with the specified frames.\n     */\n\n\n    AnimatedSprite.fromFrames = function fromFrames(frames) {\n        var textures = [];\n\n        for (var i = 0; i < frames.length; ++i) {\n            textures.push(core.Texture.fromFrame(frames[i]));\n        }\n\n        return new AnimatedSprite(textures);\n    };\n\n    /**\n     * A short hand way of creating a movieclip from an array of image ids\n     *\n     * @static\n     * @param {string[]} images - the array of image urls the movieclip will use as its texture frames\n     * @return {AnimatedSprite} The new animate sprite with the specified images as frames.\n     */\n\n\n    AnimatedSprite.fromImages = function fromImages(images) {\n        var textures = [];\n\n        for (var i = 0; i < images.length; ++i) {\n            textures.push(core.Texture.fromImage(images[i]));\n        }\n\n        return new AnimatedSprite(textures);\n    };\n\n    /**\n     * totalFrames is the total number of frames in the AnimatedSprite. This is the same as number of textures\n     * assigned to the AnimatedSprite.\n     *\n     * @readonly\n     * @member {number}\n     * @memberof PIXI.extras.AnimatedSprite#\n     * @default 0\n     */\n\n\n    _createClass(AnimatedSprite, [{\n        key: 'totalFrames',\n        get: function get() {\n            return this._textures.length;\n        }\n\n        /**\n         * The array of textures used for this AnimatedSprite\n         *\n         * @member {PIXI.Texture[]}\n         * @memberof PIXI.extras.AnimatedSprite#\n         */\n\n    }, {\n        key: 'textures',\n        get: function get() {\n            return this._textures;\n        }\n\n        /**\n         * Sets the textures.\n         *\n         * @param {PIXI.Texture[]} value - The texture to set.\n         */\n        ,\n        set: function set(value) {\n            if (value[0] instanceof core.Texture) {\n                this._textures = value;\n                this._durations = null;\n            } else {\n                this._textures = [];\n                this._durations = [];\n\n                for (var i = 0; i < value.length; i++) {\n                    this._textures.push(value[i].texture);\n                    this._durations.push(value[i].time);\n                }\n            }\n        }\n\n        /**\n        * The AnimatedSprites current frame index\n        *\n        * @member {number}\n        * @memberof PIXI.extras.AnimatedSprite#\n        * @readonly\n        */\n\n    }, {\n        key: 'currentFrame',\n        get: function get() {\n            var currentFrame = Math.floor(this._currentTime) % this._textures.length;\n\n            if (currentFrame < 0) {\n                currentFrame += this._textures.length;\n            }\n\n            return currentFrame;\n        }\n    }]);\n\n    return AnimatedSprite;\n}(core.Sprite);\n\nexports.default = AnimatedSprite;\n//# sourceMappingURL=AnimatedSprite.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extras/AnimatedSprite.js\n// module id = 132\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _ObservablePoint = require('../core/math/ObservablePoint');\n\nvar _ObservablePoint2 = _interopRequireDefault(_ObservablePoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A BitmapText object will create a line or multiple lines of text using bitmap font. To\n * split a line you can use '\\n', '\\r' or '\\r\\n' in your string. You can generate the fnt files using:\n *\n * A BitmapText can only be created when the font is loaded\n *\n * ```js\n * // in this case the font is in a file called 'desyrel.fnt'\n * let bitmapText = new PIXI.extras.BitmapText(\"text using a fancy font!\", {font: \"35px Desyrel\", align: \"right\"});\n * ```\n *\n * http://www.angelcode.com/products/bmfont/ for windows or\n * http://www.bmglyph.com/ for mac.\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI.extras\n */\nvar BitmapText = function (_core$Container) {\n    _inherits(BitmapText, _core$Container);\n\n    /**\n     * @param {string} text - The copy that you would like the text to display\n     * @param {object} style - The style parameters\n     * @param {string|object} style.font - The font descriptor for the object, can be passed as a string of form\n     *      \"24px FontName\" or \"FontName\" or as an object with explicit name/size properties.\n     * @param {string} [style.font.name] - The bitmap font id\n     * @param {number} [style.font.size] - The size of the font in pixels, e.g. 24\n     * @param {string} [style.align='left'] - Alignment for multiline text ('left', 'center' or 'right'), does not affect\n     *      single line text\n     * @param {number} [style.tint=0xFFFFFF] - The tint color\n     */\n    function BitmapText(text) {\n        var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, BitmapText);\n\n        /**\n         * The width of the overall text, different from fontSize,\n         * which is defined in the style object\n         *\n         * @member {number}\n         * @readonly\n         */\n        var _this = _possibleConstructorReturn(this, _core$Container.call(this));\n\n        _this.textWidth = 0;\n\n        /**\n         * The height of the overall text, different from fontSize,\n         * which is defined in the style object\n         *\n         * @member {number}\n         * @readonly\n         */\n        _this.textHeight = 0;\n\n        /**\n         * Private tracker for the letter sprite pool.\n         *\n         * @member {PIXI.Sprite[]}\n         * @private\n         */\n        _this._glyphs = [];\n\n        /**\n         * Private tracker for the current style.\n         *\n         * @member {object}\n         * @private\n         */\n        _this._font = {\n            tint: style.tint !== undefined ? style.tint : 0xFFFFFF,\n            align: style.align || 'left',\n            name: null,\n            size: 0\n        };\n\n        /**\n         * Private tracker for the current font.\n         *\n         * @member {object}\n         * @private\n         */\n        _this.font = style.font; // run font setter\n\n        /**\n         * Private tracker for the current text.\n         *\n         * @member {string}\n         * @private\n         */\n        _this._text = text;\n\n        /**\n         * The max width of this bitmap text in pixels. If the text provided is longer than the\n         * value provided, line breaks will be automatically inserted in the last whitespace.\n         * Disable by setting value to 0\n         *\n         * @member {number}\n         */\n        _this.maxWidth = 0;\n\n        /**\n         * The max line height. This is useful when trying to use the total height of the Text,\n         * ie: when trying to vertically align.\n         *\n         * @member {number}\n         */\n        _this.maxLineHeight = 0;\n\n        /**\n         * Text anchor. read-only\n         *\n         * @member {PIXI.ObservablePoint}\n         * @private\n         */\n        _this._anchor = new _ObservablePoint2.default(function () {\n            _this.dirty = true;\n        }, _this, 0, 0);\n\n        /**\n         * The dirty state of this object.\n         *\n         * @member {boolean}\n         */\n        _this.dirty = false;\n\n        _this.updateText();\n        return _this;\n    }\n\n    /**\n     * Renders text and updates it when needed\n     *\n     * @private\n     */\n\n\n    BitmapText.prototype.updateText = function updateText() {\n        var data = BitmapText.fonts[this._font.name];\n        var scale = this._font.size / data.size;\n        var pos = new core.Point();\n        var chars = [];\n        var lineWidths = [];\n\n        var prevCharCode = null;\n        var lastLineWidth = 0;\n        var maxLineWidth = 0;\n        var line = 0;\n        var lastSpace = -1;\n        var lastSpaceWidth = 0;\n        var maxLineHeight = 0;\n\n        for (var i = 0; i < this.text.length; i++) {\n            var charCode = this.text.charCodeAt(i);\n\n            if (/(\\s)/.test(this.text.charAt(i))) {\n                lastSpace = i;\n                lastSpaceWidth = lastLineWidth;\n            }\n\n            if (/(?:\\r\\n|\\r|\\n)/.test(this.text.charAt(i))) {\n                lineWidths.push(lastLineWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n                line++;\n\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n                continue;\n            }\n\n            if (lastSpace !== -1 && this.maxWidth > 0 && pos.x * scale > this.maxWidth) {\n                core.utils.removeItems(chars, lastSpace, i - lastSpace);\n                i = lastSpace;\n                lastSpace = -1;\n\n                lineWidths.push(lastSpaceWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastSpaceWidth);\n                line++;\n\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n                continue;\n            }\n\n            var charData = data.chars[charCode];\n\n            if (!charData) {\n                continue;\n            }\n\n            if (prevCharCode && charData.kerning[prevCharCode]) {\n                pos.x += charData.kerning[prevCharCode];\n            }\n\n            chars.push({\n                texture: charData.texture,\n                line: line,\n                charCode: charCode,\n                position: new core.Point(pos.x + charData.xOffset, pos.y + charData.yOffset)\n            });\n            lastLineWidth = pos.x + (charData.texture.width + charData.xOffset);\n            pos.x += charData.xAdvance;\n            maxLineHeight = Math.max(maxLineHeight, charData.yOffset + charData.texture.height);\n            prevCharCode = charCode;\n        }\n\n        lineWidths.push(lastLineWidth);\n        maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n\n        var lineAlignOffsets = [];\n\n        for (var _i = 0; _i <= line; _i++) {\n            var alignOffset = 0;\n\n            if (this._font.align === 'right') {\n                alignOffset = maxLineWidth - lineWidths[_i];\n            } else if (this._font.align === 'center') {\n                alignOffset = (maxLineWidth - lineWidths[_i]) / 2;\n            }\n\n            lineAlignOffsets.push(alignOffset);\n        }\n\n        var lenChars = chars.length;\n        var tint = this.tint;\n\n        for (var _i2 = 0; _i2 < lenChars; _i2++) {\n            var c = this._glyphs[_i2]; // get the next glyph sprite\n\n            if (c) {\n                c.texture = chars[_i2].texture;\n            } else {\n                c = new core.Sprite(chars[_i2].texture);\n                this._glyphs.push(c);\n            }\n\n            c.position.x = (chars[_i2].position.x + lineAlignOffsets[chars[_i2].line]) * scale;\n            c.position.y = chars[_i2].position.y * scale;\n            c.scale.x = c.scale.y = scale;\n            c.tint = tint;\n\n            if (!c.parent) {\n                this.addChild(c);\n            }\n        }\n\n        // remove unnecessary children.\n        for (var _i3 = lenChars; _i3 < this._glyphs.length; ++_i3) {\n            this.removeChild(this._glyphs[_i3]);\n        }\n\n        this.textWidth = maxLineWidth * scale;\n        this.textHeight = (pos.y + data.lineHeight) * scale;\n\n        // apply anchor\n        if (this.anchor.x !== 0 || this.anchor.y !== 0) {\n            for (var _i4 = 0; _i4 < lenChars; _i4++) {\n                this._glyphs[_i4].x -= this.textWidth * this.anchor.x;\n                this._glyphs[_i4].y -= this.textHeight * this.anchor.y;\n            }\n        }\n        this.maxLineHeight = maxLineHeight * scale;\n    };\n\n    /**\n     * Updates the transform of this object\n     *\n     * @private\n     */\n\n\n    BitmapText.prototype.updateTransform = function updateTransform() {\n        this.validate();\n        this.containerUpdateTransform();\n    };\n\n    /**\n     * Validates text before calling parent's getLocalBounds\n     *\n     * @return {PIXI.Rectangle} The rectangular bounding area\n     */\n\n\n    BitmapText.prototype.getLocalBounds = function getLocalBounds() {\n        this.validate();\n\n        return _core$Container.prototype.getLocalBounds.call(this);\n    };\n\n    /**\n     * Updates text when needed\n     *\n     * @private\n     */\n\n\n    BitmapText.prototype.validate = function validate() {\n        if (this.dirty) {\n            this.updateText();\n            this.dirty = false;\n        }\n    };\n\n    /**\n     * The tint of the BitmapText object\n     *\n     * @member {number}\n     * @memberof PIXI.extras.BitmapText#\n     */\n\n\n    _createClass(BitmapText, [{\n        key: 'tint',\n        get: function get() {\n            return this._font.tint;\n        }\n\n        /**\n         * Sets the tint.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._font.tint = typeof value === 'number' && value >= 0 ? value : 0xFFFFFF;\n\n            this.dirty = true;\n        }\n\n        /**\n         * The alignment of the BitmapText object\n         *\n         * @member {string}\n         * @default 'left'\n         * @memberof PIXI.extras.BitmapText#\n         */\n\n    }, {\n        key: 'align',\n        get: function get() {\n            return this._font.align;\n        }\n\n        /**\n         * Sets the alignment\n         *\n         * @param {string} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._font.align = value || 'left';\n\n            this.dirty = true;\n        }\n\n        /**\n         * The anchor sets the origin point of the text.\n         * The default is 0,0 this means the text's origin is the top left\n         * Setting the anchor to 0.5,0.5 means the text's origin is centered\n         * Setting the anchor to 1,1 would mean the text's origin point will be the bottom right corner\n         *\n         * @member {PIXI.Point | number}\n         * @memberof PIXI.extras.BitmapText#\n         */\n\n    }, {\n        key: 'anchor',\n        get: function get() {\n            return this._anchor;\n        }\n\n        /**\n         * Sets the anchor.\n         *\n         * @param {PIXI.Point|number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (typeof value === 'number') {\n                this._anchor.set(value);\n            } else {\n                this._anchor.copy(value);\n            }\n        }\n\n        /**\n         * The font descriptor of the BitmapText object\n         *\n         * @member {string|object}\n         * @memberof PIXI.extras.BitmapText#\n         */\n\n    }, {\n        key: 'font',\n        get: function get() {\n            return this._font;\n        }\n\n        /**\n         * Sets the font.\n         *\n         * @param {string|object} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            if (!value) {\n                return;\n            }\n\n            if (typeof value === 'string') {\n                value = value.split(' ');\n\n                this._font.name = value.length === 1 ? value[0] : value.slice(1).join(' ');\n                this._font.size = value.length >= 2 ? parseInt(value[0], 10) : BitmapText.fonts[this._font.name].size;\n            } else {\n                this._font.name = value.name;\n                this._font.size = typeof value.size === 'number' ? value.size : parseInt(value.size, 10);\n            }\n\n            this.dirty = true;\n        }\n\n        /**\n         * The text of the BitmapText object\n         *\n         * @member {string}\n         * @memberof PIXI.extras.BitmapText#\n         */\n\n    }, {\n        key: 'text',\n        get: function get() {\n            return this._text;\n        }\n\n        /**\n         * Sets the text.\n         *\n         * @param {string} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            value = value.toString() || ' ';\n            if (this._text === value) {\n                return;\n            }\n            this._text = value;\n            this.dirty = true;\n        }\n    }]);\n\n    return BitmapText;\n}(core.Container);\n\nexports.default = BitmapText;\n\n\nBitmapText.fonts = {};\n//# sourceMappingURL=BitmapText.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extras/BitmapText.js\n// module id = 133\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _CanvasTinter = require('../core/sprites/canvas/CanvasTinter');\n\nvar _CanvasTinter2 = _interopRequireDefault(_CanvasTinter);\n\nvar _TextureTransform = require('./TextureTransform');\n\nvar _TextureTransform2 = _interopRequireDefault(_TextureTransform);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tempPoint = new core.Point();\n\n/**\n * A tiling sprite is a fast way of rendering a tiling image\n *\n * @class\n * @extends PIXI.Sprite\n * @memberof PIXI.extras\n */\n\nvar TilingSprite = function (_core$Sprite) {\n    _inherits(TilingSprite, _core$Sprite);\n\n    /**\n     * @param {PIXI.Texture} texture - the texture of the tiling sprite\n     * @param {number} [width=100] - the width of the tiling sprite\n     * @param {number} [height=100] - the height of the tiling sprite\n     */\n    function TilingSprite(texture) {\n        var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n        var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n\n        _classCallCheck(this, TilingSprite);\n\n        /**\n         * Tile transform\n         *\n         * @member {PIXI.TransformStatic}\n         */\n        var _this = _possibleConstructorReturn(this, _core$Sprite.call(this, texture));\n\n        _this.tileTransform = new core.TransformStatic();\n\n        // /// private\n\n        /**\n         * The with of the tiling sprite\n         *\n         * @member {number}\n         * @private\n         */\n        _this._width = width;\n\n        /**\n         * The height of the tiling sprite\n         *\n         * @member {number}\n         * @private\n         */\n        _this._height = height;\n\n        /**\n         * Canvas pattern\n         *\n         * @type {CanvasPattern}\n         * @private\n         */\n        _this._canvasPattern = null;\n\n        /**\n         * transform that is applied to UV to get the texture coords\n         *\n         * @member {PIXI.extras.TextureTransform}\n         */\n        _this.uvTransform = texture.transform || new _TextureTransform2.default(texture);\n        return _this;\n    }\n    /**\n     * Changes frame clamping in corresponding textureTransform, shortcut\n     * Change to -0.5 to add a pixel to the edge, recommended for transparent trimmed textures in atlas\n     *\n     * @default 0.5\n     * @member {number}\n     * @memberof PIXI.TilingSprite\n     */\n\n\n    /**\n     * @private\n     */\n    TilingSprite.prototype._onTextureUpdate = function _onTextureUpdate() {\n        if (this.uvTransform) {\n            this.uvTransform.texture = this._texture;\n        }\n    };\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The renderer\n     */\n\n\n    TilingSprite.prototype._renderWebGL = function _renderWebGL(renderer) {\n        // tweak our texture temporarily..\n        var texture = this._texture;\n\n        if (!texture || !texture.valid) {\n            return;\n        }\n\n        this.tileTransform.updateLocalTransform();\n        this.uvTransform.update();\n\n        renderer.setObjectRenderer(renderer.plugins.tilingSprite);\n        renderer.plugins.tilingSprite.render(this);\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - a reference to the canvas renderer\n     */\n\n\n    TilingSprite.prototype._renderCanvas = function _renderCanvas(renderer) {\n        var texture = this._texture;\n\n        if (!texture.baseTexture.hasLoaded) {\n            return;\n        }\n\n        var context = renderer.context;\n        var transform = this.worldTransform;\n        var resolution = renderer.resolution;\n        var baseTexture = texture.baseTexture;\n        var baseTextureResolution = texture.baseTexture.resolution;\n        var modX = this.tilePosition.x / this.tileScale.x % texture._frame.width;\n        var modY = this.tilePosition.y / this.tileScale.y % texture._frame.height;\n\n        // create a nice shiny pattern!\n        // TODO this needs to be refreshed if texture changes..\n        if (!this._canvasPattern) {\n            // cut an object from a spritesheet..\n            var tempCanvas = new core.CanvasRenderTarget(texture._frame.width, texture._frame.height, baseTextureResolution);\n\n            // Tint the tiling sprite\n            if (this.tint !== 0xFFFFFF) {\n                if (this.cachedTint !== this.tint) {\n                    this.cachedTint = this.tint;\n\n                    this.tintedTexture = _CanvasTinter2.default.getTintedTexture(this, this.tint);\n                }\n                tempCanvas.context.drawImage(this.tintedTexture, 0, 0);\n            } else {\n                tempCanvas.context.drawImage(baseTexture.source, -texture._frame.x, -texture._frame.y);\n            }\n            this._canvasPattern = tempCanvas.context.createPattern(tempCanvas.canvas, 'repeat');\n        }\n\n        // set context state..\n        context.globalAlpha = this.worldAlpha;\n        context.setTransform(transform.a * resolution, transform.b * resolution, transform.c * resolution, transform.d * resolution, transform.tx * resolution, transform.ty * resolution);\n\n        // TODO - this should be rolled into the setTransform above..\n        context.scale(this.tileScale.x / baseTextureResolution, this.tileScale.y / baseTextureResolution);\n\n        context.translate(modX + this.anchor.x * -this._width, modY + this.anchor.y * -this._height);\n\n        renderer.setBlendMode(this.blendMode);\n\n        // fill the pattern!\n        context.fillStyle = this._canvasPattern;\n        context.fillRect(-modX, -modY, this._width / this.tileScale.x * baseTextureResolution, this._height / this.tileScale.y * baseTextureResolution);\n    };\n\n    /**\n     * Updates the bounds of the tiling sprite.\n     *\n     * @private\n     */\n\n\n    TilingSprite.prototype._calculateBounds = function _calculateBounds() {\n        var minX = this._width * -this._anchor._x;\n        var minY = this._height * -this._anchor._y;\n        var maxX = this._width * (1 - this._anchor._x);\n        var maxY = this._height * (1 - this._anchor._y);\n\n        this._bounds.addFrame(this.transform, minX, minY, maxX, maxY);\n    };\n\n    /**\n     * Gets the local bounds of the sprite object.\n     *\n     * @param {PIXI.Rectangle} rect - The output rectangle.\n     * @return {PIXI.Rectangle} The bounds.\n     */\n\n\n    TilingSprite.prototype.getLocalBounds = function getLocalBounds(rect) {\n        // we can do a fast local bounds if the sprite has no children!\n        if (this.children.length === 0) {\n            this._bounds.minX = this._width * -this._anchor._x;\n            this._bounds.minY = this._height * -this._anchor._y;\n            this._bounds.maxX = this._width * (1 - this._anchor._x);\n            this._bounds.maxY = this._height * (1 - this._anchor._x);\n\n            if (!rect) {\n                if (!this._localBoundsRect) {\n                    this._localBoundsRect = new core.Rectangle();\n                }\n\n                rect = this._localBoundsRect;\n            }\n\n            return this._bounds.getRectangle(rect);\n        }\n\n        return _core$Sprite.prototype.getLocalBounds.call(this, rect);\n    };\n\n    /**\n     * Checks if a point is inside this tiling sprite.\n     *\n     * @param {PIXI.Point} point - the point to check\n     * @return {boolean} Whether or not the sprite contains the point.\n     */\n\n\n    TilingSprite.prototype.containsPoint = function containsPoint(point) {\n        this.worldTransform.applyInverse(point, tempPoint);\n\n        var width = this._width;\n        var height = this._height;\n        var x1 = -width * this.anchor._x;\n\n        if (tempPoint.x > x1 && tempPoint.x < x1 + width) {\n            var y1 = -height * this.anchor._y;\n\n            if (tempPoint.y > y1 && tempPoint.y < y1 + height) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * Destroys this tiling sprite\n     *\n     */\n\n\n    TilingSprite.prototype.destroy = function destroy() {\n        _core$Sprite.prototype.destroy.call(this);\n\n        this.tileTransform = null;\n        this.uvTransform = null;\n    };\n\n    /**\n     * Helper function that creates a new tiling sprite based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|PIXI.BaseTexture|HTMLCanvasElement|HTMLVideoElement} source - Source to create texture from\n     * @param {number} width - the width of the tiling sprite\n     * @param {number} height - the height of the tiling sprite\n     * @return {PIXI.Texture} The newly created texture\n     */\n\n\n    TilingSprite.from = function from(source, width, height) {\n        return new TilingSprite(core.Texture.from(source), width, height);\n    };\n\n    /**\n     * Helper function that creates a tiling sprite that will use a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @param {number} width - the width of the tiling sprite\n     * @param {number} height - the height of the tiling sprite\n     * @return {PIXI.extras.TilingSprite} A new TilingSprite using a texture from the texture cache matching the frameId\n     */\n\n\n    TilingSprite.fromFrame = function fromFrame(frameId, width, height) {\n        var texture = core.utils.TextureCache[frameId];\n\n        if (!texture) {\n            throw new Error('The frameId \"' + frameId + '\" does not exist in the texture cache ' + this);\n        }\n\n        return new TilingSprite(texture, width, height);\n    };\n\n    /**\n     * Helper function that creates a sprite that will contain a texture based on an image url\n     * If the image is not in the texture cache it will be loaded\n     *\n     * @static\n     * @param {string} imageId - The image url of the texture\n     * @param {number} width - the width of the tiling sprite\n     * @param {number} height - the height of the tiling sprite\n     * @param {boolean} [crossorigin] - if you want to specify the cross-origin parameter\n     * @param {number} [scaleMode=PIXI.settings.SCALE_MODE] - if you want to specify the scale mode,\n     *  see {@link PIXI.SCALE_MODES} for possible values\n     * @return {PIXI.extras.TilingSprite} A new TilingSprite using a texture from the texture cache matching the image id\n     */\n\n\n    TilingSprite.fromImage = function fromImage(imageId, width, height, crossorigin, scaleMode) {\n        return new TilingSprite(core.Texture.fromImage(imageId, crossorigin, scaleMode), width, height);\n    };\n\n    /**\n     * The width of the sprite, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.extras.TilingSprite#\n     */\n\n\n    _createClass(TilingSprite, [{\n        key: 'clampMargin',\n        get: function get() {\n            return this.uvTransform.clampMargin;\n        }\n\n        /**\n         * setter for clampMargin\n         *\n         * @param {number} value assigned value\n         */\n        ,\n        set: function set(value) {\n            this.uvTransform.clampMargin = value;\n            this.uvTransform.update(true);\n        }\n\n        /**\n         * The scaling of the image that is being tiled\n         *\n         * @member {PIXI.ObservablePoint}\n         * @memberof PIXI.DisplayObject#\n         */\n\n    }, {\n        key: 'tileScale',\n        get: function get() {\n            return this.tileTransform.scale;\n        }\n\n        /**\n         * Copies the point to the scale of the tiled image.\n         *\n         * @param {PIXI.Point|PIXI.ObservablePoint} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.tileTransform.scale.copy(value);\n        }\n\n        /**\n         * The offset of the image that is being tiled\n         *\n         * @member {PIXI.ObservablePoint}\n         * @memberof PIXI.TilingSprite#\n         */\n\n    }, {\n        key: 'tilePosition',\n        get: function get() {\n            return this.tileTransform.position;\n        }\n\n        /**\n         * Copies the point to the position of the tiled image.\n         *\n         * @param {PIXI.Point|PIXI.ObservablePoint} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.tileTransform.position.copy(value);\n        }\n    }, {\n        key: 'width',\n        get: function get() {\n            return this._width;\n        }\n\n        /**\n         * Sets the width.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._width = value;\n        }\n\n        /**\n         * The height of the TilingSprite, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         * @memberof PIXI.extras.TilingSprite#\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return this._height;\n        }\n\n        /**\n         * Sets the width.\n         *\n         * @param {number} value - The value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._height = value;\n        }\n    }]);\n\n    return TilingSprite;\n}(core.Sprite);\n\nexports.default = TilingSprite;\n//# sourceMappingURL=TilingSprite.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extras/TilingSprite.js\n// module id = 134\n// module chunks = 0","'use strict';\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DisplayObject = core.DisplayObject;\nvar _tempMatrix = new core.Matrix();\n\nDisplayObject.prototype._cacheAsBitmap = false;\nDisplayObject.prototype._cacheData = false;\n\n// figured theres no point adding ALL the extra variables to prototype.\n// this model can hold the information needed. This can also be generated on demand as\n// most objects are not cached as bitmaps.\n/**\n * @class\n * @ignore\n */\n\nvar CacheData =\n/**\n *\n */\nfunction CacheData() {\n    _classCallCheck(this, CacheData);\n\n    this.originalRenderWebGL = null;\n    this.originalRenderCanvas = null;\n    this.originalCalculateBounds = null;\n    this.originalGetLocalBounds = null;\n\n    this.originalUpdateTransform = null;\n    this.originalHitTest = null;\n    this.originalDestroy = null;\n    this.originalMask = null;\n    this.originalFilterArea = null;\n    this.sprite = null;\n};\n\nObject.defineProperties(DisplayObject.prototype, {\n    /**\n     * Set this to true if you want this display object to be cached as a bitmap.\n     * This basically takes a snap shot of the display object as it is at that moment. It can\n     * provide a performance benefit for complex static displayObjects.\n     * To remove simply set this property to 'false'\n     *\n     * @member {boolean}\n     * @memberof PIXI.DisplayObject#\n     */\n    cacheAsBitmap: {\n        get: function get() {\n            return this._cacheAsBitmap;\n        },\n        set: function set(value) {\n            if (this._cacheAsBitmap === value) {\n                return;\n            }\n\n            this._cacheAsBitmap = value;\n\n            var data = void 0;\n\n            if (value) {\n                if (!this._cacheData) {\n                    this._cacheData = new CacheData();\n                }\n\n                data = this._cacheData;\n\n                data.originalRenderWebGL = this.renderWebGL;\n                data.originalRenderCanvas = this.renderCanvas;\n\n                data.originalUpdateTransform = this.updateTransform;\n                data.originalCalculateBounds = this._calculateBounds;\n                data.originalGetLocalBounds = this.getLocalBounds;\n\n                data.originalDestroy = this.destroy;\n\n                data.originalContainsPoint = this.containsPoint;\n\n                data.originalMask = this._mask;\n                data.originalFilterArea = this.filterArea;\n\n                this.renderWebGL = this._renderCachedWebGL;\n                this.renderCanvas = this._renderCachedCanvas;\n\n                this.destroy = this._cacheAsBitmapDestroy;\n            } else {\n                data = this._cacheData;\n\n                if (data.sprite) {\n                    this._destroyCachedDisplayObject();\n                }\n\n                this.renderWebGL = data.originalRenderWebGL;\n                this.renderCanvas = data.originalRenderCanvas;\n                this._calculateBounds = data.originalCalculateBounds;\n                this.getLocalBounds = data.originalGetLocalBounds;\n\n                this.destroy = data.originalDestroy;\n\n                this.updateTransform = data.originalUpdateTransform;\n                this.containsPoint = data.originalContainsPoint;\n\n                this._mask = data.originalMask;\n                this.filterArea = data.originalFilterArea;\n            }\n        }\n    }\n});\n\n/**\n * Renders a cached version of the sprite with WebGL\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.WebGLRenderer} renderer - the WebGL renderer\n */\nDisplayObject.prototype._renderCachedWebGL = function _renderCachedWebGL(renderer) {\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n        return;\n    }\n\n    this._initCachedDisplayObject(renderer);\n\n    this._cacheData.sprite._transformID = -1;\n    this._cacheData.sprite.worldAlpha = this.worldAlpha;\n    this._cacheData.sprite._renderWebGL(renderer);\n};\n\n/**\n * Prepares the WebGL renderer to cache the sprite\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.WebGLRenderer} renderer - the WebGL renderer\n */\nDisplayObject.prototype._initCachedDisplayObject = function _initCachedDisplayObject(renderer) {\n    if (this._cacheData && this._cacheData.sprite) {\n        return;\n    }\n\n    // make sure alpha is set to 1 otherwise it will get rendered as invisible!\n    var cacheAlpha = this.alpha;\n\n    this.alpha = 1;\n\n    // first we flush anything left in the renderer (otherwise it would get rendered to the cached texture)\n    renderer.currentRenderer.flush();\n    // this.filters= [];\n\n    // next we find the dimensions of the untransformed object\n    // this function also calls updatetransform on all its children as part of the measuring.\n    // This means we don't need to update the transform again in this function\n    // TODO pass an object to clone too? saves having to create a new one each time!\n    var bounds = this.getLocalBounds().clone();\n\n    // add some padding!\n    if (this._filters) {\n        var padding = this._filters[0].padding;\n\n        bounds.pad(padding);\n    }\n\n    // for now we cache the current renderTarget that the webGL renderer is currently using.\n    // this could be more elegent..\n    var cachedRenderTarget = renderer._activeRenderTarget;\n    // We also store the filter stack - I will definitely look to change how this works a little later down the line.\n    var stack = renderer.filterManager.filterStack;\n\n    // this renderTexture will be used to store the cached DisplayObject\n\n    var renderTexture = core.RenderTexture.create(bounds.width | 0, bounds.height | 0);\n\n    // need to set //\n    var m = _tempMatrix;\n\n    m.tx = -bounds.x;\n    m.ty = -bounds.y;\n\n    // reset\n    this.transform.worldTransform.identity();\n\n    // set all properties to there original so we can render to a texture\n    this.renderWebGL = this._cacheData.originalRenderWebGL;\n\n    renderer.render(this, renderTexture, true, m, true);\n    // now restore the state be setting the new properties\n\n    renderer.bindRenderTarget(cachedRenderTarget);\n\n    renderer.filterManager.filterStack = stack;\n\n    this.renderWebGL = this._renderCachedWebGL;\n    this.updateTransform = this.displayObjectUpdateTransform;\n\n    this._mask = null;\n    this.filterArea = null;\n\n    // create our cached sprite\n    var cachedSprite = new core.Sprite(renderTexture);\n\n    cachedSprite.transform.worldTransform = this.transform.worldTransform;\n    cachedSprite.anchor.x = -(bounds.x / bounds.width);\n    cachedSprite.anchor.y = -(bounds.y / bounds.height);\n    cachedSprite.alpha = cacheAlpha;\n    cachedSprite._bounds = this._bounds;\n\n    // easy bounds..\n    this._calculateBounds = this._calculateCachedBounds;\n    this.getLocalBounds = this._getCachedLocalBounds;\n\n    this._cacheData.sprite = cachedSprite;\n\n    this.transform._parentID = -1;\n    // restore the transform of the cached sprite to avoid the nasty flicker..\n    this.updateTransform();\n\n    // map the hit test..\n    this.containsPoint = cachedSprite.containsPoint.bind(cachedSprite);\n};\n\n/**\n * Renders a cached version of the sprite with canvas\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.WebGLRenderer} renderer - the WebGL renderer\n */\nDisplayObject.prototype._renderCachedCanvas = function _renderCachedCanvas(renderer) {\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n        return;\n    }\n\n    this._initCachedDisplayObjectCanvas(renderer);\n\n    this._cacheData.sprite.worldAlpha = this.worldAlpha;\n\n    this._cacheData.sprite.renderCanvas(renderer);\n};\n\n// TODO this can be the same as the webGL verison.. will need to do a little tweaking first though..\n/**\n * Prepares the Canvas renderer to cache the sprite\n *\n * @private\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.WebGLRenderer} renderer - the WebGL renderer\n */\nDisplayObject.prototype._initCachedDisplayObjectCanvas = function _initCachedDisplayObjectCanvas(renderer) {\n    if (this._cacheData && this._cacheData.sprite) {\n        return;\n    }\n\n    // get bounds actually transforms the object for us already!\n    var bounds = this.getLocalBounds();\n\n    var cacheAlpha = this.alpha;\n\n    this.alpha = 1;\n\n    var cachedRenderTarget = renderer.context;\n\n    var renderTexture = core.RenderTexture.create(bounds.width | 0, bounds.height | 0);\n\n    // need to set //\n    var m = _tempMatrix;\n\n    this.transform.worldTransform.copy(m);\n    m.invert();\n\n    m.tx -= bounds.x;\n    m.ty -= bounds.y;\n\n    // m.append(this.transform.worldTransform.)\n    // set all properties to there original so we can render to a texture\n    this.renderCanvas = this._cacheData.originalRenderCanvas;\n\n    // renderTexture.render(this, m, true);\n    renderer.render(this, renderTexture, true, m, false);\n\n    // now restore the state be setting the new properties\n    renderer.context = cachedRenderTarget;\n\n    this.renderCanvas = this._renderCachedCanvas;\n    this._calculateBounds = this._calculateCachedBounds;\n\n    this._mask = null;\n    this.filterArea = null;\n\n    // create our cached sprite\n    var cachedSprite = new core.Sprite(renderTexture);\n\n    cachedSprite.transform.worldTransform = this.transform.worldTransform;\n    cachedSprite.anchor.x = -(bounds.x / bounds.width);\n    cachedSprite.anchor.y = -(bounds.y / bounds.height);\n    cachedSprite._bounds = this._bounds;\n    cachedSprite.alpha = cacheAlpha;\n\n    this.updateTransform();\n    this.updateTransform = this.displayObjectUpdateTransform;\n\n    this._cacheData.sprite = cachedSprite;\n\n    this.containsPoint = cachedSprite.containsPoint.bind(cachedSprite);\n};\n\n/**\n * Calculates the bounds of the cached sprite\n *\n * @private\n */\nDisplayObject.prototype._calculateCachedBounds = function _calculateCachedBounds() {\n    this._cacheData.sprite._calculateBounds();\n};\n\n/**\n * Gets the bounds of the cached sprite.\n *\n * @private\n * @return {Rectangle} The local bounds.\n */\nDisplayObject.prototype._getCachedLocalBounds = function _getCachedLocalBounds() {\n    return this._cacheData.sprite.getLocalBounds();\n};\n\n/**\n * Destroys the cached sprite.\n *\n * @private\n */\nDisplayObject.prototype._destroyCachedDisplayObject = function _destroyCachedDisplayObject() {\n    this._cacheData.sprite._texture.destroy(true);\n    this._cacheData.sprite = null;\n};\n\n/**\n * Destroys the cached object.\n *\n * @private\n */\nDisplayObject.prototype._cacheAsBitmapDestroy = function _cacheAsBitmapDestroy() {\n    this.cacheAsBitmap = false;\n    this.destroy();\n};\n//# sourceMappingURL=cacheAsBitmap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extras/cacheAsBitmap.js\n// module id = 135\n// module chunks = 0","'use strict';\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * The instance name of the object.\n *\n * @memberof PIXI.DisplayObject#\n * @member {string}\n */\ncore.DisplayObject.prototype.name = null;\n\n/**\n * Returns the display object in the container\n *\n * @memberof PIXI.Container#\n * @param {string} name - instance name\n * @return {PIXI.DisplayObject} The child with the specified name.\n */\ncore.Container.prototype.getChildByName = function getChildByName(name) {\n    for (var i = 0; i < this.children.length; i++) {\n        if (this.children[i].name === name) {\n            return this.children[i];\n        }\n    }\n\n    return null;\n};\n//# sourceMappingURL=getChildByName.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extras/getChildByName.js\n// module id = 136\n// module chunks = 0","'use strict';\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @memberof PIXI.DisplayObject#\n * @param {Point} point - the point to write the global value to. If null a new point will be returned\n * @param {boolean} skipUpdate - setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost\n * @return {Point} The updated point\n */\ncore.DisplayObject.prototype.getGlobalPosition = function getGlobalPosition() {\n    var point = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new core.Point();\n    var skipUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (this.parent) {\n        this.parent.toGlobal(this.position, point, skipUpdate);\n    } else {\n        point.x = this.position.x;\n        point.y = this.position.y;\n    }\n\n    return point;\n};\n//# sourceMappingURL=getGlobalPosition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extras/getGlobalPosition.js\n// module id = 137\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _const = require('../../core/const');\n\nvar _path = require('path');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tempMat = new core.Matrix();\nvar tempArray = new Float32Array(4);\n\n/**\n * WebGL renderer plugin for tiling sprites\n */\n\nvar TilingSpriteRenderer = function (_core$ObjectRenderer) {\n    _inherits(TilingSpriteRenderer, _core$ObjectRenderer);\n\n    /**\n     * constructor for renderer\n     *\n     * @param {WebGLRenderer} renderer The renderer this tiling awesomeness works for.\n     */\n    function TilingSpriteRenderer(renderer) {\n        _classCallCheck(this, TilingSpriteRenderer);\n\n        var _this = _possibleConstructorReturn(this, _core$ObjectRenderer.call(this, renderer));\n\n        _this.shader = null;\n        _this.simpleShader = null;\n        _this.quad = null;\n        return _this;\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */\n\n\n    TilingSpriteRenderer.prototype.onContextChange = function onContextChange() {\n        var gl = this.renderer.gl;\n\n        this.shader = new core.Shader(gl, 'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 translationMatrix;\\nuniform mat3 uTransform;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;\\n}\\n', 'varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec4 uColor;\\nuniform mat3 uMapCoord;\\nuniform vec4 uClampFrame;\\nuniform vec2 uClampOffset;\\n\\nvoid main(void)\\n{\\n    vec2 coord = mod(vTextureCoord - uClampOffset, vec2(1.0, 1.0)) + uClampOffset;\\n    coord = (uMapCoord * vec3(coord, 1.0)).xy;\\n    coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\\n\\n    vec4 sample = texture2D(uSampler, coord);\\n    vec4 color = vec4(uColor.rgb * uColor.a, uColor.a);\\n\\n    gl_FragColor = sample * color ;\\n}\\n');\n        this.simpleShader = new core.Shader(gl, 'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 translationMatrix;\\nuniform mat3 uTransform;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;\\n}\\n', 'varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec4 uColor;\\n\\nvoid main(void)\\n{\\n    vec4 sample = texture2D(uSampler, vTextureCoord);\\n    vec4 color = vec4(uColor.rgb * uColor.a, uColor.a);\\n    gl_FragColor = sample * color;\\n}\\n');\n\n        this.renderer.bindVao(null);\n        this.quad = new core.Quad(gl, this.renderer.state.attribState);\n        this.quad.initVao(this.shader);\n    };\n\n    /**\n     *\n     * @param {PIXI.extras.TilingSprite} ts tilingSprite to be rendered\n     */\n\n\n    TilingSpriteRenderer.prototype.render = function render(ts) {\n        var renderer = this.renderer;\n        var quad = this.quad;\n\n        renderer.bindVao(quad.vao);\n\n        var vertices = quad.vertices;\n\n        vertices[0] = vertices[6] = ts._width * -ts.anchor.x;\n        vertices[1] = vertices[3] = ts._height * -ts.anchor.y;\n\n        vertices[2] = vertices[4] = ts._width * (1.0 - ts.anchor.x);\n        vertices[5] = vertices[7] = ts._height * (1.0 - ts.anchor.y);\n\n        vertices = quad.uvs;\n\n        vertices[0] = vertices[6] = -ts.anchor.x;\n        vertices[1] = vertices[3] = -ts.anchor.y;\n\n        vertices[2] = vertices[4] = 1.0 - ts.anchor.x;\n        vertices[5] = vertices[7] = 1.0 - ts.anchor.y;\n\n        quad.upload();\n\n        var tex = ts._texture;\n        var baseTex = tex.baseTexture;\n        var lt = ts.tileTransform.localTransform;\n        var uv = ts.uvTransform;\n        var isSimple = baseTex.isPowerOfTwo && tex.frame.width === baseTex.width && tex.frame.height === baseTex.height;\n\n        // auto, force repeat wrapMode for big tiling textures\n        if (isSimple) {\n            if (!baseTex._glTextures[renderer.CONTEXT_UID]) {\n                if (baseTex.wrapMode === _const.WRAP_MODES.CLAMP) {\n                    baseTex.wrapMode = _const.WRAP_MODES.REPEAT;\n                }\n            } else {\n                isSimple = baseTex.wrapMode !== _const.WRAP_MODES.CLAMP;\n            }\n        }\n\n        var shader = isSimple ? this.simpleShader : this.shader;\n\n        renderer.bindShader(shader);\n\n        var w = tex.width;\n        var h = tex.height;\n        var W = ts._width;\n        var H = ts._height;\n\n        tempMat.set(lt.a * w / W, lt.b * w / H, lt.c * h / W, lt.d * h / H, lt.tx / W, lt.ty / H);\n\n        // that part is the same as above:\n        // tempMat.identity();\n        // tempMat.scale(tex.width, tex.height);\n        // tempMat.prepend(lt);\n        // tempMat.scale(1.0 / ts._width, 1.0 / ts._height);\n\n        tempMat.invert();\n        if (isSimple) {\n            tempMat.append(uv.mapCoord);\n        } else {\n            shader.uniforms.uMapCoord = uv.mapCoord.toArray(true);\n            shader.uniforms.uClampFrame = uv.uClampFrame;\n            shader.uniforms.uClampOffset = uv.uClampOffset;\n        }\n\n        shader.uniforms.uTransform = tempMat.toArray(true);\n\n        var color = tempArray;\n\n        core.utils.hex2rgb(ts.tint, color);\n        color[3] = ts.worldAlpha;\n        shader.uniforms.uColor = color;\n        shader.uniforms.translationMatrix = ts.transform.worldTransform.toArray(true);\n\n        shader.uniforms.uSampler = renderer.bindTexture(tex);\n\n        renderer.setBlendMode(ts.blendMode);\n\n        quad.vao.draw(this.renderer.gl.TRIANGLES, 6, 0);\n    };\n\n    return TilingSpriteRenderer;\n}(core.ObjectRenderer);\n\nexports.default = TilingSpriteRenderer;\n\n\ncore.WebGLRenderer.registerPlugin('tilingSprite', TilingSpriteRenderer);\n//# sourceMappingURL=TilingSpriteRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/extras/webgl/TilingSpriteRenderer.js\n// module id = 138\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _BlurXFilter = require('./BlurXFilter');\n\nvar _BlurXFilter2 = _interopRequireDefault(_BlurXFilter);\n\nvar _BlurYFilter = require('./BlurYFilter');\n\nvar _BlurYFilter2 = _interopRequireDefault(_BlurYFilter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The BlurFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar BlurFilter = function (_core$Filter) {\n  _inherits(BlurFilter, _core$Filter);\n\n  /**\n   * @param {number} strength - The strength of the blur filter.\n   * @param {number} quality - The quality of the blur filter.\n   * @param {number} resolution - The reoslution of the blur filter.\n   */\n  function BlurFilter(strength, quality, resolution) {\n    _classCallCheck(this, BlurFilter);\n\n    var _this = _possibleConstructorReturn(this, _core$Filter.call(this));\n\n    _this.blurXFilter = new _BlurXFilter2.default();\n    _this.blurYFilter = new _BlurYFilter2.default();\n    _this.resolution = 1;\n\n    _this.padding = 0;\n    _this.resolution = resolution || 1;\n    _this.quality = quality || 4;\n    _this.blur = strength || 8;\n    return _this;\n  }\n\n  /**\n   * Applies the filter.\n   *\n   * @param {PIXI.FilterManager} filterManager - The manager.\n   * @param {PIXI.RenderTarget} input - The input target.\n   * @param {PIXI.RenderTarget} output - The output target.\n   */\n\n\n  BlurFilter.prototype.apply = function apply(filterManager, input, output) {\n    var renderTarget = filterManager.getRenderTarget(true);\n\n    this.blurXFilter.apply(filterManager, input, renderTarget, true);\n    this.blurYFilter.apply(filterManager, renderTarget, output, false);\n\n    filterManager.returnRenderTarget(renderTarget);\n  };\n\n  /**\n   * Sets the strength of both the blurX and blurY properties simultaneously\n   *\n   * @member {number}\n   * @memberOf PIXI.filters.BlurFilter#\n   * @default 2\n   */\n\n\n  _createClass(BlurFilter, [{\n    key: 'blur',\n    get: function get() {\n      return this.blurXFilter.blur;\n    }\n\n    /**\n     * Sets the strength of the blur.\n     *\n     * @param {number} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      this.blurXFilter.blur = this.blurYFilter.blur = value;\n      this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n    }\n\n    /**\n     * Sets the number of passes for blur. More passes means higher quaility bluring.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.BlurYFilter#\n     * @default 1\n     */\n\n  }, {\n    key: 'quality',\n    get: function get() {\n      return this.blurXFilter.quality;\n    }\n\n    /**\n     * Sets the quality of the blur.\n     *\n     * @param {number} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      this.blurXFilter.quality = this.blurYFilter.quality = value;\n    }\n\n    /**\n     * Sets the strength of the blurX property\n     *\n     * @member {number}\n     * @memberOf PIXI.filters.BlurFilter#\n     * @default 2\n     */\n\n  }, {\n    key: 'blurX',\n    get: function get() {\n      return this.blurXFilter.blur;\n    }\n\n    /**\n     * Sets the strength of the blurX.\n     *\n     * @param {number} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      this.blurXFilter.blur = value;\n      this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n    }\n\n    /**\n     * Sets the strength of the blurY property\n     *\n     * @member {number}\n     * @memberOf PIXI.filters.BlurFilter#\n     * @default 2\n     */\n\n  }, {\n    key: 'blurY',\n    get: function get() {\n      return this.blurYFilter.blur;\n    }\n\n    /**\n     * Sets the strength of the blurY.\n     *\n     * @param {number} value - The value to set.\n     */\n    ,\n    set: function set(value) {\n      this.blurYFilter.blur = value;\n      this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n    }\n  }]);\n\n  return BlurFilter;\n}(core.Filter);\n\nexports.default = BlurFilter;\n//# sourceMappingURL=BlurFilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/blur/BlurFilter.js\n// module id = 139\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _path = require('path');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The ColorMatrixFilter class lets you apply a 5x4 matrix transformation on the RGBA\n * color and alpha values of every pixel on your displayObject to produce a result\n * with a new set of RGBA color and alpha values. It's pretty powerful!\n *\n * ```js\n *  let colorMatrix = new PIXI.ColorMatrixFilter();\n *  container.filters = [colorMatrix];\n *  colorMatrix.contrast(2);\n * ```\n * @author Clément Chenebault <clement@goodboydigital.com>\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar ColorMatrixFilter = function (_core$Filter) {\n    _inherits(ColorMatrixFilter, _core$Filter);\n\n    /**\n     *\n     */\n    function ColorMatrixFilter() {\n        _classCallCheck(this, ColorMatrixFilter);\n\n        var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}',\n        // fragment shader\n        'varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform float m[20];\\n\\nvoid main(void)\\n{\\n\\n    vec4 c = texture2D(uSampler, vTextureCoord);\\n\\n    gl_FragColor.r = (m[0] * c.r);\\n        gl_FragColor.r += (m[1] * c.g);\\n        gl_FragColor.r += (m[2] * c.b);\\n        gl_FragColor.r += (m[3] * c.a);\\n        gl_FragColor.r += m[4] * c.a;\\n\\n    gl_FragColor.g = (m[5] * c.r);\\n        gl_FragColor.g += (m[6] * c.g);\\n        gl_FragColor.g += (m[7] * c.b);\\n        gl_FragColor.g += (m[8] * c.a);\\n        gl_FragColor.g += m[9] * c.a;\\n\\n     gl_FragColor.b = (m[10] * c.r);\\n        gl_FragColor.b += (m[11] * c.g);\\n        gl_FragColor.b += (m[12] * c.b);\\n        gl_FragColor.b += (m[13] * c.a);\\n        gl_FragColor.b += m[14] * c.a;\\n\\n     gl_FragColor.a = (m[15] * c.r);\\n        gl_FragColor.a += (m[16] * c.g);\\n        gl_FragColor.a += (m[17] * c.b);\\n        gl_FragColor.a += (m[18] * c.a);\\n        gl_FragColor.a += m[19] * c.a;\\n\\n//    gl_FragColor = vec4(m[0]);\\n}\\n'));\n\n        _this.uniforms.m = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n        return _this;\n    }\n\n    /**\n     * Transforms current matrix and set the new one\n     *\n     * @param {number[]} matrix - 5x4 matrix\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype._loadMatrix = function _loadMatrix(matrix) {\n        var multiply = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var newMatrix = matrix;\n\n        if (multiply) {\n            this._multiply(newMatrix, this.uniforms.m, matrix);\n            newMatrix = this._colorMatrix(newMatrix);\n        }\n\n        // set the new matrix\n        this.uniforms.m = newMatrix;\n    };\n\n    /**\n     * Multiplies two mat5's\n     *\n     * @private\n     * @param {number[]} out - 5x4 matrix the receiving matrix\n     * @param {number[]} a - 5x4 matrix the first operand\n     * @param {number[]} b - 5x4 matrix the second operand\n     * @returns {number[]} 5x4 matrix\n     */\n\n\n    ColorMatrixFilter.prototype._multiply = function _multiply(out, a, b) {\n        // Red Channel\n        out[0] = a[0] * b[0] + a[1] * b[5] + a[2] * b[10] + a[3] * b[15];\n        out[1] = a[0] * b[1] + a[1] * b[6] + a[2] * b[11] + a[3] * b[16];\n        out[2] = a[0] * b[2] + a[1] * b[7] + a[2] * b[12] + a[3] * b[17];\n        out[3] = a[0] * b[3] + a[1] * b[8] + a[2] * b[13] + a[3] * b[18];\n        out[4] = a[0] * b[4] + a[1] * b[9] + a[2] * b[14] + a[3] * b[19];\n\n        // Green Channel\n        out[5] = a[5] * b[0] + a[6] * b[5] + a[7] * b[10] + a[8] * b[15];\n        out[6] = a[5] * b[1] + a[6] * b[6] + a[7] * b[11] + a[8] * b[16];\n        out[7] = a[5] * b[2] + a[6] * b[7] + a[7] * b[12] + a[8] * b[17];\n        out[8] = a[5] * b[3] + a[6] * b[8] + a[7] * b[13] + a[8] * b[18];\n        out[9] = a[5] * b[4] + a[6] * b[9] + a[7] * b[14] + a[8] * b[19];\n\n        // Blue Channel\n        out[10] = a[10] * b[0] + a[11] * b[5] + a[12] * b[10] + a[13] * b[15];\n        out[11] = a[10] * b[1] + a[11] * b[6] + a[12] * b[11] + a[13] * b[16];\n        out[12] = a[10] * b[2] + a[11] * b[7] + a[12] * b[12] + a[13] * b[17];\n        out[13] = a[10] * b[3] + a[11] * b[8] + a[12] * b[13] + a[13] * b[18];\n        out[14] = a[10] * b[4] + a[11] * b[9] + a[12] * b[14] + a[13] * b[19];\n\n        // Alpha Channel\n        out[15] = a[15] * b[0] + a[16] * b[5] + a[17] * b[10] + a[18] * b[15];\n        out[16] = a[15] * b[1] + a[16] * b[6] + a[17] * b[11] + a[18] * b[16];\n        out[17] = a[15] * b[2] + a[16] * b[7] + a[17] * b[12] + a[18] * b[17];\n        out[18] = a[15] * b[3] + a[16] * b[8] + a[17] * b[13] + a[18] * b[18];\n        out[19] = a[15] * b[4] + a[16] * b[9] + a[17] * b[14] + a[18] * b[19];\n\n        return out;\n    };\n\n    /**\n     * Create a Float32 Array and normalize the offset component to 0-1\n     *\n     * @private\n     * @param {number[]} matrix - 5x4 matrix\n     * @return {number[]} 5x4 matrix with all values between 0-1\n     */\n\n\n    ColorMatrixFilter.prototype._colorMatrix = function _colorMatrix(matrix) {\n        // Create a Float32 Array and normalize the offset component to 0-1\n        var m = new Float32Array(matrix);\n\n        m[4] /= 255;\n        m[9] /= 255;\n        m[14] /= 255;\n        m[19] /= 255;\n\n        return m;\n    };\n\n    /**\n     * Adjusts brightness\n     *\n     * @param {number} b - value of the brigthness (0-1, where 0 is black)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.brightness = function brightness(b, multiply) {\n        var matrix = [b, 0, 0, 0, 0, 0, b, 0, 0, 0, 0, 0, b, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Set the matrices in grey scales\n     *\n     * @param {number} scale - value of the grey (0-1, where 0 is black)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.greyscale = function greyscale(scale, multiply) {\n        var matrix = [scale, scale, scale, 0, 0, scale, scale, scale, 0, 0, scale, scale, scale, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Set the black and white matrice.\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.blackAndWhite = function blackAndWhite(multiply) {\n        var matrix = [0.3, 0.6, 0.1, 0, 0, 0.3, 0.6, 0.1, 0, 0, 0.3, 0.6, 0.1, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Set the hue property of the color\n     *\n     * @param {number} rotation - in degrees\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.hue = function hue(rotation, multiply) {\n        rotation = (rotation || 0) / 180 * Math.PI;\n\n        var cosR = Math.cos(rotation);\n        var sinR = Math.sin(rotation);\n        var sqrt = Math.sqrt;\n\n        /* a good approximation for hue rotation\n         This matrix is far better than the versions with magic luminance constants\n         formerly used here, but also used in the starling framework (flash) and known from this\n         old part of the internet: quasimondo.com/archives/000565.php\n          This new matrix is based on rgb cube rotation in space. Look here for a more descriptive\n         implementation as a shader not a general matrix:\n         https://github.com/evanw/glfx.js/blob/58841c23919bd59787effc0333a4897b43835412/src/filters/adjust/huesaturation.js\n          This is the source for the code:\n         see http://stackoverflow.com/questions/8507885/shift-hue-of-an-rgb-color/8510751#8510751\n         */\n\n        var w = 1 / 3;\n        var sqrW = sqrt(w); // weight is\n\n        var a00 = cosR + (1.0 - cosR) * w;\n        var a01 = w * (1.0 - cosR) - sqrW * sinR;\n        var a02 = w * (1.0 - cosR) + sqrW * sinR;\n\n        var a10 = w * (1.0 - cosR) + sqrW * sinR;\n        var a11 = cosR + w * (1.0 - cosR);\n        var a12 = w * (1.0 - cosR) - sqrW * sinR;\n\n        var a20 = w * (1.0 - cosR) - sqrW * sinR;\n        var a21 = w * (1.0 - cosR) + sqrW * sinR;\n        var a22 = cosR + w * (1.0 - cosR);\n\n        var matrix = [a00, a01, a02, 0, 0, a10, a11, a12, 0, 0, a20, a21, a22, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Set the contrast matrix, increase the separation between dark and bright\n     * Increase contrast : shadows darker and highlights brighter\n     * Decrease contrast : bring the shadows up and the highlights down\n     *\n     * @param {number} amount - value of the contrast (0-1)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.contrast = function contrast(amount, multiply) {\n        var v = (amount || 0) + 1;\n        var o = -128 * (v - 1);\n\n        var matrix = [v, 0, 0, 0, o, 0, v, 0, 0, o, 0, 0, v, 0, o, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Set the saturation matrix, increase the separation between colors\n     * Increase saturation : increase contrast, brightness, and sharpness\n     *\n     * @param {number} amount - The saturation amount (0-1)\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.saturate = function saturate() {\n        var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var multiply = arguments[1];\n\n        var x = amount * 2 / 3 + 1;\n        var y = (x - 1) * -0.5;\n\n        var matrix = [x, y, y, 0, 0, y, x, y, 0, 0, y, y, x, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Desaturate image (remove color)\n     *\n     * Call the saturate function\n     *\n     */\n\n\n    ColorMatrixFilter.prototype.desaturate = function desaturate() // eslint-disable-line no-unused-vars\n    {\n        this.saturate(-1);\n    };\n\n    /**\n     * Negative image (inverse of classic rgb matrix)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.negative = function negative(multiply) {\n        var matrix = [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Sepia image\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.sepia = function sepia(multiply) {\n        var matrix = [0.393, 0.7689999, 0.18899999, 0, 0, 0.349, 0.6859999, 0.16799999, 0, 0, 0.272, 0.5339999, 0.13099999, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Color motion picture process invented in 1916 (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.technicolor = function technicolor(multiply) {\n        var matrix = [1.9125277891456083, -0.8545344976951645, -0.09155508482755585, 0, 11.793603434377337, -0.3087833385928097, 1.7658908555458428, -0.10601743074722245, 0, -70.35205161461398, -0.231103377548616, -0.7501899197440212, 1.847597816108189, 0, 30.950940869491138, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Polaroid filter\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.polaroid = function polaroid(multiply) {\n        var matrix = [1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016, 1.483, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Filter who transforms : Red -> Blue and Blue -> Red\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.toBGR = function toBGR(multiply) {\n        var matrix = [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Color reversal film introduced by Eastman Kodak in 1935. (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.kodachrome = function kodachrome(multiply) {\n        var matrix = [1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502, -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203, -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Brown delicious browni filter (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.browni = function browni(multiply) {\n        var matrix = [0.5997023498159715, 0.34553243048391263, -0.2708298674538042, 0, 47.43192855600873, -0.037703249837783157, 0.8609577587992641, 0.15059552388459913, 0, -36.96841498319127, 0.24113635128153335, -0.07441037908422492, 0.44972182064877153, 0, -7.562075277591283, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Vintage filter (thanks Dominic Szablewski)\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.vintage = function vintage(multiply) {\n        var matrix = [0.6279345635605994, 0.3202183420819367, -0.03965408211312453, 0, 9.651285835294123, 0.02578397704808868, 0.6441188644374771, 0.03259127616149294, 0, 7.462829176470591, 0.0466055556782719, -0.0851232987247891, 0.5241648018700465, 0, 5.159190588235296, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * We don't know exactly what it does, kind of gradient map, but funny to play with!\n     *\n     * @param {number} desaturation - Tone values.\n     * @param {number} toned - Tone values.\n     * @param {string} lightColor - Tone values, example: `0xFFE580`\n     * @param {string} darkColor - Tone values, example: `0xFFE580`\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.colorTone = function colorTone(desaturation, toned, lightColor, darkColor, multiply) {\n        desaturation = desaturation || 0.2;\n        toned = toned || 0.15;\n        lightColor = lightColor || 0xFFE580;\n        darkColor = darkColor || 0x338000;\n\n        var lR = (lightColor >> 16 & 0xFF) / 255;\n        var lG = (lightColor >> 8 & 0xFF) / 255;\n        var lB = (lightColor & 0xFF) / 255;\n\n        var dR = (darkColor >> 16 & 0xFF) / 255;\n        var dG = (darkColor >> 8 & 0xFF) / 255;\n        var dB = (darkColor & 0xFF) / 255;\n\n        var matrix = [0.3, 0.59, 0.11, 0, 0, lR, lG, lB, desaturation, 0, dR, dG, dB, toned, 0, lR - dR, lG - dG, lB - dB, 0, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Night effect\n     *\n     * @param {number} intensity - The intensity of the night effect.\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.night = function night(intensity, multiply) {\n        intensity = intensity || 0.1;\n        var matrix = [intensity * -2.0, -intensity, 0, 0, 0, -intensity, 0, intensity, 0, 0, 0, intensity, intensity * 2.0, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Predator effect\n     *\n     * Erase the current matrix by setting a new indepent one\n     *\n     * @param {number} amount - how much the predator feels his future victim\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.predator = function predator(amount, multiply) {\n        var matrix = [\n        // row 1\n        11.224130630493164 * amount, -4.794486999511719 * amount, -2.8746118545532227 * amount, 0 * amount, 0.40342438220977783 * amount,\n        // row 2\n        -3.6330697536468506 * amount, 9.193157196044922 * amount, -2.951810836791992 * amount, 0 * amount, -1.316135048866272 * amount,\n        // row 3\n        -3.2184197902679443 * amount, -4.2375030517578125 * amount, 7.476448059082031 * amount, 0 * amount, 0.8044459223747253 * amount,\n        // row 4\n        0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * LSD effect\n     *\n     * Multiply the current matrix\n     *\n     * @param {boolean} multiply - if true, current matrix and matrix are multiplied. If false,\n     *  just set the current matrix with @param matrix\n     */\n\n\n    ColorMatrixFilter.prototype.lsd = function lsd(multiply) {\n        var matrix = [2, -0.4, 0.5, 0, 0, -0.5, 2, -0.4, 0, 0, -0.4, -0.5, 3, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, multiply);\n    };\n\n    /**\n     * Erase the current matrix by setting the default one\n     *\n     */\n\n\n    ColorMatrixFilter.prototype.reset = function reset() {\n        var matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n\n        this._loadMatrix(matrix, false);\n    };\n\n    /**\n     * The matrix of the color matrix filter\n     *\n     * @member {number[]}\n     * @memberof PIXI.filters.ColorMatrixFilter#\n     * @default [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]\n     */\n\n\n    _createClass(ColorMatrixFilter, [{\n        key: 'matrix',\n        get: function get() {\n            return this.uniforms.m;\n        }\n\n        /**\n         * Sets the matrix directly.\n         *\n         * @param {number[]} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this.uniforms.m = value;\n        }\n    }]);\n\n    return ColorMatrixFilter;\n}(core.Filter);\n\n// Americanized alias\n\n\nexports.default = ColorMatrixFilter;\nColorMatrixFilter.prototype.grayscale = ColorMatrixFilter.prototype.greyscale;\n//# sourceMappingURL=ColorMatrixFilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/colormatrix/ColorMatrixFilter.js\n// module id = 140\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _path = require('path');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The DisplacementFilter class uses the pixel values from the specified texture\n * (called the displacement map) to perform a displacement of an object. You can\n * use this filter to apply all manor of crazy warping effects. Currently the r\n * property of the texture is used to offset the x and the g property of the texture\n * is used to offset the y.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar DisplacementFilter = function (_core$Filter) {\n    _inherits(DisplacementFilter, _core$Filter);\n\n    /**\n     * @param {PIXI.Sprite} sprite - The sprite used for the displacement map. (make sure its added to the scene!)\n     * @param {number} scale - The scale of the displacement\n     */\n    function DisplacementFilter(sprite, scale) {\n        _classCallCheck(this, DisplacementFilter);\n\n        var maskMatrix = new core.Matrix();\n\n        sprite.renderable = false;\n\n        var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 filterMatrix;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec2 vFilterCoord;\\n\\nvoid main(void)\\n{\\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n   vFilterCoord = ( filterMatrix * vec3( aTextureCoord, 1.0)  ).xy;\\n   vTextureCoord = aTextureCoord;\\n}',\n        // fragment shader\n        'varying vec2 vFilterCoord;\\nvarying vec2 vTextureCoord;\\n\\nuniform vec2 scale;\\n\\nuniform sampler2D uSampler;\\nuniform sampler2D mapSampler;\\n\\nuniform vec4 filterClamp;\\n\\nvoid main(void)\\n{\\n   vec4 map =  texture2D(mapSampler, vFilterCoord);\\n\\n   map -= 0.5;\\n   map.xy *= scale;\\n\\n   gl_FragColor = texture2D(uSampler, clamp(vec2(vTextureCoord.x + map.x, vTextureCoord.y + map.y), filterClamp.xy, filterClamp.zw));\\n}\\n'));\n\n        _this.maskSprite = sprite;\n        _this.maskMatrix = maskMatrix;\n\n        _this.uniforms.mapSampler = sprite.texture;\n        _this.uniforms.filterMatrix = maskMatrix.toArray(true);\n        _this.uniforms.scale = { x: 1, y: 1 };\n\n        if (scale === null || scale === undefined) {\n            scale = 20;\n        }\n\n        _this.scale = new core.Point(scale, scale);\n        return _this;\n    }\n\n    /**\n     * Applies the filter.\n     *\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     */\n\n\n    DisplacementFilter.prototype.apply = function apply(filterManager, input, output) {\n        var ratio = 1 / output.destinationFrame.width * (output.size.width / input.size.width);\n\n        this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, this.maskSprite);\n        this.uniforms.scale.x = this.scale.x * ratio;\n        this.uniforms.scale.y = this.scale.y * ratio;\n\n        // draw the filter...\n        filterManager.applyFilter(this, input, output);\n    };\n\n    /**\n     * The texture used for the displacement map. Must be power of 2 sized texture.\n     *\n     * @member {PIXI.Texture}\n     * @memberof PIXI.filters.DisplacementFilter#\n     */\n\n\n    _createClass(DisplacementFilter, [{\n        key: 'map',\n        get: function get() {\n            return this.uniforms.mapSampler;\n        }\n\n        /**\n         * Sets the texture to use for the displacement.\n         *\n         * @param {PIXI.Texture} value - The texture to set to.\n         */\n        ,\n        set: function set(value) {\n            this.uniforms.mapSampler = value;\n        }\n    }]);\n\n    return DisplacementFilter;\n}(core.Filter);\n\nexports.default = DisplacementFilter;\n//# sourceMappingURL=DisplacementFilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/displacement/DisplacementFilter.js\n// module id = 141\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _path = require('path');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * Basic FXAA implementation based on the code on geeks3d.com with the\n * modification that the texture2DLod stuff was removed since it's\n * unsupported by WebGL.\n *\n * @see https://github.com/mitsuhiko/webgl-meincraft\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n *\n */\nvar FXAAFilter = function (_core$Filter) {\n    _inherits(FXAAFilter, _core$Filter);\n\n    /**\n     *\n     */\n    function FXAAFilter() {\n        _classCallCheck(this, FXAAFilter);\n\n        // TODO - needs work\n        return _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        '\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec4 filterArea;\\n\\nvarying vec2 vTextureCoord;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvoid texcoords(vec2 fragCoord, vec2 resolution,\\n               out vec2 v_rgbNW, out vec2 v_rgbNE,\\n               out vec2 v_rgbSW, out vec2 v_rgbSE,\\n               out vec2 v_rgbM) {\\n    vec2 inverseVP = 1.0 / resolution.xy;\\n    v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n    v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n    v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n    v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n    v_rgbM = vec2(fragCoord * inverseVP);\\n}\\n\\nvoid main(void) {\\n\\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n   vTextureCoord = aTextureCoord;\\n\\n   vec2 fragCoord = vTextureCoord * filterArea.xy;\\n\\n   texcoords(fragCoord, filterArea.xy, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n}',\n        // fragment shader\n        'varying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\n/**\\n Basic FXAA implementation based on the code on geeks3d.com with the\\n modification that the texture2DLod stuff was removed since it\\'s\\n unsupported by WebGL.\\n \\n --\\n \\n From:\\n https://github.com/mitsuhiko/webgl-meincraft\\n \\n Copyright (c) 2011 by Armin Ronacher.\\n \\n Some rights reserved.\\n \\n Redistribution and use in source and binary forms, with or without\\n modification, are permitted provided that the following conditions are\\n met:\\n \\n * Redistributions of source code must retain the above copyright\\n notice, this list of conditions and the following disclaimer.\\n \\n * Redistributions in binary form must reproduce the above\\n copyright notice, this list of conditions and the following\\n disclaimer in the documentation and/or other materials provided\\n with the distribution.\\n \\n * The names of the contributors may not be used to endorse or\\n promote products derived from this software without specific\\n prior written permission.\\n \\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n#ifndef FXAA_REDUCE_MIN\\n#define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n#define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n#define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent\\n//texture reads can be a bottleneck\\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n          vec2 v_rgbNW, vec2 v_rgbNE,\\n          vec2 v_rgbSW, vec2 v_rgbSE,\\n          vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n                  dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n                       texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n                       texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n                                     texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n                                     texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n    \\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\nvoid main() {\\n\\n      vec2 fragCoord = vTextureCoord * filterArea.xy;\\n\\n      vec4 color;\\n\\n    color = fxaa(uSampler, fragCoord, filterArea.xy, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n\\n      gl_FragColor = color;\\n}\\n'));\n    }\n\n    return FXAAFilter;\n}(core.Filter);\n\nexports.default = FXAAFilter;\n//# sourceMappingURL=FXAAFilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/fxaa/FXAAFilter.js\n// module id = 142\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _path = require('path');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @author Vico @vicocotea\n * original filter: https://github.com/evanw/glfx.js/blob/master/src/filters/adjust/noise.js\n */\n\n/**\n * A Noise effect filter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar NoiseFilter = function (_core$Filter) {\n  _inherits(NoiseFilter, _core$Filter);\n\n  /**\n   *\n   */\n  function NoiseFilter() {\n    _classCallCheck(this, NoiseFilter);\n\n    var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n    // vertex shader\n    'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}',\n    // fragment shader\n    'precision highp float;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\n\\nuniform float noise;\\nuniform sampler2D uSampler;\\n\\nfloat rand(vec2 co)\\n{\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvoid main()\\n{\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    float diff = (rand(gl_FragCoord.xy) - 0.5) * noise;\\n\\n    color.r += diff;\\n    color.g += diff;\\n    color.b += diff;\\n\\n    gl_FragColor = color;\\n}\\n'));\n\n    _this.noise = 0.5;\n    return _this;\n  }\n\n  /**\n   * The amount of noise to apply.\n   *\n   * @member {number}\n   * @memberof PIXI.filters.NoiseFilter#\n   * @default 0.5\n   */\n\n\n  _createClass(NoiseFilter, [{\n    key: 'noise',\n    get: function get() {\n      return this.uniforms.noise;\n    }\n\n    /**\n     * Sets the amount of noise to apply.\n     *\n     * @param {number} value - The value to set to.\n     */\n    ,\n    set: function set(value) {\n      this.uniforms.noise = value;\n    }\n  }]);\n\n  return NoiseFilter;\n}(core.Filter);\n\nexports.default = NoiseFilter;\n//# sourceMappingURL=NoiseFilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/noise/NoiseFilter.js\n// module id = 143\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _path = require('path');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Does nothing. Very handy.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar VoidFilter = function (_core$Filter) {\n    _inherits(VoidFilter, _core$Filter);\n\n    /**\n     *\n     */\n    function VoidFilter() {\n        _classCallCheck(this, VoidFilter);\n\n        var _this = _possibleConstructorReturn(this, _core$Filter.call(this,\n        // vertex shader\n        'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}',\n        // fragment shader\n        'varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\n\\nvoid main(void)\\n{\\n   gl_FragColor = texture2D(uSampler, vTextureCoord);\\n}\\n'));\n\n        _this.glShaderKey = 'void';\n        return _this;\n    }\n\n    return VoidFilter;\n}(core.Filter);\n\nexports.default = VoidFilter;\n//# sourceMappingURL=VoidFilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/filters/void/VoidFilter.js\n// module id = 144\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.loader = exports.prepare = exports.particles = exports.mesh = exports.loaders = exports.interaction = exports.filters = exports.extras = exports.extract = exports.accessibility = undefined;\n\nvar _deprecation = require('./deprecation');\n\nObject.keys(_deprecation).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function get() {\n            return _deprecation[key];\n        }\n    });\n});\n\nvar _core = require('./core');\n\nObject.keys(_core).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function get() {\n            return _core[key];\n        }\n    });\n});\n\nrequire('./polyfill');\n\nvar _accessibility = require('./accessibility');\n\nvar accessibility = _interopRequireWildcard(_accessibility);\n\nvar _extract = require('./extract');\n\nvar extract = _interopRequireWildcard(_extract);\n\nvar _extras = require('./extras');\n\nvar extras = _interopRequireWildcard(_extras);\n\nvar _filters = require('./filters');\n\nvar filters = _interopRequireWildcard(_filters);\n\nvar _interaction = require('./interaction');\n\nvar interaction = _interopRequireWildcard(_interaction);\n\nvar _loaders = require('./loaders');\n\nvar loaders = _interopRequireWildcard(_loaders);\n\nvar _mesh = require('./mesh');\n\nvar mesh = _interopRequireWildcard(_mesh);\n\nvar _particles = require('./particles');\n\nvar particles = _interopRequireWildcard(_particles);\n\nvar _prepare = require('./prepare');\n\nvar prepare = _interopRequireWildcard(_prepare);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// import polyfills\nexports.accessibility = accessibility;\nexports.extract = extract;\nexports.extras = extras;\nexports.filters = filters;\nexports.interaction = interaction;\nexports.loaders = loaders;\nexports.mesh = mesh;\nexports.particles = particles;\nexports.prepare = prepare;\n\n/**\n * A premade instance of the loader that can be used to load resources.\n *\n * @name loader\n * @memberof PIXI\n * @property {PIXI.loaders.Loader}\n */\n\n\n// export libs\n\n\n// export core\n\nvar loader = loaders && loaders.Loader ? new loaders.Loader() : null; // check is there in case user excludes loader lib\n\nexports.loader = loader;\n\n// Always export pixi globally.\n\nglobal.PIXI = exports; // eslint-disable-line\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/index.js\n// module id = 145\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Event class that mimics native DOM events.\n *\n * @class\n * @memberof PIXI.interaction\n */\nvar InteractionEvent = function () {\n  /**\n   *\n   */\n  function InteractionEvent() {\n    _classCallCheck(this, InteractionEvent);\n\n    /**\n     * Which this event will continue propagating in the tree\n     *\n     * @member {boolean}\n     */\n    this.stopped = false;\n\n    /**\n     * The object to which event is dispatched.\n     *\n     * @member {PIXI.DisplayObject}\n     */\n    this.target = null;\n\n    /**\n     * The object whose event listener’s callback is currently being invoked.\n     *\n     * @member {PIXI.DisplayObject}\n     */\n    this.currentTarget = null;\n\n    /*\n     * Type of the event\n     *\n     * @member {string}\n     */\n    this.type = null;\n\n    /*\n     * InteractionData related to this event\n     *\n     * @member {PIXI.interaction.InteractionData}\n     */\n    this.data = null;\n  }\n\n  /**\n   * Prevents event from reaching any objects other than the current object.\n   *\n   */\n\n\n  InteractionEvent.prototype.stopPropagation = function stopPropagation() {\n    this.stopped = true;\n  };\n\n  /**\n   * Prevents event from reaching any objects other than the current object.\n   *\n   * @private\n   */\n\n\n  InteractionEvent.prototype._reset = function _reset() {\n    this.stopped = false;\n    this.currentTarget = null;\n    this.target = null;\n  };\n\n  return InteractionEvent;\n}();\n\nexports.default = InteractionEvent;\n//# sourceMappingURL=InteractionEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/interaction/InteractionEvent.js\n// module id = 146\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _InteractionData = require('./InteractionData');\n\nvar _InteractionData2 = _interopRequireDefault(_InteractionData);\n\nvar _InteractionEvent = require('./InteractionEvent');\n\nvar _InteractionEvent2 = _interopRequireDefault(_InteractionEvent);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _interactiveTarget = require('./interactiveTarget');\n\nvar _interactiveTarget2 = _interopRequireDefault(_interactiveTarget);\n\nvar _ismobilejs = require('ismobilejs');\n\nvar _ismobilejs2 = _interopRequireDefault(_ismobilejs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Mix interactiveTarget into core.DisplayObject.prototype\nObject.assign(core.DisplayObject.prototype, _interactiveTarget2.default);\n\n/**\n * The interaction manager deals with mouse and touch events. Any DisplayObject can be interactive\n * if its interactive parameter is set to true\n * This manager also supports multitouch.\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI.interaction\n */\n\nvar InteractionManager = function (_EventEmitter) {\n    _inherits(InteractionManager, _EventEmitter);\n\n    /**\n     * @param {PIXI.CanvasRenderer|PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     * @param {object} [options] - The options for the manager.\n     * @param {boolean} [options.autoPreventDefault=true] - Should the manager automatically prevent default browser actions.\n     * @param {number} [options.interactionFrequency=10] - Frequency increases the interaction events will be checked.\n     */\n    function InteractionManager(renderer, options) {\n        _classCallCheck(this, InteractionManager);\n\n        var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n        options = options || {};\n\n        /**\n         * The renderer this interaction manager works for.\n         *\n         * @member {PIXI.SystemRenderer}\n         */\n        _this.renderer = renderer;\n\n        /**\n         * Should default browser actions automatically be prevented.\n         * Does not apply to pointer events for backwards compatibility\n         * preventDefault on pointer events stops mouse events from firing\n         * Thus, for every pointer event, there will always be either a mouse of touch event alongside it.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        _this.autoPreventDefault = options.autoPreventDefault !== undefined ? options.autoPreventDefault : true;\n\n        /**\n         * As this frequency increases the interaction events will be checked more often.\n         *\n         * @member {number}\n         * @default 10\n         */\n        _this.interactionFrequency = options.interactionFrequency || 10;\n\n        /**\n         * The mouse data\n         *\n         * @member {PIXI.interaction.InteractionData}\n         */\n        _this.mouse = new _InteractionData2.default();\n\n        // setting the mouse to start off far off screen will mean that mouse over does\n        //  not get called before we even move the mouse.\n        _this.mouse.global.set(-999999);\n\n        /**\n         * The pointer data\n         *\n         * @member {PIXI.interaction.InteractionData}\n         */\n        _this.pointer = new _InteractionData2.default();\n\n        // setting the pointer to start off far off screen will mean that pointer over does\n        //  not get called before we even move the pointer.\n        _this.pointer.global.set(-999999);\n\n        /**\n         * An event data object to handle all the event tracking/dispatching\n         *\n         * @member {object}\n         */\n        _this.eventData = new _InteractionEvent2.default();\n\n        /**\n         * Tiny little interactiveData pool !\n         *\n         * @member {PIXI.interaction.InteractionData[]}\n         */\n        _this.interactiveDataPool = [];\n\n        /**\n         * The DOM element to bind to.\n         *\n         * @private\n         * @member {HTMLElement}\n         */\n        _this.interactionDOMElement = null;\n\n        /**\n         * This property determins if mousemove and touchmove events are fired only when the cursror\n         * is over the object.\n         * Setting to true will make things work more in line with how the DOM verison works.\n         * Setting to false can make things easier for things like dragging\n         * It is currently set to false as this is how pixi used to work. This will be set to true in\n         * future versions of pixi.\n         *\n         * @private\n         * @member {boolean}\n         */\n        _this.moveWhenInside = false;\n\n        /**\n         * Have events been attached to the dom element?\n         *\n         * @private\n         * @member {boolean}\n         */\n        _this.eventsAdded = false;\n\n        /**\n         * Is the mouse hovering over the renderer?\n         *\n         * @private\n         * @member {boolean}\n         */\n        _this.mouseOverRenderer = false;\n\n        /**\n         * Does the device support touch events\n         * https://www.w3.org/TR/touch-events/\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        _this.supportsTouchEvents = 'ontouchstart' in window;\n\n        /**\n         * Does the device support pointer events\n         * https://www.w3.org/Submission/pointer-events/\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        _this.supportsPointerEvents = !!window.PointerEvent;\n\n        /**\n         * Are touch events being 'normalized' and converted into pointer events if pointer events are not supported\n         * For example, on a touch screen mobile device, a touchstart would also be emitted as a pointerdown\n         *\n         * @private\n         * @readonly\n         * @member {boolean}\n         */\n        _this.normalizeTouchEvents = !_this.supportsPointerEvents && _this.supportsTouchEvents;\n\n        /**\n         * Are mouse events being 'normalized' and converted into pointer events if pointer events are not supported\n         * For example, on a desktop pc, a mousedown would also be emitted as a pointerdown\n         *\n         * @private\n         * @readonly\n         * @member {boolean}\n         */\n        _this.normalizeMouseEvents = !_this.supportsPointerEvents && !_ismobilejs2.default.any;\n\n        // this will make it so that you don't have to call bind all the time\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        _this.processMouseUp = _this.processMouseUp.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onMouseDown = _this.onMouseDown.bind(_this);\n        _this.processMouseDown = _this.processMouseDown.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.processMouseMove = _this.processMouseMove.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onMouseOut = _this.onMouseOut.bind(_this);\n        _this.processMouseOverOut = _this.processMouseOverOut.bind(_this);\n\n        /**\n        * @private\n        * @member {Function}\n        */\n        _this.onMouseOver = _this.onMouseOver.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onPointerUp = _this.onPointerUp.bind(_this);\n        _this.processPointerUp = _this.processPointerUp.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onPointerDown = _this.onPointerDown.bind(_this);\n        _this.processPointerDown = _this.processPointerDown.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onPointerMove = _this.onPointerMove.bind(_this);\n        _this.processPointerMove = _this.processPointerMove.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onPointerOut = _this.onPointerOut.bind(_this);\n        _this.processPointerOverOut = _this.processPointerOverOut.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onPointerOver = _this.onPointerOver.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onTouchStart = _this.onTouchStart.bind(_this);\n        _this.processTouchStart = _this.processTouchStart.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onTouchEnd = _this.onTouchEnd.bind(_this);\n        _this.processTouchEnd = _this.processTouchEnd.bind(_this);\n\n        /**\n         * @private\n         * @member {Function}\n         */\n        _this.onTouchMove = _this.onTouchMove.bind(_this);\n        _this.processTouchMove = _this.processTouchMove.bind(_this);\n\n        /**\n         * Every update cursor will be reset to this value, if some element wont override it in\n         * its hitTest.\n         *\n         * @member {string}\n         * @default 'inherit'\n         */\n        _this.defaultCursorStyle = 'inherit';\n\n        /**\n         * The css style of the cursor that is being used.\n         *\n         * @member {string}\n         */\n        _this.currentCursorStyle = 'inherit';\n\n        /**\n         * Internal cached let.\n         *\n         * @private\n         * @member {PIXI.Point}\n         */\n        _this._tempPoint = new core.Point();\n\n        /**\n         * The current resolution / device pixel ratio.\n         *\n         * @member {number}\n         * @default 1\n         */\n        _this.resolution = 1;\n\n        _this.setTargetElement(_this.renderer.view, _this.renderer.resolution);\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is pressed on the display\n         * object.\n         *\n         * @event mousedown\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is pressed\n         * on the display object.\n         *\n         * @event rightdown\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is released over the display\n         * object.\n         *\n         * @event mouseup\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is released\n         * over the display object.\n         *\n         * @event rightup\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is pressed and released on\n         * the display object.\n         *\n         * @event click\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is pressed\n         * and released on the display object.\n         *\n         * @event rightclick\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button (usually a mouse button) is released outside the\n         * display object that initially registered a\n         * [mousedown]{@link PIXI.interaction.InteractionManager#event:mousedown}.\n         *\n         * @event mouseupoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device secondary button (usually a mouse right-button) is released\n         * outside the display object that initially registered a\n         * [rightdown]{@link PIXI.interaction.InteractionManager#event:rightdown}.\n         *\n         * @event rightupoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device (usually a mouse) is moved while over the display object\n         *\n         * @event mousemove\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device (usually a mouse) is moved onto the display object\n         *\n         * @event mouseover\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device (usually a mouse) is moved off the display object\n         *\n         * @event mouseout\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is pressed on the display object.\n         *\n         * @event pointerdown\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is released over the display object.\n         *\n         * @event pointerup\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is pressed and released on the display object.\n         *\n         * @event pointertap\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device button is released outside the display object that initially\n         * registered a [pointerdown]{@link PIXI.interaction.InteractionManager#event:pointerdown}.\n         *\n         * @event pointerupoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device is moved while over the display object\n         *\n         * @event pointermove\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device is moved onto the display object\n         *\n         * @event pointerover\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a pointer device is moved off the display object\n         *\n         * @event pointerout\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is placed on the display object.\n         *\n         * @event touchstart\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is removed from the display object.\n         *\n         * @event touchend\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is placed and removed from the display object.\n         *\n         * @event tap\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is removed outside of the display object that initially\n         * registered a [touchstart]{@link PIXI.interaction.InteractionManager#event:touchstart}.\n         *\n         * @event touchendoutside\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n\n        /**\n         * Fired when a touch point is moved along the display object.\n         *\n         * @event touchmove\n         * @memberof PIXI.interaction.InteractionManager#\n         */\n        return _this;\n    }\n\n    /**\n     * Sets the DOM element which will receive mouse/touch events. This is useful for when you have\n     * other DOM elements on top of the renderers Canvas element. With this you'll be bale to deletegate\n     * another DOM element to receive those events.\n     *\n     * @param {HTMLCanvasElement} element - the DOM element which will receive mouse and touch events.\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the new element (relative to the canvas).\n     * @private\n     */\n\n\n    InteractionManager.prototype.setTargetElement = function setTargetElement(element) {\n        var resolution = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        this.removeEvents();\n\n        this.interactionDOMElement = element;\n\n        this.resolution = resolution;\n\n        this.addEvents();\n    };\n\n    /**\n     * Registers all the DOM events\n     *\n     * @private\n     */\n\n\n    InteractionManager.prototype.addEvents = function addEvents() {\n        if (!this.interactionDOMElement) {\n            return;\n        }\n\n        core.ticker.shared.add(this.update, this);\n\n        if (window.navigator.msPointerEnabled) {\n            this.interactionDOMElement.style['-ms-content-zooming'] = 'none';\n            this.interactionDOMElement.style['-ms-touch-action'] = 'none';\n        } else if (this.supportsPointerEvents) {\n            this.interactionDOMElement.style['touch-action'] = 'none';\n        }\n\n        /**\n         * These events are added first, so that if pointer events are normalised, they are fired\n         * in the same order as non-normalised events. ie. pointer event 1st, mouse / touch 2nd\n         */\n        if (this.supportsPointerEvents) {\n            window.document.addEventListener('pointermove', this.onPointerMove, true);\n            this.interactionDOMElement.addEventListener('pointerdown', this.onPointerDown, true);\n            this.interactionDOMElement.addEventListener('pointerout', this.onPointerOut, true);\n            this.interactionDOMElement.addEventListener('pointerover', this.onPointerOver, true);\n            window.addEventListener('pointerup', this.onPointerUp, true);\n        } else {\n            /**\n             * If pointer events aren't available on a device, this will turn either the touch or\n             * mouse events into pointer events. This allows a developer to just listen for emitted\n             * pointer events on interactive sprites\n             */\n            if (this.normalizeTouchEvents) {\n                this.interactionDOMElement.addEventListener('touchstart', this.onPointerDown, true);\n                this.interactionDOMElement.addEventListener('touchend', this.onPointerUp, true);\n                this.interactionDOMElement.addEventListener('touchmove', this.onPointerMove, true);\n            }\n\n            if (this.normalizeMouseEvents) {\n                window.document.addEventListener('mousemove', this.onPointerMove, true);\n                this.interactionDOMElement.addEventListener('mousedown', this.onPointerDown, true);\n                this.interactionDOMElement.addEventListener('mouseout', this.onPointerOut, true);\n                this.interactionDOMElement.addEventListener('mouseover', this.onPointerOver, true);\n                window.addEventListener('mouseup', this.onPointerUp, true);\n            }\n        }\n\n        window.document.addEventListener('mousemove', this.onMouseMove, true);\n        this.interactionDOMElement.addEventListener('mousedown', this.onMouseDown, true);\n        this.interactionDOMElement.addEventListener('mouseout', this.onMouseOut, true);\n        this.interactionDOMElement.addEventListener('mouseover', this.onMouseOver, true);\n        window.addEventListener('mouseup', this.onMouseUp, true);\n\n        if (this.supportsTouchEvents) {\n            this.interactionDOMElement.addEventListener('touchstart', this.onTouchStart, true);\n            this.interactionDOMElement.addEventListener('touchend', this.onTouchEnd, true);\n            this.interactionDOMElement.addEventListener('touchmove', this.onTouchMove, true);\n        }\n\n        this.eventsAdded = true;\n    };\n\n    /**\n     * Removes all the DOM events that were previously registered\n     *\n     * @private\n     */\n\n\n    InteractionManager.prototype.removeEvents = function removeEvents() {\n        if (!this.interactionDOMElement) {\n            return;\n        }\n\n        core.ticker.shared.remove(this.update, this);\n\n        if (window.navigator.msPointerEnabled) {\n            this.interactionDOMElement.style['-ms-content-zooming'] = '';\n            this.interactionDOMElement.style['-ms-touch-action'] = '';\n        } else if (this.supportsPointerEvents) {\n            this.interactionDOMElement.style['touch-action'] = '';\n        }\n\n        if (this.supportsPointerEvents) {\n            window.document.removeEventListener('pointermove', this.onPointerMove, true);\n            this.interactionDOMElement.removeEventListener('pointerdown', this.onPointerDown, true);\n            this.interactionDOMElement.removeEventListener('pointerout', this.onPointerOut, true);\n            this.interactionDOMElement.removeEventListener('pointerover', this.onPointerOver, true);\n            window.removeEventListener('pointerup', this.onPointerUp, true);\n        } else {\n            /**\n             * If pointer events aren't available on a device, this will turn either the touch or\n             * mouse events into pointer events. This allows a developer to just listen for emitted\n             * pointer events on interactive sprites\n             */\n            if (this.normalizeTouchEvents) {\n                this.interactionDOMElement.removeEventListener('touchstart', this.onPointerDown, true);\n                this.interactionDOMElement.removeEventListener('touchend', this.onPointerUp, true);\n                this.interactionDOMElement.removeEventListener('touchmove', this.onPointerMove, true);\n            }\n\n            if (this.normalizeMouseEvents) {\n                window.document.removeEventListener('mousemove', this.onPointerMove, true);\n                this.interactionDOMElement.removeEventListener('mousedown', this.onPointerDown, true);\n                this.interactionDOMElement.removeEventListener('mouseout', this.onPointerOut, true);\n                this.interactionDOMElement.removeEventListener('mouseover', this.onPointerOver, true);\n                window.removeEventListener('mouseup', this.onPointerUp, true);\n            }\n        }\n\n        window.document.removeEventListener('mousemove', this.onMouseMove, true);\n        this.interactionDOMElement.removeEventListener('mousedown', this.onMouseDown, true);\n        this.interactionDOMElement.removeEventListener('mouseout', this.onMouseOut, true);\n        this.interactionDOMElement.removeEventListener('mouseover', this.onMouseOver, true);\n        window.removeEventListener('mouseup', this.onMouseUp, true);\n\n        if (this.supportsTouchEvents) {\n            this.interactionDOMElement.removeEventListener('touchstart', this.onTouchStart, true);\n            this.interactionDOMElement.removeEventListener('touchend', this.onTouchEnd, true);\n            this.interactionDOMElement.removeEventListener('touchmove', this.onTouchMove, true);\n        }\n\n        this.interactionDOMElement = null;\n\n        this.eventsAdded = false;\n    };\n\n    /**\n     * Updates the state of interactive objects.\n     * Invoked by a throttled ticker update from {@link PIXI.ticker.shared}.\n     *\n     * @param {number} deltaTime - time delta since last tick\n     */\n\n\n    InteractionManager.prototype.update = function update(deltaTime) {\n        this._deltaTime += deltaTime;\n\n        if (this._deltaTime < this.interactionFrequency) {\n            return;\n        }\n\n        this._deltaTime = 0;\n\n        if (!this.interactionDOMElement) {\n            return;\n        }\n\n        // if the user move the mouse this check has already been dfone using the mouse move!\n        if (this.didMove) {\n            this.didMove = false;\n\n            return;\n        }\n\n        this.cursor = this.defaultCursorStyle;\n\n        // Resets the flag as set by a stopPropagation call. This flag is usually reset by a user interaction of any kind,\n        // but there was a scenario of a display object moving under a static mouse cursor.\n        // In this case, mouseover and mouseevents would not pass the flag test in dispatchEvent function\n        this.eventData._reset();\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseOverOut, true);\n\n        if (this.currentCursorStyle !== this.cursor) {\n            this.currentCursorStyle = this.cursor;\n            this.interactionDOMElement.style.cursor = this.cursor;\n        }\n\n        // TODO\n    };\n\n    /**\n     * Dispatches an event on the display object that was interacted with\n     *\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - the display object in question\n     * @param {string} eventString - the name of the event (e.g, mousedown)\n     * @param {object} eventData - the event data object\n     * @private\n     */\n\n\n    InteractionManager.prototype.dispatchEvent = function dispatchEvent(displayObject, eventString, eventData) {\n        if (!eventData.stopped) {\n            eventData.currentTarget = displayObject;\n            eventData.type = eventString;\n\n            displayObject.emit(eventString, eventData);\n\n            if (displayObject[eventString]) {\n                displayObject[eventString](eventData);\n            }\n        }\n    };\n\n    /**\n     * Maps x and y coords from a DOM object and maps them correctly to the pixi view. The\n     * resulting value is stored in the point. This takes into account the fact that the DOM\n     * element could be scaled and positioned anywhere on the screen.\n     *\n     * @param  {PIXI.Point} point - the point that the result will be stored in\n     * @param  {number} x - the x coord of the position to map\n     * @param  {number} y - the y coord of the position to map\n     */\n\n\n    InteractionManager.prototype.mapPositionToPoint = function mapPositionToPoint(point, x, y) {\n        var rect = void 0;\n\n        // IE 11 fix\n        if (!this.interactionDOMElement.parentElement) {\n            rect = { x: 0, y: 0, width: 0, height: 0 };\n        } else {\n            rect = this.interactionDOMElement.getBoundingClientRect();\n        }\n\n        point.x = (x - rect.left) * (this.interactionDOMElement.width / rect.width) / this.resolution;\n        point.y = (y - rect.top) * (this.interactionDOMElement.height / rect.height) / this.resolution;\n    };\n\n    /**\n     * This function is provides a neat way of crawling through the scene graph and running a\n     * specified function on all interactive objects it finds. It will also take care of hit\n     * testing the interactive objects and passes the hit across in the function.\n     *\n     * @param {PIXI.Point} point - the point that is tested for collision\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - the displayObject\n     *  that will be hit test (recursively crawls its children)\n     * @param {Function} [func] - the function that will be called on each interactive object. The\n     *  displayObject and hit will be passed to the function\n     * @param {boolean} [hitTest] - this indicates if the objects inside should be hit test against the point\n     * @param {boolean} [interactive] - Whether the displayObject is interactive\n     * @return {boolean} returns true if the displayObject hit the point\n     */\n\n\n    InteractionManager.prototype.processInteractive = function processInteractive(point, displayObject, func, hitTest, interactive) {\n        if (!displayObject || !displayObject.visible) {\n            return false;\n        }\n\n        // Took a little while to rework this function correctly! But now it is done and nice and optimised. ^_^\n        //\n        // This function will now loop through all objects and then only hit test the objects it HAS\n        // to, not all of them. MUCH faster..\n        // An object will be hit test if the following is true:\n        //\n        // 1: It is interactive.\n        // 2: It belongs to a parent that is interactive AND one of the parents children have not already been hit.\n        //\n        // As another little optimisation once an interactive object has been hit we can carry on\n        // through the scenegraph, but we know that there will be no more hits! So we can avoid extra hit tests\n        // A final optimisation is that an object is not hit test directly if a child has already been hit.\n\n        interactive = displayObject.interactive || interactive;\n\n        var hit = false;\n        var interactiveParent = interactive;\n\n        // if the displayobject has a hitArea, then it does not need to hitTest children.\n        if (displayObject.hitArea) {\n            interactiveParent = false;\n        }\n\n        // it has a mask! Then lets hit test that before continuing..\n        if (hitTest && displayObject._mask) {\n            if (!displayObject._mask.containsPoint(point)) {\n                hitTest = false;\n            }\n        }\n\n        // it has a filterArea! Same as mask but easier, its a rectangle\n        if (hitTest && displayObject.filterArea) {\n            if (!displayObject.filterArea.contains(point.x, point.y)) {\n                hitTest = false;\n            }\n        }\n\n        // ** FREE TIP **! If an object is not interactive or has no buttons in it\n        // (such as a game scene!) set interactiveChildren to false for that displayObject.\n        // This will allow pixi to completely ignore and bypass checking the displayObjects children.\n        if (displayObject.interactiveChildren && displayObject.children) {\n            var children = displayObject.children;\n\n            for (var i = children.length - 1; i >= 0; i--) {\n                var child = children[i];\n\n                // time to get recursive.. if this function will return if something is hit..\n                if (this.processInteractive(point, child, func, hitTest, interactiveParent)) {\n                    // its a good idea to check if a child has lost its parent.\n                    // this means it has been removed whilst looping so its best\n                    if (!child.parent) {\n                        continue;\n                    }\n\n                    hit = true;\n\n                    // we no longer need to hit test any more objects in this container as we we\n                    // now know the parent has been hit\n                    interactiveParent = false;\n\n                    // If the child is interactive , that means that the object hit was actually\n                    // interactive and not just the child of an interactive object.\n                    // This means we no longer need to hit test anything else. We still need to run\n                    // through all objects, but we don't need to perform any hit tests.\n\n                    // {\n                    hitTest = false;\n                    // }\n\n                    // we can break now as we have hit an object.\n                }\n            }\n        }\n\n        // no point running this if the item is not interactive or does not have an interactive parent.\n        if (interactive) {\n            // if we are hit testing (as in we have no hit any objects yet)\n            // We also don't need to worry about hit testing if once of the displayObjects children\n            // has already been hit!\n            if (hitTest && !hit) {\n                if (displayObject.hitArea) {\n                    displayObject.worldTransform.applyInverse(point, this._tempPoint);\n                    hit = displayObject.hitArea.contains(this._tempPoint.x, this._tempPoint.y);\n                } else if (displayObject.containsPoint) {\n                    hit = displayObject.containsPoint(point);\n                }\n            }\n\n            if (displayObject.interactive) {\n                if (hit && !this.eventData.target) {\n                    this.eventData.target = displayObject;\n                    this.mouse.target = displayObject;\n                    this.pointer.target = displayObject;\n                }\n\n                func(displayObject, hit);\n            }\n        }\n\n        return hit;\n    };\n\n    /**\n     * Is called when the mouse button is pressed down on the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of a mouse button being pressed down\n     */\n\n\n    InteractionManager.prototype.onMouseDown = function onMouseDown(event) {\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        // Update internal mouse reference\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        if (this.autoPreventDefault) {\n            this.mouse.originalEvent.preventDefault();\n        }\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseDown, true);\n\n        var isRightButton = event.button === 2 || event.which === 3;\n\n        this.emit(isRightButton ? 'rightdown' : 'mousedown', this.eventData);\n    };\n\n    /**\n     * Processes the result of the mouse down check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processMouseDown = function processMouseDown(displayObject, hit) {\n        var e = this.mouse.originalEvent;\n\n        var isRightButton = e.button === 2 || e.which === 3;\n\n        if (hit) {\n            displayObject[isRightButton ? '_isRightDown' : '_isLeftDown'] = true;\n            this.dispatchEvent(displayObject, isRightButton ? 'rightdown' : 'mousedown', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the mouse button is released on the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of a mouse button being released\n     */\n\n\n    InteractionManager.prototype.onMouseUp = function onMouseUp(event) {\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        // Update internal mouse reference\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseUp, true);\n\n        var isRightButton = event.button === 2 || event.which === 3;\n\n        this.emit(isRightButton ? 'rightup' : 'mouseup', this.eventData);\n    };\n\n    /**\n     * Processes the result of the mouse up check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processMouseUp = function processMouseUp(displayObject, hit) {\n        var e = this.mouse.originalEvent;\n\n        var isRightButton = e.button === 2 || e.which === 3;\n        var isDown = isRightButton ? '_isRightDown' : '_isLeftDown';\n\n        if (hit) {\n            this.dispatchEvent(displayObject, isRightButton ? 'rightup' : 'mouseup', this.eventData);\n\n            if (displayObject[isDown]) {\n                displayObject[isDown] = false;\n                this.dispatchEvent(displayObject, isRightButton ? 'rightclick' : 'click', this.eventData);\n            }\n        } else if (displayObject[isDown]) {\n            displayObject[isDown] = false;\n            this.dispatchEvent(displayObject, isRightButton ? 'rightupoutside' : 'mouseupoutside', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the mouse moves across the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of the mouse moving\n     */\n\n\n    InteractionManager.prototype.onMouseMove = function onMouseMove(event) {\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.didMove = true;\n\n        this.cursor = this.defaultCursorStyle;\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseMove, true);\n\n        this.emit('mousemove', this.eventData);\n\n        if (this.currentCursorStyle !== this.cursor) {\n            this.currentCursorStyle = this.cursor;\n            this.interactionDOMElement.style.cursor = this.cursor;\n        }\n\n        // TODO BUG for parents interactive object (border order issue)\n    };\n\n    /**\n     * Processes the result of the mouse move check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processMouseMove = function processMouseMove(displayObject, hit) {\n        this.processMouseOverOut(displayObject, hit);\n\n        // only display on mouse over\n        if (!this.moveWhenInside || hit) {\n            this.dispatchEvent(displayObject, 'mousemove', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the mouse is moved out of the renderer element\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of the mouse being moved out\n     */\n\n\n    InteractionManager.prototype.onMouseOut = function onMouseOut(event) {\n        this.mouseOverRenderer = false;\n\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        // Update internal mouse reference\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.interactionDOMElement.style.cursor = this.defaultCursorStyle;\n\n        // TODO optimize by not check EVERY TIME! maybe half as often? //\n        this.mapPositionToPoint(this.mouse.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.mouse.global, this.renderer._lastObjectRendered, this.processMouseOverOut, false);\n\n        this.emit('mouseout', this.eventData);\n    };\n\n    /**\n     * Processes the result of the mouse over/out check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processMouseOverOut = function processMouseOverOut(displayObject, hit) {\n        if (hit && this.mouseOverRenderer) {\n            if (!displayObject._mouseOver) {\n                displayObject._mouseOver = true;\n                this.dispatchEvent(displayObject, 'mouseover', this.eventData);\n            }\n\n            if (displayObject.buttonMode) {\n                this.cursor = displayObject.defaultCursor;\n            }\n        } else if (displayObject._mouseOver) {\n            displayObject._mouseOver = false;\n            this.dispatchEvent(displayObject, 'mouseout', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the mouse enters the renderer element area\n     *\n     * @private\n     * @param {MouseEvent} event - The DOM event of the mouse moving into the renderer view\n     */\n\n\n    InteractionManager.prototype.onMouseOver = function onMouseOver(event) {\n        this.mouseOverRenderer = true;\n\n        this.mouse.originalEvent = event;\n        this.eventData.data = this.mouse;\n        this.eventData._reset();\n\n        this.emit('mouseover', this.eventData);\n    };\n\n    /**\n     * Is called when the pointer button is pressed down on the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer button being pressed down\n     */\n\n\n    InteractionManager.prototype.onPointerDown = function onPointerDown(event) {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        // Update internal pointer reference\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        /**\n         * No need to prevent default on natural pointer events, as there are no side effects\n         * Normalized events, however, may have the double mousedown/touchstart issue on the native android browser,\n         * so still need to be prevented.\n         */\n        if (this.autoPreventDefault && (this.normalizeMouseEvents || this.normalizeTouchEvents)) {\n            this.pointer.originalEvent.preventDefault();\n        }\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerDown, true);\n\n        this.emit('pointerdown', this.eventData);\n    };\n\n    /**\n     * Processes the result of the pointer down check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processPointerDown = function processPointerDown(displayObject, hit) {\n        if (hit) {\n            displayObject._pointerDown = true;\n            this.dispatchEvent(displayObject, 'pointerdown', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the pointer button is released on the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer button being released\n     */\n\n\n    InteractionManager.prototype.onPointerUp = function onPointerUp(event) {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        // Update internal pointer reference\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerUp, true);\n\n        this.emit('pointerup', this.eventData);\n    };\n\n    /**\n     * Processes the result of the pointer up check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processPointerUp = function processPointerUp(displayObject, hit) {\n        if (hit) {\n            this.dispatchEvent(displayObject, 'pointerup', this.eventData);\n\n            if (displayObject._pointerDown) {\n                displayObject._pointerDown = false;\n                this.dispatchEvent(displayObject, 'pointertap', this.eventData);\n            }\n        } else if (displayObject._pointerDown) {\n            displayObject._pointerDown = false;\n            this.dispatchEvent(displayObject, 'pointerupoutside', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the pointer moves across the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer moving\n     */\n\n\n    InteractionManager.prototype.onPointerMove = function onPointerMove(event) {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerMove, true);\n\n        this.emit('pointermove', this.eventData);\n    };\n\n    /**\n     * Processes the result of the pointer move check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processPointerMove = function processPointerMove(displayObject, hit) {\n        if (!this.pointer.originalEvent.changedTouches) {\n            this.processPointerOverOut(displayObject, hit);\n        }\n\n        if (!this.moveWhenInside || hit) {\n            this.dispatchEvent(displayObject, 'pointermove', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the pointer is moved out of the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer being moved out\n     */\n\n\n    InteractionManager.prototype.onPointerOut = function onPointerOut(event) {\n        this.normalizeToPointerData(event);\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        // Update internal pointer reference\n        this.mapPositionToPoint(this.pointer.global, event.clientX, event.clientY);\n\n        this.processInteractive(this.pointer.global, this.renderer._lastObjectRendered, this.processPointerOverOut, false);\n\n        this.emit('pointerout', this.eventData);\n    };\n\n    /**\n     * Processes the result of the pointer over/out check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processPointerOverOut = function processPointerOverOut(displayObject, hit) {\n        if (hit && this.mouseOverRenderer) {\n            if (!displayObject._pointerOver) {\n                displayObject._pointerOver = true;\n                this.dispatchEvent(displayObject, 'pointerover', this.eventData);\n            }\n        } else if (displayObject._pointerOver) {\n            displayObject._pointerOver = false;\n            this.dispatchEvent(displayObject, 'pointerout', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when the pointer is moved into the renderer element\n     *\n     * @private\n     * @param {PointerEvent} event - The DOM event of a pointer button being moved into the renderer view\n     */\n\n\n    InteractionManager.prototype.onPointerOver = function onPointerOver(event) {\n        this.pointer.originalEvent = event;\n        this.eventData.data = this.pointer;\n        this.eventData._reset();\n\n        this.emit('pointerover', this.eventData);\n    };\n\n    /**\n     * Is called when a touch is started on the renderer element\n     *\n     * @private\n     * @param {TouchEvent} event - The DOM event of a touch starting on the renderer view\n     */\n\n\n    InteractionManager.prototype.onTouchStart = function onTouchStart(event) {\n        if (this.autoPreventDefault) {\n            event.preventDefault();\n        }\n\n        var changedTouches = event.changedTouches;\n        var cLength = changedTouches.length;\n\n        for (var i = 0; i < cLength; i++) {\n            var touch = changedTouches[i];\n            var touchData = this.getTouchData(touch);\n\n            touchData.originalEvent = event;\n\n            this.eventData.data = touchData;\n            this.eventData._reset();\n\n            this.processInteractive(touchData.global, this.renderer._lastObjectRendered, this.processTouchStart, true);\n\n            this.emit('touchstart', this.eventData);\n\n            this.returnTouchData(touchData);\n        }\n    };\n\n    /**\n     * Processes the result of a touch check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processTouchStart = function processTouchStart(displayObject, hit) {\n        if (hit) {\n            displayObject._touchDown = true;\n            this.dispatchEvent(displayObject, 'touchstart', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when a touch ends on the renderer element\n     *\n     * @private\n     * @param {TouchEvent} event - The DOM event of a touch ending on the renderer view\n     */\n\n\n    InteractionManager.prototype.onTouchEnd = function onTouchEnd(event) {\n        if (this.autoPreventDefault) {\n            event.preventDefault();\n        }\n\n        var changedTouches = event.changedTouches;\n        var cLength = changedTouches.length;\n\n        for (var i = 0; i < cLength; i++) {\n            var touchEvent = changedTouches[i];\n\n            var touchData = this.getTouchData(touchEvent);\n\n            touchData.originalEvent = event;\n\n            // TODO this should be passed along.. no set\n            this.eventData.data = touchData;\n            this.eventData._reset();\n\n            this.processInteractive(touchData.global, this.renderer._lastObjectRendered, this.processTouchEnd, true);\n\n            this.emit('touchend', this.eventData);\n\n            this.returnTouchData(touchData);\n        }\n    };\n\n    /**\n     * Processes the result of the end of a touch and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processTouchEnd = function processTouchEnd(displayObject, hit) {\n        if (hit) {\n            this.dispatchEvent(displayObject, 'touchend', this.eventData);\n\n            if (displayObject._touchDown) {\n                displayObject._touchDown = false;\n                this.dispatchEvent(displayObject, 'tap', this.eventData);\n            }\n        } else if (displayObject._touchDown) {\n            displayObject._touchDown = false;\n            this.dispatchEvent(displayObject, 'touchendoutside', this.eventData);\n        }\n    };\n\n    /**\n     * Is called when a touch is moved across the renderer element\n     *\n     * @private\n     * @param {TouchEvent} event - The DOM event of a touch moving accross the renderer view\n     */\n\n\n    InteractionManager.prototype.onTouchMove = function onTouchMove(event) {\n        if (this.autoPreventDefault) {\n            event.preventDefault();\n        }\n\n        var changedTouches = event.changedTouches;\n        var cLength = changedTouches.length;\n\n        for (var i = 0; i < cLength; i++) {\n            var touchEvent = changedTouches[i];\n\n            var touchData = this.getTouchData(touchEvent);\n\n            touchData.originalEvent = event;\n\n            this.eventData.data = touchData;\n            this.eventData._reset();\n\n            this.processInteractive(touchData.global, this.renderer._lastObjectRendered, this.processTouchMove, this.moveWhenInside);\n\n            this.emit('touchmove', this.eventData);\n\n            this.returnTouchData(touchData);\n        }\n    };\n\n    /**\n     * Processes the result of a touch move check and dispatches the event if need be\n     *\n     * @private\n     * @param {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite} displayObject - The display object that was tested\n     * @param {boolean} hit - the result of the hit test on the display object\n     */\n\n\n    InteractionManager.prototype.processTouchMove = function processTouchMove(displayObject, hit) {\n        if (!this.moveWhenInside || hit) {\n            this.dispatchEvent(displayObject, 'touchmove', this.eventData);\n        }\n    };\n\n    /**\n     * Grabs an interaction data object from the internal pool\n     *\n     * @private\n     * @param {Touch} touch - The touch data we need to pair with an interactionData object\n     * @return {PIXI.interaction.InteractionData} The built data object.\n     */\n\n\n    InteractionManager.prototype.getTouchData = function getTouchData(touch) {\n        var touchData = this.interactiveDataPool.pop() || new _InteractionData2.default();\n\n        touchData.identifier = touch.identifier;\n        this.mapPositionToPoint(touchData.global, touch.clientX, touch.clientY);\n\n        if (navigator.isCocoonJS) {\n            touchData.global.x = touchData.global.x / this.resolution;\n            touchData.global.y = touchData.global.y / this.resolution;\n        }\n\n        touch.globalX = touchData.global.x;\n        touch.globalY = touchData.global.y;\n\n        return touchData;\n    };\n\n    /**\n     * Returns an interaction data object to the internal pool\n     *\n     * @private\n     * @param {PIXI.interaction.InteractionData} touchData - The touch data object we want to return to the pool\n     */\n\n\n    InteractionManager.prototype.returnTouchData = function returnTouchData(touchData) {\n        this.interactiveDataPool.push(touchData);\n    };\n\n    /**\n     * Ensures that the original event object contains all data that a regular pointer event would have\n     *\n     * @private\n     * @param {TouchEvent|MouseEvent} event - The original event data from a touch or mouse event\n     */\n\n\n    InteractionManager.prototype.normalizeToPointerData = function normalizeToPointerData(event) {\n        if (this.normalizeTouchEvents && event.changedTouches) {\n            if (typeof event.button === 'undefined') event.button = event.touches.length ? 1 : 0;\n            if (typeof event.buttons === 'undefined') event.buttons = event.touches.length ? 1 : 0;\n            if (typeof event.isPrimary === 'undefined') event.isPrimary = event.touches.length === 1;\n            if (typeof event.width === 'undefined') event.width = event.changedTouches[0].radiusX || 1;\n            if (typeof event.height === 'undefined') event.height = event.changedTouches[0].radiusY || 1;\n            if (typeof event.tiltX === 'undefined') event.tiltX = 0;\n            if (typeof event.tiltY === 'undefined') event.tiltY = 0;\n            if (typeof event.pointerType === 'undefined') event.pointerType = 'touch';\n            if (typeof event.pointerId === 'undefined') event.pointerId = event.changedTouches[0].identifier || 0;\n            if (typeof event.pressure === 'undefined') event.pressure = event.changedTouches[0].force || 0.5;\n            if (typeof event.rotation === 'undefined') event.rotation = event.changedTouches[0].rotationAngle || 0;\n\n            if (typeof event.clientX === 'undefined') event.clientX = event.changedTouches[0].clientX;\n            if (typeof event.clientY === 'undefined') event.clientY = event.changedTouches[0].clientY;\n            if (typeof event.pageX === 'undefined') event.pageX = event.changedTouches[0].pageX;\n            if (typeof event.pageY === 'undefined') event.pageY = event.changedTouches[0].pageY;\n            if (typeof event.screenX === 'undefined') event.screenX = event.changedTouches[0].screenX;\n            if (typeof event.screenY === 'undefined') event.screenY = event.changedTouches[0].screenY;\n            if (typeof event.layerX === 'undefined') event.layerX = event.offsetX = event.clientX;\n            if (typeof event.layerY === 'undefined') event.layerY = event.offsetY = event.clientY;\n        } else if (this.normalizeMouseEvents) {\n            if (typeof event.isPrimary === 'undefined') event.isPrimary = true;\n            if (typeof event.width === 'undefined') event.width = 1;\n            if (typeof event.height === 'undefined') event.height = 1;\n            if (typeof event.tiltX === 'undefined') event.tiltX = 0;\n            if (typeof event.tiltY === 'undefined') event.tiltY = 0;\n            if (typeof event.pointerType === 'undefined') event.pointerType = 'mouse';\n            if (typeof event.pointerId === 'undefined') event.pointerId = 1;\n            if (typeof event.pressure === 'undefined') event.pressure = 0.5;\n            if (typeof event.rotation === 'undefined') event.rotation = 0;\n        }\n    };\n\n    /**\n     * Destroys the interaction manager\n     *\n     */\n\n\n    InteractionManager.prototype.destroy = function destroy() {\n        this.removeEvents();\n\n        this.removeAllListeners();\n\n        this.renderer = null;\n\n        this.mouse = null;\n\n        this.eventData = null;\n\n        this.interactiveDataPool = null;\n\n        this.interactionDOMElement = null;\n\n        this.onMouseDown = null;\n        this.processMouseDown = null;\n\n        this.onMouseUp = null;\n        this.processMouseUp = null;\n\n        this.onMouseMove = null;\n        this.processMouseMove = null;\n\n        this.onMouseOut = null;\n        this.processMouseOverOut = null;\n\n        this.onMouseOver = null;\n\n        this.onPointerDown = null;\n        this.processPointerDown = null;\n\n        this.onPointerUp = null;\n        this.processPointerUp = null;\n\n        this.onPointerMove = null;\n        this.processPointerMove = null;\n\n        this.onPointerOut = null;\n        this.processPointerOverOut = null;\n\n        this.onPointerOver = null;\n\n        this.onTouchStart = null;\n        this.processTouchStart = null;\n\n        this.onTouchEnd = null;\n        this.processTouchEnd = null;\n\n        this.onTouchMove = null;\n        this.processTouchMove = null;\n\n        this._tempPoint = null;\n    };\n\n    return InteractionManager;\n}(_eventemitter2.default);\n\nexports.default = InteractionManager;\n\n\ncore.WebGLRenderer.registerPlugin('interaction', InteractionManager);\ncore.CanvasRenderer.registerPlugin('interaction', InteractionManager);\n//# sourceMappingURL=InteractionManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/interaction/InteractionManager.js\n// module id = 147\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _InteractionData = require('./InteractionData');\n\nObject.defineProperty(exports, 'InteractionData', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InteractionData).default;\n  }\n});\n\nvar _InteractionManager = require('./InteractionManager');\n\nObject.defineProperty(exports, 'InteractionManager', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InteractionManager).default;\n  }\n});\n\nvar _interactiveTarget = require('./interactiveTarget');\n\nObject.defineProperty(exports, 'interactiveTarget', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_interactiveTarget).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/interaction/index.js\n// module id = 148\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _loader = require('./loader');\n\nObject.defineProperty(exports, 'Loader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_loader).default;\n  }\n});\n\nvar _bitmapFontParser = require('./bitmapFontParser');\n\nObject.defineProperty(exports, 'bitmapFontParser', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_bitmapFontParser).default;\n  }\n});\nObject.defineProperty(exports, 'parseBitmapFontData', {\n  enumerable: true,\n  get: function get() {\n    return _bitmapFontParser.parse;\n  }\n});\n\nvar _spritesheetParser = require('./spritesheetParser');\n\nObject.defineProperty(exports, 'spritesheetParser', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_spritesheetParser).default;\n  }\n});\n\nvar _textureParser = require('./textureParser');\n\nObject.defineProperty(exports, 'textureParser', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_textureParser).default;\n  }\n});\n\nvar _resourceLoader = require('resource-loader');\n\nObject.defineProperty(exports, 'Resource', {\n  enumerable: true,\n  get: function get() {\n    return _resourceLoader.Resource;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/loaders/index.js\n// module id = 149\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _resourceLoader = require('resource-loader');\n\nvar _resourceLoader2 = _interopRequireDefault(_resourceLoader);\n\nvar _textureParser = require('./textureParser');\n\nvar _textureParser2 = _interopRequireDefault(_textureParser);\n\nvar _spritesheetParser = require('./spritesheetParser');\n\nvar _spritesheetParser2 = _interopRequireDefault(_spritesheetParser);\n\nvar _bitmapFontParser = require('./bitmapFontParser');\n\nvar _bitmapFontParser2 = _interopRequireDefault(_bitmapFontParser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * The new loader, extends Resource Loader by Chad Engler : https://github.com/englercj/resource-loader\n *\n * ```js\n * let loader = PIXI.loader; // pixi exposes a premade instance for you to use.\n * //or\n * let loader = new PIXI.loaders.Loader(); // you can also create your own if you want\n *\n * loader.add('bunny',\"data/bunny.png\");\n *\n * loader.once('complete',onAssetsLoaded);\n *\n * loader.load();\n * ```\n *\n * @see https://github.com/englercj/resource-loader\n *\n * @class\n * @extends module:resource-loader.ResourceLoader\n * @memberof PIXI.loaders\n */\nvar Loader = function (_ResourceLoader) {\n    _inherits(Loader, _ResourceLoader);\n\n    /**\n     * @param {string} [baseUrl=''] - The base url for all resources loaded by this loader.\n     * @param {number} [concurrency=10] - The number of resources to load concurrently.\n     */\n    function Loader(baseUrl, concurrency) {\n        _classCallCheck(this, Loader);\n\n        var _this = _possibleConstructorReturn(this, _ResourceLoader.call(this, baseUrl, concurrency));\n\n        for (var i = 0; i < Loader._pixiMiddleware.length; ++i) {\n            _this.use(Loader._pixiMiddleware[i]());\n        }\n        return _this;\n    }\n\n    /**\n     * Adds a default middleware to the pixi loader.\n     *\n     * @static\n     * @param {Function} fn - The middleware to add.\n     */\n\n\n    Loader.addPixiMiddleware = function addPixiMiddleware(fn) {\n        Loader._pixiMiddleware.push(fn);\n    };\n\n    return Loader;\n}(_resourceLoader2.default);\n\nexports.default = Loader;\n\n\nLoader._pixiMiddleware = [\n// parse any blob into more usable objects (e.g. Image)\n_resourceLoader2.default.middleware.parsing.blob,\n// parse any Image objects into textures\n_textureParser2.default,\n// parse any spritesheet data into multiple textures\n_spritesheetParser2.default,\n// parse bitmap font data into multiple textures\n_bitmapFontParser2.default];\n\n// Add custom extentions\nvar Resource = _resourceLoader2.default.Resource;\n\nResource.setExtensionXhrType('fnt', Resource.XHR_RESPONSE_TYPE.DOCUMENT);\n//# sourceMappingURL=loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/loaders/loader.js\n// module id = 150\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Plane2 = require('./Plane');\n\nvar _Plane3 = _interopRequireDefault(_Plane2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DEFAULT_BORDER_SIZE = 10;\n\n/**\n * The NineSlicePlane allows you to stretch a texture using 9-slice scaling. The corners will remain unscaled (useful\n * for buttons with rounded corners for example) and the other areas will be scaled horizontally and or vertically\n *\n *```js\n * let Plane9 = new PIXI.NineSlicePlane(PIXI.Texture.fromImage('BoxWithRoundedCorners.png'), 15, 15, 15, 15);\n *  ```\n * <pre>\n *      A                          B\n *    +---+----------------------+---+\n *  C | 1 |          2           | 3 |\n *    +---+----------------------+---+\n *    |   |                      |   |\n *    | 4 |          5           | 6 |\n *    |   |                      |   |\n *    +---+----------------------+---+\n *  D | 7 |          8           | 9 |\n *    +---+----------------------+---+\n\n *  When changing this objects width and/or height:\n *     areas 1 3 7 and 9 will remain unscaled.\n *     areas 2 and 8 will be stretched horizontally\n *     areas 4 and 6 will be stretched vertically\n *     area 5 will be stretched both horizontally and vertically\n * </pre>\n *\n * @class\n * @extends PIXI.mesh.Plane\n * @memberof PIXI.mesh\n *\n */\n\nvar NineSlicePlane = function (_Plane) {\n    _inherits(NineSlicePlane, _Plane);\n\n    /**\n     * @param {PIXI.Texture} texture - The texture to use on the NineSlicePlane.\n     * @param {int} [leftWidth=10] size of the left vertical bar (A)\n     * @param {int} [topHeight=10] size of the top horizontal bar (C)\n     * @param {int} [rightWidth=10] size of the right vertical bar (B)\n     * @param {int} [bottomHeight=10] size of the bottom horizontal bar (D)\n     */\n    function NineSlicePlane(texture, leftWidth, topHeight, rightWidth, bottomHeight) {\n        _classCallCheck(this, NineSlicePlane);\n\n        var _this = _possibleConstructorReturn(this, _Plane.call(this, texture, 4, 4));\n\n        var uvs = _this.uvs;\n\n        // right and bottom uv's are always 1\n        uvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\n        uvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\n\n        _this._origWidth = texture.width;\n        _this._origHeight = texture.height;\n        _this._uvw = 1 / _this._origWidth;\n        _this._uvh = 1 / _this._origHeight;\n\n        /**\n         * The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         * @override\n         */\n        _this.width = texture.width;\n\n        /**\n         * The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         * @override\n         */\n        _this.height = texture.height;\n\n        uvs[2] = uvs[10] = uvs[18] = uvs[26] = _this._uvw * leftWidth;\n        uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - _this._uvw * rightWidth;\n        uvs[9] = uvs[11] = uvs[13] = uvs[15] = _this._uvh * topHeight;\n        uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - _this._uvh * bottomHeight;\n\n        /**\n         * The width of the left column (a)\n         *\n         * @member {number}\n         */\n        _this.leftWidth = typeof leftWidth !== 'undefined' ? leftWidth : DEFAULT_BORDER_SIZE;\n\n        /**\n         * The width of the right column (b)\n         *\n         * @member {number}\n         */\n        _this.rightWidth = typeof rightWidth !== 'undefined' ? rightWidth : DEFAULT_BORDER_SIZE;\n\n        /**\n         * The height of the top row (c)\n         *\n         * @member {number}\n         */\n        _this.topHeight = typeof topHeight !== 'undefined' ? topHeight : DEFAULT_BORDER_SIZE;\n\n        /**\n         * The height of the bottom row (d)\n         *\n         * @member {number}\n         */\n        _this.bottomHeight = typeof bottomHeight !== 'undefined' ? bottomHeight : DEFAULT_BORDER_SIZE;\n        return _this;\n    }\n\n    /**\n     * Updates the horizontal vertices.\n     *\n     */\n\n\n    NineSlicePlane.prototype.updateHorizontalVertices = function updateHorizontalVertices() {\n        var vertices = this.vertices;\n\n        vertices[9] = vertices[11] = vertices[13] = vertices[15] = this._topHeight;\n        vertices[17] = vertices[19] = vertices[21] = vertices[23] = this._height - this._bottomHeight;\n        vertices[25] = vertices[27] = vertices[29] = vertices[31] = this._height;\n    };\n\n    /**\n     * Updates the vertical vertices.\n     *\n     */\n\n\n    NineSlicePlane.prototype.updateVerticalVertices = function updateVerticalVertices() {\n        var vertices = this.vertices;\n\n        vertices[2] = vertices[10] = vertices[18] = vertices[26] = this._leftWidth;\n        vertices[4] = vertices[12] = vertices[20] = vertices[28] = this._width - this._rightWidth;\n        vertices[6] = vertices[14] = vertices[22] = vertices[30] = this._width;\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer to render with.\n     */\n\n\n    NineSlicePlane.prototype._renderCanvas = function _renderCanvas(renderer) {\n        var context = renderer.context;\n\n        context.globalAlpha = this.worldAlpha;\n\n        var transform = this.worldTransform;\n        var res = renderer.resolution;\n\n        if (renderer.roundPixels) {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res | 0, transform.ty * res | 0);\n        } else {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res, transform.ty * res);\n        }\n\n        var base = this._texture.baseTexture;\n        var textureSource = base.source;\n        var w = base.width;\n        var h = base.height;\n\n        this.drawSegment(context, textureSource, w, h, 0, 1, 10, 11);\n        this.drawSegment(context, textureSource, w, h, 2, 3, 12, 13);\n        this.drawSegment(context, textureSource, w, h, 4, 5, 14, 15);\n        this.drawSegment(context, textureSource, w, h, 8, 9, 18, 19);\n        this.drawSegment(context, textureSource, w, h, 10, 11, 20, 21);\n        this.drawSegment(context, textureSource, w, h, 12, 13, 22, 23);\n        this.drawSegment(context, textureSource, w, h, 16, 17, 26, 27);\n        this.drawSegment(context, textureSource, w, h, 18, 19, 28, 29);\n        this.drawSegment(context, textureSource, w, h, 20, 21, 30, 31);\n    };\n\n    /**\n     * Renders one segment of the plane.\n     * to mimic the exact drawing behavior of stretching the image like WebGL does, we need to make sure\n     * that the source area is at least 1 pixel in size, otherwise nothing gets drawn when a slice size of 0 is used.\n     *\n     * @private\n     * @param {CanvasRenderingContext2D} context - The context to draw with.\n     * @param {CanvasImageSource} textureSource - The source to draw.\n     * @param {number} w - width of the texture\n     * @param {number} h - height of the texture\n     * @param {number} x1 - x index 1\n     * @param {number} y1 - y index 1\n     * @param {number} x2 - x index 2\n     * @param {number} y2 - y index 2\n     */\n\n\n    NineSlicePlane.prototype.drawSegment = function drawSegment(context, textureSource, w, h, x1, y1, x2, y2) {\n        // otherwise you get weird results when using slices of that are 0 wide or high.\n        var uvs = this.uvs;\n        var vertices = this.vertices;\n\n        var sw = (uvs[x2] - uvs[x1]) * w;\n        var sh = (uvs[y2] - uvs[y1]) * h;\n        var dw = vertices[x2] - vertices[x1];\n        var dh = vertices[y2] - vertices[y1];\n\n        // make sure the source is at least 1 pixel wide and high, otherwise nothing will be drawn.\n        if (sw < 1) {\n            sw = 1;\n        }\n\n        if (sh < 1) {\n            sh = 1;\n        }\n\n        // make sure destination is at least 1 pixel wide and high, otherwise you get\n        // lines when rendering close to original size.\n        if (dw < 1) {\n            dw = 1;\n        }\n\n        if (dh < 1) {\n            dh = 1;\n        }\n\n        context.drawImage(textureSource, uvs[x1] * w, uvs[y1] * h, sw, sh, vertices[x1], vertices[y1], dw, dh);\n    };\n\n    /**\n     * The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n     *\n     * @member {number}\n     * @memberof PIXI.NineSlicePlane#\n     */\n\n\n    _createClass(NineSlicePlane, [{\n        key: 'width',\n        get: function get() {\n            return this._width;\n        }\n\n        /**\n         * Sets the width.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._width = value;\n            this.updateVerticalVertices();\n        }\n\n        /**\n         * The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         */\n\n    }, {\n        key: 'height',\n        get: function get() {\n            return this._height;\n        }\n\n        /**\n         * Sets the height.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._height = value;\n            this.updateHorizontalVertices();\n        }\n\n        /**\n         * The width of the left column\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'leftWidth',\n        get: function get() {\n            return this._leftWidth;\n        }\n\n        /**\n         * Sets the width of the left column.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._leftWidth = value;\n\n            var uvs = this.uvs;\n            var vertices = this.vertices;\n\n            uvs[2] = uvs[10] = uvs[18] = uvs[26] = this._uvw * value;\n            vertices[2] = vertices[10] = vertices[18] = vertices[26] = value;\n\n            this.dirty = true;\n        }\n\n        /**\n         * The width of the right column\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'rightWidth',\n        get: function get() {\n            return this._rightWidth;\n        }\n\n        /**\n         * Sets the width of the right column.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._rightWidth = value;\n\n            var uvs = this.uvs;\n            var vertices = this.vertices;\n\n            uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - this._uvw * value;\n            vertices[4] = vertices[12] = vertices[20] = vertices[28] = this._width - value;\n\n            this.dirty = true;\n        }\n\n        /**\n         * The height of the top row\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'topHeight',\n        get: function get() {\n            return this._topHeight;\n        }\n\n        /**\n         * Sets the height of the top row.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._topHeight = value;\n\n            var uvs = this.uvs;\n            var vertices = this.vertices;\n\n            uvs[9] = uvs[11] = uvs[13] = uvs[15] = this._uvh * value;\n            vertices[9] = vertices[11] = vertices[13] = vertices[15] = value;\n\n            this.dirty = true;\n        }\n\n        /**\n         * The height of the bottom row\n         *\n         * @member {number}\n         */\n\n    }, {\n        key: 'bottomHeight',\n        get: function get() {\n            return this._bottomHeight;\n        }\n\n        /**\n         * Sets the height of the bottom row.\n         *\n         * @param {number} value - the value to set to.\n         */\n        ,\n        set: function set(value) {\n            this._bottomHeight = value;\n\n            var uvs = this.uvs;\n            var vertices = this.vertices;\n\n            uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - this._uvh * value;\n            vertices[17] = vertices[19] = vertices[21] = vertices[23] = this._height - value;\n\n            this.dirty = true;\n        }\n    }]);\n\n    return NineSlicePlane;\n}(_Plane3.default);\n\nexports.default = NineSlicePlane;\n//# sourceMappingURL=NineSlicePlane.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/mesh/NineSlicePlane.js\n// module id = 151\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Mesh2 = require('./Mesh');\n\nvar _Mesh3 = _interopRequireDefault(_Mesh2);\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The rope allows you to draw a texture across several points and them manipulate these points\n *\n *```js\n * for (let i = 0; i < 20; i++) {\n *     points.push(new PIXI.Point(i * 50, 0));\n * };\n * let rope = new PIXI.Rope(PIXI.Texture.fromImage(\"snake.png\"), points);\n *  ```\n *\n * @class\n * @extends PIXI.mesh.Mesh\n * @memberof PIXI.mesh\n *\n */\nvar Rope = function (_Mesh) {\n    _inherits(Rope, _Mesh);\n\n    /**\n     * @param {PIXI.Texture} texture - The texture to use on the rope.\n     * @param {PIXI.Point[]} points - An array of {@link PIXI.Point} objects to construct this rope.\n     */\n    function Rope(texture, points) {\n        _classCallCheck(this, Rope);\n\n        /*\n         * @member {PIXI.Point[]} An array of points that determine the rope\n         */\n        var _this = _possibleConstructorReturn(this, _Mesh.call(this, texture));\n\n        _this.points = points;\n\n        /*\n         * @member {Float32Array} An array of vertices used to construct this rope.\n         */\n        _this.vertices = new Float32Array(points.length * 4);\n\n        /*\n         * @member {Float32Array} The WebGL Uvs of the rope.\n         */\n        _this.uvs = new Float32Array(points.length * 4);\n\n        /*\n         * @member {Float32Array} An array containing the color components\n         */\n        _this.colors = new Float32Array(points.length * 2);\n\n        /*\n         * @member {Uint16Array} An array containing the indices of the vertices\n         */\n        _this.indices = new Uint16Array(points.length * 2);\n\n        /**\n         * Tracker for if the rope is ready to be drawn. Needed because Mesh ctor can\n         * call _onTextureUpdated which could call refresh too early.\n         *\n         * @member {boolean}\n         * @private\n         */\n        _this._ready = true;\n\n        _this.refresh();\n        return _this;\n    }\n\n    /**\n     * Refreshes\n     *\n     */\n\n\n    Rope.prototype.refresh = function refresh() {\n        var points = this.points;\n\n        // if too little points, or texture hasn't got UVs set yet just move on.\n        if (points.length < 1 || !this._texture._uvs) {\n            return;\n        }\n\n        // if the number of points has changed we will need to recreate the arraybuffers\n        if (this.vertices.length / 4 !== points.length) {\n            this.vertices = new Float32Array(points.length * 4);\n            this.uvs = new Float32Array(points.length * 4);\n            this.colors = new Float32Array(points.length * 2);\n            this.indices = new Uint16Array(points.length * 2);\n        }\n\n        var uvs = this.uvs;\n\n        var indices = this.indices;\n        var colors = this.colors;\n\n        var textureUvs = this._texture._uvs;\n        var offset = new core.Point(textureUvs.x0, textureUvs.y0);\n        var factor = new core.Point(textureUvs.x2 - textureUvs.x0, textureUvs.y2 - textureUvs.y0);\n\n        uvs[0] = 0 + offset.x;\n        uvs[1] = 0 + offset.y;\n        uvs[2] = 0 + offset.x;\n        uvs[3] = Number(factor.y) + offset.y;\n\n        colors[0] = 1;\n        colors[1] = 1;\n\n        indices[0] = 0;\n        indices[1] = 1;\n\n        var total = points.length;\n\n        for (var i = 1; i < total; i++) {\n            // time to do some smart drawing!\n            var index = i * 4;\n            var amount = i / (total - 1);\n\n            uvs[index] = amount * factor.x + offset.x;\n            uvs[index + 1] = 0 + offset.y;\n\n            uvs[index + 2] = amount * factor.x + offset.x;\n            uvs[index + 3] = Number(factor.y) + offset.y;\n\n            index = i * 2;\n            colors[index] = 1;\n            colors[index + 1] = 1;\n\n            index = i * 2;\n            indices[index] = index;\n            indices[index + 1] = index + 1;\n        }\n\n        // ensure that the changes are uploaded\n        this.dirty++;\n        this.indexDirty++;\n    };\n\n    /**\n     * Clear texture UVs when new texture is set\n     *\n     * @private\n     */\n\n\n    Rope.prototype._onTextureUpdate = function _onTextureUpdate() {\n        _Mesh.prototype._onTextureUpdate.call(this);\n\n        // wait for the Rope ctor to finish before calling refresh\n        if (this._ready) {\n            this.refresh();\n        }\n    };\n\n    /**\n     * Updates the object transform for rendering\n     *\n     * @private\n     */\n\n\n    Rope.prototype.updateTransform = function updateTransform() {\n        var points = this.points;\n\n        if (points.length < 1) {\n            return;\n        }\n\n        var lastPoint = points[0];\n        var nextPoint = void 0;\n        var perpX = 0;\n        var perpY = 0;\n\n        // this.count -= 0.2;\n\n        var vertices = this.vertices;\n        var total = points.length;\n\n        for (var i = 0; i < total; i++) {\n            var point = points[i];\n            var index = i * 4;\n\n            if (i < points.length - 1) {\n                nextPoint = points[i + 1];\n            } else {\n                nextPoint = point;\n            }\n\n            perpY = -(nextPoint.x - lastPoint.x);\n            perpX = nextPoint.y - lastPoint.y;\n\n            var ratio = (1 - i / (total - 1)) * 10;\n\n            if (ratio > 1) {\n                ratio = 1;\n            }\n\n            var perpLength = Math.sqrt(perpX * perpX + perpY * perpY);\n            var num = this._texture.height / 2; // (20 + Math.abs(Math.sin((i + this.count) * 0.3) * 50) )* ratio;\n\n            perpX /= perpLength;\n            perpY /= perpLength;\n\n            perpX *= num;\n            perpY *= num;\n\n            vertices[index] = point.x + perpX;\n            vertices[index + 1] = point.y + perpY;\n            vertices[index + 2] = point.x - perpX;\n            vertices[index + 3] = point.y - perpY;\n\n            lastPoint = point;\n        }\n\n        this.containerUpdateTransform();\n    };\n\n    return Rope;\n}(_Mesh3.default);\n\nexports.default = Rope;\n//# sourceMappingURL=Rope.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/mesh/Rope.js\n// module id = 152\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _Mesh = require('../Mesh');\n\nvar _Mesh2 = _interopRequireDefault(_Mesh);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Renderer dedicated to meshes.\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar MeshSpriteRenderer = function () {\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The renderer this downport works for\n     */\n    function MeshSpriteRenderer(renderer) {\n        _classCallCheck(this, MeshSpriteRenderer);\n\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders the Mesh\n     *\n     * @param {PIXI.mesh.Mesh} mesh - the Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype.render = function render(mesh) {\n        var renderer = this.renderer;\n        var context = renderer.context;\n\n        var transform = mesh.worldTransform;\n        var res = renderer.resolution;\n\n        if (renderer.roundPixels) {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res | 0, transform.ty * res | 0);\n        } else {\n            context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res, transform.ty * res);\n        }\n\n        renderer.setBlendMode(mesh.blendMode);\n\n        if (mesh.drawMode === _Mesh2.default.DRAW_MODES.TRIANGLE_MESH) {\n            this._renderTriangleMesh(mesh);\n        } else {\n            this._renderTriangles(mesh);\n        }\n    };\n\n    /**\n     * Draws the object in Triangle Mesh mode\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype._renderTriangleMesh = function _renderTriangleMesh(mesh) {\n        // draw triangles!!\n        var length = mesh.vertices.length / 2;\n\n        for (var i = 0; i < length - 2; i++) {\n            // draw some triangles!\n            var index = i * 2;\n\n            this._renderDrawTriangle(mesh, index, index + 2, index + 4);\n        }\n    };\n\n    /**\n     * Draws the object in triangle mode using canvas\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the current mesh\n     */\n\n\n    MeshSpriteRenderer.prototype._renderTriangles = function _renderTriangles(mesh) {\n        // draw triangles!!\n        var indices = mesh.indices;\n        var length = indices.length;\n\n        for (var i = 0; i < length; i += 3) {\n            // draw some triangles!\n            var index0 = indices[i] * 2;\n            var index1 = indices[i + 1] * 2;\n            var index2 = indices[i + 2] * 2;\n\n            this._renderDrawTriangle(mesh, index0, index1, index2);\n        }\n    };\n\n    /**\n     * Draws one of the triangles that from the Mesh\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - the current mesh\n     * @param {number} index0 - the index of the first vertex\n     * @param {number} index1 - the index of the second vertex\n     * @param {number} index2 - the index of the third vertex\n     */\n\n\n    MeshSpriteRenderer.prototype._renderDrawTriangle = function _renderDrawTriangle(mesh, index0, index1, index2) {\n        var context = this.renderer.context;\n        var uvs = mesh.uvs;\n        var vertices = mesh.vertices;\n        var texture = mesh._texture;\n\n        if (!texture.valid) {\n            return;\n        }\n\n        var base = texture.baseTexture;\n        var textureSource = base.source;\n        var textureWidth = base.width;\n        var textureHeight = base.height;\n\n        var u0 = uvs[index0] * base.width;\n        var u1 = uvs[index1] * base.width;\n        var u2 = uvs[index2] * base.width;\n        var v0 = uvs[index0 + 1] * base.height;\n        var v1 = uvs[index1 + 1] * base.height;\n        var v2 = uvs[index2 + 1] * base.height;\n\n        var x0 = vertices[index0];\n        var x1 = vertices[index1];\n        var x2 = vertices[index2];\n        var y0 = vertices[index0 + 1];\n        var y1 = vertices[index1 + 1];\n        var y2 = vertices[index2 + 1];\n\n        if (mesh.canvasPadding > 0) {\n            var paddingX = mesh.canvasPadding / mesh.worldTransform.a;\n            var paddingY = mesh.canvasPadding / mesh.worldTransform.d;\n            var centerX = (x0 + x1 + x2) / 3;\n            var centerY = (y0 + y1 + y2) / 3;\n\n            var normX = x0 - centerX;\n            var normY = y0 - centerY;\n\n            var dist = Math.sqrt(normX * normX + normY * normY);\n\n            x0 = centerX + normX / dist * (dist + paddingX);\n            y0 = centerY + normY / dist * (dist + paddingY);\n\n            //\n\n            normX = x1 - centerX;\n            normY = y1 - centerY;\n\n            dist = Math.sqrt(normX * normX + normY * normY);\n            x1 = centerX + normX / dist * (dist + paddingX);\n            y1 = centerY + normY / dist * (dist + paddingY);\n\n            normX = x2 - centerX;\n            normY = y2 - centerY;\n\n            dist = Math.sqrt(normX * normX + normY * normY);\n            x2 = centerX + normX / dist * (dist + paddingX);\n            y2 = centerY + normY / dist * (dist + paddingY);\n        }\n\n        context.save();\n        context.beginPath();\n\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n        context.lineTo(x2, y2);\n\n        context.closePath();\n\n        context.clip();\n\n        // Compute matrix transform\n        var delta = u0 * v1 + v0 * u2 + u1 * v2 - v1 * u2 - v0 * u1 - u0 * v2;\n        var deltaA = x0 * v1 + v0 * x2 + x1 * v2 - v1 * x2 - v0 * x1 - x0 * v2;\n        var deltaB = u0 * x1 + x0 * u2 + u1 * x2 - x1 * u2 - x0 * u1 - u0 * x2;\n        var deltaC = u0 * v1 * x2 + v0 * x1 * u2 + x0 * u1 * v2 - x0 * v1 * u2 - v0 * u1 * x2 - u0 * x1 * v2;\n        var deltaD = y0 * v1 + v0 * y2 + y1 * v2 - v1 * y2 - v0 * y1 - y0 * v2;\n        var deltaE = u0 * y1 + y0 * u2 + u1 * y2 - y1 * u2 - y0 * u1 - u0 * y2;\n        var deltaF = u0 * v1 * y2 + v0 * y1 * u2 + y0 * u1 * v2 - y0 * v1 * u2 - v0 * u1 * y2 - u0 * y1 * v2;\n\n        context.transform(deltaA / delta, deltaD / delta, deltaB / delta, deltaE / delta, deltaC / delta, deltaF / delta);\n\n        context.drawImage(textureSource, 0, 0, textureWidth * base.resolution, textureHeight * base.resolution, 0, 0, textureWidth, textureHeight);\n\n        context.restore();\n    };\n\n    /**\n     * Renders a flat Mesh\n     *\n     * @private\n     * @param {PIXI.mesh.Mesh} mesh - The Mesh to render\n     */\n\n\n    MeshSpriteRenderer.prototype.renderMeshFlat = function renderMeshFlat(mesh) {\n        var context = this.renderer.context;\n        var vertices = mesh.vertices;\n        var length = vertices.length / 2;\n\n        // this.count++;\n\n        context.beginPath();\n\n        for (var i = 1; i < length - 2; ++i) {\n            // draw some triangles!\n            var index = i * 2;\n\n            var x0 = vertices[index];\n            var y0 = vertices[index + 1];\n\n            var x1 = vertices[index + 2];\n            var y1 = vertices[index + 3];\n\n            var x2 = vertices[index + 4];\n            var y2 = vertices[index + 5];\n\n            context.moveTo(x0, y0);\n            context.lineTo(x1, y1);\n            context.lineTo(x2, y2);\n        }\n\n        context.fillStyle = '#FF0000';\n        context.fill();\n        context.closePath();\n    };\n\n    /**\n     * destroy the the renderer.\n     *\n     */\n\n\n    MeshSpriteRenderer.prototype.destroy = function destroy() {\n        this.renderer = null;\n    };\n\n    return MeshSpriteRenderer;\n}();\n\nexports.default = MeshSpriteRenderer;\n\n\ncore.CanvasRenderer.registerPlugin('mesh', MeshSpriteRenderer);\n//# sourceMappingURL=CanvasMeshRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/mesh/canvas/CanvasMeshRenderer.js\n// module id = 153\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nvar _Mesh = require('../Mesh');\n\nvar _Mesh2 = _interopRequireDefault(_Mesh);\n\nvar _path = require('path');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * WebGL renderer plugin for tiling sprites\n */\nvar MeshRenderer = function (_core$ObjectRenderer) {\n    _inherits(MeshRenderer, _core$ObjectRenderer);\n\n    /**\n     * constructor for renderer\n     *\n     * @param {WebGLRenderer} renderer The renderer this tiling awesomeness works for.\n     */\n    function MeshRenderer(renderer) {\n        _classCallCheck(this, MeshRenderer);\n\n        var _this = _possibleConstructorReturn(this, _core$ObjectRenderer.call(this, renderer));\n\n        _this.shader = null;\n        return _this;\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */\n\n\n    MeshRenderer.prototype.onContextChange = function onContextChange() {\n        var gl = this.renderer.gl;\n\n        this.shader = new core.Shader(gl, 'attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 translationMatrix;\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = aTextureCoord;\\n}\\n', 'varying vec2 vTextureCoord;\\nuniform float alpha;\\nuniform vec3 tint;\\n\\nuniform sampler2D uSampler;\\n\\nvoid main(void)\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord) * vec4(tint * alpha, alpha);\\n}\\n');\n    };\n\n    /**\n     * renders mesh\n     *\n     * @param {PIXI.mesh.Mesh} mesh mesh instance\n     */\n\n\n    MeshRenderer.prototype.render = function render(mesh) {\n        var renderer = this.renderer;\n        var gl = renderer.gl;\n        var texture = mesh._texture;\n\n        if (!texture.valid) {\n            return;\n        }\n\n        var glData = mesh._glDatas[renderer.CONTEXT_UID];\n\n        if (!glData) {\n            renderer.bindVao(null);\n\n            glData = {\n                shader: this.shader,\n                vertexBuffer: _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, mesh.vertices, gl.STREAM_DRAW),\n                uvBuffer: _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, mesh.uvs, gl.STREAM_DRAW),\n                indexBuffer: _pixiGlCore2.default.GLBuffer.createIndexBuffer(gl, mesh.indices, gl.STATIC_DRAW),\n                // build the vao object that will render..\n                vao: null,\n                dirty: mesh.dirty,\n                indexDirty: mesh.indexDirty\n            };\n\n            // build the vao object that will render..\n            glData.vao = new _pixiGlCore2.default.VertexArrayObject(gl).addIndex(glData.indexBuffer).addAttribute(glData.vertexBuffer, glData.shader.attributes.aVertexPosition, gl.FLOAT, false, 2 * 4, 0).addAttribute(glData.uvBuffer, glData.shader.attributes.aTextureCoord, gl.FLOAT, false, 2 * 4, 0);\n\n            mesh._glDatas[renderer.CONTEXT_UID] = glData;\n        }\n\n        if (mesh.dirty !== glData.dirty) {\n            glData.dirty = mesh.dirty;\n            glData.uvBuffer.upload(mesh.uvs);\n        }\n\n        if (mesh.indexDirty !== glData.indexDirty) {\n            glData.indexDirty = mesh.indexDirty;\n            glData.indexBuffer.upload(mesh.indices);\n        }\n\n        glData.vertexBuffer.upload(mesh.vertices);\n\n        renderer.bindShader(glData.shader);\n\n        glData.shader.uniforms.uSampler = renderer.bindTexture(texture);\n\n        renderer.state.setBlendMode(mesh.blendMode);\n\n        glData.shader.uniforms.translationMatrix = mesh.worldTransform.toArray(true);\n        glData.shader.uniforms.alpha = mesh.worldAlpha;\n        glData.shader.uniforms.tint = mesh.tintRgb;\n\n        var drawMode = mesh.drawMode === _Mesh2.default.DRAW_MODES.TRIANGLE_MESH ? gl.TRIANGLE_STRIP : gl.TRIANGLES;\n\n        renderer.bindVao(glData.vao);\n        glData.vao.draw(drawMode, mesh.indices.length, 0);\n    };\n\n    return MeshRenderer;\n}(core.ObjectRenderer);\n\nexports.default = MeshRenderer;\n\n\ncore.WebGLRenderer.registerPlugin('mesh', MeshRenderer);\n//# sourceMappingURL=MeshRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/mesh/webgl/MeshRenderer.js\n// module id = 154\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../core');\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The ParticleContainer class is a really fast version of the Container built solely for speed,\n * so use when you need a lot of sprites or particles. The tradeoff of the ParticleContainer is that advanced\n * functionality will not work. ParticleContainer implements only the basic object transform (position, scale, rotation).\n * Any other functionality like tinting, masking, etc will not work on sprites in this batch.\n *\n * It's extremely easy to use :\n *\n * ```js\n * let container = new ParticleContainer();\n *\n * for (let i = 0; i < 100; ++i)\n * {\n *     let sprite = new PIXI.Sprite.fromImage(\"myImage.png\");\n *     container.addChild(sprite);\n * }\n * ```\n *\n * And here you have a hundred sprites that will be renderer at the speed of light.\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI.particles\n */\nvar ParticleContainer = function (_core$Container) {\n    _inherits(ParticleContainer, _core$Container);\n\n    /**\n     * @param {number} [maxSize=15000] - The maximum number of particles that can be renderer by the container.\n     * @param {object} [properties] - The properties of children that should be uploaded to the gpu and applied.\n     * @param {boolean} [properties.scale=false] - When true, scale be uploaded and applied.\n     * @param {boolean} [properties.position=true] - When true, position be uploaded and applied.\n     * @param {boolean} [properties.rotation=false] - When true, rotation be uploaded and applied.\n     * @param {boolean} [properties.uvs=false] - When true, uvs be uploaded and applied.\n     * @param {boolean} [properties.alpha=false] - When true, alpha be uploaded and applied.\n     * @param {number} [batchSize=15000] - Number of particles per batch.\n     */\n    function ParticleContainer() {\n        var maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1500;\n        var properties = arguments[1];\n        var batchSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 16384;\n\n        _classCallCheck(this, ParticleContainer);\n\n        // Making sure the batch size is valid\n        // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n        // so max number of particles is 65536 / 4 = 16384\n        var _this = _possibleConstructorReturn(this, _core$Container.call(this));\n\n        var maxBatchSize = 16384;\n\n        if (batchSize > maxBatchSize) {\n            batchSize = maxBatchSize;\n        }\n\n        if (batchSize > maxSize) {\n            batchSize = maxSize;\n        }\n\n        /**\n         * Set properties to be dynamic (true) / static (false)\n         *\n         * @member {boolean[]}\n         * @private\n         */\n        _this._properties = [false, true, false, false, false];\n\n        /**\n         * @member {number}\n         * @private\n         */\n        _this._maxSize = maxSize;\n\n        /**\n         * @member {number}\n         * @private\n         */\n        _this._batchSize = batchSize;\n\n        /**\n         * @member {object<number, WebGLBuffer>}\n         * @private\n         */\n        _this._glBuffers = {};\n\n        /**\n         * @member {number}\n         * @private\n         */\n        _this._bufferToUpdate = 0;\n\n        /**\n         * @member {boolean}\n         *\n         */\n        _this.interactiveChildren = false;\n\n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL`\n         * to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         * @see PIXI.BLEND_MODES\n         */\n        _this.blendMode = core.BLEND_MODES.NORMAL;\n\n        /**\n         * Used for canvas renderering. If true then the elements will be positioned at the\n         * nearest pixel. This provides a nice speed boost.\n         *\n         * @member {boolean}\n         * @default true;\n         */\n        _this.roundPixels = true;\n\n        /**\n         * The texture used to render the children.\n         *\n         * @readonly\n         * @member {BaseTexture}\n         */\n        _this.baseTexture = null;\n\n        _this.setProperties(properties);\n        return _this;\n    }\n\n    /**\n     * Sets the private properties array to dynamic / static based on the passed properties object\n     *\n     * @param {object} properties - The properties to be uploaded\n     */\n\n\n    ParticleContainer.prototype.setProperties = function setProperties(properties) {\n        if (properties) {\n            this._properties[0] = 'scale' in properties ? !!properties.scale : this._properties[0];\n            this._properties[1] = 'position' in properties ? !!properties.position : this._properties[1];\n            this._properties[2] = 'rotation' in properties ? !!properties.rotation : this._properties[2];\n            this._properties[3] = 'uvs' in properties ? !!properties.uvs : this._properties[3];\n            this._properties[4] = 'alpha' in properties ? !!properties.alpha : this._properties[4];\n        }\n    };\n\n    /**\n     * Updates the object transform for rendering\n     *\n     * @private\n     */\n\n\n    ParticleContainer.prototype.updateTransform = function updateTransform() {\n        // TODO don't need to!\n        this.displayObjectUpdateTransform();\n        //  PIXI.Container.prototype.updateTransform.call( this );\n    };\n\n    /**\n     * Renders the container using the WebGL renderer\n     *\n     * @private\n     * @param {PIXI.WebGLRenderer} renderer - The webgl renderer\n     */\n\n\n    ParticleContainer.prototype.renderWebGL = function renderWebGL(renderer) {\n        var _this2 = this;\n\n        if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable) {\n            return;\n        }\n\n        if (!this.baseTexture) {\n            this.baseTexture = this.children[0]._texture.baseTexture;\n            if (!this.baseTexture.hasLoaded) {\n                this.baseTexture.once('update', function () {\n                    return _this2.onChildrenChange(0);\n                });\n            }\n        }\n\n        renderer.setObjectRenderer(renderer.plugins.particle);\n        renderer.plugins.particle.render(this);\n    };\n\n    /**\n     * Set the flag that static data should be updated to true\n     *\n     * @private\n     * @param {number} smallestChildIndex - The smallest child index\n     */\n\n\n    ParticleContainer.prototype.onChildrenChange = function onChildrenChange(smallestChildIndex) {\n        var bufferIndex = Math.floor(smallestChildIndex / this._batchSize);\n\n        if (bufferIndex < this._bufferToUpdate) {\n            this._bufferToUpdate = bufferIndex;\n        }\n    };\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer\n     */\n\n\n    ParticleContainer.prototype.renderCanvas = function renderCanvas(renderer) {\n        if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable) {\n            return;\n        }\n\n        var context = renderer.context;\n        var transform = this.worldTransform;\n        var isRotated = true;\n\n        var positionX = 0;\n        var positionY = 0;\n\n        var finalWidth = 0;\n        var finalHeight = 0;\n\n        var compositeOperation = renderer.blendModes[this.blendMode];\n\n        if (compositeOperation !== context.globalCompositeOperation) {\n            context.globalCompositeOperation = compositeOperation;\n        }\n\n        context.globalAlpha = this.worldAlpha;\n\n        this.displayObjectUpdateTransform();\n\n        for (var i = 0; i < this.children.length; ++i) {\n            var child = this.children[i];\n\n            if (!child.visible) {\n                continue;\n            }\n\n            var frame = child.texture.frame;\n\n            context.globalAlpha = this.worldAlpha * child.alpha;\n\n            if (child.rotation % (Math.PI * 2) === 0) {\n                // this is the fastest  way to optimise! - if rotation is 0 then we can avoid any kind of setTransform call\n                if (isRotated) {\n                    context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx * renderer.resolution, transform.ty * renderer.resolution);\n\n                    isRotated = false;\n                }\n\n                positionX = child.anchor.x * (-frame.width * child.scale.x) + child.position.x + 0.5;\n                positionY = child.anchor.y * (-frame.height * child.scale.y) + child.position.y + 0.5;\n\n                finalWidth = frame.width * child.scale.x;\n                finalHeight = frame.height * child.scale.y;\n            } else {\n                if (!isRotated) {\n                    isRotated = true;\n                }\n\n                child.displayObjectUpdateTransform();\n\n                var childTransform = child.worldTransform;\n\n                if (renderer.roundPixels) {\n                    context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx * renderer.resolution | 0, childTransform.ty * renderer.resolution | 0);\n                } else {\n                    context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx * renderer.resolution, childTransform.ty * renderer.resolution);\n                }\n\n                positionX = child.anchor.x * -frame.width + 0.5;\n                positionY = child.anchor.y * -frame.height + 0.5;\n\n                finalWidth = frame.width;\n                finalHeight = frame.height;\n            }\n\n            var resolution = child.texture.baseTexture.resolution;\n\n            context.drawImage(child.texture.baseTexture.source, frame.x * resolution, frame.y * resolution, frame.width * resolution, frame.height * resolution, positionX * resolution, positionY * resolution, finalWidth * resolution, finalHeight * resolution);\n        }\n    };\n\n    /**\n     * Destroys the container\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their\n     *  destroy method called as well. 'options' will be passed on to those calls.\n     */\n\n\n    ParticleContainer.prototype.destroy = function destroy(options) {\n        _core$Container.prototype.destroy.call(this, options);\n\n        if (this._buffers) {\n            for (var i = 0; i < this._buffers.length; ++i) {\n                this._buffers[i].destroy();\n            }\n        }\n\n        this._properties = null;\n        this._buffers = null;\n    };\n\n    return ParticleContainer;\n}(core.Container);\n\nexports.default = ParticleContainer;\n//# sourceMappingURL=ParticleContainer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/particles/ParticleContainer.js\n// module id = 155\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _pixiGlCore = require('pixi-gl-core');\n\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\n\nvar _createIndicesForQuads = require('../../core/utils/createIndicesForQuads');\n\nvar _createIndicesForQuads2 = _interopRequireDefault(_createIndicesForQuads);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that\n * they now share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's ParticleBuffer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleBuffer.java\n */\n\n/**\n * The particle buffer manages the static and dynamic buffers for a particle container.\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar ParticleBuffer = function () {\n    /**\n     * @param {WebGLRenderingContext} gl - The rendering context.\n     * @param {object} properties - The properties to upload.\n     * @param {boolean[]} dynamicPropertyFlags - Flags for which properties are dynamic.\n     * @param {number} size - The size of the batch.\n     */\n    function ParticleBuffer(gl, properties, dynamicPropertyFlags, size) {\n        _classCallCheck(this, ParticleBuffer);\n\n        /**\n         * The current WebGL drawing context.\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        /**\n         * Size of a single vertex.\n         *\n         * @member {number}\n         */\n        this.vertSize = 2;\n\n        /**\n         * Size of a single vertex in bytes.\n         *\n         * @member {number}\n         */\n        this.vertByteSize = this.vertSize * 4;\n\n        /**\n         * The number of particles the buffer can hold\n         *\n         * @member {number}\n         */\n        this.size = size;\n\n        /**\n         * A list of the properties that are dynamic.\n         *\n         * @member {object[]}\n         */\n        this.dynamicProperties = [];\n\n        /**\n         * A list of the properties that are static.\n         *\n         * @member {object[]}\n         */\n        this.staticProperties = [];\n\n        for (var i = 0; i < properties.length; ++i) {\n            var property = properties[i];\n\n            // Make copy of properties object so that when we edit the offset it doesn't\n            // change all other instances of the object literal\n            property = {\n                attribute: property.attribute,\n                size: property.size,\n                uploadFunction: property.uploadFunction,\n                offset: property.offset\n            };\n\n            if (dynamicPropertyFlags[i]) {\n                this.dynamicProperties.push(property);\n            } else {\n                this.staticProperties.push(property);\n            }\n        }\n\n        this.staticStride = 0;\n        this.staticBuffer = null;\n        this.staticData = null;\n\n        this.dynamicStride = 0;\n        this.dynamicBuffer = null;\n        this.dynamicData = null;\n\n        this.initBuffers();\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */\n\n\n    ParticleBuffer.prototype.initBuffers = function initBuffers() {\n        var gl = this.gl;\n        var dynamicOffset = 0;\n\n        /**\n         * Holds the indices of the geometry (quads) to draw\n         *\n         * @member {Uint16Array}\n         */\n        this.indices = (0, _createIndicesForQuads2.default)(this.size);\n        this.indexBuffer = _pixiGlCore2.default.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n        this.dynamicStride = 0;\n\n        for (var i = 0; i < this.dynamicProperties.length; ++i) {\n            var property = this.dynamicProperties[i];\n\n            property.offset = dynamicOffset;\n            dynamicOffset += property.size;\n            this.dynamicStride += property.size;\n        }\n\n        this.dynamicData = new Float32Array(this.size * this.dynamicStride * 4);\n        this.dynamicBuffer = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, this.dynamicData, gl.STREAM_DRAW);\n\n        // static //\n        var staticOffset = 0;\n\n        this.staticStride = 0;\n\n        for (var _i = 0; _i < this.staticProperties.length; ++_i) {\n            var _property = this.staticProperties[_i];\n\n            _property.offset = staticOffset;\n            staticOffset += _property.size;\n            this.staticStride += _property.size;\n        }\n\n        this.staticData = new Float32Array(this.size * this.staticStride * 4);\n        this.staticBuffer = _pixiGlCore2.default.GLBuffer.createVertexBuffer(gl, this.staticData, gl.STATIC_DRAW);\n\n        this.vao = new _pixiGlCore2.default.VertexArrayObject(gl).addIndex(this.indexBuffer);\n\n        for (var _i2 = 0; _i2 < this.dynamicProperties.length; ++_i2) {\n            var _property2 = this.dynamicProperties[_i2];\n\n            this.vao.addAttribute(this.dynamicBuffer, _property2.attribute, gl.FLOAT, false, this.dynamicStride * 4, _property2.offset * 4);\n        }\n\n        for (var _i3 = 0; _i3 < this.staticProperties.length; ++_i3) {\n            var _property3 = this.staticProperties[_i3];\n\n            this.vao.addAttribute(this.staticBuffer, _property3.attribute, gl.FLOAT, false, this.staticStride * 4, _property3.offset * 4);\n        }\n    };\n\n    /**\n     * Uploads the dynamic properties.\n     *\n     * @param {PIXI.DisplayObject[]} children - The children to upload.\n     * @param {number} startIndex - The index to start at.\n     * @param {number} amount - The number to upload.\n     */\n\n\n    ParticleBuffer.prototype.uploadDynamic = function uploadDynamic(children, startIndex, amount) {\n        for (var i = 0; i < this.dynamicProperties.length; i++) {\n            var property = this.dynamicProperties[i];\n\n            property.uploadFunction(children, startIndex, amount, this.dynamicData, this.dynamicStride, property.offset);\n        }\n\n        this.dynamicBuffer.upload();\n    };\n\n    /**\n     * Uploads the static properties.\n     *\n     * @param {PIXI.DisplayObject[]} children - The children to upload.\n     * @param {number} startIndex - The index to start at.\n     * @param {number} amount - The number to upload.\n     */\n\n\n    ParticleBuffer.prototype.uploadStatic = function uploadStatic(children, startIndex, amount) {\n        for (var i = 0; i < this.staticProperties.length; i++) {\n            var property = this.staticProperties[i];\n\n            property.uploadFunction(children, startIndex, amount, this.staticData, this.staticStride, property.offset);\n        }\n\n        this.staticBuffer.upload();\n    };\n\n    /**\n     * Destroys the ParticleBuffer.\n     *\n     */\n\n\n    ParticleBuffer.prototype.destroy = function destroy() {\n        this.dynamicProperties = null;\n        this.dynamicData = null;\n        this.dynamicBuffer.destroy();\n\n        this.staticProperties = null;\n        this.staticData = null;\n        this.staticBuffer.destroy();\n    };\n\n    return ParticleBuffer;\n}();\n\nexports.default = ParticleBuffer;\n//# sourceMappingURL=ParticleBuffer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/particles/webgl/ParticleBuffer.js\n// module id = 156\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _ParticleShader = require('./ParticleShader');\n\nvar _ParticleShader2 = _interopRequireDefault(_ParticleShader);\n\nvar _ParticleBuffer = require('./ParticleBuffer');\n\nvar _ParticleBuffer2 = _interopRequireDefault(_ParticleBuffer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original pixi version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now\n * share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's ParticleRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleRenderer.java\n */\n\n/**\n *\n * @class\n * @private\n * @memberof PIXI\n */\nvar ParticleRenderer = function (_core$ObjectRenderer) {\n    _inherits(ParticleRenderer, _core$ObjectRenderer);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\n     */\n    function ParticleRenderer(renderer) {\n        _classCallCheck(this, ParticleRenderer);\n\n        // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n        // so max number of particles is 65536 / 4 = 16384\n        // and max number of element in the index buffer is 16384 * 6 = 98304\n        // Creating a full index buffer, overhead is 98304 * 2 = 196Ko\n        // let numIndices = 98304;\n\n        /**\n         * The default shader that is used if a sprite doesn't have a more specific one.\n         *\n         * @member {PIXI.Shader}\n         */\n        var _this = _possibleConstructorReturn(this, _core$ObjectRenderer.call(this, renderer));\n\n        _this.shader = null;\n\n        _this.indexBuffer = null;\n\n        _this.properties = null;\n\n        _this.tempMatrix = new core.Matrix();\n\n        _this.CONTEXT_UID = 0;\n        return _this;\n    }\n\n    /**\n     * When there is a WebGL context change\n     *\n     * @private\n     */\n\n\n    ParticleRenderer.prototype.onContextChange = function onContextChange() {\n        var gl = this.renderer.gl;\n\n        this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n\n        // setup default shader\n        this.shader = new _ParticleShader2.default(gl);\n\n        this.properties = [\n        // verticesData\n        {\n            attribute: this.shader.attributes.aVertexPosition,\n            size: 2,\n            uploadFunction: this.uploadVertices,\n            offset: 0\n        },\n        // positionData\n        {\n            attribute: this.shader.attributes.aPositionCoord,\n            size: 2,\n            uploadFunction: this.uploadPosition,\n            offset: 0\n        },\n        // rotationData\n        {\n            attribute: this.shader.attributes.aRotation,\n            size: 1,\n            uploadFunction: this.uploadRotation,\n            offset: 0\n        },\n        // uvsData\n        {\n            attribute: this.shader.attributes.aTextureCoord,\n            size: 2,\n            uploadFunction: this.uploadUvs,\n            offset: 0\n        },\n        // alphaData\n        {\n            attribute: this.shader.attributes.aColor,\n            size: 1,\n            uploadFunction: this.uploadAlpha,\n            offset: 0\n        }];\n    };\n\n    /**\n     * Starts a new particle batch.\n     *\n     */\n\n\n    ParticleRenderer.prototype.start = function start() {\n        this.renderer.bindShader(this.shader);\n    };\n\n    /**\n     * Renders the particle container object.\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     */\n\n\n    ParticleRenderer.prototype.render = function render(container) {\n        var children = container.children;\n        var maxSize = container._maxSize;\n        var batchSize = container._batchSize;\n        var renderer = this.renderer;\n        var totalChildren = children.length;\n\n        if (totalChildren === 0) {\n            return;\n        } else if (totalChildren > maxSize) {\n            totalChildren = maxSize;\n        }\n\n        var buffers = container._glBuffers[renderer.CONTEXT_UID];\n\n        if (!buffers) {\n            buffers = container._glBuffers[renderer.CONTEXT_UID] = this.generateBuffers(container);\n        }\n\n        // if the uvs have not updated then no point rendering just yet!\n        this.renderer.setBlendMode(container.blendMode);\n\n        var gl = renderer.gl;\n\n        var m = container.worldTransform.copy(this.tempMatrix);\n\n        m.prepend(renderer._activeRenderTarget.projectionMatrix);\n\n        this.shader.uniforms.projectionMatrix = m.toArray(true);\n        this.shader.uniforms.uAlpha = container.worldAlpha;\n\n        // make sure the texture is bound..\n        var baseTexture = children[0]._texture.baseTexture;\n\n        this.shader.uniforms.uSampler = renderer.bindTexture(baseTexture);\n\n        // now lets upload and render the buffers..\n        for (var i = 0, j = 0; i < totalChildren; i += batchSize, j += 1) {\n            var amount = totalChildren - i;\n\n            if (amount > batchSize) {\n                amount = batchSize;\n            }\n\n            var buffer = buffers[j];\n\n            // we always upload the dynamic\n            buffer.uploadDynamic(children, i, amount);\n\n            // we only upload the static content when we have to!\n            if (container._bufferToUpdate === j) {\n                buffer.uploadStatic(children, i, amount);\n                container._bufferToUpdate = j + 1;\n            }\n\n            // bind the buffer\n            renderer.bindVao(buffer.vao);\n            buffer.vao.draw(gl.TRIANGLES, amount * 6);\n        }\n    };\n\n    /**\n     * Creates one particle buffer for each child in the container we want to render and updates internal properties\n     *\n     * @param {PIXI.ParticleContainer} container - The container to render using this ParticleRenderer\n     * @return {PIXI.ParticleBuffer[]} The buffers\n     */\n\n\n    ParticleRenderer.prototype.generateBuffers = function generateBuffers(container) {\n        var gl = this.renderer.gl;\n        var buffers = [];\n        var size = container._maxSize;\n        var batchSize = container._batchSize;\n        var dynamicPropertyFlags = container._properties;\n\n        for (var i = 0; i < size; i += batchSize) {\n            buffers.push(new _ParticleBuffer2.default(gl, this.properties, dynamicPropertyFlags, batchSize));\n        }\n\n        return buffers;\n    };\n\n    /**\n     * Uploads the verticies.\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their vertices uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadVertices = function uploadVertices(children, startIndex, amount, array, stride, offset) {\n        var w0 = 0;\n        var w1 = 0;\n        var h0 = 0;\n        var h1 = 0;\n\n        for (var i = 0; i < amount; ++i) {\n            var sprite = children[startIndex + i];\n            var texture = sprite._texture;\n            var sx = sprite.scale.x;\n            var sy = sprite.scale.y;\n            var trim = texture.trim;\n            var orig = texture.orig;\n\n            if (trim) {\n                // if the sprite is trimmed and is not a tilingsprite then we need to add the\n                // extra space before transforming the sprite coords..\n                w1 = trim.x - sprite.anchor.x * orig.width;\n                w0 = w1 + trim.width;\n\n                h1 = trim.y - sprite.anchor.y * orig.height;\n                h0 = h1 + trim.height;\n            } else {\n                w0 = orig.width * (1 - sprite.anchor.x);\n                w1 = orig.width * -sprite.anchor.x;\n\n                h0 = orig.height * (1 - sprite.anchor.y);\n                h1 = orig.height * -sprite.anchor.y;\n            }\n\n            array[offset] = w1 * sx;\n            array[offset + 1] = h1 * sy;\n\n            array[offset + stride] = w0 * sx;\n            array[offset + stride + 1] = h1 * sy;\n\n            array[offset + stride * 2] = w0 * sx;\n            array[offset + stride * 2 + 1] = h0 * sy;\n\n            array[offset + stride * 3] = w1 * sx;\n            array[offset + stride * 3 + 1] = h0 * sy;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their positions uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadPosition = function uploadPosition(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; i++) {\n            var spritePosition = children[startIndex + i].position;\n\n            array[offset] = spritePosition.x;\n            array[offset + 1] = spritePosition.y;\n\n            array[offset + stride] = spritePosition.x;\n            array[offset + stride + 1] = spritePosition.y;\n\n            array[offset + stride * 2] = spritePosition.x;\n            array[offset + stride * 2 + 1] = spritePosition.y;\n\n            array[offset + stride * 3] = spritePosition.x;\n            array[offset + stride * 3 + 1] = spritePosition.y;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadRotation = function uploadRotation(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; i++) {\n            var spriteRotation = children[startIndex + i].rotation;\n\n            array[offset] = spriteRotation;\n            array[offset + stride] = spriteRotation;\n            array[offset + stride * 2] = spriteRotation;\n            array[offset + stride * 3] = spriteRotation;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadUvs = function uploadUvs(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; ++i) {\n            var textureUvs = children[startIndex + i]._texture._uvs;\n\n            if (textureUvs) {\n                array[offset] = textureUvs.x0;\n                array[offset + 1] = textureUvs.y0;\n\n                array[offset + stride] = textureUvs.x1;\n                array[offset + stride + 1] = textureUvs.y1;\n\n                array[offset + stride * 2] = textureUvs.x2;\n                array[offset + stride * 2 + 1] = textureUvs.y2;\n\n                array[offset + stride * 3] = textureUvs.x3;\n                array[offset + stride * 3 + 1] = textureUvs.y3;\n\n                offset += stride * 4;\n            } else {\n                // TODO you know this can be easier!\n                array[offset] = 0;\n                array[offset + 1] = 0;\n\n                array[offset + stride] = 0;\n                array[offset + stride + 1] = 0;\n\n                array[offset + stride * 2] = 0;\n                array[offset + stride * 2 + 1] = 0;\n\n                array[offset + stride * 3] = 0;\n                array[offset + stride * 3 + 1] = 0;\n\n                offset += stride * 4;\n            }\n        }\n    };\n\n    /**\n     *\n     * @param {PIXI.DisplayObject[]} children - the array of display objects to render\n     * @param {number} startIndex - the index to start from in the children array\n     * @param {number} amount - the amount of children that will have their rotation uploaded\n     * @param {number[]} array - The vertices to upload.\n     * @param {number} stride - Stride to use for iteration.\n     * @param {number} offset - Offset to start at.\n     */\n\n\n    ParticleRenderer.prototype.uploadAlpha = function uploadAlpha(children, startIndex, amount, array, stride, offset) {\n        for (var i = 0; i < amount; i++) {\n            var spriteAlpha = children[startIndex + i].alpha;\n\n            array[offset] = spriteAlpha;\n            array[offset + stride] = spriteAlpha;\n            array[offset + stride * 2] = spriteAlpha;\n            array[offset + stride * 3] = spriteAlpha;\n\n            offset += stride * 4;\n        }\n    };\n\n    /**\n     * Destroys the ParticleRenderer.\n     *\n     */\n\n\n    ParticleRenderer.prototype.destroy = function destroy() {\n        if (this.renderer.gl) {\n            this.renderer.gl.deleteBuffer(this.indexBuffer);\n        }\n\n        _core$ObjectRenderer.prototype.destroy.call(this);\n\n        this.shader.destroy();\n\n        this.indices = null;\n        this.tempMatrix = null;\n    };\n\n    return ParticleRenderer;\n}(core.ObjectRenderer);\n\nexports.default = ParticleRenderer;\n\n\ncore.WebGLRenderer.registerPlugin('particle', ParticleRenderer);\n//# sourceMappingURL=ParticleRenderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/particles/webgl/ParticleRenderer.js\n// module id = 157\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _Shader2 = require('../../core/Shader');\n\nvar _Shader3 = _interopRequireDefault(_Shader2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @class\n * @extends PIXI.Shader\n * @memberof PIXI\n */\nvar ParticleShader = function (_Shader) {\n    _inherits(ParticleShader, _Shader);\n\n    /**\n     * @param {PIXI.Shader} gl - The webgl shader manager this shader works for.\n     */\n    function ParticleShader(gl) {\n        _classCallCheck(this, ParticleShader);\n\n        return _possibleConstructorReturn(this, _Shader.call(this, gl,\n        // vertex shader\n        ['attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'attribute float aColor;', 'attribute vec2 aPositionCoord;', 'attribute vec2 aScale;', 'attribute float aRotation;', 'uniform mat3 projectionMatrix;', 'varying vec2 vTextureCoord;', 'varying float vColor;', 'void main(void){', '   vec2 v = aVertexPosition;', '   v.x = (aVertexPosition.x) * cos(aRotation) - (aVertexPosition.y) * sin(aRotation);', '   v.y = (aVertexPosition.x) * sin(aRotation) + (aVertexPosition.y) * cos(aRotation);', '   v = v + aPositionCoord;', '   gl_Position = vec4((projectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);', '   vTextureCoord = aTextureCoord;', '   vColor = aColor;', '}'].join('\\n'),\n        // hello\n        ['varying vec2 vTextureCoord;', 'varying float vColor;', 'uniform sampler2D uSampler;', 'uniform float uAlpha;', 'void main(void){', '  vec4 color = texture2D(uSampler, vTextureCoord) * vColor * uAlpha;', '  if (color.a == 0.0) discard;', '  gl_FragColor = color;', '}'].join('\\n')));\n    }\n\n    return ParticleShader;\n}(_Shader3.default);\n\nexports.default = ParticleShader;\n//# sourceMappingURL=ParticleShader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/particles/webgl/ParticleShader.js\n// module id = 158\n// module chunks = 0","\"use strict\";\n\n// References:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\nif (!Math.sign) {\n    Math.sign = function mathSign(x) {\n        x = Number(x);\n\n        if (x === 0 || isNaN(x)) {\n            return x;\n        }\n\n        return x > 0 ? 1 : -1;\n    };\n}\n//# sourceMappingURL=Math.sign.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/polyfill/Math.sign.js\n// module id = 159\n// module chunks = 0","'use strict';\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (!Object.assign) {\n    Object.assign = _objectAssign2.default;\n} // References:\n// https://github.com/sindresorhus/object-assign\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n//# sourceMappingURL=Object.assign.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/polyfill/Object.assign.js\n// module id = 160\n// module chunks = 0","'use strict';\n\nrequire('./Object.assign');\n\nrequire('./requestAnimationFrame');\n\nrequire('./Math.sign');\n\nif (!window.ArrayBuffer) {\n    window.ArrayBuffer = Array;\n}\n\nif (!window.Float32Array) {\n    window.Float32Array = Array;\n}\n\nif (!window.Uint32Array) {\n    window.Uint32Array = Array;\n}\n\nif (!window.Uint16Array) {\n    window.Uint16Array = Array;\n}\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/polyfill/index.js\n// module id = 161\n// module chunks = 0","'use strict';\n\n// References:\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// https://gist.github.com/1579671\n// http://updates.html5rocks.com/2012/05/requestAnimationFrame-API-now-with-sub-millisecond-precision\n// https://gist.github.com/timhall/4078614\n// https://github.com/Financial-Times/polyfill-service/tree/master/polyfills/requestAnimationFrame\n\n// Expected to be used with Browserfiy\n// Browserify automatically detects the use of `global` and passes the\n// correct reference of `global`, `self`, and finally `window`\n\nvar ONE_FRAME_TIME = 16;\n\n// Date.now\nif (!(Date.now && Date.prototype.getTime)) {\n    Date.now = function now() {\n        return new Date().getTime();\n    };\n}\n\n// performance.now\nif (!(global.performance && global.performance.now)) {\n    (function () {\n        var startTime = Date.now();\n\n        if (!global.performance) {\n            global.performance = {};\n        }\n\n        global.performance.now = function () {\n            return Date.now() - startTime;\n        };\n    })();\n}\n\n// requestAnimationFrame\nvar lastTime = Date.now();\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\nfor (var x = 0; x < vendors.length && !global.requestAnimationFrame; ++x) {\n    var p = vendors[x];\n\n    global.requestAnimationFrame = global[p + 'RequestAnimationFrame'];\n    global.cancelAnimationFrame = global[p + 'CancelAnimationFrame'] || global[p + 'CancelRequestAnimationFrame'];\n}\n\nif (!global.requestAnimationFrame) {\n    global.requestAnimationFrame = function (callback) {\n        if (typeof callback !== 'function') {\n            throw new TypeError(callback + 'is not a function');\n        }\n\n        var currentTime = Date.now();\n        var delay = ONE_FRAME_TIME + lastTime - currentTime;\n\n        if (delay < 0) {\n            delay = 0;\n        }\n\n        lastTime = currentTime;\n\n        return setTimeout(function () {\n            lastTime = Date.now();\n            callback(performance.now());\n        }, delay);\n    };\n}\n\nif (!global.cancelAnimationFrame) {\n    global.cancelAnimationFrame = function (id) {\n        return clearTimeout(id);\n    };\n}\n//# sourceMappingURL=requestAnimationFrame.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/polyfill/requestAnimationFrame.js\n// module id = 162\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _BasePrepare2 = require('../BasePrepare');\n\nvar _BasePrepare3 = _interopRequireDefault(_BasePrepare2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CANVAS_START_SIZE = 16;\n\n/**\n * The prepare manager provides functionality to upload content to the GPU\n * This cannot be done directly for Canvas like in WebGL, but the effect can be achieved by drawing\n * textures to an offline canvas.\n * This draw call will force the texture to be moved onto the GPU.\n *\n * @class\n * @memberof PIXI\n */\n\nvar CanvasPrepare = function (_BasePrepare) {\n    _inherits(CanvasPrepare, _BasePrepare);\n\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - A reference to the current renderer\n     */\n    function CanvasPrepare(renderer) {\n        _classCallCheck(this, CanvasPrepare);\n\n        var _this = _possibleConstructorReturn(this, _BasePrepare.call(this, renderer));\n\n        _this.uploadHookHelper = _this;\n\n        /**\n        * An offline canvas to render textures to\n        * @type {HTMLCanvasElement}\n        * @private\n        */\n        _this.canvas = document.createElement('canvas');\n        _this.canvas.width = CANVAS_START_SIZE;\n        _this.canvas.height = CANVAS_START_SIZE;\n\n        /**\n         * The context to the canvas\n        * @type {CanvasRenderingContext2D}\n        * @private\n        */\n        _this.ctx = _this.canvas.getContext('2d');\n\n        // Add textures to upload\n        _this.register(findBaseTextures, uploadBaseTextures);\n        return _this;\n    }\n\n    /**\n     * Destroys the plugin, don't use after this.\n     *\n     */\n\n\n    CanvasPrepare.prototype.destroy = function destroy() {\n        _BasePrepare.prototype.destroy.call(this);\n        this.ctx = null;\n        this.canvas = null;\n    };\n\n    return CanvasPrepare;\n}(_BasePrepare3.default);\n\n/**\n * Built-in hook to upload PIXI.Texture objects to the GPU.\n *\n * @private\n * @param {*} prepare - Instance of CanvasPrepare\n * @param {*} item - Item to check\n * @return {boolean} If item was uploaded.\n */\n\n\nexports.default = CanvasPrepare;\nfunction uploadBaseTextures(prepare, item) {\n    if (item instanceof core.BaseTexture) {\n        var image = item.source;\n\n        // Sometimes images (like atlas images) report a size of zero, causing errors on windows phone.\n        // So if the width or height is equal to zero then use the canvas size\n        // Otherwise use whatever is smaller, the image dimensions or the canvas dimensions.\n        var imageWidth = image.width === 0 ? prepare.canvas.width : Math.min(prepare.canvas.width, image.width);\n        var imageHeight = image.height === 0 ? prepare.canvas.height : Math.min(prepare.canvas.height, image.height);\n\n        // Only a small subsections is required to be drawn to have the whole texture uploaded to the GPU\n        // A smaller draw can be faster.\n        prepare.ctx.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, prepare.canvas.width, prepare.canvas.height);\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find textures from Sprites.\n *\n * @private\n * @param {PIXI.DisplayObject} item  -Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Texture object was found.\n */\nfunction findBaseTextures(item, queue) {\n    // Objects with textures, like Sprites/Text\n    if (item instanceof core.BaseTexture) {\n        if (queue.indexOf(item) === -1) {\n            queue.push(item);\n        }\n\n        return true;\n    } else if (item._texture && item._texture instanceof core.Texture) {\n        var texture = item._texture.baseTexture;\n\n        if (queue.indexOf(texture) === -1) {\n            queue.push(texture);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\ncore.CanvasRenderer.registerPlugin('prepare', CanvasPrepare);\n//# sourceMappingURL=CanvasPrepare.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/prepare/canvas/CanvasPrepare.js\n// module id = 163\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * TimeLimiter limits the number of items handled by a {@link PIXI.BasePrepare} to a specified\n * number of milliseconds per frame.\n *\n * @class\n * @memberof PIXI\n */\nvar TimeLimiter = function () {\n  /**\n   * @param {number} maxMilliseconds - The maximum milliseconds that can be spent preparing items each frame.\n   */\n  function TimeLimiter(maxMilliseconds) {\n    _classCallCheck(this, TimeLimiter);\n\n    /**\n     * The maximum milliseconds that can be spent preparing items each frame.\n     * @private\n     */\n    this.maxMilliseconds = maxMilliseconds;\n    /**\n     * The start time of the current frame.\n     * @type {number}\n     * @private\n     */\n    this.frameStart = 0;\n  }\n\n  /**\n   * Resets any counting properties to start fresh on a new frame.\n   */\n\n\n  TimeLimiter.prototype.beginFrame = function beginFrame() {\n    this.frameStart = Date.now();\n  };\n\n  /**\n   * Checks to see if another item can be uploaded. This should only be called once per item.\n   * @return {boolean} If the item is allowed to be uploaded.\n   */\n\n\n  TimeLimiter.prototype.allowedToUpload = function allowedToUpload() {\n    return Date.now() - this.frameStart < this.maxMilliseconds;\n  };\n\n  return TimeLimiter;\n}();\n\nexports.default = TimeLimiter;\n//# sourceMappingURL=TimeLimiter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/prepare/limiters/TimeLimiter.js\n// module id = 164\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('../../core');\n\nvar core = _interopRequireWildcard(_core);\n\nvar _BasePrepare2 = require('../BasePrepare');\n\nvar _BasePrepare3 = _interopRequireDefault(_BasePrepare2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The prepare manager provides functionality to upload content to the GPU.\n *\n * @class\n * @memberof PIXI\n */\nvar WebGLPrepare = function (_BasePrepare) {\n    _inherits(WebGLPrepare, _BasePrepare);\n\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    function WebGLPrepare(renderer) {\n        _classCallCheck(this, WebGLPrepare);\n\n        var _this = _possibleConstructorReturn(this, _BasePrepare.call(this, renderer));\n\n        _this.uploadHookHelper = _this.renderer;\n\n        // Add textures and graphics to upload\n        _this.register(findBaseTextures, uploadBaseTextures).register(findGraphics, uploadGraphics);\n        return _this;\n    }\n\n    return WebGLPrepare;\n}(_BasePrepare3.default);\n\n/**\n * Built-in hook to upload PIXI.Texture objects to the GPU.\n *\n * @private\n * @param {PIXI.WebGLRenderer} renderer - instance of the webgl renderer\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\n\n\nexports.default = WebGLPrepare;\nfunction uploadBaseTextures(renderer, item) {\n    if (item instanceof core.BaseTexture) {\n        // if the texture already has a GL texture, then the texture has been prepared or rendered\n        // before now. If the texture changed, then the changer should be calling texture.update() which\n        // reuploads the texture without need for preparing it again\n        if (!item._glTextures[renderer.CONTEXT_UID]) {\n            renderer.textureManager.updateTexture(item);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to upload PIXI.Graphics to the GPU.\n *\n * @private\n * @param {PIXI.WebGLRenderer} renderer - instance of the webgl renderer\n * @param {PIXI.DisplayObject} item - Item to check\n * @return {boolean} If item was uploaded.\n */\nfunction uploadGraphics(renderer, item) {\n    if (item instanceof core.Graphics) {\n        // if the item is not dirty and already has webgl data, then it got prepared or rendered\n        // before now and we shouldn't waste time updating it again\n        if (item.dirty || item.clearDirty || !item._webGL[renderer.plugins.graphics.CONTEXT_UID]) {\n            renderer.plugins.graphics.updateGraphics(item);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find textures from Sprites.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Texture object was found.\n */\nfunction findBaseTextures(item, queue) {\n    // Objects with textures, like Sprites/Text\n    if (item instanceof core.BaseTexture) {\n        if (queue.indexOf(item) === -1) {\n            queue.push(item);\n        }\n\n        return true;\n    } else if (item._texture && item._texture instanceof core.Texture) {\n        var texture = item._texture.baseTexture;\n\n        if (queue.indexOf(texture) === -1) {\n            queue.push(texture);\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Built-in hook to find graphics.\n *\n * @private\n * @param {PIXI.DisplayObject} item - Display object to check\n * @param {Array<*>} queue - Collection of items to upload\n * @return {boolean} if a PIXI.Graphics object was found.\n */\nfunction findGraphics(item, queue) {\n    if (item instanceof core.Graphics) {\n        queue.push(item);\n\n        return true;\n    }\n\n    return false;\n}\n\ncore.WebGLRenderer.registerPlugin('prepare', WebGLPrepare);\n//# sourceMappingURL=WebGLPrepare.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi.js/lib/prepare/webgl/WebGLPrepare.js\n// module id = 165\n// module chunks = 0","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.2';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      value = Object(value);\n      return (symToStringTag && symToStringTag in value)\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      object = Object(object);\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lodash.js\n// module id = 166\n// module chunks = 0","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 167\n// module chunks = 0","var EMPTY_ARRAY_BUFFER = new ArrayBuffer(0);\n\n/**\n * Helper class to create a webGL buffer\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param type {gl.ARRAY_BUFFER | gl.ELEMENT_ARRAY_BUFFER} @mat\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\n * @param drawType {gl.STATIC_DRAW|gl.DYNAMIC_DRAW|gl.STREAM_DRAW}\n */\nvar Buffer = function(gl, type, data, drawType)\n{\n\n\t/**\n     * The current WebGL rendering context\n     *\n     * @member {WebGLRenderingContext}\n     */\n\tthis.gl = gl;\n\n\t/**\n     * The WebGL buffer, created upon instantiation\n     *\n     * @member {WebGLBuffer}\n     */\n\tthis.buffer = gl.createBuffer(); \n\n\t/**\n     * The type of the buffer\n     *\n     * @member {gl.ARRAY_BUFFER|gl.ELEMENT_ARRAY_BUFFER}\n     */\n\tthis.type = type || gl.ARRAY_BUFFER;\n\n\t/**\n     * The draw type of the buffer\n     *\n     * @member {gl.STATIC_DRAW|gl.DYNAMIC_DRAW|gl.STREAM_DRAW}\n     */\n\tthis.drawType = drawType || gl.STATIC_DRAW;\n\n\t/**\n     * The data in the buffer, as a typed array\n     *\n     * @member {ArrayBuffer| SharedArrayBuffer|ArrayBufferView}\n     */\n\tthis.data = EMPTY_ARRAY_BUFFER;\n\n\tif(data)\n\t{\n\t\tthis.upload(data);\n\t}\n};\n\n/**\n * Uploads the buffer to the GPU\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data to upload\n * @param offset {Number} if only a subset of the data should be uploaded, this is the amount of data to subtract\n * @param dontBind {Boolean} whether to bind the buffer before uploading it\n */\nBuffer.prototype.upload = function(data, offset, dontBind)\n{\n\t// todo - needed?\n\tif(!dontBind) this.bind();\n\n\tvar gl = this.gl;\n\n\tdata = data || this.data;\n\toffset = offset || 0;\n\n\tif(this.data.byteLength >= data.byteLength)\n\t{\n\t\tgl.bufferSubData(this.type, offset, data);\n\t}\n\telse\n\t{\n\t\tgl.bufferData(this.type, data, this.drawType);\n\t}\n\n\tthis.data = data;\n};\n/**\n * Binds the buffer\n *\n */\nBuffer.prototype.bind = function()\n{\n\tvar gl = this.gl;\n\tgl.bindBuffer(this.type, this.buffer);\n};\n\nBuffer.createVertexBuffer = function(gl, data, drawType)\n{\n\treturn new Buffer(gl, gl.ARRAY_BUFFER, data, drawType);\n};\n\nBuffer.createIndexBuffer = function(gl, data, drawType)\n{\n\treturn new Buffer(gl, gl.ELEMENT_ARRAY_BUFFER, data, drawType);\n};\n\nBuffer.create = function(gl, type, data, drawType)\n{\n\treturn new Buffer(gl, type, data, drawType);\n};\n\n/**\n * Destroys the buffer\n *\n */\nBuffer.prototype.destroy = function(){\n\tthis.gl.deleteBuffer(this.buffer);\n};\n\nmodule.exports = Buffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/GLBuffer.js\n// module id = 168\n// module chunks = 0","\nvar Texture = require('./GLTexture');\n\n/**\n * Helper class to create a webGL Framebuffer\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param width {Number} the width of the drawing area of the frame buffer\n * @param height {Number} the height of the drawing area of the frame buffer\n */\nvar Framebuffer = function(gl, width, height)\n{\n    /**\n     * The current WebGL rendering context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    /**\n     * The frame buffer\n     *\n     * @member {WebGLFramebuffer}\n     */\n    this.framebuffer = gl.createFramebuffer();\n\n    /**\n     * The stencil buffer\n     *\n     * @member {WebGLRenderbuffer}\n     */\n    this.stencil = null;\n\n    /**\n     * The stencil buffer\n     *\n     * @member {PIXI.glCore.GLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * The width of the drawing area of the buffer\n     *\n     * @member {Number}\n     */\n    this.width = width || 100;\n    /**\n     * The height of the drawing area of the buffer\n     *\n     * @member {Number}\n     */\n    this.height = height || 100;\n};\n\n/**\n * Adds a texture to the frame buffer\n * @param texture {PIXI.glCore.GLTexture}\n */\nFramebuffer.prototype.enableTexture = function(texture)\n{\n    var gl = this.gl;\n\n    this.texture = texture || new Texture(gl);\n\n    this.texture.bind();\n\n    //gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,  this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n    this.bind();\n\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n};\n\n/**\n * Initialises the stencil buffer\n */\nFramebuffer.prototype.enableStencil = function()\n{\n    if(this.stencil)return;\n\n    var gl = this.gl;\n\n    this.stencil = gl.createRenderbuffer();\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.stencil);\n\n    // TODO.. this is depth AND stencil?\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, this.stencil);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL,  this.width  , this.height );\n};\n\n/**\n * Erases the drawing area and fills it with a colour\n * @param  r {Number} the red value of the clearing colour\n * @param  g {Number} the green value of the clearing colour\n * @param  b {Number} the blue value of the clearing colour\n * @param  a {Number} the alpha value of the clearing colour\n */\nFramebuffer.prototype.clear = function( r, g, b, a )\n{\n    this.bind();\n\n    var gl = this.gl;\n\n    gl.clearColor(r, g, b, a);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n};\n\n/**\n * Binds the frame buffer to the WebGL context\n */\nFramebuffer.prototype.bind = function()\n{\n    var gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer );\n};\n\n/**\n * Unbinds the frame buffer to the WebGL context\n */\nFramebuffer.prototype.unbind = function()\n{\n    var gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null );\n};\n/**\n * Resizes the drawing area of the buffer to the given width and height\n * @param  width  {Number} the new width\n * @param  height {Number} the new height\n */\nFramebuffer.prototype.resize = function(width, height)\n{\n    var gl = this.gl;\n\n    this.width = width;\n    this.height = height;\n\n    if ( this.texture )\n    {\n        this.texture.uploadData(null, width, height);\n    }\n\n    if ( this.stencil )\n    {\n        // update the stencil buffer width and height\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this.stencil);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, width, height);\n    }\n};\n\n/**\n * Destroys this buffer\n */\nFramebuffer.prototype.destroy = function()\n{\n    var gl = this.gl;\n\n    //TODO\n    if(this.texture)\n    {\n        this.texture.destroy();\n    }\n\n    gl.deleteFramebuffer(this.framebuffer);\n\n    this.gl = null;\n\n    this.stencil = null;\n    this.texture = null;\n};\n\n/**\n * Creates a frame buffer with a texture containing the given data\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param width {Number} the width of the drawing area of the frame buffer\n * @param height {Number} the height of the drawing area of the frame buffer\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\n */\nFramebuffer.createRGBA = function(gl, width, height, data)\n{\n    var texture = Texture.fromData(gl, null, width, height);\n    texture.enableNearestScaling();\n    texture.enableWrapClamp();\n\n    //now create the framebuffer object and attach the texture to it.\n    var fbo = new Framebuffer(gl, width, height);\n    fbo.enableTexture(texture);\n\n    fbo.unbind();\n\n    return fbo;\n};\n\n/**\n * Creates a frame buffer with a texture containing the given data\n * @static\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param width {Number} the width of the drawing area of the frame buffer\n * @param height {Number} the height of the drawing area of the frame buffer\n * @param data {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} an array of data\n */\nFramebuffer.createFloat32 = function(gl, width, height, data)\n{\n    // create a new texture..\n    var texture = new Texture.fromData(gl, data, width, height);\n    texture.enableNearestScaling();\n    texture.enableWrapClamp();\n\n    //now create the framebuffer object and attach the texture to it.\n    var fbo = new Framebuffer(gl, width, height);\n    fbo.enableTexture(texture);\n\n    fbo.unbind();\n\n    return fbo;\n};\n\nmodule.exports = Framebuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/GLFramebuffer.js\n// module id = 169\n// module chunks = 0","\nvar compileProgram = require('./shader/compileProgram'),\n\textractAttributes = require('./shader/extractAttributes'),\n\textractUniforms = require('./shader/extractUniforms'),\n\tgenerateUniformAccessObject = require('./shader/generateUniformAccessObject');\n\n/**\n * Helper class to create a webGL Shader\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n */\nvar Shader = function(gl, vertexSrc, fragmentSrc)\n{\n\t/**\n\t * The current WebGL rendering context\n\t *\n\t * @member {WebGLRenderingContext}\n\t */\n\tthis.gl = gl;\n\n\t/**\n\t * The shader program\n\t *\n\t * @member {WebGLProgram}\n\t */\n\t// First compile the program..\n\tthis.program = compileProgram(gl, vertexSrc, fragmentSrc);\n\n\n\t/**\n\t * The attributes of the shader as an object containing the following properties\n\t * {\n\t * \ttype,\n\t * \tsize,\n\t * \tlocation,\n\t * \tpointer\n\t * }\n\t * @member {Object}\n\t */\n\t// next extract the attributes\n\tthis.attributes = extractAttributes(gl, this.program);\n\n    var uniformData = extractUniforms(gl, this.program);\n\n\t/**\n\t * The uniforms of the shader as an object containing the following properties\n\t * {\n\t * \tgl,\n\t * \tdata\n\t * }\n\t * @member {Object}\n\t */\n    this.uniforms = generateUniformAccessObject( gl, uniformData );\n};\n/**\n * Uses this shader\n */\nShader.prototype.bind = function()\n{\n\tthis.gl.useProgram(this.program);\n};\n\n/**\n * Destroys this shader\n * TODO\n */\nShader.prototype.destroy = function()\n{\n\t// var gl = this.gl;\n};\n\nmodule.exports = Shader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/GLShader.js\n// module id = 170\n// module chunks = 0","\n// state object//\nvar setVertexAttribArrays = require( './setVertexAttribArrays' );\n\n/**\n * Helper class to work with WebGL VertexArrayObjects (vaos)\n * Only works if WebGL extensions are enabled (they usually are)\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n */\nfunction VertexArrayObject(gl, state)\n{\n    this.nativeVaoExtension = null;\n\n    if(!VertexArrayObject.FORCE_NATIVE)\n    {\n        this.nativeVaoExtension = gl.getExtension('OES_vertex_array_object') ||\n                                  gl.getExtension('MOZ_OES_vertex_array_object') ||\n                                  gl.getExtension('WEBKIT_OES_vertex_array_object');\n    }\n\n    this.nativeState = state;\n\n    if(this.nativeVaoExtension)\n    {\n        this.nativeVao = this.nativeVaoExtension.createVertexArrayOES();\n\n        var maxAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n        // VAO - overwrite the state..\n        this.nativeState = {\n            tempAttribState: new Array(maxAttribs),\n            attribState: new Array(maxAttribs)\n        };\n    }\n\n    /**\n     * The current WebGL rendering context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    /**\n     * An array of attributes\n     *\n     * @member {Array}\n     */\n    this.attributes = [];\n\n    /**\n     * @member {PIXI.glCore.GLBuffer}\n     */\n    this.indexBuffer = null;\n\n    /**\n     * A boolean flag\n     *\n     * @member {Boolean}\n     */\n    this.dirty = false;\n}\n\nVertexArrayObject.prototype.constructor = VertexArrayObject;\nmodule.exports = VertexArrayObject;\n\n/**\n* Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\n* If you find on older devices that things have gone a bit weird then set this to true.\n*/\n/**\n * Lets the VAO know if you should use the WebGL extension or the native methods.\n * Some devices behave a bit funny when using the newer extensions (im looking at you ipad 2!)\n * If you find on older devices that things have gone a bit weird then set this to true.\n * @static\n * @property {Boolean} FORCE_NATIVE\n */\nVertexArrayObject.FORCE_NATIVE = false;\n\n/**\n * Binds the buffer\n */\nVertexArrayObject.prototype.bind = function()\n{\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\n\n        if(this.dirty)\n        {\n            this.dirty = false;\n            this.activate();\n        }\n    }\n    else\n    {\n\n        this.activate();\n    }\n\n    return this;\n};\n\n/**\n * Unbinds the buffer\n */\nVertexArrayObject.prototype.unbind = function()\n{\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(null);\n    }\n\n    return this;\n};\n\n/**\n * Uses this vao\n */\nVertexArrayObject.prototype.activate = function()\n{\n\n    var gl = this.gl;\n    var lastBuffer = null;\n\n    for (var i = 0; i < this.attributes.length; i++)\n    {\n        var attrib = this.attributes[i];\n\n        if(lastBuffer !== attrib.buffer)\n        {\n            attrib.buffer.bind();\n            lastBuffer = attrib.buffer;\n        }\n\n        //attrib.attribute.pointer(attrib.type, attrib.normalized, attrib.stride, attrib.start);\n        gl.vertexAttribPointer(attrib.attribute.location,\n                               attrib.attribute.size, attrib.type || gl.FLOAT,\n                               attrib.normalized || false,\n                               attrib.stride || 0,\n                               attrib.start || 0);\n\n\n    }\n\n    setVertexAttribArrays(gl, this.attributes, this.nativeState);\n\n    this.indexBuffer.bind();\n\n    return this;\n};\n\n/**\n *\n * @param buffer     {PIXI.gl.GLBuffer}\n * @param attribute  {*}\n * @param type       {String}\n * @param normalized {Boolean}\n * @param stride     {Number}\n * @param start      {Number}\n */\nVertexArrayObject.prototype.addAttribute = function(buffer, attribute, type, normalized, stride, start)\n{\n    this.attributes.push({\n        buffer:     buffer,\n        attribute:  attribute,\n\n        location:   attribute.location,\n        type:       type || this.gl.FLOAT,\n        normalized: normalized || false,\n        stride:     stride || 0,\n        start:      start || 0\n    });\n\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n *\n * @param buffer   {PIXI.gl.GLBuffer}\n */\nVertexArrayObject.prototype.addIndex = function(buffer/*, options*/)\n{\n    this.indexBuffer = buffer;\n\n    this.dirty = true;\n\n    return this;\n};\n\n/**\n * Unbinds this vao and disables it\n */\nVertexArrayObject.prototype.clear = function()\n{\n    // var gl = this.gl;\n\n    // TODO - should this function unbind after clear?\n    // for now, no but lets see what happens in the real world!\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao);\n    }\n\n    this.attributes.length = 0;\n    this.indexBuffer = null;\n\n    return this;\n};\n\n/**\n * @param type  {Number}\n * @param size  {Number}\n * @param start {Number}\n */\nVertexArrayObject.prototype.draw = function(type, size, start)\n{\n    var gl = this.gl;\n    gl.drawElements(type, size, gl.UNSIGNED_SHORT, start || 0);\n\n    return this;\n};\n\n/**\n * Destroy this vao\n */\nVertexArrayObject.prototype.destroy = function()\n{\n    // lose references\n    this.gl = null;\n    this.indexBuffer = null;\n    this.attributes = null;\n    this.nativeState = null;\n\n    if(this.nativeVao)\n    {\n        this.nativeVaoExtension.deleteVertexArrayOES(this.nativeVao);\n    }\n\n    this.nativeVaoExtension = null;\n    this.nativeVao = null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/VertexArrayObject.js\n// module id = 171\n// module chunks = 0","\n/**\n * Helper class to create a webGL Context\n *\n * @class\n * @memberof PIXI.glCore\n * @param canvas {HTMLCanvasElement} the canvas element that we will get the context from\n * @param options {Object} An options object that gets passed in to the canvas element containing the context attributes,\n *                         see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/getContext for the options available\n * @return {WebGLRenderingContext} the WebGL context\n */\nvar createContext = function(canvas, options)\n{\n    var gl = canvas.getContext('webgl', options) || \n         canvas.getContext('experimental-webgl', options);\n\n    if (!gl)\n    {\n        // fail, not able to get a context\n        throw new Error('This browser does not support webGL. Try using the canvas renderer');\n    }\n\n    return gl;\n};\n\nmodule.exports = createContext;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/createContext.js\n// module id = 172\n// module chunks = 0","module.exports = {\n    compileProgram: require('./compileProgram'),\n    defaultValue: require('./defaultValue'),\n    extractAttributes: require('./extractAttributes'),\n    extractUniforms: require('./extractUniforms'),\n    generateUniformAccessObject: require('./generateUniformAccessObject'),\n    mapSize: require('./mapSize'),\n    mapType: require('./mapType')  \n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pixi-gl-core/src/shader/index.js\n// module id = 173\n// module chunks = 0","(function() {\n\nif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\treturn;\n}\n\nPrism.hooks.add('complete', function (env) {\n\tif (!env.code) {\n\t\treturn;\n\t}\n\n\t// works only for <code> wrapped inside <pre> (not inline)\n\tvar pre = env.element.parentNode;\n\tvar clsReg = /\\s*\\bline-numbers\\b\\s*/;\n\tif (\n\t\t!pre || !/pre/i.test(pre.nodeName) ||\n\t\t\t// Abort only if nor the <pre> nor the <code> have the class\n\t\t(!clsReg.test(pre.className) && !clsReg.test(env.element.className))\n\t) {\n\t\treturn;\n\t}\n\n\tif (env.element.querySelector(\".line-numbers-rows\")) {\n\t\t// Abort if line numbers already exists\n\t\treturn;\n\t}\n\n\tif (clsReg.test(env.element.className)) {\n\t\t// Remove the class \"line-numbers\" from the <code>\n\t\tenv.element.className = env.element.className.replace(clsReg, '');\n\t}\n\tif (!clsReg.test(pre.className)) {\n\t\t// Add the class \"line-numbers\" to the <pre>\n\t\tpre.className += ' line-numbers';\n\t}\n\n\tvar match = env.code.match(/\\n(?!$)/g);\n\tvar linesNum = match ? match.length + 1 : 1;\n\tvar lineNumbersWrapper;\n\n\tvar lines = new Array(linesNum + 1);\n\tlines = lines.join('<span></span>');\n\n\tlineNumbersWrapper = document.createElement('span');\n\tlineNumbersWrapper.className = 'line-numbers-rows';\n\tlineNumbersWrapper.innerHTML = lines;\n\n\tif (pre.hasAttribute('data-start')) {\n\t\tpre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n\t}\n\n\tenv.element.appendChild(lineNumbersWrapper);\n\n});\n\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prismjs/plugins/line-numbers/prism-line-numbers.js\n// module id = 174\n// module chunks = 0","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-(\\w+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = _self.Prism = {\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o) {\n\t\t\tvar type = _.util.type(o);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tvar clone = {};\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\t// Check for existence for IE8\n\t\t\t\t\treturn o.map && o.map(function(v) { return _.util.clone(v); });\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || document.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tparent = element.parentNode;\n\n\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code || !env.grammar) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = evt.data;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar tokens = _.tokenize(text, grammar);\n\t\treturn Token.stringify(_.util.encode(tokens), language);\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar Token = _.Token;\n\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\ttokenloop: for (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\tfor (var i=0; i<strarr.length; i++) { // Don’t cache length as it changes during the loop\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\tbreak tokenloop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t    delNum = 1;\n\n\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens\n\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {\n\t\t\t\t\t\t// Reconstruct the original text using the next two tokens\n\t\t\t\t\t\tvar nextToken = strarr[i + 1].matchedStr || strarr[i + 1],\n\t\t\t\t\t\t    combStr = str + nextToken;\n\n\t\t\t\t\t\tif (i < strarr.length - 2) {\n\t\t\t\t\t\t\tcombStr += strarr[i + 2].matchedStr || strarr[i + 2];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Try the pattern again on the reconstructed text\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\t\t\t\t\t\tmatch = pattern.exec(combStr);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0);\n\t\t\t\t\t\t// To be a valid candidate, the new match has to start inside of str\n\t\t\t\t\t\tif (from >= str.length) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar to = match.index + match[0].length,\n\t\t\t\t\t\t    len = str.length + nextToken.length;\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = 3;\n\n\t\t\t\t\t\tif (to <= len) {\n\t\t\t\t\t\t\tif (strarr[i + 1].greedy) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelNum = 2;\n\t\t\t\t\t\t\tcombStr = combStr.slice(0, len);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr = combStr;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1].length;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.matchedStr = matchedStr || null;\n\tthis.greedy = !!greedy;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (env.type == 'comment') {\n\t\tenv.attributes['spellcheck'] = 'true';\n\t}\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\n\tfor (var name in env.attributes) {\n\t\tattributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _self.Prism;\n\t}\n \t// In worker\n\t_self.addEventListener('message', function(evt) {\n\t\tvar message = JSON.parse(evt.data),\n\t\t    lang = message.language,\n\t\t    code = message.code,\n\t\t    immediateClose = message.immediateClose;\n\n\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\tif (immediateClose) {\n\t\t\t_self.close();\n\t\t}\n\t}, false);\n\n\treturn _self.Prism;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\trequestAnimationFrame(_.highlightAll, 0);\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\w\\W]*?-->/,\n\t'prolog': /<\\?[\\w\\W]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\w\\W]+?>/,\n\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=.$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[=>\"']/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\nPrism.languages.css = {\n\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n\t'string': /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t'important': /\\B!important\\b/i,\n\t'function': /[-a-z0-9]+(?=\\()/i,\n\t'punctuation': /[(){};:]/\n};\n\nPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'style': {\n\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.css,\n\t\t\talias: 'language-css'\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'style-attr': {\n\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t}, Prism.languages.markup.tag);\n}\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /(\\.|\\\\)/\n\t\t}\n\t},\n\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(true|false)\\b/,\n\t'function': /[a-z0-9_]+(?=\\()/i,\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript'\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\tself.Prism.fileHighlight = function() {\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tif(Array.prototype.forEach) { // Check to prevent error in IE8\n\t\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\t\tvar language, parent = pre;\n\t\t\t\tvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n\t\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t\t}\n\n\t\t\t\tif (!language) {\n\t\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t\t}\n\n\t\t\t\tvar code = document.createElement('code');\n\t\t\t\tcode.className = 'language-' + language;\n\n\t\t\t\tpre.textContent = '';\n\n\t\t\t\tcode.textContent = 'Loading…';\n\n\t\t\t\tpre.appendChild(code);\n\n\t\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\t\txhr.open('GET', src, true);\n\n\t\t\t\txhr.onreadystatechange = function () {\n\t\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\txhr.send(null);\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prismjs/prism.js\n// module id = 175\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 176\n// module chunks = 0","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/punycode/punycode.js\n// module id = 177\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring-es3/decode.js\n// module id = 178\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring-es3/encode.js\n// module id = 179\n// module chunks = 0","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring-es3/index.js\n// module id = 180\n// module chunks = 0","'use strict';\n\nvar parseUri        = require('parse-uri');\nvar async           = require('./async');\nvar Resource        = require('./Resource');\nvar EventEmitter    = require('eventemitter3');\n\n// some constants\nvar DEFAULT_CONCURRENCY = 10;\nvar MAX_PROGRESS = 100;\n\n/**\n * Manages the state and loading of multiple resources to load.\n *\n * @class\n * @param {string} [baseUrl=''] - The base url for all resources loaded by this loader.\n * @param {number} [concurrency=10] - The number of resources to load concurrently.\n */\nfunction Loader(baseUrl, concurrency) {\n    EventEmitter.call(this);\n\n    concurrency = concurrency || DEFAULT_CONCURRENCY;\n\n    /**\n     * The base url for all resources loaded by this loader.\n     *\n     * @member {string}\n     */\n    this.baseUrl = baseUrl || '';\n\n    /**\n     * The progress percent of the loader going through the queue.\n     *\n     * @member {number}\n     */\n    this.progress = 0;\n\n    /**\n     * Loading state of the loader, true if it is currently loading resources.\n     *\n     * @member {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * The percentage of total progress that a single resource represents.\n     *\n     * @member {number}\n     */\n    this._progressChunk = 0;\n\n    /**\n     * The middleware to run before loading each resource.\n     *\n     * @member {function[]}\n     */\n    this._beforeMiddleware = [];\n\n    /**\n     * The middleware to run after loading each resource.\n     *\n     * @member {function[]}\n     */\n    this._afterMiddleware = [];\n\n    /**\n     * The `_loadResource` function bound with this object context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundLoadResource = this._loadResource.bind(this);\n\n    /**\n     * The resource buffer that fills until `load` is called to start loading resources.\n     *\n     * @private\n     * @member {Resource[]}\n     */\n    this._buffer = [];\n\n    /**\n     * Used to track load completion.\n     *\n     * @private\n     * @member {number}\n     */\n    this._numToLoad = 0;\n\n    /**\n     * The resources waiting to be loaded.\n     *\n     * @private\n     * @member {Resource[]}\n     */\n    this._queue = async.queue(this._boundLoadResource, concurrency);\n\n    /**\n     * All the resources for this loader keyed by name.\n     *\n     * @member {object<string, Resource>}\n     */\n    this.resources = {};\n\n    /**\n     * Emitted once per loaded or errored resource.\n     *\n     * @event progress\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted once per errored resource.\n     *\n     * @event error\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted once per loaded resource.\n     *\n     * @event load\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted when the loader begins to process the queue.\n     *\n     * @event start\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted when the queued resources all load.\n     *\n     * @event complete\n     * @memberof Loader#\n     */\n}\n\nLoader.prototype = Object.create(EventEmitter.prototype);\nLoader.prototype.constructor = Loader;\nmodule.exports = Loader;\n\n/**\n * Adds a resource (or multiple resources) to the loader queue.\n *\n * This function can take a wide variety of different parameters. The only thing that is always\n * required the url to load. All the following will work:\n *\n * ```js\n * loader\n *     // normal param syntax\n *     .add('key', 'http://...', function () {})\n *     .add('http://...', function () {})\n *     .add('http://...')\n *\n *     // object syntax\n *     .add({\n *         name: 'key2',\n *         url: 'http://...'\n *     }, function () {})\n *     .add({\n *         url: 'http://...'\n *     }, function () {})\n *     .add({\n *         name: 'key3',\n *         url: 'http://...'\n *         onComplete: function () {}\n *     })\n *     .add({\n *         url: 'https://...',\n *         onComplete: function () {},\n *         crossOrigin: true\n *     })\n *\n *     // you can also pass an array of objects or urls or both\n *     .add([\n *         { name: 'key4', url: 'http://...', onComplete: function () {} },\n *         { url: 'http://...', onComplete: function () {} },\n *         'http://...'\n *     ])\n *\n *     // and you can use both params and options\n *     .add('key', 'http://...', { crossOrigin: true }, function () {})\n *     .add('http://...', { crossOrigin: true }, function () {});\n * ```\n *\n * @alias enqueue\n * @param {string} [name] - The name of the resource to load, if not passed the url is used.\n * @param {string} [url] - The url for this resource, relative to the baseUrl of this loader.\n * @param {object} [options] - The options for the load.\n * @param {boolean} [options.crossOrigin] - Is this request cross-origin? Default is to determine automatically.\n * @param {Resource.XHR_LOAD_TYPE} [options.loadType=Resource.LOAD_TYPE.XHR] - How should this resource be loaded?\n * @param {Resource.XHR_RESPONSE_TYPE} [options.xhrType=Resource.XHR_RESPONSE_TYPE.DEFAULT] - How should the data being\n *      loaded be interpreted when using XHR?\n * @param {function} [cb] - Function to call when this specific resource completes loading.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.add = Loader.prototype.enqueue = function (name, url, options, cb) {\n    // special case of an array of objects or urls\n    if (Array.isArray(name)) {\n        for (var i = 0; i < name.length; ++i) {\n            this.add(name[i]);\n        }\n\n        return this;\n    }\n\n    // if an object is passed instead of params\n    if (typeof name === 'object') {\n        cb = url || name.callback || name.onComplete;\n        options = name;\n        url = name.url;\n        name = name.name || name.key || name.url;\n    }\n\n    // case where no name is passed shift all args over by one.\n    if (typeof url !== 'string') {\n        cb = options;\n        options = url;\n        url = name;\n    }\n\n    // now that we shifted make sure we have a proper url.\n    if (typeof url !== 'string') {\n        throw new Error('No url passed to add resource to loader.');\n    }\n\n    // options are optional so people might pass a function and no options\n    if (typeof options === 'function') {\n        cb = options;\n        options = null;\n    }\n\n    // check if resource already exists.\n    if (this.resources[name]) {\n        throw new Error('Resource with name \"' + name + '\" already exists.');\n    }\n\n    // add base url if this isn't an absolute url\n    url = this._prepareUrl(url);\n\n    // create the store the resource\n    this.resources[name] = new Resource(name, url, options);\n\n    if (typeof cb === 'function') {\n        this.resources[name].once('afterMiddleware', cb);\n    }\n\n    this._numToLoad++;\n\n    // if already loading add it to the worker queue\n    if (this._queue.started) {\n        this._queue.push(this.resources[name]);\n        this._progressChunk = (MAX_PROGRESS - this.progress) / (this._queue.length() + this._queue.running());\n    }\n    // otherwise buffer it to be added to the queue later\n    else {\n        this._buffer.push(this.resources[name]);\n        this._progressChunk = MAX_PROGRESS / this._buffer.length;\n    }\n\n    return this;\n};\n\n/**\n * Sets up a middleware function that will run *before* the\n * resource is loaded.\n *\n * @alias pre\n * @method before\n * @param {function} fn - The middleware function to register.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.before = Loader.prototype.pre = function (fn) {\n    this._beforeMiddleware.push(fn);\n\n    return this;\n};\n\n/**\n * Sets up a middleware function that will run *after* the\n * resource is loaded.\n *\n * @alias use\n * @method after\n * @param {function} fn - The middleware function to register.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.after = Loader.prototype.use = function (fn) {\n    this._afterMiddleware.push(fn);\n\n    return this;\n};\n\n/**\n * Resets the queue of the loader to prepare for a new load.\n *\n * @return {Loader} Returns itself.\n */\nLoader.prototype.reset = function () {\n    // this.baseUrl = baseUrl || '';\n\n    this.progress = 0;\n\n    this.loading = false;\n\n    this._progressChunk = 0;\n\n    // this._beforeMiddleware.length = 0;\n    // this._afterMiddleware.length = 0;\n\n    this._buffer.length = 0;\n\n    this._numToLoad = 0;\n\n    this._queue.kill();\n    this._queue.started = false;\n\n    // abort all resource loads\n    for (var k in this.resources) {\n        var res = this.resources[k];\n\n        res.off('complete', this._onLoad, this);\n\n        if (res.isLoading) {\n            res.abort();\n        }\n    }\n\n    this.resources = {};\n\n    return this;\n};\n\n/**\n * Starts loading the queued resources.\n *\n * @fires start\n * @param {function} [cb] - Optional callback that will be bound to the `complete` event.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.load = function (cb) {\n    // register complete callback if they pass one\n    if (typeof cb === 'function') {\n        this.once('complete', cb);\n    }\n\n    // if the queue has already started we are done here\n    if (this._queue.started) {\n        return this;\n    }\n\n    // notify of start\n    this.emit('start', this);\n\n    // update loading state\n    this.loading = true;\n\n    // start the internal queue\n    for (var i = 0; i < this._buffer.length; ++i) {\n        this._queue.push(this._buffer[i]);\n    }\n\n    // empty the buffer\n    this._buffer.length = 0;\n\n    return this;\n};\n\n/**\n * Prepares a url for usage based on the configuration of this object\n *\n * @private\n * @param {string} url - The url to prepare.\n * @return {string} The prepared url.\n */\nLoader.prototype._prepareUrl = function (url) {\n    var parsedUrl = parseUri(url, { strictMode: true });\n\n    // absolute url, just use it as is.\n    if (parsedUrl.protocol || !parsedUrl.path || parsedUrl.path.indexOf('//') === 0) {\n        return url;\n    }\n\n    // if baseUrl doesn't end in slash and url doesn't start with slash, then add a slash inbetween\n    if (this.baseUrl.length\n        && this.baseUrl.lastIndexOf('/') !== this.baseUrl.length - 1\n        && url.charAt(0) !== '/'\n    ) {\n        return this.baseUrl + '/' + url;\n    }\n\n    return this.baseUrl + url;\n};\n\n/**\n * Loads a single resource.\n *\n * @private\n * @param {Resource} resource - The resource to load.\n * @param {function} dequeue - The function to call when we need to dequeue this item.\n */\nLoader.prototype._loadResource = function (resource, dequeue) {\n    var self = this;\n\n    resource._dequeue = dequeue;\n\n    // run before middleware\n    async.eachSeries(\n        this._beforeMiddleware,\n        function (fn, next) {\n            fn.call(self, resource, function () {\n                // if the before middleware marks the resource as complete,\n                // break and don't process any more before middleware\n                next(resource.isComplete ? {} : null);\n            });\n        },\n        function () {\n            // resource.on('progress', self.emit.bind(self, 'progress'));\n\n            if (resource.isComplete) {\n                self._onLoad(resource);\n            }\n            else {\n                resource.once('complete', self._onLoad, self);\n                resource.load();\n            }\n        }\n    );\n};\n\n/**\n * Called once each resource has loaded.\n *\n * @fires complete\n * @private\n */\nLoader.prototype._onComplete = function () {\n    this.loading = false;\n\n    this.emit('complete', this, this.resources);\n};\n\n/**\n * Called each time a resources is loaded.\n *\n * @fires progress\n * @fires error\n * @fires load\n * @private\n * @param {Resource} resource - The resource that was loaded\n */\nLoader.prototype._onLoad = function (resource) {\n    var self = this;\n\n    // run middleware, this *must* happen before dequeue so sub-assets get added properly\n    async.eachSeries(\n        this._afterMiddleware,\n        function (fn, next) {\n            fn.call(self, resource, next);\n        },\n        function () {\n            resource.emit('afterMiddleware', resource);\n\n            self._numToLoad--;\n\n            self.progress += self._progressChunk;\n            self.emit('progress', self, resource);\n\n            if (resource.error) {\n                self.emit('error', resource.error, self, resource);\n            }\n            else {\n                self.emit('load', self, resource);\n            }\n\n            // do completion check\n            if (self._numToLoad === 0) {\n                self.progress = 100;\n                self._onComplete();\n            }\n        }\n    );\n\n    // remove this resource from the async queue\n    resource._dequeue();\n};\n\nLoader.LOAD_TYPE = Resource.LOAD_TYPE;\nLoader.XHR_RESPONSE_TYPE = Resource.XHR_RESPONSE_TYPE;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/Loader.js\n// module id = 181\n// module chunks = 0","/* eslint no-magic-numbers: 0 */\n'use strict';\n\nmodule.exports = {\n    // private property\n    _keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\n    encodeBinary: function (input) {\n        var output = '';\n        var bytebuffer;\n        var encodedCharIndexes = new Array(4);\n        var inx = 0;\n        var jnx = 0;\n        var paddingBytes = 0;\n\n        while (inx < input.length) {\n            // Fill byte buffer array\n            bytebuffer = new Array(3);\n\n            for (jnx = 0; jnx < bytebuffer.length; jnx++) {\n                if (inx < input.length) {\n                    // throw away high-order byte, as documented at:\n                    // https://developer.mozilla.org/En/Using_XMLHttpRequest#Handling_binary_data\n                    bytebuffer[jnx] = input.charCodeAt(inx++) & 0xff;\n                }\n                else {\n                    bytebuffer[jnx] = 0;\n                }\n            }\n\n            // Get each encoded character, 6 bits at a time\n            // index 1: first 6 bits\n            encodedCharIndexes[0] = bytebuffer[0] >> 2;\n            // index 2: second 6 bits (2 least significant bits from input byte 1 + 4 most significant bits from byte 2)\n            encodedCharIndexes[1] = ((bytebuffer[0] & 0x3) << 4) | (bytebuffer[1] >> 4);\n            // index 3: third 6 bits (4 least significant bits from input byte 2 + 2 most significant bits from byte 3)\n            encodedCharIndexes[2] = ((bytebuffer[1] & 0x0f) << 2) | (bytebuffer[2] >> 6);\n            // index 3: forth 6 bits (6 least significant bits from input byte 3)\n            encodedCharIndexes[3] = bytebuffer[2] & 0x3f;\n\n            // Determine whether padding happened, and adjust accordingly\n            paddingBytes = inx - (input.length - 1);\n            switch (paddingBytes) {\n                case 2:\n                    // Set last 2 characters to padding char\n                    encodedCharIndexes[3] = 64;\n                    encodedCharIndexes[2] = 64;\n                    break;\n\n                case 1:\n                    // Set last character to padding char\n                    encodedCharIndexes[3] = 64;\n                    break;\n\n                default:\n                    break; // No padding - proceed\n            }\n\n            // Now we will grab each appropriate character out of our keystring\n            // based on our index array and append it to the output string\n            for (jnx = 0; jnx < encodedCharIndexes.length; jnx++) {\n                output += this._keyStr.charAt(encodedCharIndexes[jnx]);\n            }\n        }\n\n        return output;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/b64.js\n// module id = 182\n// module chunks = 0","'use strict';\n\n// a simple in-memory cache for resources\nvar cache = {};\n\nmodule.exports = function () {\n    return function (resource, next) {\n        // if cached, then set data and complete the resource\n        if (cache[resource.url]) {\n            resource.data = cache[resource.url];\n            resource.complete(); // marks resource load complete and stops processing before middlewares\n        }\n        // if not cached, wait for complete and store it in the cache.\n        else {\n            resource.once('complete', function () {\n                cache[this.url] = this.data;\n            });\n        }\n\n        next();\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/middlewares/caching/memory.js\n// module id = 183\n// module chunks = 0","'use strict';\n\nvar Resource = require('../../Resource');\nvar b64 = require('../../b64');\n\nvar Url = window.URL || window.webkitURL;\n\n// a middleware for transforming XHR loaded Blobs into more useful objects\n\nmodule.exports = function () {\n    return function (resource, next) {\n        if (!resource.data) {\n            next();\n\n            return;\n        }\n\n        // if this was an XHR load of a blob\n        if (resource.xhr && resource.xhrType === Resource.XHR_RESPONSE_TYPE.BLOB) {\n            // if there is no blob support we probably got a binary string back\n            if (!window.Blob || typeof resource.data === 'string') {\n                var type = resource.xhr.getResponseHeader('content-type');\n\n                // this is an image, convert the binary string into a data url\n                if (type && type.indexOf('image') === 0) {\n                    resource.data = new Image();\n                    resource.data.src = 'data:' + type + ';base64,' + b64.encodeBinary(resource.xhr.responseText);\n\n                    resource.isImage = true;\n\n                    // wait until the image loads and then callback\n                    resource.data.onload = function () {\n                        resource.data.onload = null;\n\n                        next();\n                    };\n\n                    // next will be called on load\n                    return;\n                }\n            }\n            // if content type says this is an image, then we should transform the blob into an Image object\n            else if (resource.data.type.indexOf('image') === 0) {\n                var src = Url.createObjectURL(resource.data);\n\n                resource.blob = resource.data;\n                resource.data = new Image();\n                resource.data.src = src;\n\n                resource.isImage = true;\n\n                // cleanup the no longer used blob after the image loads\n                resource.data.onload = function () {\n                    Url.revokeObjectURL(src);\n                    resource.data.onload = null;\n\n                    next();\n                };\n\n                // next will be called on load.\n                return;\n            }\n        }\n\n        next();\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/middlewares/parsing/blob.js\n// module id = 184\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/url.js\n// module id = 185\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/util.js\n// module id = 186\n// module chunks = 0"],"sourceRoot":""}